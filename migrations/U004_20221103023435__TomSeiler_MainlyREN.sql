SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_KpiMapping] DROP CONSTRAINT [PK_tbl_DBT_Reporting_kpimapping_RowID]
GO
PRINT N'Dropping constraints from [dbo].[tbl_STO_RptCommentsReporting]'
GO
ALTER TABLE [dbo].[tbl_STO_RptCommentsReporting] DROP CONSTRAINT [PK_STO_RptCommentsV2]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
ALTER TABLE [dbo].[tbl_DBT_ConsumablesProjectLink] DROP CONSTRAINT [DF_tbl_DBT_Consumables_Active]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
ALTER TABLE [dbo].[tbl_DBT_ConsumablesProjectLink] DROP CONSTRAINT [DF_tbl_DBT_ConsumablesProjectLink_ExcludeFromPosting]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_KpiMapping] DROP CONSTRAINT [DF__tbl_DBT_R__PitId__0E636B91]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_KpiMapping] DROP CONSTRAINT [DF__tbl_DBT_R__Mappi__0F578FCA]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_KpiMapping] DROP CONSTRAINT [DF__tbl_DBT_R__Mappi__104BB403]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_KpiMapping] DROP CONSTRAINT [DF__tbl_DBT_R__Displ__15106920]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_KpiMapping] DROP CONSTRAINT [DF__tbl_DBT_R__Metri__1CB18AE8]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs] DROP CONSTRAINT [DF__tbl_DBT_R__GoodI__132820AE]
GO
PRINT N'Dropping constraints from [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs] DROP CONSTRAINT [DF__tbl_DBT_R__BadIs__141C44E7]
GO
PRINT N'Dropping constraints from [dbo].[tbl_STO_RptCommentsReporting]'
GO
ALTER TABLE [dbo].[tbl_STO_RptCommentsReporting] DROP CONSTRAINT [DF_tbl_STO_RptComments_SupervisorID_v2]
GO
PRINT N'Dropping constraints from [dbo].[tbl_STO_RptCommentsReporting]'
GO
ALTER TABLE [dbo].[tbl_STO_RptCommentsReporting] DROP CONSTRAINT [DF_tbl_STO_RptComments_EquipmentIDv2]
GO
PRINT N'Dropping constraints from [dbo].[tbl_STO_RptCommentsReporting]'
GO
ALTER TABLE [dbo].[tbl_STO_RptCommentsReporting] DROP CONSTRAINT [DF__tbl_STO_R__PitId__113FD83C]
GO
PRINT N'Dropping index [idx_ProjCons_ConsIdPlusConsArea] from [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
DROP INDEX [idx_ProjCons_ConsIdPlusConsArea] ON [dbo].[tbl_DBT_ConsumablesProjectLink]
GO
PRINT N'Dropping index [cpl_ForIplodINputs] from [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
DROP INDEX [cpl_ForIplodINputs] ON [dbo].[tbl_DBT_ConsumablesProjectLink]
GO
PRINT N'Dropping index [UK_tbl_DBT_Reporting_KpiMapping] from [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
DROP INDEX [UK_tbl_DBT_Reporting_KpiMapping] ON [dbo].[tbl_DBT_Reporting_KpiMapping]
GO
PRINT N'Dropping [dbo].[SP_Input_GradeTonnes_Reserve_TinTonnes]'
GO
DROP PROCEDURE [dbo].[SP_Input_GradeTonnes_Reserve_TinTonnes]
GO
PRINT N'Dropping [dbo].[SP_Input_GradeTonnes_Reserve_CopperTonnes]'
GO
DROP PROCEDURE [dbo].[SP_Input_GradeTonnes_Reserve_CopperTonnes]
GO
PRINT N'Dropping [dbo].[SP_Input_CB_Tension_m]'
GO
DROP PROCEDURE [dbo].[SP_Input_CB_Tension_m]
GO
PRINT N'Dropping [dbo].[SP_Input_CB_Grouted_m]'
GO
DROP PROCEDURE [dbo].[SP_Input_CB_Grouted_m]
GO
PRINT N'Dropping [dbo].[SP_Input_CBDrillm]'
GO
DROP PROCEDURE [dbo].[SP_Input_CBDrillm]
GO
PRINT N'Dropping [dbo].[view_KpiSecondary_20x_OperatorPrody_DynamicStatsPerActiveShift]'
GO
DROP VIEW [dbo].[view_KpiSecondary_20x_OperatorPrody_DynamicStatsPerActiveShift]
GO
PRINT N'Dropping [dbo].[SP_ShiftSummary_SummaryOfResults_24hR_Geology_REN]'
GO
DROP PROCEDURE [dbo].[SP_ShiftSummary_SummaryOfResults_24hR_Geology_REN]
GO
PRINT N'Dropping [dbo].[SP_ShiftSummary_QTypeInputs_v2_original]'
GO
DROP PROCEDURE [dbo].[SP_ShiftSummary_QTypeInputs_v2_original]
GO
PRINT N'Dropping [dbo].[SP_ProjSetup_ReportingV2_Data_ReportComments_DailyReport]'
GO
DROP PROCEDURE [dbo].[SP_ProjSetup_ReportingV2_Data_ReportComments_DailyReport]
GO
PRINT N'Dropping [dbo].[SP_ProjSetup_ReportingV2_Data_MiningKPIdataSets_DailyReport]'
GO
DROP PROCEDURE [dbo].[SP_ProjSetup_ReportingV2_Data_MiningKPIdataSets_DailyReport]
GO
PRINT N'Dropping [dbo].[SP_ProjSetup_ReportingV2_Data_EtlREN]'
GO
DROP PROCEDURE [dbo].[SP_ProjSetup_ReportingV2_Data_EtlREN]
GO
PRINT N'Dropping [dbo].[SP_ProjSetup_Reporting_TimeLine_24hr_Downtime]'
GO
DROP PROCEDURE [dbo].[SP_ProjSetup_Reporting_TimeLine_24hr_Downtime]
GO
PRINT N'Dropping [dbo].[SP_ProjSetup_Reporting_Data_MiningKPIdataSets_DowntimeTable]'
GO
DROP PROCEDURE [dbo].[SP_ProjSetup_Reporting_Data_MiningKPIdataSets_DowntimeTable]
GO
PRINT N'Dropping [dbo].[SP_Input_CB_Hole_Depth]'
GO
DROP PROCEDURE [dbo].[SP_Input_CB_Hole_Depth]
GO
PRINT N'Dropping [dbo].[SP_Input_BogTonnesSumpTrk]'
GO
DROP PROCEDURE [dbo].[SP_Input_BogTonnesSumpTrk]
GO
PRINT N'Dropping [dbo].[SP_Input_BogTonnesSumpSP]'
GO
DROP PROCEDURE [dbo].[SP_Input_BogTonnesSumpSP]
GO
PRINT N'Dropping [dbo].[FN_ProjSetup_TypeAlias_ReportType]'
GO
DROP FUNCTION [dbo].[FN_ProjSetup_TypeAlias_ReportType]
GO
PRINT N'Dropping [dbo].[SP_ShiftSummary_QTypeInputs_v2_REN]'
GO
DROP PROCEDURE [dbo].[SP_ShiftSummary_QTypeInputs_v2_REN]
GO
PRINT N'Dropping [dbo].[View_ShiftSummary_TWIHazards_REN]'
GO
DROP VIEW [dbo].[View_ShiftSummary_TWIHazards_REN]
GO
PRINT N'Dropping [dbo].[tbl_STO_RptCommentsReporting]'
GO
DROP TABLE [dbo].[tbl_STO_RptCommentsReporting]
GO
PRINT N'Dropping [dbo].[tbl_DBT_Reporting_KpiMapping]'
GO
DROP TABLE [dbo].[tbl_DBT_Reporting_KpiMapping]
GO
PRINT N'Dropping synonyms'
GO
DROP SYNONYM [dbo].[SP_ShiftSummary_QTypeInputs_v2]
GO
DROP SYNONYM [dbo].[view_GetAttributes]
GO
PRINT N'Altering [dbo].[View_WebbarAPI_InventoryOnHand_Cached]'
GO
ALTER TABLE [dbo].[View_WebbarAPI_InventoryOnHand_Cached] ALTER COLUMN [Desc] [varchar] (200) NULL
GO
PRINT N'Altering [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
ALTER TABLE [dbo].[tbl_DBT_ConsumablesProjectLink] ALTER COLUMN [Active] [int] NULL
GO
ALTER TABLE [dbo].[tbl_DBT_ConsumablesProjectLink] ALTER COLUMN [ExcludeFromPosting] [int] NULL
GO
PRINT N'Adding constraints to [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
ALTER TABLE [dbo].[tbl_DBT_ConsumablesProjectLink] ADD CONSTRAINT [DF_tbl_DBT_Consumables_Active] DEFAULT ((0)) FOR [Active]
GO
ALTER TABLE [dbo].[tbl_DBT_ConsumablesProjectLink] ADD CONSTRAINT [DF_tbl_DBT_ConsumablesProjectLink_ExcludeFromPosting] DEFAULT ((0)) FOR [ExcludeFromPosting]
GO
PRINT N'Creating index [idx_ProjCons_ConsIdPlusConsArea] on [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
CREATE NONCLUSTERED INDEX [idx_ProjCons_ConsIdPlusConsArea] ON [dbo].[tbl_DBT_ConsumablesProjectLink] ([ProjectID], [Active]) INCLUDE ([ConsumableArea], [ConsumableID])
GO
PRINT N'Creating index [cpl_ForIplodINputs] on [dbo].[tbl_DBT_ConsumablesProjectLink]'
GO
CREATE NONCLUSTERED INDEX [cpl_ForIplodINputs] ON [dbo].[tbl_DBT_ConsumablesProjectLink] ([ProjectID], [ConsumableArea], [Active]) INCLUDE ([ConsumableID], [ConsumableDescShort], [Parameter1], [Parameter3], [DisplayOrder])
GO
PRINT N'Altering [dbo].[tbl_DWH_ProdDataStorage_v4]'
GO
ALTER VIEW [dbo].[tbl_DWH_ProdDataStorage_v4]
AS
/* 
select * from [dbo].[vw_Reporting_KPINew_AllMappedPrimaryKpis_Combined_MCR]
select * from [tbl_DWH_ProdDataStorage_v4] order by date desc
created TS 2020-04-16 ... will replace the table after go live with ditching import
                        ts 2020-12-09 ... added  WITH (NOLOCK)
                        ts 2020-12-09 ... only get projectid >0
                        ts 2021-01-15 ... add tstamp
                        ww 2021-04-06 ... change tstamp and StatLinkComments to nvarchar 
                        ts 2021-04-09 ... tidy format to update into live
                        ts 2021-04-09 ... allowed to bring service sheets through (they are not non-time)
                        NOTE: there are 4 spots int ehis view where we treat non-time task differently. and 2 procs: [SP_ShiftSummary_TU_UPDATEPrdtDurations_Equip] [SP_ShiftSummary_TU_INSERTMissingTime_Equip]

                        ts 2021-04-09 ... remove tstamp, it is wrong data type anyway. not sure what was done at CRC?
                        ts 2021-04-09 ... show what equip non-time shit was flicked off 
                        ts 2021-04-11 ... switch forms onto STATS instead of NO_EQUIP
                        ts 2021-04-12 ... isnul on the sequcne
                        ts 2021-04-16 ... shift the ISNUMERIC to Value CASE instead of filter (improve sargabiliyt)
						ts 2021-04-28 ... need default for material
										... sort defaults ofr0 as well
						ts 2021-05-21 ... populate statlinks with Refno
						ts 2021-07-05 ... consumable join filters on inputtype
										... join proj and defaults combined
										... don't filter on ProjectId <0 NAH
										... don't join to arl as well as artec (cut about a second)
										... don't do the detialid join
						ts 2021-07-13	... join the defualts in in-line. fuck the defaults ... too slow
										... don't take "Statributes" (stattypeid 9) through PDS might add a second or two?
						ts 2021-07-21  ... do this on Value as well: or   inputvalue  LIKE '%E%'  
						ts 2021-07-26 ... peg down to 20 decimals (this is what we do in the KPI views)
						CA 2021-09-03 ... add (sta.[StatisticTypeID] =10 OR e.InputType LIKE '%cons%')
						CA 2021-12-09 ... Added '' for type as well. CRC has some blank types coming in for some reason.
            ts 2022-02-03 ... tweaks for bringing it into new KPI builder proc. 
                          ... either change the syn, or cut this back to v3 if that helps with transition
                          ... add some fields
                          ... pull timestamp through from e.  jsut fix it to 0 on old pds
            ts 2022-05-17 .. add to mathc v3 on MCR: ,DumpedTimeStamp = IIF([arl].[ProcessID] = 6, e.InputTimeStamp, NULL)
            ts 2022-05-20 ... merge some changes to match MCR original (not the v3 one)
            ts 2022-06-02 ... >= 20 for input vlaue length\
            ts 2022-06-15 ... add CutNumberId
            ts 2022-07-11 ... string pad the start adn end times.
                          .. add CalStartTime and CalEndTime
            ts 2022-08-01 ... handling for PBW. need to revert back to ips or some fucking thing when we ditch the webbar input.
                          ... maybe this kills performance?
                          ... remove from source control. just hack it for PBW
                          ... NOTE, THIS IS DIFFERENT ON PBW WHILE IN TRANSITION

to do (before go live)
rename this view after go live
need to convert the bogging stats into LoadedFrom and LoadedTo fields, maybe by stripping ints out of the bog stats ... implications for VIV?
TESTING!!

*/



SELECT
  [DataStoreID] = e.StagingID -- might need to be INT? this can actually be stagingid in places where PDS is used
 ,[EnteredBy] = e.EditedBy
 ,[EnteredOn] = CAST(e.ModifiedOn AS NVARCHAR) --might need a new field for this?
 ,[GenComments] = ISNULL(e.CommentsCheck, '') /*+
                                                CASE --strip this out if not supporting the webbar input framework
                                                  WHEN arl.ActivityID > 7 -- this is nontime.
                                                    OR (arl.ActivityID IN (4, 5, 6) AND
                                                    e.Type <> 'DTEvents')
                                                    --kill the task gropuings join, and this or clause to speed up after we have non time tasks on new activityid
                                                    OR ISNULL(arl.IsElecForm, 0) - ISNULL(arl.IsServiceSheet, 0) > 0  --allowed elec form if is serivce sheet  --change this in 3 spots
                                                    OR ISNULL(arl.IsOffsiderTask, 0) > 0 
                                                    THEN 'was on equipid=' + CAST(e.EquipmentID AS VARCHAR)
                                                  ELSE ''
                                                END*/
 ,e.[Date]
 ,[EquipmentID] = e.EquipmentID
  /*CASE --strip this out if not supporting the webbar input framework
    WHEN  --elec forms go onto STATS equip. when shift non0time to ACtivtyID7 could ditch this and just put all Act7 onto NO_EQUIP to make it easier
      ISNULL(arl.IsElecForm, 0) - ISNULL(arl.IsServiceSheet, 0) > 0  --allowed elec form if is serivce sheet  --change this in 3 spots
    THEN 1238
    WHEN arl.ActivityID > 7 -- this is nontime.
      OR (arl.ActivityID IN (4, 5, 6) AND
      e.Type <> 'DTEvents')
      --kill the task gropuings join, and this or clause to speed up after we have non time tasks on new activityid
      OR ISNULL(arl.IsOffsiderTask, 0) > 0 THEN 2490
    ELSE e.EquipmentID
  END*/
 ,arl.[ProcessID]
 ,[CostCodeID] = 0
 ,arl.[ActivityID]
 ,[ReasonID] = arl.[t_ReasonID]
 ,[MaterialID] = e.Material --case when e.Material = 0 or e.Material is null then (select df.DummyMat from [dbo].[tbl_DBT_Defaults] as df where df.[ProjectID]=e.[ProjectID]) else e.Material end  --add in default if missing
 ,[MaterialOpID] = e.Material -- case when e.Material = 0 or e.Material is null then df.DummyMat else e.Material end -- m.MaterialOpID  --add in default if missing
 ,[MaterialSysID] = m.MaterialID
 ,[LocationID] = Location --add in default if missing
 ,[LocSourceID] = 0 --not used at the moment
 ,[LocDestID] = 0 --not used at the moment
 ,[DestinationID] = e.Destination
 ,[RelatedEquipmentID] = e.RelatedEquipment
 ,[BudgetCodeID] = 1
 ,[tbl_STO_DataEntryTableComments] = NULL
 ,[DataDateID] = 4  --should this be 4?!
 ,[StatisticID] =
  CASE
    WHEN e.ConsumableProjectID > 0 THEN ISNULL(co.ConsumableStatID, 0)
    ELSE e.Inputid
  END
 ,[Value] =
  CASE
    WHEN ISNUMERIC(REPLACE(CONVERT(VARCHAR(25), InputValue), '.', '')) = 0 OR
      inputvalue LIKE '%E%' OR
      LEN([e].[InputValue]) >= 20 THEN -0.00000001  --2021-04-16
    WHEN e.inputid = 7 AND
      e.inputtype = 'stat' AND
      (arl.ActivityID > 7 -- this is nontime.
      OR (arl.ActivityID IN (4, 5, 6) AND
      e.Type <> 'DTEvents')
      --kill the task gropuings join, and this or clause to speed up after we have non time tasks on new activityid
      OR ISNULL(arl.IsElecForm, 0) - ISNULL(arl.IsServiceSheet, 0) > 0 OR
      ISNULL(arl.IsOffsiderTask, 0) > 0

      --change this logic in 3 spots [SP_ShiftSummary_TU_UPDATEPrdtDurations_Equip] [SP_ShiftSummary_TU_INSERTMissingTime_Equip] and here. ditch this once there is no pds though and just change in this view
      )--is not a downtime event.  Mining events are dealt with on the timeline validation. DT events need to be made or modified for all.
    THEN 0  --kill the duration for non-time stuff
    ELSE CONVERT(DECIMAL(20, 3), e.InputValue)
  END

 ,[OrigValue] =
  CASE
    WHEN ISNUMERIC(REPLACE(CONVERT(VARCHAR(25), InputValue), '.', '')) = 0 OR
      inputvalue LIKE '%E%' OR
      LEN([e].[InputValue]) >= 20 THEN -0.00000001   --2021-04-16

    ELSE CONVERT(DECIMAL(20, 3), e.InputValue)
  END  --this will need another field in the source table when we rebuild the recon methods.
 ,[StatLinkComments] = CONVERT(NVARCHAR(50), e.RefNo)
 ,[DataSessionNotesID] = NULL    --will need this back for hours posting?
 ,[CrewID]
 ,[Shift]
 ,[OperatorID]
 ,[OffsiderID] = Offsider
 ,[ActionID] = NULL
 ,[FunctionID] = NULL
 ,[GroundID] = e.GroundCond
 ,[LoadedFrom] =
  CASE
    WHEN arl.ProcessId = 5 AND
      e.InputType LIKE '%Bog%' THEN LEFT(InputType, 1)--XX ... get front digit of the INputType END  SOMETHING DIFFERENT FOR VIV??!!
    WHEN arl.ProcessId = 6 THEN e.LoadedFrom
    ELSE NULL
  END
 ,[LoadedTo] =
  CASE
    WHEN arl.ProcessId = 5 AND
      e.InputType LIKE '%Bog%' THEN SUBSTRING(InputType, 3, 1)
    ELSE NULL
  END --XX ... get second digit, after the first underscore of the INputType we are already doing this trick in ipldo v3, so should be safe to just get BogTo and BogFrom once we are all on that.  v2 I think is still missing some though

 ,cp.[ConsumableID]
 ,[ConsumableProjID] = ISNULL(e.ConsumableProjectId, 0)
 ,[ClientDelay]
 ,[Damage]
 ,e.[ProjectID]
 ,p.[OperationID]
 ,[MonthTargetID] = NULL --only actuals here for now
 ,[DailyPlanID] = NULL
 ,[tstamp] = e.InputTimestamp -- NULL -- CAST(e.InputTimestamp AS nvarchar) --just in case we want them in this?
 ,[DetailID] = getdetail.StagingID   --use negtive to avoid crossover with old PDS detailIds. shouldn't happen, there is 15M rows in edited! --e.DataStoreID + CAST(e.DetailID AS nvarchar)--might need to come up with a integer version of this?!!
 ,[ShiftClosed] = 0
 ,[Sequence] = ISNULL(e.Sequence, 0)
 ,[StartTime] = dbo.FN_StringPad([StartTime], 4, '0')
 ,[EndTime] = dbo.FN_StringPad([EndTime], 4, '0')
 ,[ProfileID] -- = NULL
 ,[GS_StandardID] = NULL
 ,[LocalStagingID]
 ,e.[ActivityReasonID]
 ,IsNonTimeTask =
  CASE
    WHEN arl.ActivityID > 7 -- this is nontime.
      OR (arl.ActivityID IN (4, 5, 6) AND
      e.Type <> 'DTEvents')
      --kill the task gropuings join, and this or clause to speed up after we have non time tasks on new activityid
      OR ISNULL(arl.IsElecForm, 0) - ISNULL(arl.IsServiceSheet, 0) > 0 --change this in 3 spots in this view
      OR ISNULL(arl.IsOffsiderTask, 0) > 0 THEN 1
    ELSE 0
  END
 ,SEssionId = [e].[DataStoreID]
 ,[sta].[StatisticTypeID]
 ,sta.StatisticCode
 ,sta.UnitId
  --add some things required for the KPI snapshot:
 ,InputComment = e.InputComment
 ,SupervisorComments = e.SupervisorComments
 ,InputPhoto = e.InputPhoto
 ,RevisedValue = e.[RevisedValue]
 ,DumpedTimeStamp = IIF([arl].[ProcessID] = 6, e.InputTimeStamp, NULL)
 ,e.CutNumberId
FROM dbo.tbl_DWH_iPlodStagingTableEdited AS e WITH (NOLOCK)

--this is just to smooth the tranistion ... once we have Nontime tasks on new ActivityId, can pull this join out to keep queries quicker.
-- I hink the join is quicker?CROSS APPLY  [dbo].[FN_Iplod_GetAR_TaskGroupingsAll](@Projectid , p.ActivityReasonID)  AS aretc
INNER JOIN   --this needs to be inner!
[dbo].[FN_Iplod_GetAR_TaskGroupingsAll](1, 0) AS arl
  ON arl.activityreasonid = E.activityreasonid

INNER JOIN (SELECT
    StagingID
   ,DataStoreId
   ,DetailId
   ,ProjectID
  FROM dbo.tbl_DWH_iPlodStagingTableEdited WITH (NOLOCK)
  WHERE INputType LIKE 'Stat%'
  AND inputId = 7) AS getdetail
  ON e.DetailID = getdetail.DetailID
    AND getdetail.DataStoreID = e.DataStoreID
    AND e.ProjectID = getdetail.ProjectID
--inner join (select p.ProjectId ,p.[OperationID], [df].[DummyMat], [df].[DummyLocn] from dbo.tbl_DBT_Project as p  with (nolock)
--				inner join dbo.tbl_DBT_Defaults as df with (nolock)
--				on p.ProjectID = df.ProjectID
--				) as p	
--	on e.ProjectID = p.ProjectID

INNER JOIN dbo.tbl_DBT_Project AS p WITH (NOLOCK)
  ON e.ProjectID = p.ProjectID
LEFT JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cp WITH (NOLOCK)
  ON e.ConsumableProjectID = cp.ConsumableProjectID
    AND [e].[InputType] LIKE '%cons%'
LEFT JOIN dbo.tbl_SYS_Consumables AS co WITH (NOLOCK)
  ON cp.ConsumableID = co.ConsumableID
LEFT JOIN [dbo].[tbl_SYS_Statistic] AS sta WITH (NOLOCK)
  ON e.[InputID] = sta.[StatisticID]
    AND e.[InputType] LIKE '%stat%'
/*do'nt need?  if put in, use the ProjId 1,2,@ProjectId and rownum method
LEFT JOIN dbo.tbl_DBT_ActReasonInputLink AS ar 
            ON e.ActivityReasonID= ar.ActReasonLinkID 
             AND e.ProjectID= ar.ProjectID 
             AND e.INputType = ar.InputType
            AND e.InputID = ar.inputid*/
--INNER JOIN dbo.tbl_SYS_ActivityReasonLink AS arl WITH (NOLOCK)
--            ON e.ActivityReasonID = arl.ActivityreasonLinkID
--left JOIN dbo.tbl_DBT_Defaults AS df WITH (NOLOCK)
--            ON p.ProjectID = df.ProjectID
LEFT JOIN dbo.tbl_DBT_Materials AS m WITH (NOLOCK)
  ON e.Material = m.MaterialOpID
WHERE
--(DAte = @Date OR Date BETWEEN @Date AND @Date2)
--          AND (Shift = @Shift OR @Shift = '')
--          AND (@ProcessId = 0 OR arl.ProcessID = @ProcessId)
--AND (e.ProjectId = @ProjectId OR @ProjectId = 0)
--          AND (e.ProjectId <> 53 OR @Projectid = 53)
(e.InputType LIKE '%stat%'
OR e.Inputtype LIKE 'Cons%')
--and e.[InputType] not in ('q','attrlist','attrinput') --defo worse! added to try adn kill row pickup on inital table hit?
--AND NOT (e.Inputtype LIKE 'Stat%' AND e.InputID = 7)
--AND NOT(e.InputId  IN (34,29,30,47,32,104,61,64,106,31,33) AND e.InputType LIKE 'Stat%')   --remove some more from here, eg meter readings.  dont really want to use the exclude from web toggle though becuase then there is no visibility on the stuff that might be accidentally exlcuded from web?!
--NOT: HRS (COMP)  HRS (ENG)       HRS-PERC1      KM       HRS-PPACK1   TWI       HAZ      TSO      WPI      HRS-PERC2 HRS-PPACK2
--AND inputvalue NOT LIKE '%E%'  --don't get numbers with E formatted decimals
--AND ISNUMERIC(REPLACE(CONVERT(VARCHAR(20),InputValue),'.','')) <>0  --exclude non-numeric values
-- AND e.type LIKE 'mining%'  --check out the import SP to finesse this filter
AND e.type IN ('shiftboss', 'mining', 'DTEvents', '')  --allowed types to come in. note, these are "truetypes" not aliases -- '' is added as a blank catch-all
AND e.ProjectID > 0  --always call with Projectid! nah didn't do anything
AND (sta.[StatisticTypeID] = 10
OR e.InputType LIKE '%cons%') -- < >9

--and NOT (DB_NAME() = 'pbw')
--this is slower than the join:and not exists (select statisticid from [dbo].[tbl_SYS_Statistic] as sss --2021-07-13
--					where [e].[InputID] = sss.[StatisticID] 
--						and sss.[StatisticID] =9
--						and e.[InputType] like '%stat%')
/*
add this bit after cut over
  AND   Date >= '2019-01-01'
*/
UNION ALL
SELECT
  [DataStoreID]
 ,[EnteredBy]
 ,[EnteredOn]
 ,[GenComments]
 ,[Date]
 ,[EquipmentID]
 ,[ProcessID]
 ,[CostCodeID]
 ,[ActivityID]
 ,[ReasonID]
 ,[MaterialID]
 ,[MaterialOpID]
 ,[MaterialSysID]
 ,[LocationID]
 ,[LocSourceID]
 ,[LocDestID]
 ,[DestinationID]
 ,[RelatedEquipmentID]
 ,[BudgetCodeID]
 ,[tbl_STO_DataEntryTableComments]
 ,[DataDateID]
 ,e.[StatisticID]
 ,[Value]
 ,[OrigValue]
 ,[StatLinkComments]
 ,[DataSessionNotesID]
 ,[CrewID]
 ,[Shift]
 ,[OperatorID]
 ,[OffsiderID]
 ,[ActionID]
 ,[FunctionID]
 ,[GroundID]
 ,[LoadedFrom]
 ,[LoadedTo]
 ,[ConsumableID]
 ,[ConsumableProjID]
 ,[ClientDelay]
 ,[Damage]
 ,[ProjectID]
 ,[OperationID]
 ,[MonthTargetID]
 ,[DailyPlanID]
 ,[tstamp] = NULL--2022-02-03 CAST(Tstamp AS NVARCHAR) --not sure what this is used for or where it is populated from     
 ,[DetailID] = DetailID
 ,[ShiftClosed]
 ,[Sequence]
 ,[StartTime]
 ,[EndTime]
 ,[ProfileID]
 ,[GS_StandardID]
 ,[LocalStagingID]
 ,[ActivityReasonID]
 ,IsNonTimeTask = 0
 ,SEssionId = NULL
 ,StatisticTypeId
 ,sta.StatisticCode
 ,sta.UnitId
 ,InputComment = NULL
 ,SupervisorComments = NULL
 ,InputPhoto = NULL
 ,RevisedValue = NULL
 ,DumpedTimeStamp = NULL
 ,CutNumberId = 0
FROM dbo.tbl_DWH_TargetsAndDataProcessing e
LEFT JOIN [dbo].[tbl_SYS_Statistic] AS sta WITH (NOLOCK)
  ON e.[StatisticID] = sta.[StatisticID]
WHERE BudgetCodeID <> 1 --targets stay
OR e.StatisticID IN (80, 109, 108)      --hours posting stuff stays, as does the volume entry for now
--OR DAte <   '2019-01-01'  -- or get all old stuff (matches the date above)
--OR DB_NAME() = 'pbw'  --2022-08-01
GO
PRINT N'Creating [dbo].[view_GetAttributes]'
GO
CREATE SYNONYM [dbo].[view_GetAttributes] FOR [view_GetAttributes_Live]
GO
PRINT N'Refreshing [dbo].[tbl_DWH_ProdDataStorage_v5]'
GO
EXEC sp_refreshview N'[dbo].[tbl_DWH_ProdDataStorage_v5]'
GO
PRINT N'Altering [dbo].[tbl_DBT_iplodDocuments]'
GO
ALTER TABLE [dbo].[tbl_DBT_iplodDocuments] ALTER COLUMN [DocumentName] [nvarchar] (50) NOT NULL
GO
PRINT N'Refreshing [dbo].[vw_ProjSetup_Documents_SurveyMemos]'
GO
EXEC sp_refreshview N'[dbo].[vw_ProjSetup_Documents_SurveyMemos]'
GO
PRINT N'Altering [dbo].[tbl_SYS_TypeConfigs]'
GO
ALTER TABLE [dbo].[tbl_SYS_TypeConfigs] DROP
COLUMN [ReportTypeID]
GO
PRINT N'Refreshing [dbo].[tbl_DWH_ProdDataStorage_v3]'
GO
EXEC sp_refreshview N'[dbo].[tbl_DWH_ProdDataStorage_v3]'
GO
PRINT N'Refreshing [dbo].[tbl_DWH_ProdDataStorage_v1]'
GO
EXEC sp_refreshview N'[dbo].[tbl_DWH_ProdDataStorage_v1]'
GO
PRINT N'Refreshing [dbo].[View_ShiftSummary_DataSummary]'
GO
EXEC sp_refreshview N'[dbo].[View_ShiftSummary_DataSummary]'
GO
PRINT N'Refreshing [dbo].[View_ShiftSummary_ProdnData]'
GO
EXEC sp_refreshview N'[dbo].[View_ShiftSummary_ProdnData]'
GO
PRINT N'Refreshing [dbo].[View_ItemPosting_UploadedDirectToCentral]'
GO
EXEC sp_refreshview N'[dbo].[View_ItemPosting_UploadedDirectToCentral]'
GO
PRINT N'Altering [dbo].[FN_GetUnlockedPostingDates]'
GO
ALTER FUNCTION [dbo].[FN_GetUnlockedPostingDates] 
(
	@ProjectID int, @Type nvarchar(10)=NULL
)
/*
EXEC [SP_ItemPosting_GetUnlockedDate] @ProjectID = '236', @Type = 'equipment'


--TS 2018-09-25 ... added input type <> error on the prestart filter because was brining back shift = xx!
TS 2019-04-05  ... added new data sets similar to the magman ones to pick up stuff uploaded direct to central webbar (currently only fuel iplods on v2

				... removed because it makes it very slow for stoplights!
	TS 2019-08-13 ... fine to leave the Fuel direct to central one out ... have switched the config (iplodsetups --> API_Address) so they report to local (and upload through normla processes)
				... this might cause the stoplight (items vs minepoint) to throw error (but the date won't unlock) need to automate the unlock of the date, based on this stoplight

	ts 2020-05-19 ... added back teh stores direct to central bit
	ts 2020-08-28 ... get prestarts from stagingedited
	ts 2021-05-19 ... it is appropriate to remove join on shift for posting interfaces that go per date.
						we did this because a shift wasn't posted for hours and resulted in items showing as unposted, because there was no line in lock tbale for this shift (but was data on the pds)




*/
RETURNS 
@Table TABLE 
(
	-- Add the column definitions for the TABLE variable here
	[Date] DateTime, 
	DateFormatted varchar(10),
	[Shift] char(2),
	[Type] nvarchar(10)

)
AS
BEGIN
	DECLARE @ProjectArchivePriorTo  datetime
	SELECT @ProjectArchivePriorTo = MAX(ArchivePriorTo) FROM tbl_DBT_ProjectArchiveDate where ProjectID = @projectId

	IF (@Type = 'item' OR @Type IS NULL)
		BEGIN
			INSERT INTO @Table([Date],[DateFormatted], [Type])
			SELECT DISTINCT
			  a.Date, CONVERT(varchar(10), a.Date, 105) AS DateFormatted, 'item' As [Type]
			FROM [dbo].[tbl_DWH_ProdDataStorage] AS a
			--LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			--  ON a.ProjectID = p.ProjectID
			LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON a.Date = b.LockDate
			 --2021-05-19 AND a.Shift = b.LockShift
			  AND a.ProjectID = b.ProjectID
			WHERE a.ProjectID = @projectid
			AND a.ActivityID = 1
			AND a.BudgetCodeID = 1
			AND (a.ConsumableID > 0 )--delete: OR a.consumableId IS NULL)
			/*AND (p.ArchivePriorTo IS NULL OR a.Date > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR a.Date > @ProjectArchivePriorTo)
			AND (b.ItemsPosted IS NULL OR b.ItemsPosted = 0)
			 AND (b.ArchiveItem IS NULL OR b.ArchiveItem = 0)
			GROUP BY a.Date

			UNION 

			SELECT DISTINCT
			mm.ProjectDate AS Date,
			CONVERT(varchar(10), mm.ProjectDate, 105) AS DateFormatted, 'item' As [Type]
			FROM [View_MagmanShiftDate] mm 
			INNER JOIN tbl_DBT_Project ON mm.ProjectID = tbl_DBT_Project.ProjectID
			/*LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			 ON mm.ProjectID = p.ProjectID */
			  LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON mm.ProjectDate = b.LockDate
			--2021-05-19  AND mm.Shift = b.LockShift
			  AND mm.ProjectID = b.ProjectID

			WHERE mm.ProjectID = @projectID
			AND MagManActive=1
			AND mm.TransactionType IN (0,1,2,4,5)

			/*AND (p.ArchivePriorTo IS NULL OR mm.ProjectDate > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR mm.ProjectDate > @ProjectArchivePriorTo)

			AND (b.ItemsPosted IS NULL OR b.ItemsPosted = 0)
			 AND (b.ArchiveItem IS NULL OR b.ArchiveItem = 0)
			GROUP BY mm.ProjectDate


			UNION
			/* Get transactions which may have been added to magman since date was posted to Minepoint */
			SELECT DISTINCT
			mm.ProjectDate AS Date,
			CONVERT(varchar(10), mm.ProjectDate, 105) AS DateFormatted, 'item' As [Type]
			FROM [View_MagmanShiftDate] mm 
			INNER JOIN tbl_DBT_Project ON mm.ProjectID = tbl_DBT_Project.ProjectID
			/*LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			  ON mm.ProjectID = p.ProjectID */
			  LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON mm.ProjectDate = b.LockDate
			--2021-05-19  AND mm.Shift = b.LockShift
			  AND mm.ProjectID = b.ProjectID

			WHERE mm.ProjectID = @projectID
			AND MagManActive=1
			AND mm.TransactionType IN (0,1,2,4,5)

			/*AND (p.ArchivePriorTo IS NULL OR mm.ProjectDate > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR mm.ProjectDate > @ProjectArchivePriorTo)

		--	AND (b.ItemsPosted IS NULL OR b.ItemsPosted = 0)
			 AND (b.ArchiveItem IS NULL OR b.ArchiveItem = 0)

			GROUP BY mm.ProjectDate, mm.ProjectID
			HAVING MAX(mm.DownloadDateTime) > (SELECT MAX(pd.PostedDT) 
										 FROM tbl_DWH_MinepointPostingDetail pd 
								    		 WHERE pd.ProjectID = mm.ProjectID
										 AND pd.PDSDate = mm.ProjectDate
										 AND PostingType='item'
										 GROUP BY pd.PDSDate, pd.ProjectID)
/*
			UNION 
	--stores stuff uploaded direct to central
			SELECT DISTINCT
			 mm.Date,
			CONVERT(varchar(10), mm.Date, 105) AS DateFormatted, 'item' As [Type]
			FROM [View_ItemPosting_UploadedDirectToCentral] mm 
			INNER JOIN tbl_DBT_Project ON mm.ProjectID = tbl_DBT_Project.ProjectID
			/*LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			 ON mm.ProjectID = p.ProjectID */
			  LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON mm.Date = b.LockDate
			  AND mm.Shift = b.LockShift
			  AND mm.ProjectID = b.ProjectID

			WHERE mm.ProjectID = @projectID


			/*AND (p.ArchivePriorTo IS NULL OR mm.ProjectDate > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR mm.Date > @ProjectArchivePriorTo)

			AND (b.ItemsPosted IS NULL OR b.ItemsPosted = 0)
			 AND (b.ArchiveItem IS NULL OR b.ArchiveItem = 0)
			GROUP BY mm.Date
*/
/*
only get this bottom one... shouldn't need the above one too?!
*/
			UNION
			/* Get stores transactions which may have been added to central since date was posted to Minepoint */
			SELECT DISTINCT
			mm.Date AS Date,
			CONVERT(varchar(10), mm.Date, 105) AS DateFormatted, 'item' As [Type]
			FROM [View_ItemPosting_UploadedDirectToCentral] mm 
			INNER JOIN tbl_DBT_Project ON mm.ProjectID = tbl_DBT_Project.ProjectID
			/*LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			  ON mm.ProjectID = p.ProjectID */
			  LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON mm.Date = b.LockDate
			--2021-05-19  AND mm.Shift = b.LockShift
			  AND mm.ProjectID = b.ProjectID

			WHERE mm.ProjectID = @projectID

			/*AND (p.ArchivePriorTo IS NULL OR mm.ProjectDate > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR mm.Date > @ProjectArchivePriorTo)

		--	AND (b.ItemsPosted IS NULL OR b.ItemsPosted = 0)
			 AND (b.ArchiveItem IS NULL OR b.ArchiveItem = 0)

			GROUP BY mm.Date, mm.ProjectID
			HAVING MAX(mm.UploadDateTime) > (SELECT MAX(pd.PostedDT) 
										 FROM tbl_DWH_MinepointPostingDetail pd 
								    		 WHERE pd.ProjectID = mm.ProjectID
										 AND pd.PDSDate = mm.Date
										 AND PostingType='item'
										 GROUP BY pd.PDSDate, pd.ProjectID)


/*not sure about this bit?! maybe it should go back in
			ORDER BY a.Date
			option (optimize for (@ProjectID UNKNOWN))	
*/

		END
	ELSE IF (@Type = 'hour' OR @Type IS NULL)
		BEGIN
			 INSERT INTO @Table([Date], [Shift], [DateFormatted], [Type])

			SELECT DISTINCT
			  a.Date, a.Shift, CONVERT(varchar(10), a.Date, 105) AS DateFormatted, 'hour' As [Type] --insert shift --
			FROM [dbo].[tbl_DWH_ProdDataStorage] AS a
			/*LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			  ON a.ProjectID = p.ProjectID */
			LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON a.Date = b.LockDate
			  AND a.Shift = b.LockShift
			  AND a.ProjectID = b.ProjectID
			WHERE a.ProjectID = @projectID
			--delete:  AND a.ActivityID = 1 --
			AND a.BudgetCodeID = 1
			--delete: AND a.ConsumableID > 0 --
			/*AND (p.ArchivePriorTo IS NULL OR a.Date > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR a.Date > @ProjectArchivePriorTo)

			AND (b.HoursPosted IS NULL OR b.HoursPosted = 0)
			AND (b.ArchiveHour IS NULL OR b.ArchiveHour = 0)
			GROUP BY a.Date,a.Shift
			ORDER BY a.Date,a.Shift
			option (optimize for (@ProjectID UNKNOWN))
		END

    ELSE IF (@Type = 'equipment' OR @Type IS NULL)
    BEGIN
    /* from sp - performance issue. Also added PK to projectarchive table on projectid*/
	/*   INSERT INTO @Table([Date], [Shift], [DateFormatted])
	   SELECT DISTINCT iplod.Date
            ,iplod.Shift
            ,CONVERT(VARCHAR(10), iplod.Date, 105) AS DateFormatted
        FROM [dbo].[tbl_DWH_iPlodStagingTable] AS iplod
        LEFT JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS sl
            ON iplod.Date = sl.LockDate
            AND iplod.Shift = sl.LockShift
        LEFT JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS pad
            ON iplod.ProjectID = pad.ProjectID
        WHERE iplod.ProjectID = @ProjectID
            AND (pad.ArchivePriorTo IS NULL OR iplod.Date > pad.ArchivePriorTo)
            AND (sl.EquipPosted IS NULL OR sl.EquipPosted = 0)
        GROUP BY iplod.DATE
            ,iplod.Shift
        ORDER BY iplod.Date
            ,iplod.Shift

		  */
		  INSERT INTO @Table([Date], [Shift], [DateFormatted], [Type])
		  SELECT DISTINCT iplod.Date
	    ,iplod.Shift
			 ,CONVERT(VARCHAR(10), iplod.Date, 105) AS DateFormatted, 'equipment' As [Type]
		  FROM [dbo].[syn_DWH_iPlodStagingTable] AS iplod
		  LEFT JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS sl
		  ON iplod.Date = sl.LockDate
		  AND iplod.Shift = sl.LockShift
		  AND sl.ProjectID = @ProjectID  --shifted to here because was removing lines if nothing else posted yet
 		  WHERE iplod.ProjectID = @ProjectID
		  --AND sl.ProjectID = @ProjectID  --added by TS 
		  AND  (iplod.Date > @ProjectArchivePriorTo OR @ProjectArchivePriorTo IS NULL)
		  AND (sl.EquipPosted IS NULL OR sl.EquipPosted = 0)
		  AND iplod.InputType <>'Error'  --TS 2018-09-25
		 GROUP BY iplod.DATE
			 ,iplod.Shift
		 ORDER BY iplod.Date
			 ,iplod.Shift
		 option (optimize for (@ProjectID UNKNOWN))
	   END 
    ELSE IF @Type = 'fee' OR @Type IS NULL
		BEGIN
		     INSERT INTO @Table([Date],[DateFormatted], [Type])
			SELECT DISTINCT
			  a.Date, CONVERT(varchar(10), a.Date, 105) AS DateFormatted, 'fee' as [Type] --no shift required here --
			FROM [dbo].[tbl_DWH_ProdDataStorage] AS a
			/*LEFT OUTER JOIN [dbo].[tbl_DBT_ProjectArchiveDate] AS p
			  ON a.ProjectID = p.ProjectID */
			LEFT OUTER JOIN [dbo].[tbl_DBT_ShiftLocksV2] AS b
			  ON a.Date = b.LockDate
			--2021-05-19  AND a.Shift = b.LockShift
			  AND a.ProjectID = b.ProjectID
			WHERE a.ProjectID = @projectID
			AND a.BudgetCodeID = 1
			/*AND (p.ArchivePriorTo IS NULL OR a.Date > p.ArchivePriorTo) */
			AND (@ProjectArchivePriorTo IS NULL OR a.Date > @ProjectArchivePriorTo)

			AND (b.FeesPosted IS NULL OR b.FeesPosted = 0)
			GROUP BY a.Date
			ORDER BY a.Date
			option (optimize for (@ProjectID UNKNOWN))
		END



	RETURN 
END
GO
PRINT N'Altering [dbo].[View_ShiftSummary_PrestartHistory]'
GO
ALTER view [dbo].[View_ShiftSummary_PrestartHistory]
as
/*
select * from [dbo].[View_ShiftSummary_PrestartHistory] where projectid = 387	--and date > '2020-09-01' order by date,operator --3974 3 secs; 
			PEA: 8secs 21517 (old), new: 1:38, 21627
									swap tg to tgAll: 1:43, 21627
									remove stat/statequp: 1:39
									add exists to the actinput table!!
2019-02-20 TS ... added location field for peak
2019-04-15 TS ... added OperatorID 
2019-08-15 TS ... added "inputId" for further filtering
2020-08-21 ts ... change to special handign link table
2020-08-24 CA ... removed fuel readings by adding AND NOT (InputType = 'attrlist' AND prstinputid = 288) 
2020-11-02 ts ... modify to include all things that log faults (not jsut prestarts)
2020-11-03 ts ... modify the labels to include show special for record machine fault (dodgy!)
2021-06-07 ts ... fix attribute lists meters coming through this
				... added locatl stagingid for the phptos join
				... added OR s.ProjectId to the jooin to actreasoninput table. should be fine for dupes becasue it has a distinct?!
				... added IsTrueFault
2021-06-08 ts ... remove teh display order from i (it was causing duplicates across project/Proj1 ... 
							this is a dodgy hack for the main problemw which is that we have prestarts not on proj1 here.
							could simply delete prestart data off proj1 !!! need to sort out a proper soln when we mature the concept of manage-repo
2021-06-08 ts ... add taskname, had to join to sys_reasons. maybe should shift this back to the task grouping fungtion?! (could make it too slow)
2021-07-07 ts ... "CommentsCheck" needs to be separate row in this.
				... various optimisations:	...(MAYBE REVERT: various optimisations: swap task groupings to tg all, don't need to join again to reason table
								...don't need stat vs statequip fudge anymore
								...NAH: join teh task groupings to input table instead THIS WILL KILL INPUTS THAT NO LONGER EXIST ON ACT REASON!
								... change project join to IN instead of OR
								... explicitly qtypes on teh include for intolerables
								...NAH, makes it worse: change teh tg to a EXISTS on the where.
								... add exists on the actinputs table to quell that shit?
			... added flag for is general comment
2022-10-21 ts ... manipulate the flag for istruefault
              ... added isshutdown cehck too

TODO:
before releaseing to pybar, need to check on query speed of this.

LIKELY HAVE TO CHECK ON THE VIEWS FEEDING THE IPLOD HISTORY LIST?


*/
select *
from (
  select distinct Date
                , s.ProjectID
                , 'NotificationText' as 'GroupingField'
                ,   -- this is not displayed, tells you which field to group by on the page
                  Shift
                , e.EmployeeName as 'Operator'
                ,

                  ------- Displaying Time correctly instead of just an int.
                  case
                            when len(cast(convert(float, StartTime) as varchar)) = 3 then
                              '0' + left(cast(convert(float, StartTime) as varchar), 1) + ':' + right(cast(convert(float, StartTime) as varchar), 2) --+ ' Hrs' 
                            when len(cast(convert(float, StartTime) as varchar)) = 2 then
                              '00' + ':' + right(cast(convert(float, StartTime) as varchar), 2)-- + ' Hrs' 
                            else
                              left(cast(convert(float, StartTime) as varchar), 2) + ':' + right(cast(convert(float, StartTime) as varchar), 2)-- + ' Hrs' 
                  end
                  as 'Time'
                  ----------- End time stuff
                , EquipmentID
                , eq.EquipmentCode as 'EquipID'
                , DisplayOrder = 1
                , 'Prestart Question' = case
                                                 when s.InputType like 'Q%' then
                                                   q.QuestionText
                                                 when [s].[InputType] = 'stat'
                                                   and
                                                   [s].[InputID] = 7 then
                                                   'General Comments'
                                                 else
                                                   i.ForeLabel
                                       end
                , 'Answer' = case
                                      when s.inputid = 102
                                        and
                                        s.inputtype = 'attrinput' then
                                        ':'
                                      when s.InputType = 'attrlist' then
                                        isnull(at.AttributeDescription, 'missing answer')
                                      when [s].[InputType] = 'stat'
                                        and
                                        [s].[InputID] = 7 then
                                        ''  --2021-07-07
                                      else
                                        s.InputValue
                            end
                , q.intolerablevalue
                , NotificationText = case
                                              when s.InputType = 'attrlist' then
                                                i.ForeLabel --for attributes, put them into their own place
                                              --2021-07-07, don't think we need to change this logic?
                                              else
                                                isnull(q.category, iif(s.ActivityReasonID = 1696, 'Record Machine Fault', 'Comments / Hour Meters'))    --2020-11-03 
                                    end
                , [Include] = case
                                       when (s.InputValue = q.intolerablevalue
                                           and s.InputType like 'Q%'
                                           or s.InputType not like 'Q%')
                                         and
                                         not (InputValue = ''
                                           and s.InputType not like 'Q%') then
                                         1
                                       else
                                         0
                             end --should bring the stat7 in wihtout changing the logic I think?

                , 'Comments' = case
                                        when s.inputid = 102
                                          and
                                          s.inputtype = 'attrinput' then
                                          s.InputValue
                                        when s.inputid = 7
                                          and
                                          s.inputtype = 'Stat' then
                                          isnull(s.CommentsCheck, '')   --stat7 is brought in to get general comments about the prestart
                                        else
                                          isnull(s.InputComment, '') --+ '  '+isnull(s.CommentsCheck,'') 

                              end
                , s.InputType
                , StagingID
                , FeedbackAdvice
                , LocationId = dbo.FN_IsNullorEmpty(s.Location, 0)
                , s.OperatorID
                , prstInputId = s.InputID
                , prstLocalStagingid = s.LocalStagingID
                , IsTrueFault = case when ( tg.IsPrestart =1 or tg.IsShutdownCheck =1) and s.InputValue = q.intolerablevalue then 1
                                      when /* tg.IsPrestart =0 and*/ s.inputid = 102
                                                      and
                                                      s.inputtype = 'attrinput' then 1 --2022-10-21 non-prestarts are laid out differently. they have faults against attrinput 102 for one thing
                                      else 0 end  --only put true faults into certain places
                , prstTaskAlias = [tg].[TaskName] --isnull(tg_ReasonAlias,reas.ReasonDescription)
                , IsGeneralComment = iif(s.inputid = 7 and s.inputtype = 'Stat', 1, 0)
  from [dbo].[syn_DWH_iPlodStagingTable] as s
  left outer join dbo.[tbl_SYS_Questions] as q
    on s.inputID = q.QuestionID
        and s.InputType like 'Q%'
  left outer join dbo.tbl_DBT_Employees as e
    on s.OperatorID = e.EmployeeID
  left outer join dbo.tbl_SYS_Equipment as eq
    on s.EquipmentID = eq.EquipmentCodeID
  --removed this becuase of teh hard coded Proejct=1 join.
  --replaced with teh outer apply below, which will sort it, but maybe slow?
  left join [dbo].[tbl_DBT_ActReasonInputLink] as i
    on i.ActReasonLinkID = s.ActivityReasonID
        and s.InputID = i.InputID
        and (i.ProjectID = 1
          or s.ProjectID = i.ProjectID) --this allows MCR to be on Proj399
        --and (i.[ProjectID] in (1,s.[ProjectID]))
        and exists (
          select [tgs].[ActivityReasonId]
          from dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits', '') as tgs
          where i.[ActReasonLinkID] = tgs.[ActivityReasonId]
            and tgs.[HasFaults] = 1)
        --pybar: and i.[ProjectID] =1
        and (s.InputType = i.InputType)--2021-07-07, don't need this anymore: or s.InputType like 'stat%' and i.InputType like 'stat%') 
  --this will cause historical issues if changing between StatEquip and Stat 
  --... could be dealt with by scripting all historical Staging data back to StatEquip
  --2020-11-02 INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','AR_Prestarts') AS tg
  --inner join dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','') as tg
  inner join FN_Iplod_GetAR_TaskGroupingsAll(0, 0) as tg  --put projectid as 0, should be fine for most things here (prestarts into special handling on proj1 predominently)
    on s.[ActivityReasonID] = tg.ActivityReasonId
  --	left join dbo.tbl_SYS_Reason as reas
  --	on tg.tg_ReasonId = reas.ReasonID
  --outer apply [dbo].[udf_GetTaskDetails_ForIplod]  --can't apply the projec and join on actreason/inputtype/inpuytid!
  --					(s.ProjectID
  --					,''
  --					,0
  --					, s.ActivityReasonID
  --					) as i


  left join dbo.tbl_SYS_Attribute as at
    on s.InputType = 'attrlist'
        and cast(at.AttributeID as varchar) = s.InputValue
        and at.AttributeTypeID = s.InputID

  where --s.InputType like 'Q%' AND
    tg.HasFaults = 1
    and --2020-11-02
    not (s.inputtype = 'stat'
      and s.inputid = 7
      and ([s].[CommentsCheck] = ''
        or [s].[CommentsCheck] is null))  --2021-07-07
    and not (s.InputType = 'attrlist'
      and s.inputid = 288)
-- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
--((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))

--and exists (select [tgs].[ActivityReasonId] from dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','') as tgs
--		where s.[ActivityReasonID] = tgs.[ActivityReasonId] and tgs.[HasFaults] =1)


) as tbl1
where [Include] = 1
GO
PRINT N'Altering [dbo].[View_webbarAPI_EquipmentDetails]'
GO
ALTER VIEW [dbo].[View_webbarAPI_EquipmentDetails]
AS
/*
select * from [dbo].[View_webbarAPI_EquipmentDetails] where projectid = 236  


		20181115 (CA)... ADD FL to the list. Not time usage affected. 
		20181210 (CA)...ADD Bobcats (88) to the list for bosco. All mining doesnt need it....but whatever. 
		2019-03-12 (TS) ... added two more RB rigs
		2019-05-31 (CA) ... Added MB and AB for shift planning
		2020-02-25 (CA)...Moved LO to not need time usage
		2020-07-22 (ts) ... added comms network 
		2020-07-24 (ts) ... added shaft lining rig
		2020-01-29 (RF) ... added RT for webbar inputs
		2021-06-05 (CA) ... Added PitLink 
    2022-05-24 (RF) ... Added 146 SBM900 for webbar inputs
    2022-08-15 CA ... Added RB rigs 
    2022-08-28 ts ... is this used still? and why won't it commit?
    2022-09-02 CA. ... used in shift plan at least. Fixed pitID source
*/

SELECT
  a.EquipmentCodeID AS EquipmentID

 ,CASE
    WHEN c.equiptypeID IN (92, 112) THEN a.EquipmentCode + ' - ' + c.EquipTypeDescription
    ELSE a.EquipmentCode
  END AS EquipmentCode


 ,'' AS EquipmentDescription --c.EquipTypeDescription as EquipmentDescription--a.EquipmentDescription
 ,a.EquipTypeID  -- Added case here just for MLC genset until we fix list for 112 equip
 ,b.ProjectID
 ,b.LoadFactor
 ,CASE
    WHEN c.EquipTypeID = 112 THEN 'GenSet'
    ELSE c.EquipTypeDescription
  END AS EquipTypeDescription
 ,c.EquipTypeCode
 ,(SELECT
      MAX(v)
    FROM (VALUES (a.ModifiedOn), (b.ModifiedOn), (c.ModifiedOn)) AS value (v))
  AS LastModifiedOn
 ,Active = b.Active
 ,TimeUsage = b.TimeUsage
 ,[PitLink] = b.PitID
FROM dbo.tbl_SYS_Equipment AS a
INNER JOIN dbo.tbl_SYS_EquipProjectLink AS b
  ON a.EquipmentCodeID = b.EquipmentID
INNER JOIN dbo.tbl_SYS_ResEquipTypes AS c
  ON a.equiptypeid = c.equiptypeid
WHERE ((a.active = 1
AND b.Active = 1
AND b.timeusage = 1
AND a.EquipTypeID IN (127, 57, 114, 91, 95, 96, 15, 19, 100, 25, 27, 107, 113, 114, 120, 126, 127, 57, 77, 129, 130, 92, 112, 131, 88
, 132, 133, 135, 136, 137, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158)) -- added 130 single boom jumbo. Added 131 Shotcret combi. added two more RBs, added NetworkEquip, added RT's, added 148 SBM900 

OR (a.EquipTypeID IN (110, 106, 119, 21  --20181115
, 111, 85 --Added Mb and Ab
--119=SL
--moved Compressor and Genset (92,112) from this line to above. So it is affected by TU
-- ADD HV in here instead of above so it is not affected by TU for HTY
, 27 --2020-02-25 LO 

)
AND b.Active = 1))
AND ((a.EquipTypeID IN (57, 127)
AND b.LoadFactor > 0)
OR (a.EquipTypeID NOT IN (57, 127)))
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_SummaryofResults_DataV]'
GO
ALTER procedure [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID INT, @Date DATE = NULL, @Shift VARCHAR(2), @Type VARCHAR(50) = 'Mining', @UserId INT = 0
, @Mode NVARCHAR(35) = '', @SupervisorId INT = 0, @CrewId INT= 0, @ColumnLabelsJSON nvarchar(MAX) = '' OUTPUT 
AS
/* 
EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 242, @Date = '2020-09-01', @Shift = 'NS', @Type = 'Mining', @UserId = 137, @Mode = '', @SupervisorId = 3308, @CrewId = 1
EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 259, @Date = '2018-12-01', @Shift = 'DS', @Type = 'Mining24'
EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 194, @Date = '2020-04-12', @Shift = 'DS', @Type = 'Mining'
EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 259, @Date = '2020-04-12', @Shift = 'DS', @Type = 'Mining1'
EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 326, @Date = '2020-04-12', @Shift = 'DS', @Type = 'Mining'
 EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 242, @Date = '2020-04-01', @Shift = 'DS', @Type = 'Mining', @UserId = 137, @Mode = 'DataV', @SupervisorId = 10185, @CrewId = 5


*/
/*
fields:
SectionHeaderHTML 
,SectionHeaderShade
,GroupHeaderName
,GroupShadeColour
,TableType = normal or ommitted or 'pivot'
,LineTextColour ... needs to be colour name
,TableFootnote = 'This is footnote for users, note this is only for dummy data'

for pivot, use this for label names:
SET @ColumnLabelsJSON = '{"Source Locations":{"Column1Label":"","Column2Label":"MovedFrom","Column3Label":"Moved To","Column4Label":"DateTime"},"Stockpile Status":{"Column1Label":"","Column2Label":"Moved From","Column3Label":"Moved To","Column4Label":"DateTime"}}'
*/

	/*     
		2020-04-07...CA...Created this SP out of the shiftsummary_analysis
		2020-04-08...CA...Added TypeConfigs test user data
					....Fixed groupheader field and colours. Removed group1 field.
		2020-04-10 ... ts ... aded checks on data integrity for type alias
		2020-04-17...CA...Changed colourcode to LineTextColour and converted number colour codes to proper colours
		2020-04-17 ts ... fix colyur code on twi text cheks
					   ... remove the type alias pit id scalar functin from the lines
					   fix group1 in the dynamic sql
		2020-04-22 ts ... add colours to prestart compliance and gropu by to remove dupes
		2020-04-23 ts ... added , @ColumnLabelsJSON nvarchar(MAX) = '' OUTPUT (for pivots)
		2020-04-23 ts ... added section headers ... haven't done for maint yet
		2020-04-27 ts ... added true type fiter on the prestarts (so we dont get fitters)
						... switch the shiftboss readings pivot
		2020-04-29 ts ...trickery for the pivot on shiftboss
						... shifted the inputCnt inside the select
						.. remake teh supervisor stuff back into a function
		2020-06-20 ts ... add the config table that this project uses
		2020-8-17 ts  ... don't call using tbl_staging table, use the syn one
		2020-09-01 ts ... add KPI set (for DGM, hooked into ShowLiveIplod data config for now
		2020-09-02 ts ... finesse the kpi labeling for nulls
						... change to isnull or empty for locals
						... kill the filter to ENdDate on KPIs ... just use status. is needless complexity.
		2020-09-09 CA ... Change hazard section to be from the view instead of IPS. Date commented in section. 
		2020-09-10 CA ...Added BRK Hazard exculsion
				2021-02-07 CA ... Added Mining KPI Typeconfig call

		2021-04-20 ts ... add line for TWIs checked by someone other than @Supervisor  https://app.clickup.com/t/n4q77r
						... renamed the line about not checked to remove reference to @Supervisor.  thus will show other "supervisors" who werent' @Supervisor.  note, they will still need a tick in dbt_employees.Shiftboss to make it through the view
		2021-07-07 ts ... faults need to get the commenst too

		Add 399 hardcoding to @TWISActive

		This SP still uses Analysis config calls

	*/

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SupervisorName AS VARCHAR(100)
	SET @SupervisorName = (SELECT TOP 1 EmployeeName FROM tbl_STO_SHiftComments AS s
	 INNER JOIN tbl_DBT_Employees AS e ON s.SupervisorID = e.EmployeeID AND ShiftCommentDate = @Date AND Shift = @Shift AND s.ProjectID = @ProjectID
	 AND Type = @Type)   

	-- 	DECLARE @SupervisorId AS int
	SET @SupervisorId = (SELECT TOP 1 s.SupervisorID FROM tbl_STO_SHiftComments AS s
	 WHERE  ShiftCommentDate = @Date AND Shift = @Shift AND s.ProjectID = @ProjectID
	 AND Type = @Type)   

	DECLARE @TWIsActive AS INT -- shift this to a config table
	SET @TWIsActive = CASE WHEN @ProjectID IN (131,133,399) THEN 0 ELSE 1 END

	DECLARE @TWIARIDs AS VARCHAR(100)
	SET @TWIARIDs = (SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_TWIs' AND Active = 1 )

	DECLARE @HazardAttrTypes AS VARCHAR(100)
	SET @HazardAttrTypes = (SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'iplodAttrTypes_Hazard' AND Active = 1 )

	DECLARE @TWIALIAS AS VARCHAR(15)
	SET @TWIALIAS = (SELECT [dbo].[FN_TWIAlias](@ProjectID));

	DECLARE @ShiftLength FLOAT
	SET @ShiftLength = (SELECT ISNULL(ShiftLength,12)  FROM dbo.tbl_DBT_Project WHERE ProjectID = @ProjectID)

	DECLARE @IsDBAdmin INT = dbo.FN_IsWebbarFullAdmin(@UserId)

DECLARE @TypeAliasMethod int
SET @TypeAliasMethod = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_v2(@ProjectId,@type,1,'TypeAliasMethod','DataV'));

DECLARE @TypeAliasPitId int = [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type);

--PRINT @TypeAliasMethod

		--CASE WHEN @ProjectId = 259 THEN 1 ELSE 0 END;   --Project 259 for now, shift back to alias tbale? or config.  methods are    0 --> no Type Alias used, just mining and maint

DECLARE @Is24HrSummary INT
SET @Is24HrSummary = CASE WHEN @Type like '%24' THEN 1 ELSE 0 END

DECLARE @wkStINT INT
SET @wkStINT =  (SELECT  TOP 1   [WeekStart]  FROM [dbo].[tbl_DBT_ProjectKPIs] WHERE ProjectID = @ProjectID)

DECLARE @WeekStart DATE       
SET @WeekStart = (SELECT  [dbo].[FN_GetWeekStartDate](@Date,@wkStINT));  

DECLARE @WeekEnd DATE       
SET @WeekEnd = DATEADD(day, 6, @WeekStart);

DECLARE @IsLocal int 
SET @IsLocal = dbo.FN_IsLocal(@ProjectID);

DECLARE @BudgetCodeFor24Hr int
SET @BudgetCodeFor24Hr = 3 --shift to configs if necessary

DECLARE @PrestartCompliance int
SET @PrestartCompliance = dbo.FN_GetConfigValue(@ProjectId,'PrestartCompliance')
--1 = one per equipment per shift, 2=one per operator per equipment per shift

DECLARE @CheckiPLODBadData int 
SET @CheckiPLODBadData = dbo.FN_GetConfigValue(@ProjectId,'APIHasNoCompulsoryFields');


DECLARE @ChargeUpCompliance INT
SET @ChargeUpCompliance = dbo.FN_GetConfigValue(@ProjectId,'ChargeUpCompliance')

DECLARE @ShowMiningKPIs INT =(SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_v2(@ProjectId,@type,1,'SummaryOfResults_ShowMiningKPIs','DataV'))


DECLARE @RefugeChamberComplaince INT 
SET @RefugeChamberComplaince = dbo.FN_GetConfigValue(@ProjectId,'RefugeChamberCompliance')

DECLARE @TestUser INT
SET @TestUser = (SELECT dbo.FN_IsTestUser(@UserId))

DECLARE @TrueType nvarchar(25) = ( --should put in a function
										SELECT TOP 1
											   t.TypeCode
										FROM
										(SELECT TOP 1 * FROM [FN_ProjSetup_TypeAlias](@ProjectID, '', 0, '') ) AS cfg
											JOIN dbo.tbl_SYS_Type AS t
												ON t.TypeID = cfg.TypeId
										WHERE LOWER(UseCase) = LOWER('shiftsummary')
											  AND LOWER(TypeAlias) = LOWER(@Type)
									);


DECLARE @CurrentDate date = CONVERT(date,GETDATE());

DECLARE @showDraftIplodTasks int = IIF(@CurrentDate= @Date OR (DATEDIFF(DAY,@Date,@CurrentDate)=1 AND @Shift ='ns')  , ISNULL(dbo.FN_GetConfigValue(@ProjectID,'ShowDraftIplodTasks'),0),0)

DECLARE @ShowResolvedHazards INT = dbo.FN_GetConfigValue(@ProjectID,'ShowResolvedHazards')


IF @TestUser = 1  AND 1=2 --not really looking at this anyway
BEGIN 
	DECLARE @modesActive int = (SELECT TOP 1 ISNULL(ConfigValue,'0')  FROM [dbo].[FN_ProjSetup_TypeAlias_V2](    @ProjectID  	,@Type	, 0	, 'TypeModesActive', @Mode ));

	DECLARE @AllowedModes nvarchar(255) = CASE WHEN @modesActive=1 then (select PermissionConfigValue from [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'ShiftSummary',@Type,'_AllModes','TypeModeIdCsv'))
											ELSE ',1,' END;
	--SELECT  dbo.FN_GetConfigValue(@ProjectID,'TypeConfigTableName') 

			SELECT DISTINCT
		SectionHeaderHTML = 'Test Data Configs etc'
,SectionHeaderShade = ''
	  , GroupHeaderName = 'TypeConfigs check on TrueTypeId'
	  ,GroupShadeColour = 'LightSteelBlue',
	   TypeId,
       TypeAlias,
      Notes = 'should be only one Type Id per alias or bad things happen!'
      FROM [FN_ProjSetup_TypeAlias_v2](@ProjectID, @type, 1,'', @Mode) 
		WHERE  UseCase LIKE '%summary%'

		SELECT 	SectionHeaderHTML = 'Test Data Configs etc'
,SectionHeaderShade = ''
	  , GroupHeaderName = 'Process Mode Stuff'
	  ,GroupShadeColour = 'LightSteelBlue'
	  ,AreModesActive = isnull(@modesActive,'not setup')
	  ,AllowedModes = @AllowedModes

SELECT 
SectionHeaderHTML = 'Test Data Configs etc'
,SectionHeaderShade = ''
	  , GroupHeaderName = 'TypeConfigs Table= '+ ISNULL(dbo.FN_GetConfigValue(@ProjectID,'TypeConfigTableName') ,'xx')
	  ,GroupShadeColour = 'LightSteelBlue',
	   TypeId,
       TypeAlias,
       UseCase,
       ConfigName,
       ConfigValue,
     --  Active,
      -- Comments,
       ProjectId
    --   ModeCode
      FROM [FN_ProjSetup_TypeAlias_v2](@ProjectID, @type, 1,'', @mode) 
		WHERE  UseCase LIKE '%summary%'




END 


IF (@Type = 'Geology2')
BEGIN 
	SELECT
	SectionHeaderHTML ='Geology'
,SectionHeaderShade = ''
, GroupHeaderName = 'Geology'
	  ,GroupShadeColour = 'LightSteelBlue',
	s.Date,
	s.Shift,
	[Sample Taken] = s.InputValue,
	ar.ReasonAlias,
	e.EmployeeName,
	[Samples] = s.InputComment

	 FROM dbo.tbl_DWH_iPlodStagingTableEdited AS s 
	LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS ar
		ON s.ActivityReasonID = ar.ActivityreasonLinkID 
	LEFT OUTER JOIN dbo.tbl_SYS_Reason AS r
		ON ar.ReasonID = r.ReasonID
	LEFT OUTER JOIN dbo.tbl_DBT_Location AS l
		ON l.LocationID = s.Location
	LEFT OUTER JOIN dbo.tbl_DBT_Employees AS e
		ON s.OperatorID = e.EmployeeID

	WHERE s.date = @Date 
	AND r.ReasonID = 170 
	AND s.projectid = @ProjectID
	AND s.InputType = 'q' 
	AND s.InputID = 1048
END 




ELSE IF  (@Type LIKE 'Mining%')
	BEGIN
		IF @ShowMiningKPIs = 1
		BEGIN

									-- this is a section about shiftboss checks of TWIs
									/************
									add some KPis for DGM live trial
									***********888*/
									select	 SectionHeaderHTML ='Mining KPIs Summary' + IIF(@IsDBAdmin=1,' .. toggle this with typeconfig=SummaryOfResults_ShowMiningKPIs','')
								,SectionHeaderShade = ''
								, GroupHeaderName = 'By Active Location'
									  ,GroupShadeColour = 'LightSteelBlue',
									  TableType = 'pivot'
									 -- tbl.Group1,
									 /* Row1=tbl.Shift,
									 Row2= tbl.TIME,
									 Row3= tbl.NAME,
									 -- tbl.CompKey,
									 Row4= tbl.Location,
									 Column1= tbl.ForeLabel,*/
									 --what about this:
									 --if input count is too big then switcht the pivot:
									, Column1=ISNULL(tbl.KPIDescription , lcn.KPIDescription)  --tbl.MetricCode--  LocationCode  
									, Column2=''-- ISNULL(tbl.SubtotalCode,'')--EmployeeName
									, Column3=''-- tbl.UnitsCode
									 -- tbl.CompKey,
									 ,Column4= ''--IIF(inputCnt > 10,tbl.Location,NULL)
									 ,Row1=  COALESCE(tbl.LocationCode  , lcn.LocationCode)
									 ,Row2= ISNULL(EmployeeName+ ' ('+dbo.FN_StringPad(dbo.FN_ConvertTimeToInteger(MAX(MaxDateTime)),4,'0') + 'hrs)','') 
									 ,Row3=''-- IIF(tbl.DataSource = 'iplod_Draft','Draft iPLOD Data'+--IIF(inputCnt > 10,NULL,tbl.NAME)
									, Row4= ''--IIF(inputCnt > 10,NULL,tbl.Location)
								   ,  Qty= ISNULL(dbo.FN_FormatDecimalAsVarchar(SUM(ActualValue),1) +' '+ UnitsCode ,' - ')

									  --don't have the comments?! would need to handle them into a column, maybe by union?
									  --tbl.Comments,
									  --tbl.ActivityReasonLinkID,
									-- ColumnOrder = IIF(inputCnt > 10,DENSE_RANK() OVER ( ORDER BY tbl.SHift,tbl.TIME,tbl.NAME,tbl.Location ) ,tbl.DisplayOrder)

													--IIF(inputCnt > 10,DENSE_RANK() OVER (PARTITION BY tbl.SHift,tbl.TIME,tbl.NAME,tbl.Location ORDER BY tbl.SHift,tbl.TIME,tbl.NAME,tbl.Location ) ,tbl.DisplayOrder)
									,TableFootnote = ''
									FROM 
									(SELECT DISTINCT spl.locationid , l.LocationCode,KPIDescription--='FW - Development Advance'  
									FROM dbo.tbl_STO_ShiftPlanLocns AS spl
									INNER JOIN dbo.tbl_DBT_Location AS l ON spl.LocationID = l.LocationID
									cross JOIN (SELECT TOP 1 kpidescription FROM dbo.tbl_DBT_ProjectKPIs WHERE @ProjectID = ProjectID AND Status >0 AND MetricID  =1) AS kpidesc  --just get dev advance KPI to make the pivot work for locaitos with nothing done
									--CROSS JOIN (SELECT DISTINCT ProjectID, MetricID, SubtotalID = KPI_SubtotalID, KPIDescription
									--,RowNum = ROW_NUMBER() OVER (PARTITION BY ProjectID, MetricID,KPI_SubtotalID ORDER BY ProjectID, MetricID, KPI_SubtotalID  )   FROM dbo.tbl_DBT_ProjectKPIs 
									--WHERE ISNULL(EndDate,GETDATE())>= GETDATE() --AND KPI_SubtotalID IS NOT NULL 
									--AND Status >0) AS kpi

									WHERE date = @Date AND Shift = @Shift AND spl.ProjectID = @ProjectID
									) AS lcn
									FULL OUTER JOIN 
									(SELECT
										  -- Date 
												  --  , Shift
													--, BudgetCodeID
													 LocationCode 
													, LocationId 
													--, ProcessID
													--, ProjectID
													--, ProjectMask  -- 'Incoroporate ProjMaskMethod'
													--, StatisticCode
													--, StatisticId
													--, ReasonDescription
													--, ReasonId
													----, tbl.ActivityId 
													--, MaterialID
													,a.DataSource
													, EquipmentCode
													--, EquipmentId
													--,EquipTypeID 
													--, EquipTypeCode
													, EmployeeName
												   -- , OperatorId
													, MetricCode 
													, a.MetricId 
													--, MetricValue 
													, ActualValue 
													--, TargetValue 
													, a.SubtotalId
													, SubtotalCode 
													,UnitsCode
													,stJN.KPIDescription
													,SubtotalJNField  = CASE WHEN stJN.SubtotalID IS NOT NULL THEN  a.SubtotalId ELSE NULL END  --this decides whether to prepare the data to lower leve or not for joingin in corvu 
													, MaxDateTime
												 --   , OrderBy
									 --               , CrewId
													--,ActivityDesc
													--,ActivityId
											 FROM [dbo].[FN_KpiDefinitionsV3](@ProjectID , @Date, @Date,  @Shift,  'ips' ) AS a

								inner JOIN 
								(SELECT DISTINCT ProjectID, MetricID, SubtotalID = KPI_SubtotalID, KPIDescription
									,RowNum = ROW_NUMBER() OVER (PARTITION BY ProjectID, MetricID,KPI_SubtotalID ORDER BY ProjectID, MetricID, KPI_SubtotalID  )   FROM dbo.tbl_DBT_ProjectKPIs 
									WHERE --2020-09-02 on locals EndDate is '1900-01-01 00:00:00.000' dbo.fn_IsnullorEmpty( EndDate,GETDATE())>= GETDATE() --AND KPI_SubtotalID IS NOT NULL 
									 Status >0
									) AS stJN 
								ON a.ProjectID = stJN.ProjectID AND a.MetricId = stJN.MetricID 
								AND (a.SubtotalId = stJN.SubtotalID OR dbo.fn_IsnullorEmpty(stJN.SubtotalID,'') ='') --join on subtotals unless we don't mapp to this level.
								AND stJN.RowNum = 1

								--INNER JOIN (SELECT DISTINCT MetricID,ProjectID FROM dbo.tbl_DBT_ProjectKPIs WHERE Status = 1 ) AS projmapped
								--ON a.ProjectID = projmapped.ProjectID
								--AND a.MetricId = projmapped.MetricID

								--WHERE  --@EquipTypeCsv LIKE '%,'+ CAST( EquipTypeID  AS varchar ) + ',%'
								--AND @IsLocal = 1
								) AS tbl 
								ON lcn.LocationID = tbl.LocationId

								GROUP BY tbl.KPIDescription
										,tbl.SubtotalCode
										,tbl.UnitsCode
										,tbl.LocationCode
										,tbl.EmployeeName
										,tbl.UnitsCode
										,lcn.LocationCode
										, lcn.KPIDescription

								--SELECT * FROM [dbo].[tbl_SYS_KPI_Definitions]
								--SELECT * FROM dbo.tbl_DBT_ProjectKPIs WHERE ProjectID =236

end





-----*****************************--------
-- this is charge up compliance

	SELECT DISTINCT EquipmentID 
	,a.Operator
	INTO #EquipChageUpCheck
	FROM [dbo].View_ShiftSummary_ProdnData AS a
	LEFT JOIN dbo.tbl_DBT_Location AS lp 
			ON a.locationid = lp.locationid
			WHERE  (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
					AND a.ActivityReasonLinkID = 1603 -- Charge up shutdown check
					AND a.ProjectID = @ProjectID AND date = @Date AND shift = @Shift AND type = @Type
					--AND a.ActivityReasonLinkID IN (110,207,212,210,111,120,158) --face charging, drag cut, stripping, pops, misfire, u/h, d/h

	;WITH cte_PRDT
	AS (
		SELECT DISTINCT EquipmentID
			,a.OperatorName
			,Operator
			,EquipID
			,a.TaskDescription
			FROM [dbo].View_ShiftSummary_ProdnData  AS a
		LEFT JOIN dbo.tbl_DBT_Location AS lp 
			ON a.locationid = lp.locationid
		WHERE --PRDTHrs IS NOT NULL and
				 (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
					AND a.ProjectID = @ProjectID AND date = @Date AND shift = @Shift AND type = @Type
					AND a.ActivityReasonLinkID IN (110,207,212,210,111,120,158) --face charging, drag cut, stripping, pops, misfire, u/h, d/h

		GROUP BY EquipmentID,operatorname,Operator,EquipID,a.TaskDescription
		)

	SELECT SectionHeaderHTML ='Compliance'
,SectionHeaderShade = ''
,
	   GroupHeaderName = 'Charge Up Compliance'
	  ,GroupShadeColour = 'LightSteelBlue'

		,MessageDescription = EquipID + ' was used for ' + cte_PRDT.TaskDescription + ' by ' + cte_PRDT.OperatorName + ' and the shutdown form was not completed'
		,LineTextColour = 'Red'
	FROM cte_PRDT
	WHERE ((NOT EXISTS (SELECT EquipmentID FROM #EquipChageUpCheck t1 WHERE cte_PRDT.EquipmentID = t1.EquipmentID) /*(SELECT EquipmentID FROM cte_Prestart WHERE cte_PRDT.EquipmentID = cte_Prestart.EquipmentID)*/
					AND @ChargeUpCompliance =1)  --don't show compliance if equipment has been used previously
			OR				--or remove based on operator: 
						(NOT EXISTS (SELECT Distinct EquipmentID,t1.Operator FROM  #EquipChageUpCheck t1 WHERE cte_PRDT.EquipmentID = t1.EquipmentID AND cte_PRDT.Operator = t1.Operator)
						AND @ChargeUpCompliance =2))
	AND @Is24HrSummary = 0  --not shown on 24hr plan
	UNION ALL 
		SELECT SectionHeaderHTML ='Compliance'
,SectionHeaderShade = ''
,
		   GroupHeaderName = 'Charge Up Compliance'
	  ,GroupShadeColour = 'LightSteelBlue'

		,MessageDescription = EquipID + ' was used for ' + cte_PRDT.TaskDescription + ' by ' + cte_PRDT.OperatorName + ' and the shutdown form was completed'
		,LineTextColour = 'Green'
	FROM cte_PRDT
	WHERE ((EXISTS (SELECT EquipmentID FROM #EquipChageUpCheck t1 WHERE cte_PRDT.EquipmentID = t1.EquipmentID) /*(SELECT EquipmentID FROM cte_Prestart WHERE cte_PRDT.EquipmentID = cte_Prestart.EquipmentID)*/
					AND @ChargeUpCompliance =1)  --don't show compliance if equipment has been used previously
			OR				--or remove based on operator: 
						(EXISTS (SELECT Distinct EquipmentID,t1.Operator FROM  #EquipChageUpCheck t1 WHERE cte_PRDT.EquipmentID = t1.EquipmentID AND cte_PRDT.Operator = t1.Operator)
						AND @ChargeUpCompliance =2))
	AND @Is24HrSummary = 0  --not shown on 24hr plan


	DROP TABLE #EquipChageUpCheck
-----*****************************--------


-----*****************************--------
-- this is mobile refuge chamber check complaince - 24hrs not shift
IF @RefugeChamberComplaince = 1 BEGIN 
	SELECT DISTINCT a.OperatorName,
	a.Shift,
	lp.LocationDescription,
	a.TaskDescription
	INTO #MobileRefugeChamberCheck
	FROM (SELECT [ARID] = 1474) AS template 
	LEFT OUTER JOIN [dbo].View_ShiftSummary_ProdnData AS a
		ON template.ARID = a.ActivityReasonLinkID
		AND a.ProjectID = @ProjectID AND date = @Date 
	LEFT JOIN dbo.tbl_DBT_Location AS lp 
			ON a.locationid = lp.locationid
			AND  (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)
			WHERE -- (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					--OR @Is24HrSummary =1 --get all data for 24hr 
					--OR [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) = lp.PitID --or filter based on Pitid
					--OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
					--AND a.ActivityReasonLinkID = 1474 -- Mobile Refuge Chamber check
					--AND a.ProjectID = @ProjectID AND date = @Date 
					--AND 
					template.ARID = 1474

		SELECT SectionHeaderHTML ='Compliance'
,SectionHeaderShade = ''
,
		   GroupHeaderName = 'Refuge Chamber Checks'
	  ,GroupShadeColour = 'LightSteelBlue'

		,MessageDescription =  CASE 
								 WHEN TaskDescription IS NOT NULL 
									THEN LocationDescription + ' was checked by ' + OperatorName + ' on ' + Shift
									 ELSE 'No mobile refuge chambers have been inspected on either shift' 
								END                              
		,LineTextColour = CASE 
								 WHEN TaskDescription IS NOT NULL 
									THEN 'Green'
									 ELSE 'Red'
								END   
	FROM #MobileRefugeChamberCheck

	DROP TABLE #MobileRefugeChamberCheck
END 
-----*****************************--------

-----Peak Geo Sample table*****************************--------
IF @ProjectID = 259 BEGIN	
SELECT DISTINCT 
		b.LocationDescription, 
		a.Location,
		a.OperatorID,
		c.EmployeeName
INTO #LocationAreas
FROM dbo.tbl_DWH_iPlodStagingTableEdited AS a
	LEFT OUTER JOIN dbo.tbl_DBT_Location AS b 
		ON a.Location = b.LocationID
	LEFT OUTER JOIN dbo.tbl_DBT_Employees AS c
		ON a.OperatorID = c.EmployeeID
	WHERE a.projectid = @ProjectID 
		AND ActivityReasonID IN (112,113,1507,1508,1505,1638,1506,187)
		AND date = @Date 
		AND shift = @Shift
	ORDER BY b.LocationDescription, c.EmployeeName, a.Location, a.OperatorID

SELECT SectionHeaderHTML ='Geology'
,SectionHeaderShade = ''
,
   GroupHeaderName = 'Geo Samples'
	  ,GroupShadeColour = 'LightSteelBlue',
a.LocationDescription, 
		a.EmployeeName, 
		[Samples] = b.InputValue, 
		[IDs] = b.InputComment 
FROM #LocationAreas AS a 
	LEFT OUTER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS b 
		ON a.Location = b.Location
		AND a.OperatorID = b.OperatorID
		AND b.ProjectID = @ProjectID
		AND b.ActivityReasonID IN (112,113,1507,1508,1505,1638,1506,187)
		AND b.InputType = 'q' 
		AND b.InputID  = 1048
		AND b.Date = @Date
		AND b.Shift = @Shift
		--AND b.Shift = 'ds'
WHERE b.InputValue = 'Yes'

	DROP TABLE #LocationAreas
END 
-----Peak Geo Sample table End*****************************--------

	--twi dataset:
;WITH cteTWI AS	
	(	SELECT DATE
		,Shift 
		,[NumberOfTWIsCompleted]
		,[NumberOfTWIsChecked]
		,LocationId = Location
		, CheckedByName
		,OperatorID
		,NumberOfTasksCompleted
		,Type
		,a.ProjectID
		,lp.PitID
		--INTO #TWIs
		FROM [View_ShiftSummary_TWIHistory] AS a
			LEFT JOIN dbo.tbl_DBT_Location AS lp 
			ON a.location = lp.locationid
			WHERE  
				 a.ProjectID = @ProjectID
				AND Shift = @Shift
				AND Date = @Date
				AND dbo.FN_IsNullorEmpty(a.Type,'mining') LIKE 'mining%'
				AND @TWIsActive = 1
				AND @Is24HrSummary =0
)
SELECT DATE
		,Shift 
		,[NumberOfTWIsCompleted]
		,[NumberOfTWIsChecked]
		,LocationId 
		, CheckedByName
		,OperatorID
		,NumberOfTasksCompleted
		,Type
		,a.ProjectID
		INTO #TWIs
		FROM cteTWI AS a

			WHERE  (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					--OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = PitID --or filter based on Pitid
					OR PitId IS NULL)  --just get everything if no locaiton on the iplod data


	SELECT SectionHeaderHTML ='Compliance'
,SectionHeaderShade = ''
,
	   GroupHeaderName =  tbl.Group1
	  ,GroupShadeColour = 'LightSteelBlue',	
	--DISTINCT 
	Metric,Number,LineTextColour
	FROM (
	--this is count of TWIs being checked (or not checked):
		SELECT Group1 = 'Shiftboss Checks'
			,Metric = 'Number of ' + @TWIALIAS + 's checked by ' +ISNULL(a.CheckedbyName,'unknown')  -- @SupervisorName
			,Number = SUM(ISNULL(a.[NumberOfTWIsChecked], 0))
			,LineTextColour = 'Black'
			,Sort = 4
		FROM #TWIs AS a
		--LEFT JOIN (
		--				SELECT 1 AS jn
		--					,Pcent = CAST(SUM(CASE WHEN [NumberOfTWIsChecked] >0 AND CheckedByName = @SupervisorName THEN [NumberOfTWIsChecked] ELSE 0 END) AS FLOAT) / CAST(SUM(ISNULL([NumberOfTWIsCompleted],1)) AS FLOAT) 
		--				FROM #TWIs
		--					-- AND CheckedByName = @SupervisorName  took this out, currently may through false positives if they have not inputted their ID correctly
		--				) AS colour
		--						ON 1 = colour.jn
		WHERE a.ProjectID = @ProjectID
			--AND Shift = @Shift
			--AND Date = @Date
			AND a.[NumberOfTWIsChecked] > 0
			--2021-04-20 for PEA. show any checks, not necessarily just @supervisor AND CheckedByName = @SupervisorName
			GROUP BY a.CheckedbyName

		UNION ALL

		SELECT Group1 = 'Shiftboss Checks'
			,Metric =  'Number of ' + @TWIALIAS + 's Not checked by ' + @SupervisorName 
							-- @TWIALIAS + 's NOT CHECKED: ' + @SupervisorName
			,Number = SUM([NumberOfTWIsCompleted]) - SUM([NumberOfTWIsChecked])
			,LineTextColour = 'Black'--CASE WHEN CAST(SUM( [NumberOfTWIsChecked] ) AS FLOAT) / CAST(SUM(case when [NumberOfTWIsCompleted] =0 THEN 1 ELSE ISNULL([NumberOfTWIsCompleted],1) END) AS FLOAT) < 0.6 THEN 3 ELSE 0 END -- set at 60% requiring checks for now
		    ,Sort = 2
			-- WHEN SUM(ISNULL([NumberOfTWIsChecked],0)) / (SUM(ISNULL([NumberOfTWIsCompleted],1)) + SUM(ISNULL([NumberOfTWIsChecked],0)) ) < 0.5  THEN 3 ELSE 0 END 
		FROM #TWIs
		WHERE ProjectID = @ProjectID
			--AND Shift = @Shift
			--AND Date = @Date
			AND [NumberOfTWIsCompleted] > 0

		UNION ALL 

--this is count of people who have TWIs checked at some stage (or not)

		SELECT Group1 =  'Shiftboss Checks'
			,Metric = Msg
			, Number = SUm(CountOfPeople) --getting this from TWI dataset ... should be getting from activated people?? but should be getting tasks in this dataset (that don't have TWIs so should be safe(
			,LineTextColour = CASE WHEN sort=4 THEN 'Red' ELSE 'Black' end
			,Sort 
			FROM
					(SELECT Msg = CASE WHEN SUM(ISNULL([NumberOfTWIsChecked],0)) >0 THEN  'Number of Operators who had at least 1 ' + @TWIALIAS +' checked by ' + @SupervisorName
									ELSE 'Number of Operators who had no ' + @TWIALIAS +'s checked by a supervisor.' --2021-04-20. doesn't just have to be the supervisor check them!  + @SupervisorName 
									END
							,CountOfPeople = 1 --CASE WHEN SUM(ISNULL([NumberOfTWIsChecked],0)) > 0 THEN 1 ELSE 0 END
							,OperatorId 
							,Sort = CASE WHEN SUM(ISNULL([NumberOfTWIsChecked],0)) >0 THEN 3 ELSE 4 END
							FROM  #TWIs
							WHERE OperatorID <> ISNULL(@SupervisorId,0)
							GROUP BY OperatorId

						) AS tbl1
				GROUP BY Msg, SOrt

		) AS tbl
		WHERE sort >=3  -- remove or modify to change the message displyed
		ORDER BY Sort



DROP TABLE #TWIs





-- this is some missing prestarts ...


SELECT  EquipmentID
            ,PRDTHrs = ISNULL(PRDTHrs, 0) + ISNULL(OtherHrs, 0) 
            ,EmployeeName
            ,MinePointCode
            ,EquipId
            ,Date
            ,Shift
			,ips.LocationId
        INTO #ActiveEquip--#WorkHistory
        FROM [dbo].[FN_Prestarts_ActiveEquipment](@ProjectID, @Date, @Date, @Shift) AS ips
		INNER JOIN dbo.tbl_DBT_Location AS b ON b.LocationID = ips.LocationId
        WHERE ISNULL(PRDTHrs, 0) + ISNULL(OtherHrs, 0) > 0 --only get operators who have logged some time against this machine (had an instance of operator logging task by mistake)
		  AND (@TypeAliasMethod = 0   --no type alias used
                    OR --[dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type)
                    @TypeAliasPitId= b.PitID)
					AND tasktype = @TrueType
					--AND ty

SELECT  Company = 'pms'

            ,EmployeeID 

        ,AssetID = RTRIM(EquipID)
        ,pr.EquipmentID
     INTO #PrestartAuto
        FROM [dbo].[FN_Prestarts_iPlodPrestartNoDetail](@ProjectID, @Date, @Date, @Shift) as pr


SELECT DISTINCT SectionHeaderHTML ='Compliance'
,SectionHeaderShade = ''
,
   GroupHeaderName = 'Prestart Compliance'
	  ,GroupShadeColour = 'LightSteelBlue',
  [Message] = ISNULL(tbl1.EquipID,'unkownd equip') + ' was used for ' + CAST(tbl1.PRDTHrs AS VARCHAR(10)) + 'hrs by ' + ISNULL(tbl1.EmployeeName,'unknown operator') + ' and did not have a prestart recorded'
  ,LineTextColour ='red'

FROM (
SELECT a.EquipmentID,
       PRDTHrs=SUM(a.PRDTHrs),
       a.EmployeeName,
       a.MinePointCode,
       a.EquipID 
	FROM #ActiveEquip  AS a
	LEFT OUTER JOIN #PrestartAuto AS b
	ON b.EquipmentID = a.EquipmentID
	WHERE b.EmployeeID IS NULL 
	group BY a.EquipmentID,a.EquipID,a.EmployeeName,a.MinePointCode

) AS tbl1 



DROP TABLE #ActiveEquip
DROP TABLE #PrestartAuto


/*
	SELECT DISTINCT EquipmentID 
	,a.OperatorID
	INTO #EquipIplodPrestart 
	FROM [dbo].[FN_Prestarts_iPlodPrestarts](@ProjectID, @Date, @Date, @Shift) AS a
	LEFT JOIN dbo.tbl_DBT_Location AS lp 
			ON a.locationid = lp.locationid
			WHERE  (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data

	;WITH cte_PRDT
	AS (
		SELECT DISTINCT EquipmentID
			,EmployeeName
			,OperatorID
			,EquipID
			,PRDTHrs =SUM(PRDTHrs) --added sum becuase the source funciton now has locaiton
			-- ,OtherHrs is available in the FN ... for non PRDT Hrs
		FROM [dbo].[FN_Prestarts_ActiveEquipment](@ProjectID, @Date, @Date, @Shift) AS a
		LEFT JOIN dbo.tbl_DBT_Location AS lp 
			ON a.locationid = lp.locationid
		WHERE PRDTHrs IS NOT NULL
				AND (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
		GROUP BY EquipmentID,EmployeeName,OperatorID,EquipID
		)
	/*,cte_Prestart
	AS (
		SELECT EquipmentID
		FROM [dbo].[FN_Prestarts_iPlodPrestarts](@ProjectID, @Date, @Date, @Shift)
		)*/
	SELECT Group1 = 'Missing Prestarts'
		-- ,MessageDescription_v1 = EmployeeName + ' recorded Productive Time ('+CAST(PRDTHrs AS VARCHAR) +'hrs) in iPlod for ' +EquipID +' but no prestart was uploaded'
		,MessageDescription = EquipID + ' was used for ' + CAST(PRDTHrs AS VARCHAR) + 'hrs in iPlod data by ' + EmployeeName + ' but no prestart was uploaded'
		-- ,Operator =  EmployeeName
		,LineTextColour = 3
	FROM cte_PRDT
	WHERE ((NOT EXISTS (SELECT EquipmentID FROM #EquipIplodPrestart t1 WHERE cte_PRDT.EquipmentID = t1.EquipmentID) /*(SELECT EquipmentID FROM cte_Prestart WHERE cte_PRDT.EquipmentID = cte_Prestart.EquipmentID)*/
					AND @PrestartCompliance =1)  --don't show compliance if equipment has been used previously
			OR				--or remove based on operator: 
						(NOT EXISTS (SELECT Distinct EquipmentID,t1.OperatorID FROM #EquipIplodPrestart t1 WHERE cte_PRDT.EquipmentID = t1.EquipmentID AND cte_PRDT.OperatorID = t1.OperatorId)
						AND @PrestartCompliance =2))
	AND @Is24HrSummary = 0  --not shown on 24hr plan
	DROP TABLE #EquipIplodPrestart
	*/

IF @CheckiPLODBadData = 1
BEGIN
SELECT DISTINCT	SectionHeaderHTML ='System Info'
,SectionHeaderShade = ''
,
   GroupHeaderName = 'Potential Bad iPLOD Data'
	  ,GroupShadeColour = 'LightSteelBlue',

	FieldName = CASE WHEN a.OperatorID = -99 THEN 'Operator Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
					+ CASE WHEN a.Shift = 'XX' THEN ', Shift Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown')ELSE '' END
						+ CASE WHEN a.DetailId = '-99' THEN ', DetailId Missing,' ELSE '' END
						+ CASE WHEN a.EquipmentID = '-99' THEN ', EquipmentID Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
						+ CASE WHEN a.ActivityReasonID = '-99' THEN ', ActivityReasonID Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
						--+ CASE WHEN a.StartTime = '' THEN 'StartTime,' ELSE '' END
						+ CASE WHEN a.StartTime = '9999' THEN ', StartTime Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
						+ CASE WHEN a.EndTime = '9999' THEN ', EndTime Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown')ELSE '' END
						+ CASE WHEN a.InputID = '0' THEN ', InputID Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END

	,DebugInfo = 'Please contact admin.webbar with this information: DataStoreID:' +a.DataStoreID +', OperatorId:' + CAST(a.OperatorID AS varchar)+', Date:'+CAST(Date AS varchar) + '; Shift:' + [Shift] + '; DetailId = '+CAST(DetailID AS varchar)
		,LineTextColour = 'red'

FROM tbl_DWH_iPlodStagingTableEdited AS a
	LEFT JOIN dbo.tbl_DBT_Location AS lp
		ON a.Location = lp.LocationID
		LEFT JOIN dbo.tbl_DBT_Employees AS e
		ON a.OperatorID =e.EmployeeID

WHERE (a.ProjectID = @ProjectID OR a.ProjectID = -99)
AND @Date = Date
AND (@Shift = Shift OR @Is24HrSummary  =1)
		AND (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
AND (a.OperatorID = -99 OR Shift = 'XX' OR DetailId = -99 OR a.EquipmentID = -99 OR a.ActivityReasonID = -99 OR a.StartTime = '9999' OR a.EndTime = '9999' 
 OR a.InputID = 0)


 END








-- this is some hazard stuff
	-- ProjectID, Date, Shift, Group1, Metric, LineTextColour, Description, Comments
	--2020-09-09 Replaced this from a direct IPS query to from the view
	SELECT	tbl2.SectionHeaderHTML,
            tbl2.SectionHeaderShade,
            tbl2.GroupHeaderName,
            tbl2.GroupShadeColour,
            tbl2.Shift,
            tbl2.Metric,
            tbl2.Time,
            tbl2.Operator,
            tbl2.EquipID,
            tbl2.Location,
            tbl2.[TWI Question],
            tbl2.Answer,
            tbl2.Comments,
            tbl2.[Other Info]

			FROM (
	SELECT    SectionHeaderHTML ='Shift Information'
,SectionHeaderShade = ''
,
	GroupHeaderName = 'Hazards'
	  ,GroupShadeColour = 'LightSteelBlue',
	--  tbl.Group1,
      tbl.Shift,
      tbl.Metric,
      tbl.Time,
      tbl.Operator,
      tbl.EquipID,
      tbl.Location,
      tbl.[TWI Question],
      tbl.Answer,
      tbl.Comments,
      tbl.[Other Info],
	  [ShowFlag] = CASE WHEN @ShowResolvedHazards = 0 AND Metric = 'Resolved Hazards' THEN 0
					ELSE 1 END 
	  FROM (
	SELECT *
	FROM dbo.[View_ShiftSummary_TWIHazards]
		WHERE 
			date = @date
			AND shift = @shift
			AND ProjectID = @ProjectID
				AND ISNULL(FeedbackAdvice,'') ='' 

	) AS tbl
		) AS tbl2
		WHERE tbl2.ShowFlag = 1

		ORDER BY Metric, Shift, Operator


	-- prestart faults
	SELECT   SectionHeaderHTML ='Shift Information'
,SectionHeaderShade = ''
, GroupHeaderName = 'Prestart Faults'
	  ,GroupShadeColour = 'LightSteelBlue'

		,NotificationText AS 'Fault Type'
		-- ,Shift
		,Operator
		,TIME
		,EquipID
		-- ,DisplayOrder
		,[Prestart Question]
		,UPPER(Answer) AS 'Answer'
		,UPPER(Comments) AS 'Comments'
	FROM dbo.[View_ShiftSummary_PrestartHistory] AS a
	LEFT JOIN dbo.tbl_DBT_Location AS lp
		ON a.LocationId = lp.LocationID

	WHERE Include = 1
		AND Date = @Date
		AND a.ProjectID = @ProjectID
		AND (Shift = @Shift OR @Is24HrSummary =1)
		--AND InputType LIKE 'Q%' -- only question inputs, no meter readings
			and (istruefault = 1 or IsGeneralComment = 1) --2021-07-07
		and (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
	ORDER BY notificationtext
		,Shift
		,Operator
		,EquipID
		,DisplayOrder

	--...................................................some shiftboss stuff ................  DYNAMIC SQL!!!!
	/*********
	try new pivot method for shiftboss stuff (delete the dynamic stuff once it is working

	 EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 242, @Date = '2020-04-08', @Shift = 'DS'
	 , @Type = 'Mining', @UserId = 137, @Mode = '', @SupervisorId = 9634, @CrewId = 1

		 EXEC [dbo].[SP_ShiftSummary_SummaryofResults_DataV] @ProjectID = 259, @Date = '2020-04-08', @Shift = 'DS'
	 , @Type = 'Mining1', @UserId = 137, @Mode = '', @SupervisorId = 9634, @CrewId = 1
	**********/
	SELECT    SectionHeaderHTML ='Shift Information'
,SectionHeaderShade = ''
, GroupHeaderName = tbl.Group1
	  ,GroupShadeColour = 'LightSteelBlue',
	  TableType = 'pivot',
	 -- tbl.Group1,
     /* Row1=tbl.Shift,
     Row2= tbl.TIME,
     Row3= tbl.NAME,
     -- tbl.CompKey,
     Row4= tbl.Location,
     Column1= tbl.ForeLabel,*/
	 --what about this:
	 --if input count is too big then switcht the pivot:
	 Column1=  IIF(inputCnt > 10,tbl.Shift,tbl.ForeLabel),  
     Column2= IIF(inputCnt > 10,tbl.TIME,NULL)
    , Column3= IIF(inputCnt > 10,tbl.NAME,NULL)
     -- tbl.CompKey,
     ,Column4= IIF(inputCnt > 10,tbl.Location,NULL)
     ,Row1= IIF(inputCnt > 10,tbl.ForeLabel,tbl.Shift)
	 ,Row2= IIF(inputCnt > 10,NULL,tbl.TIME)
	 ,Row3= IIF(inputCnt > 10,NULL,tbl.NAME)
	, Row4= IIF(inputCnt > 10,NULL,tbl.Location)
   ,  Qty= tbl.InputValue,

	  --don't have the comments?! would need to handle them into a column, maybe by union?
	  --tbl.Comments,
      --tbl.ActivityReasonLinkID,
     ColumnOrder = IIF(inputCnt > 10,DENSE_RANK() OVER ( ORDER BY tbl.SHift,tbl.TIME,tbl.NAME,tbl.Location ) ,tbl.DisplayOrder)

					--IIF(inputCnt > 10,DENSE_RANK() OVER (PARTITION BY tbl.SHift,tbl.TIME,tbl.NAME,tbl.Location ORDER BY tbl.SHift,tbl.TIME,tbl.NAME,tbl.Location ) ,tbl.DisplayOrder)
	,TableFootnote = ''--'This is footnote for users, note this is only for dummy data'
	--INTO #ShiftbossData
	FROM (
		SELECT 
			-- ProjectID
			-- ,Date
			Group1 = TaskDescription
			,Shift
			,TIME = StartTime
			-- ,Operator   
			,NAME = OperatorName
			,CompKey

			,Location = CASE WHEN s.PitID = 0 THEN '' ELSE  ISNULL(s.PitDescription, '')+' - ' END +  Location 

			,ForeLabel = CASE WHEN ForeLabel = '' THEN 'No Label' ELSE  ISNULL(ForeLabel,'No Label') END
			,InputValue = InputValue + ISNULL(AftLabel, '') -- put the aftlabel beside the value (could put it into the ForeLabel instead?)
			,Comments = CommentsCheck

			,ActivityReasonLinkID

			,DisplayOrder
			,InputCnt 
			-- ,InputGroup
		FROM [dbo].[FN_ShiftSummary_SupervisorStuff](@ProjectID,@Date, @Date,@Shift) AS s
		WHERE 
			 MostRecent = 1 --some tasks only interested in most recent value (eg stockpile status)

			--2019-02-02
				AND (@TypeAliasMethod = 0   --no type alias used
					OR @Is24HrSummary =1
					OR @TypeAliasPitId = s.PitID --or filter based on Pitid
					OR s.PitID IS NULL 
					OR isnull(@TypeAliasPitId,0) = 0)  --get data if there is no location field on the iplodata. better way of filtering this might be on SupervisorID ...?
--find out how many inputs there are on each task


)AS tbl


ORDER BY tbl.Location,tbl.NAME,tbl.DisplayOrder

/*******
dynaic sql for shiftboss (delete after happy wth the pivot method
*******/
/*	SELECT    GroupHeaderName = tbl.Group1
	  ,GroupShadeColour = 'LightSteelBlue',
	 -- tbl.Group1,
      tbl.Shift,
      tbl.TIME,
      tbl.NAME,
      tbl.CompKey,
      tbl.Location,
      tbl.ForeLabel,
      tbl.InputValue,
      tbl.Comments,
      tbl.ActivityReasonLinkID,
      tbl.DisplayOrder
	INTO #ShiftbossData
	FROM (
		SELECT 
			-- ProjectID
			-- ,Date
			Group1 = TaskDescription
			,Shift
			,TIME = StartTime
			-- ,Operator   
			,NAME = OperatorName
			,CompKey
			-- ,DataStoreID 
			-- ,ProcessID
			-- ,Process
			-- ,aretc.ActivityDescription AS 'Activity'
			-- ,TaskDescription
			-- ,EquipID
			-- ,EquipmentID
			-- ,Material
			-- ,LocationID
			,Location = CASE WHEN lp.PitID = 0 THEN '' ELSE  ISNULL(pt.PitDescription, '')+' - ' END +  Location 
			-- ,l.SourceCode
			-- ,s.LocDest
			-- ,ISNULL(s.Destination, 0) AS 'Destination'
			-- ,InputID
			-- ,InputType
			,ForeLabel = CASE WHEN ForeLabel = '' THEN 'No Label' ELSE  ISNULL(ForeLabel,'No Label') END
			,InputValue = InputValue + ISNULL(AftLabel, '') -- put the aftlabel beside the value (could put it into the ForeLabel instead?)
			,Comments = CommentsCheck
			-- ,ConSUMableProjectID
			-- ,supervisorcomments
			-- ,ConSUMableID
			-- ,Offsider
			-- ,GroundCond
			-- ,RelatedEquipment
			-- ,RelatedEquipmentID
			-- ,ClientDelay
			-- ,DamageCheck
			-- ,DetailID
			-- ,EndTime
			-- ,Profile
			-- ,Sequence
			,ActivityReasonLinkID
			-- ,RecordTimestamp
			-- ,InputTimestamp
			-- ,ReviewTrap
			,DisplayOrder
			-- ,InputGroup
		FROM [dbo].[View_ShiftSummary_SupervisorStuff] AS ss
	LEFT JOIN dbo.tbl_DBT_Location AS lp
		ON ss.LocationId = lp.LocationID
	LEFT JOIN tbl_DBT_Pit AS pt
		ON lp.PitId = pt.PitId
		WHERE ss.ProjectID = @ProjectID
			AND Date = @Date
			AND (Shift = @Shift OR @Is24HrSummary =1) 
			AND MostRecent = 1 --some tasks only interested in most recent value (eg stockpile status)

			--2019-02-02
				AND (@TypeAliasMethod = 0   --no type alias used
					OR @Is24HrSummary =1
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitID IS NULL )  --get data if there is no location field on the iplodata. better way of filtering this might be on SupervisorID ...?

		) AS tbl
		ORDER BY ActivityReasonLinkID, DisplayOrder

	--setting up for dynamic columns... (currently based on ForeLabel ...
	DECLARE @pivotColsSboss AS NVARCHAR(MAX)
		,@pivotColsMaxSboss AS NVARCHAR(MAX)
		,@querySboss AS NVARCHAR(MAX)
		,@ActivityReasonCur AS CURSOR
		,@ActivityReasonLinkID AS INT;

	SET @ActivityReasonCur = CURSOR FOR SELECT DISTINCT ActivityReasonLinkID FROM #ShiftbossData;

	OPEN @ActivityReasonCur
    FETCH NEXT FROM @ActivityReasonCur INTO @ActivityReasonLinkID

    WHILE @@FETCH_STATUS = 0 
    BEGIN

		-- set dynamic columns from #EquipmentList temp table
		SET @pivotColsSboss = STUFF((
					SELECT DISTINCT ',' + QUOTENAME(ForeLabel) -- + ' (' + AftLabel + ')') 
					FROM #ShiftbossData c WHERE ActivityReasonLinkID = @ActivityReasonLinkID
					FOR XML PATH('')
						,TYPE
					).value('.', 'NVARCHAR(MAX)'), 1, 1, '');
		-- col names with Max around them
		SET @pivotColsMaxSboss = STUFF((
					SELECT DISTINCT ', MAX(' + QUOTENAME(ForeLabel) + ') AS ' + QUOTENAME(ForeLabel)
					FROM #ShiftbossData c WHERE ActivityReasonLinkID = @ActivityReasonLinkID
					FOR XML PATH('')
						,TYPE
					).value('.', 'NVARCHAR(MAX)'), 1, 1, '');
		-- set query based on dynamic columns 
		SET @querySboss = 'SELECT 
							   GroupHeaderName
							   ,GroupShadeColour
							   ,Shift
							   ,Time
							   ,Name
							   ,Location
							   ,' + @pivotColsSboss + '  
							   ,Comments
							   -- ,CASE WHEN CorrectBtks = TotBkts THEN 1 WHEN CorrectBtks - TotBkts BETWEEN -1 AND 1 THEN 2 ELSE 3 END AS LineTextColour  no colour code AS yet
						   FROM (
								SELECT 
									GroupHeaderName
									,GroupShadeColour
									,Shift
									,Time
									,Name
									,Location
									,' + @pivotColsMaxSboss + '
									,Comments
								FROM (
									SELECT 
										GroupHeaderName
										,GroupShadeColour
										,Shift
										,Time
										,Name
										,Location
										,' + @pivotColsSBoss + '
										,Comments
										,CompKey                                 
									FROM #ShiftbossData AS d
									PIVOT 
										(
											MAX(InputValue)
											FOR ForeLabel IN (' + @pivotColsSBoss + ')
										) p 
									WHERE ActivityReasonLinkID = ' + CAST(@ActivityReasonLinkID AS VARCHAR) + '
									GROUP BY 
										GroupHeaderName
										,GroupShadeColour
										,Shift
										,Time
										,Name
										,Location
										,CompKey
										,Comments
										,' + @pivotColsSBoss + '
								) AS tbl1  
								GROUP BY 
									GroupHeaderName
									,GroupShadeColour
									,Shift
									,Time
									,Name
									,Location
									,Comments
							) AS tbl2  
							ORDER BY 
								GroupHeaderName
								,Time';

		-- PRINT (@querySboss)
		EXECUTE (@querySboss)

		FETCH NEXT FROM @ActivityReasonCur INTO @ActivityReasonLinkID
    END

    CLOSE @ActivityReasonCur
    DEALLOCATE @ActivityReasonCur

	DROP TABLE #ShiftbossData
*/


		--Truck Tonnes for THA 2019-01-10
IF CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'Analysis_TruckTonnes'), 0) AS int) = 1  --Add a new line to DBT_WebbarConfigs to make it appear on other projects
BEGIN 
	SELECT  SectionHeaderHTML ='Shift Information'
,SectionHeaderShade = ''
	  , GroupHeaderName = 'Truck Tonnes'
	  ,GroupShadeColour = 'LightSteelBlue',
	ProjectID

		,'Truck Tonnes' AS 'Metric'
		,'Black' AS 'LineTextColour' -- 0 = no colour, 1= green, 2 = orange, 3 =red

		,CAST(Ore AS VARCHAR) AS 'Ore Tonnes'
		,CAST(Waste AS VARCHAR) AS 'Waste Tonnes'
		,'' AS 'Comments'
	FROM (
		SELECT DISTINCT ProjectID
			,Date
			,Shift
			,SUM(Ore) AS Ore
			,SUM(Waste) AS Waste
		FROM (
			SELECT a.ProjectID
				,Date
				,Shift
				,CASE 
					WHEN m.MaterialID = 11
						THEN SUM(CAST(a.InputValue AS DECIMAL))
					ELSE 0
					END AS 'Ore'
				,CASE 
					WHEN m.materialid = 12
						THEN SUM(CAST(a.InputValue AS DECIMAL))
					ELSE 0
					END AS 'Waste'
			FROM dbo.syn_DWH_iPlodStagingTable AS a
			LEFT JOIN dbo.tbl_DBT_Materials AS m
				ON a.Material = m.MaterialOpID

			WHERE a.ActivityReasonId = 116
				AND a.InputType like 'stat%'
				AND a.InputID = 18
				AND a.ProjectID = @ProjectID
				AND a.Date = @Date
				AND a.Shift = @Shift 
				AND @Is24HrSummary =0
			GROUP BY a.ProjectID
				,Date
				,Shift
				,a.InputID
				,a.InputType
				,m.materialid
			) AS tbl1
		GROUP BY ProjectID
			,Date
			,Shift
			--,ore
			--,waste 
		) AS tbl2

END 	
-- END Truck Tonnes for THA 2019-01-10


	--this is some checking on Agi vs Spray
	SELECT  SectionHeaderHTML ='Shift Information'
,SectionHeaderShade = ''
	  , GroupHeaderName = 'Shotcreting'
	  ,GroupShadeColour = 'LightSteelBlue',
	ProjectID

		,'Batch vs Spraying' AS 'Metric'
		,CASE --WHEN (Spray = 0 OR Spray IS NULL) THEN 0
			WHEN agi = spray
				THEN 'Green'
			ELSE 'Orange'
			END AS 'LineTextColour' -- 0 = no colour, 1= green, 2 = orange, 3 =red
		,Location AS 'Location'
		,CAST(Spray AS VARCHAR) AS 'Sprayed Vol.'
		,CAST(Agi AS VARCHAR) AS 'Batched Vol.'
		,'' AS 'Comments'
	FROM (
		SELECT DISTINCT ProjectID
			,Date
			,Shift
			,location
			,SUM(Agi) AS Agi
			,SUM(Spray) AS Spray
		FROM (
			SELECT a.ProjectID
				,Date
				,Shift
				-- (CAST(CONVERT(FLoat,b.Value) AS VARCHAR)+)
				,l.LocationCode AS 'Location'
				,CASE 
					WHEN a.InputID = 27
						THEN SUM(CAST(a.InputValue AS DECIMAL))
					ELSE 0
					END AS 'Spray'
				,CASE 
					WHEN a.InputID = 78
						THEN SUM(CAST(a.InputValue AS DECIMAL))
					ELSE 0
					END AS 'Agi'
			FROM dbo.syn_DWH_iPlodStagingTable AS a
			LEFT JOIN dbo.tbl_DBT_Materials AS m
				ON a.Material = m.MaterialOpID
			LEFT JOIN dbo.tbl_DBT_Location AS l
				ON a.Location = l.LocationID
			LEFT JOIN dbo.tbl_SYS_Equipment AS eq
				ON a.EquipmentID = eq.EquipmentCodeID
			WHERE a.ActivityReasonId IN (138, 394, 280)
				AND a.InputType = 'stat'
				AND a.InputID IN (27, 78)
				AND a.ProjectID = @ProjectID
				AND a.Date = @Date
				AND a.Shift = @Shift -- AND @ProjectID = 208  --only used at CAR for now

				AND @Is24HrSummary =0
				--2019-08-05
				AND (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @TypeAliasPitId = l.PitID --or filter based on Pitid
					OR l.PitId IS NULL)  --just get everything if no locaiton on the iplod data

			GROUP BY a.ProjectID
				,Date
				,Shift
				,EquipmentID
				,a.ActivityReasonId
				,a.InputID
				,a.InputType
				,l.LocationCode
				,eq.EquipmentCode
				,eq.EquipmentCodeID
			) AS tbl1
		GROUP BY ProjectID
			,Date
			,Shift
			,Location
		) AS tbl2
		-- WHERE (Agi + Spray ) > 0
		-- add other Analysis selects below here...
END

ELSE 	IF (@Type in ('Maint','Elec'))
	BEGIN



IF @CheckiPLODBadData = 1
BEGIN
SELECT DISTINCT	
   GroupHeaderName = 'Potential bad iPLOD data'
	  ,GroupShadeColour = 'LightSteelBlue'

	,FieldName = CASE WHEN a.OperatorID = -99 THEN 'Operator Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
					+ CASE WHEN a.Shift = 'XX' THEN ', Shift Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown')ELSE '' END
						+ CASE WHEN a.DetailId = '-99' THEN ', DetailId Missing,' ELSE '' END
						+ CASE WHEN a.EquipmentID = '-99' THEN ', EquipmentID Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
						+ CASE WHEN a.ActivityReasonID = '-99' THEN ', ActivityReasonID Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
						--+ CASE WHEN a.StartTime = '' THEN 'StartTime,' ELSE '' END
						+ CASE WHEN a.StartTime = '9999' THEN ', StartTime Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END
						+ CASE WHEN a.EndTime = '9999' THEN ', EndTime Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown')ELSE '' END
						+ CASE WHEN a.InputID = '0' THEN ', InputID Missing on Task #'+CAST(DetailID AS varchar) +' for ' + ISNULL(e.EmployeeName,'unknown') ELSE '' END

	,DebugInfo = 'Please contact admin.webbar with this information: DataStoreID:' +a.DataStoreID +', OperatorId:' + CAST(a.OperatorID AS varchar)+', Date:'+CAST(Date AS varchar) + '; Shift:' + [Shift] + '; DetailId = '+CAST(DetailID AS varchar)
		,LineTextColour = 'red'

FROM tbl_DWH_iPlodStagingTableEdited AS a
	LEFT JOIN dbo.tbl_DBT_Location AS lp
		ON a.Location = lp.LocationID
		LEFT JOIN dbo.tbl_DBT_Employees AS e
		ON a.OperatorID =e.EmployeeID

WHERE (a.ProjectID = @ProjectID OR a.ProjectID = -99)
AND @Date = Date
AND (@Shift = Shift OR @Is24HrSummary  =1)
		AND (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
AND (a.OperatorID = -99 OR Shift = 'XX' OR DetailId = -99 OR a.EquipmentID = -99 OR a.ActivityReasonID = -99 OR a.StartTime = '9999' OR a.EndTime = '9999' 
 OR a.InputID = 0)



 END



-- this is some hazard stuff Maint type only. 
	-- ProjectID, Date, Shift, Group1, Metric, LineTextColour, Description, Comments
	SELECT    GroupHeaderName = Group1
	  ,GroupShadeColour = 'LightSteelBlue',
	 -- tbl.Group1,
      tbl.Shift,
      tbl.Metric,
      tbl.Time,
      tbl.Operator,
      tbl.EquipID,
      tbl.Location,
      tbl.[TWI Question],
      tbl.Answer,
      tbl.Comments,
      tbl.[Other Info] FROM (
	SELECT DISTINCT 'Maintenance Hazards' AS 'Group1'
		,s.Shift
		,CASE 
			WHEN haz.InputValue <> 238
				THEN '_Outstanding Hazards'
			ELSE 'Resolved Hazards'
			END AS 'Metric'
		-- ie further action <> no ... allows for addition of different allocations for yes (eg urgent, not urgent etc)
		,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
		,e.EmployeeName AS 'Operator'
		-- ,s.DataStoreID +'_'+CAST(s.DetailID AS VARCHAR)  AS CompKey
		,eq.EquipmentCode AS EquipID
		,lp.LocationCode AS [Location]		
		-- i.DisplayOrder,
		,i.ForeLabel + ' #' + CAST(s.Sequence + 1 AS VARCHAR) AS 'TWI Question'
		,h.HazardDescription AS 'Answer'
		-- '' AS intolerablevalue,
		-- 1  AS 'Include'
		,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') + '  ' + ISNULL(com.InputValue, '') AS 'Comments'
		,CASE 
			WHEN haz.InputValue <> 238
				THEN 'Further Action Req: ' + ISNULL(futh.AttributeDescription, '--not answered--')
			ELSE 'Action Taken: ' + ISNULL(act.InputValue, '--not answered--')
			END AS 'Other Info'
	FROM [dbo].[tbl_DWH_iPlodStagingTableEdited] AS s
	LEFT JOIN
		-- dbo.[tbl_SYS_Questions] AS q ON s.InputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
		dbo.tbl_DBT_Employees AS e
		ON s.OperatorID = e.EmployeeID
	LEFT JOIN dbo.tbl_SYS_Equipment AS eq
		ON s.EquipmentID = eq.EquipmentCodeID
	LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
		ON i.ActReasonLinkID = s.ActivityReasonID
			AND s.InputID = i.InputID
			AND i.ProjectID = 1
			AND s.InputType = i.InputType
	INNER JOIN dbo.tbl_SYS_Hazards AS h
		ON s.InputValue = h.HazardID
	LEFT JOIN dbo.tbl_DBT_Location AS lp
		ON s.Location = lp.LocationID
	INNER JOIN [dbo].[syn_DWH_iPlodStagingTable] AS haz
		ON s.DetailID = haz.DetailID
			AND s.DataStoreID = haz.DataStoreID
			AND s.Sequence = haz.Sequence
			AND haz.InputType = 'AttrList'
			AND haz.InputID = 93
	LEFT JOIN [dbo].[syn_DWH_iPlodStagingTable] AS com
		ON s.DetailID = com.DetailID
			AND s.DataStoreID = com.DataStoreID
			AND s.Sequence = com.Sequence
			AND com.InputType = 'AttrInput'
			AND com.InputID = 85
	LEFT JOIN [dbo].[syn_DWH_iPlodStagingTable] AS act
		ON s.DetailID = act.DetailID
			AND s.DataStoreID = act.DataStoreID
			AND s.Sequence = act.Sequence
			AND act.InputType = 'AttrInput'
			AND act.InputID = 86
	LEFT JOIN (
		SELECT DetailID
			,DatastoreID
			,Sequence
			,AttributeDescription
		FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
		INNER JOIN dbo.tbl_DBT_AttributeProjectLink AS ap
			ON s.InputType = 'AttrList'
				AND s.InputID = 93
				AND s.InputValue = ap.AttributeID
		) AS futh
		ON s.DetailID = futh.DetailID
			AND s.DataStoreID = futh.DataStoreID
			AND s.Sequence = futh.Sequence
	WHERE 
		-- s.InputType like 'Q%' AND
		s.InputType = 'AttrList'
		AND s.InputID IN (SELECT ID FROM [dbo].[FN_SplitString](@HazardAttrTypes))
		AND ISNULL(s.InputValue, '') <> ''
		AND s.inputValue <> 26 -- 26 is a value called No Hazard
		AND s.Date = @Date
		AND s.ProjectID = @ProjectID
		AND s.ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@TWIARIDs))
		AND (s.Shift = @Shift OR @Is24HrSummary =1)
		AND (@TWIsActive = 1  OR @ProjectID = 259)  --put the hazards up for PEak, just not the TWI checks
		--2019-02-02
				AND (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID)  --or filter based on Pitid
		AND s.Type = 'maint'
	) AS tbl
		ORDER BY Metric, Shift, Operator


	-- prestart faults - all Types
	SELECT    GroupHeaderName = 'All Prestart Faults'
	  ,GroupShadeColour = 'LightSteelBlue'

		,NotificationText AS 'Fault Type'
		-- ,Shift
		,Operator
		,TIME
		,EquipID
		-- ,DisplayOrder
		,[Prestart Question]
		,UPPER(Answer) AS 'Answer'
		,UPPER(Comments) AS 'Comments'
	FROM dbo.[View_ShiftSummary_PrestartHistory] AS a
	LEFT JOIN dbo.tbl_DBT_Location AS lp
		ON a.LocationId = lp.LocationID

	WHERE Include = 1
		AND Date = @Date
		AND a.ProjectID = @ProjectID
		AND (Shift = @Shift OR @Is24HrSummary =1)
		AND InputType LIKE 'Q%' -- only question inputs, no meter readings
		AND (@TypeAliasMethod = 0 --AND s.Type = 'mining')  --no type alias used ... but only get mining, not maint ...?
					OR @Is24HrSummary =1 --get all data for 24hr 
					OR @TypeAliasPitId = lp.PitID --or filter based on Pitid
					OR lp.PitId IS NULL)  --just get everything if no locaiton on the iplod data
	ORDER BY notificationtext
		,Shift
		,Operator
		,EquipID
		,DisplayOrder



END






END
GO
PRINT N'Refreshing [dbo].[View_KPINew_StatV_PerfectDay_v3]'
GO
EXEC sp_refreshview N'[dbo].[View_KPINew_StatV_PerfectDay_v3]'
GO
PRINT N'Refreshing [dbo].[View_KPINew_StatV_Consumables_v3]'
GO
EXEC sp_refreshview N'[dbo].[View_KPINew_StatV_Consumables_v3]'
GO
PRINT N'Refreshing [dbo].[View_ShiftSummary_TimeLine]'
GO
EXEC sp_refreshview N'[dbo].[View_ShiftSummary_TimeLine]'
GO
PRINT N'Altering [dbo].[udf_GetCalcFunctions_ForIplod]'
GO
ALTER function [dbo].[udf_GetCalcFunctions_ForIplod](@ProjectID int =0
, @WebCalcFunction varchar(250) = '') --use @WebCalcFunction='get_all' to show all in a table
RETURNS table 
AS
/* 
SELECT * FROM [dbo].[udf_GetCalcFunctions_ForIplod](194,'get_all')


 CHECK ON JSON VALIDITY:  (MUST CHECK BEFORE GLIVE IF CHANGING THE AttrJson field
    SELECT WebCalcFunction
              ,AppCalcFunction
              ,ISJSON(AttrJSON) FROM [dbo].[udf_GetCalcFunctions_ForIplod](194,'get_all')
              where AttrJson <>''



used to map the web based calcfunctions into calc strings for iplod

            ts 2020-05-27 .... create
            ts 2020-06-03 ... added roughy for the display calc for prestarts
                                                            ...make bigger variable @WebCalcFunction
            ts 2020-06-05 ... fix TKm calc
            ts 200-06-08 ... added GS drillm
            ts 2020-06-11 ... fix prestart one (was missign closing bracket)
                                                            ... make the prestart one an IF
            ts 202-06-15 ... fix the NOW() to come from task header
            ts 2020-06-16 ... value ones should not have equals sign
            ts 2020-06-23 ... void the prestart for NO_EQUIP
            ts 2020-06-30 ... added the bogging ones
            ts 2020-07-10 ... remove the cons calcs
            ts 2020-07-16 ... add the summary screen Trk Count
            ts 2020-07-27 ... added some summary calcs
            ts 2020-07-29 ... removed the drillm ones for now
                                                            ... added emp stats TKMS
            ts 2020-7-31 ... added Rb drillng summary
            ts 2020-08-04 ... fix quotes on text Header attributes
                                                ... add field for nominating isnulls
            ts 2020-08-07 ... added some summary ones
            ts 2020-08-08 ... dont use the word "calc" when referencign other statcalcs into formulas (have stripped this off for iplod)
                                                            ... add teh Attr JSON defaults.
                                                            ... add @versionMin
                                                            shift the background min version back
            ts 2020-09-10 ... added reamers in twice. don't use "" in default for charge m
                                                            ... DC cahrgem match the format of the others
            ts 2020-11-10 ... add PDdrillm ... this should jus tsum across input groups inside a task
            ts 2020-11-18 ... add webCalcString, WriteZero
            ts 2020-12-04 ... add truck calc.
            ts 2021-02-04 ... add trucking materials on summary 
            ts 2021-02-08 ... try no " in trucking summary
                                                            ... works! remove the " from other attributes
                                                            ... put " back into attributes json
			CA 2021-02-11 ... Added IsGeneric
			CA 2021-02-15 Add bog total and truck weight total.
			CA 2021-02-17 ... Added total tonnes outside group
			ts 2021-02-23 ... filter calc
			ts 2021-05-27 ... add display
			CA 2021-05-27 ... Add lv and CT display
			CA 2021-06-02 ... Add ST to CT 
			ts 2021-06-02 ... fix the bad syntax on equiptype displays
							... add IT
			ts 2021-06-04 ... add NotLvs
			ts 2021-06-09 ... add All Bar No Equip
							 also exclude NOEQuip from the NotLV one 
			CA 2021-09-14 ... Added Associated Attr Drill m Calc
      ts 2021-11-05 ... added display for admin user only.
                    ... fixed teh logic
                    ... use OperatorId because that is already an attribute on the task header. although in versions above v275, the app puts "EmployeeId" into the header as well
			CA 2022-01-04 ... Fixed Stat16ToTruck not working for prod task. Brackets!
			CA 2022-01-18 ... Added reamer meters only
			CA 2022-01-28 ... Added DisplayCalc for SL
      ts 2022-03-10 ... drillm calc.
      ts 2022-03-14 ... minor edits on the summary drillm If calcs
                    ... remove the = in front of the aggregate * fark!
                    ... add quotes into the sum calcs
                    ... mismatched scring quotes on raisebore
      ts 2022-03-17 ... summary calc
      ts 2022-03-25 ... add duration stat.
                    ... amend the duration stat.
                    ... /60
                    .... another summary calc
       ts 2022-04-07 ... don't display pd and uj summary cacls
       ts 2022-04-08 ... some shouldn't gp into the web
	   CA 2022-04-14 ... Added Displaycalc_PRDT 
     ts 2022-04-21 ... add material summary by one
     ts 2022-04-29 ... add some more summary By ones
     ts 2022-06-21 ... add display calc for UJ vs UL
     ts 2022-07-04 ... add AttrInputTemps for MICO average hole temperature in device.
                    ... finesse it
                    ... amend again
    ts 2022-07-28 ... add QrGenerator
    ts 2022-09-05 ... add tilda to the cons drillm to see wtf is going on.
    ts 2022-10-04 ... OperatorId = EmployeeId. Ian dropped off OperatorId somehow we think.
    ts 2022-10-06 ... change data type to avoid conversions

DO NOT USE = with * , # and other aggregates
YOU NEED TO QUOTE THE VARIABLE, eg:  *IF("{TaskHeader|||EquipTypeCode}"="CB",



            to do: shift to a table
            these fields are intended for new improved web recalc proc (in here  [dbo].[SP_ShiftSummary_RecalcEngineV2] )
                        ,WebCalcExecString 
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb 

			Notes:
				You Cannot have tabs in Calc strings. It breaks the calculation. Tabs are put in with manual returns in a single ' ' string. 
				So break the string and use + to combine on new lines.

*/

RETURN 
(
/*all currently mapped into the web (and not in app yet)
SELECT DISTINCT calcfunction,inputtype, AppCalcFunction FROM dbo.tbl_DBT_ActReasonInputLink as a
left join [dbo].[udf_GetCalcFunctions_ForIplod](1,'get_all') as b  on a.calcfunction = b.WebCalcFunction
WHERE ISNULL(CalcFunction,'') <>''  AND ExcludeFromWeb <> 1
and b.AppCalcFunction is null
--and calcfunction like 'bog%'
ORDER BY calcfunction
*/

SELECT tbl.WebCalcFunction
      ,AppCalcFunction  --= case WHEN CHARINDEX('=',left(tbl.AppCalcFunction,3) ) > 0 AND CHARINDEX('=',left(tbl.AppCalcFunction,3) ) > 0 
      ,tbl.AttrJSON
      ,tbl.MinVersionSupported
      ,tbl.WebCalcExecString
      ,tbl.WriteZeroValue
      ,tbl.MinActiveDateForWeb
      FROM 

(
SELECT WebCalcFunction = 'TruckTonnes'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_17|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                        ,AttrJSON = ''  -- can whack isnulls handling for missing input into here (calc will use this value if other input is not found
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = 'Stat_17 * Material_SG * Equip_LoadFactor'
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION all
SELECT WebCalcFunction = 'TruckDistance'
                        ,AppCalcFunction='{HaulRoute_1|||Distance}'  --this is attribute "distance" hanging off input "haulRoute_1"
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = 'HaulRoute_Distance'
                        ,WriteZeroValue = 1 
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL
SELECT WebCalcFunction = 'TruckTrkCount'
                        ,AppCalcFunction='*IF({AttrInput_106|||InputValue}>5,1,0)'  --this is to count loaded truck weights. hopefully through the groups!
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = 'TruckTrkCount'
                        ,WriteZeroValue = 1 
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION all
SELECT WebCalcFunction = 'TruckTKMs'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_36|||InputValue} * {Stat_18|||InputValue}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = 'StatCalc_36 * StatCalc_18'  --need to keep the "Calc" bit in here so we know to do this on the second pass.
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL
SELECT WebCalcFunction = 'Displaycalc_PRDT'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                              '=IF({ActivityID}=1 ,false,true)' 
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = 'StatCalc_36 * StatCalc_18'  --need to keep the "Calc" bit in here so we know to do this on the second pass.
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_PrestartTrigger'   --for showing or hiding the "please do a prestart' message. false = shown!, true = hidden
                                                                                                --if the last presart done was by you, and it was done within the last 15hrs, then don't need to do annother one 
                        ,AppCalcFunction=  --'=IF(AND(DATEDIFFMINS({TaskHeader|||DateOfLastPrestart}) < 900,{TaskHeader|||EmployeeId}={TaskHeader|||OpIdOfLastPrestart},{TaskHeader|||PrestartIsVoid}=1),true,false)'  
                                           '=IF(OR(AND(DATEDIFFMINS({TaskHeader|||DateOfLastPrestart}) < 900,{TaskHeader|||EmployeeId}={TaskHeader|||OpIdOfLastPrestart}),{TaskHeader|||PrestartIsVoid}=1),true,false)'  --hidden if done recently by this person or PrestartIsVoid for this machine 
                                                                                    --'=IF({TaskHeader|||NeedsPrestart} = 1 , false, true)':"DateOfLastPresart","Value":"'+ ISNULL(dt.Value,'0') +'"},{"Key":"OpIdOfLastPresart"
                        ,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
--duration stat. put onto all tasks, hidden.
SELECT WebCalcFunction = 'Duration'   --for showing or hiding the "please do a prestart' message. false = shown!, true = hidden
                                                                                                --if the last presart done was by you, and it was done within the last 15hrs, then don't need to do annother one 
                        ,AppCalcFunction=  --'=IF(AND(DATEDIFFMINS({TaskHeader|||DateOfLastPrestart}) < 900,{TaskHeader|||EmployeeId}={TaskHeader|||OpIdOfLastPrestart},{TaskHeader|||PrestartIsVoid}=1),true,false)'  
                                           --'=DATEDIFFMINS({TaskHeader|||TaskStartTime},{TaskHeader|||TaskEndTime})'
                                           '={TaskHeader|||DurationMins}/60'  

                        ,AttrJSON = ''    
                        ,MinVersionSupported = 20220315  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2030-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_OnlyUJ' --126   --for showing input used for UJ. false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF({TaskHeader|||EquipTypeId}=126 ,false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2030-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_UJOrPD' --126,113   --for showing input used for PD or UJ false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF(OR({TaskHeader|||EquipTypeId}=126 ,{TaskHeader|||EquipTypeId}=113 ,{TaskHeader|||EquipTypeId}=130 ),false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_UJOrPDOrCB' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF(OR({TaskHeader|||EquipTypeId}=126 ,{TaskHeader|||EquipTypeId}=113 ,{TaskHeader|||EquipTypeId}=130 ,{TaskHeader|||EquipTypeId}=91     ),false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_UJOrUL' --126,113   --for showing input used for PD or UJ false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF(OR({TaskHeader|||EquipTypeId}=126 ,{TaskHeader|||EquipTypeId}=57 ,{TaskHeader|||EquipTypeId}=130 ),false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_OnlyLV' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF({TaskHeader|||EquipTypeId}=110 ,false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_OnlyCTOrST' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF(OR({TaskHeader|||EquipTypeId}=95  ,{TaskHeader|||EquipTypeId}=78  ,{TaskHeader|||EquipTypeId}=120    ),false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_OnlyIT' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF({TaskHeader|||EquipTypeId}=107  ,false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_OnlyCT' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF({TaskHeader|||EquipTypeId}=95  ,false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_ITOrFL' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF(OR({TaskHeader|||EquipTypeId}=107  ,{TaskHeader|||EquipTypeId}=21       ),false,true)'  
										-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_OnlySL' --136   --for showing input used for ShaftLiner false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF({TaskHeader|||EquipTypeId}=136 ,false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_NotLVs' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF(OR({TaskHeader|||EquipTypeId}=110 ,{TaskHeader|||PrestartIsVoid}=1) ,true,false)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_HideFromNoEquip' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction= '=IF({TaskHeader|||PrestartIsVoid}=1 ,true,false)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DisplayCalc_ShowForAdminOnly' --126,113   --for showing input used for PD or UJ or Ujs or CB false = shown!, true = hidden
                                                                                               
						,AppCalcFunction='=IF({TaskHeader|||EmployeeId}=-1 ,false,true)'  --'=IF({TaskHeader|||EmployeeID}=-1 ,false,true)'  
											-- '!*IF(OR({TaskHeader|||EquipTypeCode}="RB8",{TaskHeader|||EquipTypeCode}="RB12",{TaskHeader|||EquipTypeCode}="RB10"),{Stat_6|||InputValue},0)'
						,AttrJSON = ''    
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
--these likely just used for troublehooting
SELECT WebCalcFunction = 'DisplayCalc_DateOfLastPrestart'   --for saving to device that a prestart has been done now
                        ,AppCalcFunction='{TaskHeader|||DateOfLastPrestart}' 
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
                        UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_MinsSinceLastPrestart'   --for saving to device that a prestart has been done now
                        ,AppCalcFunction='=DATEDIFFMINS({TaskHeader|||DateOfLastPrestart})' 
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  
SELECT WebCalcFunction = 'DisplayCalc_OpIdOfLastPrestart'   --for saving to device that a prestart has been done now
                        ,AppCalcFunction='{TaskHeader|||OpIdOfLastPrestart}' 
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL  

--saveback
SELECT WebCalcFunction = 'SaveBackCalc_DateOfLastPrestart'   --for saving to device that a prestart has been done now
                        ,AppCalcFunction='{TaskHeader|||TaskStartTime}'  
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL
SELECT WebCalcFunction = 'SaveBackCalc_OpIdOfLastPrestart'   --for saving to device that this chap was the person who done the prestart just now
                        ,AppCalcFunction='{TaskHeader|||EmployeeId}'     
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL
SELECT WebCalcFunction = 'Cons_Drillm_Bolts'  --add this one back. use wildcard to avoid having to nominate all inputs
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                              '*({ConsArea_%|||InputValue} * {ConsArea_%|||ReqDrillm})'
                                              /*working:
                                              [{"Key":"ReqDrillm","Value":2.600}] << exists on the consArea inputs
                                              '{HaulRoute_1|||Distance}'  --this is attribute "distance" hanging off input "haulRoute_1"


                                              */

                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20220228  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up


--bogging statcalcs (standard ones)
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesFaceBackfill'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={1_3_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesFaceSP'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={1_1_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL 
SELECT WebCalcFunction = 'BogTonnesFaceTrk'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={1_2_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesOrePassCrusher'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={5_6_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesSPBackfill'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={2_3_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesSPBund'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={2_4_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesSPCrusher'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={2_6_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesSPOrePass'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={2_7_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesSPSP'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={2_1_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesSPTrk'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={2_2_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesStopeBackfill'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={4_3_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesStopeSP'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={4_1_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'BogTonnesStopeTrk'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={4_2_BogStat_16|||InputValue} * {Material_1|||SG} * {TaskHeader|||LoadFactor}'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

--bogging Count All buckets
UNION ALL 
SELECT WebCalcFunction = 'Bog_TotalBuckets'
		,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
							'={1_3_BogStat_16|||InputValue} + {1_1_BogStat_16|||InputValue} + {1_2_BogStat_16|||InputValue} + {5_6_BogStat_16|||InputValue} + {2_3_BogStat_16|||InputValue} + {2_4_BogStat_16|||InputValue} + {2_6_BogStat_16|||InputValue} + {2_7_BogStat_16|||InputValue} + {2_1_BogStat_16|||InputValue} + {2_2_BogStat_16|||InputValue} + {4_3_BogStat_16|||InputValue} + {4_1_BogStat_16|||InputValue} + {4_2_BogStat_16|||InputValue}'
		,AttrJSON = '[{"Key":"{1_3_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{1_1_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{1_2_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{5_6_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{2_3_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{2_4_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{2_6_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{2_7_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{2_1_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{2_2_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{4_3_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{4_1_BogStat_16|||InputValue}","Value":'+'0'+'}' +
					',{"Key":"{4_2_BogStat_16|||InputValue}","Value":'+'0'+'}'
					+']' 	
		,MinVersionSupported = 20200601
		,WebCalcExecString = ''
       ,WriteZeroValue = 0
        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

		UNION ALL 
-- Truck Total Weight for the manual empty and loaded setup
SELECT WebCalcFunction = 'TruckTotalWeight'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                          '={AttrInput_106|||InputValue} - {AttrInput_105|||InputValue}'
                        ,AttrJSON = ''  -- can whack isnulls handling for missing input into here (calc will use this value if other input is not found
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = '{Attr_106|||InputValue} - {Attr_105|||InputValue}'
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up


UNION ALL 
-- Sum the total truck weights inside the group outside on stat 18. 
SELECT WebCalcFunction = 'Sum_TruckTonnes'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                          '= {Stat_19|||InputValue}'
                        ,AttrJSON = ''  -- can whack isnulls handling for missing input into here (calc will use this value if other input is not found
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = '= {StatCalc_19|||InputValue}'
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

	UNION ALL 
-- Drill Steel to hole depth calc
SELECT WebCalcFunction = 'DrillSteel_HoleDepth'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                          '={AttrList_437|||AssociatedNumeral}'
                        ,AttrJSON = ''  -- can whack isnulls handling for missing input into here (calc will use this value if other input is not found
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = '={AttrList_437|||AssociatedNumeral}'
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up





--drillm ones
--DDDrillm

--removed for now, should test them all anyway. the app currently doesn't compute DDDrillmNoReam when we have no Stat_148
UNION ALL 
SELECT WebCalcFunction = 'DDDrillm'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_2|||InputValue} * ( {Stat_4|||InputValue} + {Stat_5|||InputValue} + {Stat_5|||InputValue} + {Stat_148|||InputValue} )'
                                                                                    ,AttrJSON = '[{"Key":"{Stat_148|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                                                                    --+',{"Key":"TKMsPerActiveShift","Value":"' + '4' +'"}'
                                                                                                                                    +']' 
                        ,MinVersionSupported = 20200805  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL 
SELECT WebCalcFunction = 'DDDrillm_ProbeHoles'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_2|||InputValue} * ( {Stat_4|||InputValue} + {Stat_5|||InputValue} + {Stat_5|||InputValue} + {Stat_148|||InputValue} ) + {Stat_52|||InputValue} '
                                    ,AttrJSON = '[{"Key":"{Stat_148|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                                                                    --+',{"Key":"TKMsPerActiveShift","Value":"' + '4' +'"}'
                                                                                                                                    +']'  
                        ,MinVersionSupported = 20200805  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DDDrillmNoReam'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_2|||InputValue} * ( {Stat_4|||InputValue} + {Stat_148|||InputValue} )'
                                    ,AttrJSON = '[{"Key":"{Stat_148|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                                                                    --+',{"Key":"TKMsPerActiveShift","Value":"' + '4' +'"}'
                                                                                                                                    +']'  
                        ,MinVersionSupported = 20200805  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'DDDrillmOnlyReamer'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_2|||InputValue} * ( {Stat_5|||InputValue})'
                                    ,AttrJSON = '[{"Key":"{Stat_148|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                                                                    --+',{"Key":"TKMsPerActiveShift","Value":"' + '4' +'"}'
                                                                                                                                    +']'  
                        ,MinVersionSupported = 20200805  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL 
SELECT WebCalcFunction = 'DCChargem'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '={Stat_14|||InputValue} * ( {Stat_13|||InputValue} +  {Stat_90|||InputValue} ) '
                                    ,AttrJSON = '[{"Key":"{Stat_90|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                                                                    +',{"Key":"{Stat_13|||InputValue}","Value":' + '0' +'}'
                                                                                                                                    +']'   
                        ,MinVersionSupported = 20200805  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up



UNION ALL 
SELECT WebCalcFunction = 'Sum_Stat6'  --this one just sums Drillm inside the hole group task for PD
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '= {Stat_6|||InputValue} '
                                                                                    ,AttrJSON = ''
                        ,MinVersionSupported = 20200805  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up






UNION ALL 
SELECT WebCalcFunction = 'RBDrillm'
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                                                                    '=ABS( {Stat_94|||InputValue} -  {Stat_93|||InputValue} )'
                                                                                    ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up







--specials for summary screen totals:
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat17'
                        ,AppCalcFunction= '!*{Stat_17|||InputValue}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_SumOre_Stat17'
                        ,AppCalcFunction=-- '!*{Stat_17|||InputValue}'
                                                                                    '!*IF({Material_1|||MatSysId}=11,{Stat_17|||InputValue},0)'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_SumWaste_Stat17'
                        ,AppCalcFunction= --'!*{Stat_17|||InputValue}'
                                                                                    '!*IF({Material_1|||MatSysId}=12,{Stat_17|||InputValue},0)'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat37'
                        ,AppCalcFunction= '!*{Stat_37|||InputValue}'
                        ,AttrJSON = ''
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat17_AlwaysShow'
                        ,AppCalcFunction='*{Stat_17|||InputValue}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat16'
                        ,AppCalcFunction= '!*{Stat_16|||InputValue}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat16ToTruck'
                        ,AppCalcFunction= '!*({1_2_BogStat_16|||InputValue}+{4_2_BogStat_16|||InputValue}+{2_2_BogStat_16|||InputValue})'   
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat6_PD' --2022-04-07
                        ,AppCalcFunction= '!*IF("{TaskHeader|||EquipTypeCode}"="PD",{Stat_6|||InputValue},0)'  --should be STatCalc?
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat6_UJ'--2022-04-07
                        ,AppCalcFunction= '!*IF("{TaskHeader|||EquipTypeCode}"="UJ",{StatCalc_6|||InputValue}+{Stat_6|||InputValue},0)'   --should be STatCalc?
                        ,AttrJSON = '[{"Key":"{Stat_6|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                       +',{"Key":"{StatCalc_6|||InputValue}","Value":'+'0'+'}' 
                                                                                                                                    +']'  
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat6_CB'
                        ,AppCalcFunction= '!*IF("{TaskHeader|||EquipTypeCode}"="CB",{StatCalc_6|||InputValue}+{Stat_6|||InputValue},0)'   --should be STatCalc?
                        ,AttrJSON =  '[{"Key":"{Stat_6|||InputValue}","Value":'+'0'+'}'  --stat148 often not included in the task, so get default here
                                                                                       +',{"Key":"{StatCalc_6|||InputValue}","Value":'+'0'+'}' 
                                                                                                                                    +']'  
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up

UNION ALL 
SELECT WebCalcFunction = 'Summary_Sum_Stat6_RB'
                                    --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                        ,AppCalcFunction= '!*IF(OR("{TaskHeader|||EquipTypeCode}"="RB8","{TaskHeader|||EquipTypeCode}"="RB12","{TaskHeader|||EquipTypeCode}"="RB10"),{Stat_6|||InputValue},0)'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven
 
 --"summary By" ones
 /*
tilda ~ at front, groups by the parameter (eg location) first at the top level, then shows forelable of all relevant stats underneath.
no tilda does the opposite
 */
 UNION ALL 
SELECT WebCalcFunction = 'SummaryBy_Location'
                                    --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                        ,AppCalcFunction= '~{Location_1|||InputValue}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20220301 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2040-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven
  UNION ALL 
SELECT WebCalcFunction = 'SummaryBy_Equip'
                                    --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                        ,AppCalcFunction= '~{TaskHeader|||EquipmentID}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20220301 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2040-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven
   
     
   UNION ALL 
SELECT WebCalcFunction = 'SummaryBy_Material'
                                    --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                        ,AppCalcFunction= '~{Material_1|||InputValue}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20220301 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2040-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven   
                            UNION ALL --REVERSE them
                          SELECT WebCalcFunction = 'SummaryBy_Location_StatsFirst'
                                                              --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                                                  ,AppCalcFunction= '{Location_1|||InputValue}'
                                                  ,AttrJSON = '' 
                                                  ,MinVersionSupported = 20220301 
                                                  ,WebCalcExecString = ''
                                                  ,WriteZeroValue = 1
                                                  ,MinActiveDateForWeb = '2040-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven
                            UNION ALL 
                          SELECT WebCalcFunction = 'SummaryBy_Equip_StatsFirst'
                                                              --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                                                  ,AppCalcFunction= '{TaskHeader|||EquipmentID}'
                                                  ,AttrJSON = '' 
                                                  ,MinVersionSupported = 20220301 
                                                  ,WebCalcExecString = ''
                                                  ,WriteZeroValue = 1
                                                  ,MinActiveDateForWeb = '2040-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven
                             
                               
                             UNION ALL 
                          SELECT WebCalcFunction = 'SummaryBy_Material_StatsFirst'
                                                              --need to have quotes "" around the text Attributes from the task header if they are trying to match another text string in the formula
                                                  ,AppCalcFunction= '{Material_1|||InputValue}'
                                                  ,AttrJSON = '' 
                                                  ,MinVersionSupported = 20220301 
                                                  ,WebCalcExecString = ''
                                                  ,WriteZeroValue = 1
                                                  ,MinActiveDateForWeb = '2040-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven   
                                   
   
   
   
   
   
   --operator prody ones:
UNION ALL 
SELECT WebCalcFunction = 'Summary_EmpStats_TKMPerShiftTrend'
                        ,AppCalcFunction= '!{TaskHeader|||TKMsPerActiveShift}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_EmpStats_CBDrillmPerShiftTrend'
                        ,AppCalcFunction= '!{TaskHeader|||CBDrillmPerShift}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_EmpStats_UJDrillmPerShiftTrend'
                        ,AppCalcFunction= '!{TaskHeader|||UJDrillmPerShift}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_EmpStats_PDDrillmPerShiftTrend'
                        ,AppCalcFunction= '!{TaskHeader|||PDDrillmPerShift}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up
UNION ALL 
SELECT WebCalcFunction = 'Summary_EmpStats_BogtPerShiftTrend'
                        ,AppCalcFunction= '!{TaskHeader|||BogtPerActiveShift}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200805 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up


-- Generic Employee Check
UNION ALL  
SELECT WebCalcFunction = 'Summary_Emp_IsGeneric'   --for showing or hiding the "please do a prestart' message. false = shown!, true = hidden
								--if the last presart done was by you, and it was done within the last 15hrs, then don't need to do annother one 
		,AppCalcFunction=  --'=IF(AND(DATEDIFFMINS({TaskHeader|||DateOfLastPrestart}) < 900,{TaskHeader|||EmployeeId}={TaskHeader|||OpIdOfLastPrestart},{TaskHeader|||PrestartIsVoid}=1),true,false)'  
							'=IF({TaskHeader|||IsGeneric} = 1,false,true)'  --hidden if done recently by this person or PrestartIsVoid for this machine 
							--'=IF({TaskHeader|||NeedsPrestart} = 1 , false, true)':"DateOfLastPresart","Value":"'+ ISNULL(dt.Value,'0') +'"},{"Key":"OpIdOfLastPresart"
		,AttrJSON = '' 	
		,MinVersionSupported = 20200601 
		,WebCalcExecString = ''
		,WriteZeroValue = 0
        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up




--count aggregate example (could feed into weighted average

UNION ALL 
SELECT WebCalcFunction = 'Summary_Count_Stat17'
                        ,AppCalcFunction='!#{Stat_17|||InputValue}'        
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20200601 
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up



--filter calcs (apply as calc functions into list inputs)
--note, any of these that need to be applied to paramters, are done directly in [dbo].[udf_GetTaskDetails_ForIplod] for now, instead of mapping through here. double check the formatting of the ones in there before copying this one for normal inputs

UNION ALL 
SELECT WebCalcFunction = 'FilterCalc_LocationParams'
                        ,AppCalcFunction='WHERE ({Location_1|||LocnParamCsv} LIKE {Location_1|||LocnParam1}  OR  {Location_1|||LocnParamCsv} LIKE {Location_1|||LocnParam2} OR {Location_1|||LocnParamCsv} LIKE {Location_1|||LocnParam3} ) '        
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20210220
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up


UNION ALL 
SELECT WebCalcFunction = 'QrGenerator'
                        ,AppCalcFunction='~{"InputValue":"{TaskHeader|||TaskHeaderId}","InputLabel":"You witnessed this task {TaskHeader|||SelectDescription} for this person {TaskHeader|||EmployeeName} at this time {TaskHeader|||TaskStartTime}."}'
                        ,AttrJSON = '' 
                        ,MinVersionSupported = 20220701
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 0
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up






-- https://help.syncfusion.com/windowsforms/calculation-engine/supported-formulas/statistical

UNION ALL 
SELECT WebCalcFunction = 'AttrInputTemps'  --add this one back. use wildcard to avoid having to nominate all inputs
                        ,AppCalcFunction=--'~'+  --tilda aborts teh actual calc (still renders teh calculation down to components
                                              --this didn't work'= AVERAGE({AttrInput_%|||InputValue})'--  * {ConsArea_%|||ReqDrillm})'
                                              --wildcard isn't working 
                                              '#({AttrInput_%|||InputValue} ) '  --try # (count?)
                                            --  try this fucker: also wildcard won't work on v291
                                         --nah, can't make it work, tried:
                                          --=COUNT( {AttrInput_518|||InputValue},...
                                          --#( {AttrInput_518|||InputValue},...
                                         --'=AVERAGE( {AttrInput_518|||InputValue},	{AttrInput_519|||InputValue},	{AttrInput_520|||InputValue},	{AttrInput_521|||InputValue},	{AttrInput_522|||InputValue},	{AttrInput_523|||InputValue},	{AttrInput_524|||InputValue},	{AttrInput_525|||InputValue},	{AttrInput_526|||InputValue},	{AttrInput_527|||InputValue},	{AttrInput_528|||InputValue},	{AttrInput_529|||InputValue},	{AttrInput_530|||InputValue},	{AttrInput_531|||InputValue},	{AttrInput_532|||InputValue},	{AttrInput_533|||InputValue},	{AttrInput_534|||InputValue},	{AttrInput_535|||InputValue},	{AttrInput_536|||InputValue},	{AttrInput_537|||InputValue},	{AttrInput_538|||InputValue},	{AttrInput_539|||InputValue},	{AttrInput_540|||InputValue},	{AttrInput_541|||InputValue},	{AttrInput_542|||InputValue},	{AttrInput_543|||InputValue},	{AttrInput_544|||InputValue},	{AttrInput_545|||InputValue},	{AttrInput_546|||InputValue},	{AttrInput_547|||InputValue},	{AttrInput_548|||InputValue},	{AttrInput_549|||InputValue},	{AttrInput_550|||InputValue},	{AttrInput_551|||InputValue},	{AttrInput_552|||InputValue},	{AttrInput_553|||InputValue},	{AttrInput_554|||InputValue},	{AttrInput_555|||InputValue},	{AttrInput_556|||InputValue},	{AttrInput_557|||InputValue},	{AttrInput_558|||InputValue},	{AttrInput_559|||InputValue},	{AttrInput_560|||InputValue},	{AttrInput_561|||InputValue},	{AttrInput_562|||InputValue},	{AttrInput_572|||InputValue},	{AttrInput_573|||InputValue},	{AttrInput_574|||InputValue},	{AttrInput_575|||InputValue},	{AttrInput_576|||InputValue},	{AttrInput_577|||InputValue},	{AttrInput_581|||InputValue},	{AttrInput_582|||InputValue},	{AttrInput_583|||InputValue},	{AttrInput_584|||InputValue},	{AttrInput_585|||InputValue},	{AttrInput_586|||InputValue},	{AttrInput_587|||InputValue},	{AttrInput_588|||InputValue},	{AttrInput_589|||InputValue},	{AttrInput_590|||InputValue},	{AttrInput_591|||InputValue},	{AttrInput_592|||InputValue},	{AttrInput_593|||InputValue},	{AttrInput_594|||InputValue},	{AttrInput_595|||InputValue},	{AttrInput_596|||InputValue},	{AttrInput_597|||InputValue},	{AttrInput_598|||InputValue},	{AttrInput_599|||InputValue},	{AttrInput_600|||InputValue},	{AttrInput_601|||InputValue},	{AttrInput_602|||InputValue},	{AttrInput_603|||InputValue},	{AttrInput_604|||InputValue},	{AttrInput_605|||InputValue},	{AttrInput_606|||InputValue},	{AttrInput_607|||InputValue},	{AttrInput_608|||InputValue},	{AttrInput_609|||InputValue},	{AttrInput_610|||InputValue},	{AttrInput_611|||InputValue},	{AttrInput_612|||InputValue},	{AttrInput_613|||InputValue},	{AttrInput_614|||InputValue},	{AttrInput_615|||InputValue},	{AttrInput_616|||InputValue},	{AttrInput_617|||InputValue},	{AttrInput_618|||InputValue},	{AttrInput_619|||InputValue})'
                                          
                                          /*working:
                                              [{"Key":"ReqDrillm","Value":2.600}] << exists on the consArea inputs
                                              '{HaulRoute_1|||Distance}'  --this is attribute "distance" hanging off input "haulRoute_1"


                                              */

                        ,AttrJSON = '' 
                        ,MinVersionSupported =  20220228  
                        ,WebCalcExecString = ''
                        ,WriteZeroValue = 1
                        ,MinActiveDateForWeb = '2020-11-18'  --manipulate this for keeping out of the web calc engine if it is not proven up


            ) AS tbl

WHERE (WebCalcFunction =@WebCalcFunction OR @WebCalcFunction ='get_all')
--ditch this and handle with MinVersionSupported AND (tbl.AppCalcFunction <> '' OR WebCalcExecString



--eg statcalc: ={TruckCount_1|||InputValue} * {Location_1|||GramsOrePerM3} * {TaskHeader|||VehicleBucketVolumeM3}
--eg using calcfucntino field to control display: =IF(DATEDIFFMINS({TaskHeader|||PreStartLast}) > 360, true, false)


                        /*
                        ! instead of = ... don't show the input if the calc returns null or zero
                        @                                             ... don't show the input if the cal returns null (will still show a zero)
                        #                                              ... aggregate ... count of nonzero values
                        *                                               ... aggregate SUM
                        '~'+  --tilda aborts teh actual calc (still renders teh calculation down to components

                        from the design doco:
                        The StatCalc input type (1700) specifically uses its CalcString to store a formula, which is used to perform a
calculation based on the InputValue or Attributes of other entries.
The formula engine is the SyncFusion.Calculate module.
Full details of the support capabilities can be found at this link :-
https://help.syncfusion.com/windowsforms/calculation-engine/overview
As with any formula, they are made up of operators, and values/variables.
The operators are those supported by SyncFusion (see link above).
The variables are those derived from :-
• taskHeader.Attributes ,
• taskDetail.InputValue,
• taskDetail.Attributes.
Attributes are key/value (string) pairs defined against :-
• WorkType,
• Employee,
• Equipment
• EquipmentActivity,
• Input,
• UIGroupGroupDetail (Lookups)
and are loaded as JSON blobs from the database into the AttributesJson string property.
TaskHeader.Attributes are derived from the selected :-
• WorkType attributes, and
• Employee attributes, and
• Equipment attributes, and
• EquipmentActivity attributes, and
• Predefined (hard-coded) values (for ‘TaskHeader’ key) :-
o TaskStartTime (e.g. {TaskHeader|||TaskStartTime})
o DateTime.Today (e.g. {TaskHeader|||DateTime.Today})
o DateTime.Yesterday (e.g. {TaskHeader|||DateTime.Yesterday})
o DateTime.Tomorrow (e.g. {TaskHeader|||DateTime.Tomorrow})
o DateTime.Now (e.g. {TaskHeader|||DateTime.Now})
n.b. changing Equipment / EquipmentActivity resets the available attributes.
n.b.b. If defining an attribute value for Date or DateTime, it is strongly recommended that you use the
formats “dd-MMM-yyyy” or “dd-MM-yyyy HH:mm:ss” respectively.
TaskDetail.Attributes are derived from :-
• Input attributes (on constructions),
• UIGroupGroupDetail attributes (when lookup selected),
The format used to define a variable in an equation is “{Area|||Key}”, where :-
• Area can be :-
o ‘TaskHeader’ (literal string) – to reference TaskHeader attributes, or
o InputMatchId – to reference an input/taskDetail for the task.
• Key can be :-
o ‘InputValue’ (literal string) – to reference the TaskDetail.InputValue, which is really only
relevant for numeric based results (e.g. TruckCount),
o AttributeKey – the key value of the attribute for
n.b. Area ‘TaskHeader’ should only every have Key’s that represent attributes bound to the TaskHeader,
since the TaskHeader has NO InputValue.
Examples might be :-
• {TaskHeader|||VehicleBucketVolumeM3} – which looks for a ‘VehicleBucketVolumeM3’ key in the
taskHeader.Attributes,
• {Location_1|||GramsOrePerM3} – which looks for an ‘GramsOrePerM3’ key in the ‘Location_1’ input,
• {TruckCount_1|||InputValue} – which looks at the InputValue in the ‘TruckCount_1’ input.
So a StatCalc control for ‘Total Grams Of Ore At Location’ might look like :-
“={TruckCount_1|||InputValue} * {Location_1|||GramsOrePerM3} * {TaskHeader|||VehicleBucketVolumeM3}”
The engine works by looking for changes to InputValue’s to any part of a defined CalcString in the task.
If detected, the CalcString is evaluated, and all variables are derived (with issues defaulting to zero), at
which point the resulting formula is either :-
• Passed into the CalcQuickBase.ParseAndCompute() method for derivation as a decimal result, which
is saved onto the InputValue for the StatCalc taskDetail, or
• Saved directly (as is) into the InputValue IF the formula starts with a tilde (~).
~ (tilde) = void actual calculation of the formula.
Custom formulas include :-
• DATEDIFFMINS(dateTime) – where dateTime can be a variable, and this dateTime is compared to
now. Dates in the past compared to now give a positive (+ve) minutes difference value.
• ?
StatCalcSaveBack (1701) and Input.CalcString
A specially defined StatCalc (1700) input can allow for calculations to be saved back into attributes on the
users device. The purpose of this mechanism is to allow the device to capture and utilise data on future
tasks when no access to sync data is available. These internal StatCalcSaveBack (1701) controls are :-
• derived in code (on device) from a standard StatCalc input,
• hidden from the user,
• automatically derived whenever a variable they contain is triggered,
• automatically saved if the attribute value changes.
• are saved back to the server along with all other task details.
Specifying a StatCalc with the ForeLabelHtml as a variable is the trigger to the system seeing it as a
StatCalcSaveback.
For example, if a StatCalc has ForeLabelHtml = {Equipment|||SaveBackTest}, then the StatCalc CalcString is
utilised to derive a value, and the system will automatically save the calculation value onto an attribute
called ‘SaveBackTest’ on the Equipment object.
The FieldType variable definition {key|||value} supports the following keys :-
• Equipment, where value is the attribute key to update with the CalcString value, or
• EquipmentActivity, where value is the attribute key to update with the CalcString value, or
• Employee, where value is the attribute key to update with the CalcString value, or
• WorkType, where value is the attribute key to update with the CalcString value, or
• A UIGroupGroup Lookup, where the specified key is the InputMatchId of the input/taskDetail to find
on the task. The taskDetail.InputValue is the TextId (primary key) of the lookup entry to update,
and the value is the attribute key to update with the CalcString value.
One caveat with the SaveBack mechanism is that a sync from the server will ALWAYS take precedence over
local values. So if a value is updated on device based on a taskDetail change, then the sync of that
taskDetail back to the server should, in a timely manner, impact the corresponding attribute prior to the next
config retrieval. 

Non-StatCalc and Input.CalcString
Non StatCalc input types (except group headers) can also use the CalcString to control their ‘visibility’, by
having their taskDetail.IsVoided flag set to true/false by a formula. The IsVoided flag defaults to false, and
can be set to true via a formula which, when IsVoided = true :-
• Treats the control as IsDeleted = true, essentially voiding ongoing calcs, or intolerable checks,
• Treats the control as IsVisible = false, hiding the control from the list.
The result of the formula is evaluated via the result.AsBoolean() > translates the following string values :
• “true” = true
• “t” = true
• “yes” = true
• “y” = true
• “+” = true
• “1” = true
• Otherwise :-
o Convert.ToBoolean(value);
o Error > false
It is STRONGLY recommended that the “=IF(…)” formula be used for these boolean requirements, allowing
a standard equation to return “true” or “false”.
Full details can be found at :-
https://help.syncfusion.com/windowsforms/calculation-engine/supported-formulas/logicalformulas#if
For example, say each Equipment has an attribute called ‘PreStartLast’, and a new pre start must be
performed if this is more than six (6) hours old. A formula could look like :-
=IF(DATEDIFFMINS({TaskHeader|||PreStartLast}) > 360, true, false)





Equation Parameter Defaults
Sometimes, the formula may be complex, and not all parts will derive for all situations. In this instance, the
Key/Value attributes for the StatCalc input can define a default value that can be applied to the formula
string before the actual calculation engine is called.
Take for example the formula :-
“={TruckCount_1|||InputValue} * {Location_1|||GramsOrePerM3} * {TaskHeader|||VehicleBucketVolumeM3}”
Say, for example, that the “{TaskHeader|||VehicleBucketVolumeM3}” portion may not always evaluate for every
task, because the “VehicleBucketVolumeM3” attribute in the “TaskHeader” may not always be defined.
You can specify in the attributes of the StatCalc input :-
• Key = {TaskHeader|||VehicleBucketVolumeM3}
• Value = 8
And in the circumstance where this formula part cannot be derived from the task data, a value of “8” will be
injected into the formula string.
This technique can be useful where :-
• complex formulas, it may be good practice to provide defaults,
• formulas that contain fractions, where an incomplete formula may result in a divide by zero – so y










                        */




)
GO
PRINT N'Altering [dbo].[tvf_ReportingBitWise]'
GO
ALTER FUNCTION [dbo].[tvf_ReportingBitWise] ( @ProjectId int)
RETURNS TABLE
AS
RETURN
/*
select * from [dbo].[tvf_ReportingBitWise] (0)  --projectId not actually used for now.

2020-11-30 ts ... create. for purposes of saving many options in this field.
2020-12-17 ts ... update to value of 2
				... added second one for Show ALL data summary (should use this with caution though! becuase if user kills off this page, things might not be dealt with
				... actually removed it on second thoughts.
2021-06-01 ts ... flesh out the label
2021-07-15 ts ... treat missing Mode as 'DataV'
2021-08-25 CA ... Add Cut Numiber Geology bitwise 8
2021-09-04 ts ... lable matches the logic for show all
2022-03-02 CA ... Added 16 for reporting
2022-03-03 ts ... lock a value out for Summary stats on Summary template in iplod
2022-03-26 ts ... another value for iplod reporting
2022-04-21 ts ... add summary by material

*/
(							SELECT ReportingBitwiseValue  = 2
					, TypeAlias = 'Mining'
					,ModeCode = ''
					, Purpose = 'DataSummary'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'ShiftSummary: Show on "Mining..DataV"'
					,ReportingBitwiseHelpText  ='This control will show or hide inputs from the Shiftbosses mining summary page.'
				--	where 1=2
				

					union all 
			SELECT ReportingBitwiseValue  = 2
					, TypeAlias = 'Mining'
					,ModeCode = 'DataV'
					, Purpose = 'DataSummary'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'ShiftSummary: Show on "Mining..DataV"'
					,ReportingBitwiseHelpText  ='This control will show or hide inputs from the Shiftbosses mining summary page.'
			UNION ALL -- dont' think this is a good idea. Fixed in the way we select in DataSummary_AllInputs
			SELECT ReportingBitwiseValue  = 4
					, TypeAlias = 'Mining'
					,ModeCode = 'ShowAll'
					, Purpose = 'DataSummary'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'ShiftSummary: Show nonPRDT on "Mining..ShowAll"'
					,ReportingBitwiseHelpText  ='This control will show or hide inputs for non Productive tasks. Productive tasks will always show.'
			UNION ALL -- dont' think this is a good idea. Fixed in the way we select in DataSummary_AllInputs
			SELECT ReportingBitwiseValue  = 8
					, TypeAlias = 'Mining'
					,ModeCode = 'GeologyCuts'
					, Purpose = 'DataSummary'
					, AppliesForAllMiningTypes = 0
					,ReportingBitwiseLabel = 'Shift summary geo 3'
					,ReportingBitwiseHelpText  ='For cut numbers inputs.'
			UNION ALL -- Future proof for if geology becomes its own type
			SELECT ReportingBitwiseValue  = 8
					, TypeAlias = 'Geology3'
					,ModeCode = 'GeologyCuts'
					, Purpose = 'DataSummary'
					, AppliesForAllMiningTypes = 0
					,ReportingBitwiseLabel = 'Shift summary geo 3'
					,ReportingBitwiseHelpText  ='For cut numbers inputs.'
			UNION ALL -- Future proof for if geology becomes its own type
			SELECT ReportingBitwiseValue  = 16
					, TypeAlias = 'Mining'
					,ModeCode = 'Reporting'
					, Purpose = 'DataSummaryNewReporting'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'New Reporting Page. DataSummary Section'
					,ReportingBitwiseHelpText  ='New Reporting Page. DataSummary Section'
			UNION ALL--for iplod summary screen
			SELECT ReportingBitwiseValue  = 32
					, TypeAlias = 'Mining'
					,ModeCode = 'iplod'
					, Purpose = 'PLOD_SummaryScreenSummaryByLocn'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'SUM these inputs into SummaryBy_Location in iPLOD summary screen'
					,ReportingBitwiseHelpText  ='SUM these inputs into SummaryBy_Location in iPLOD summary screen'
			UNION ALL--for iplod summary screen
			SELECT ReportingBitwiseValue  = 64
					, TypeAlias = 'Mining'
					,ModeCode = 'iplod'
					, Purpose = 'PLOD_SummaryScreenSummaryByEquip'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'SUM these inputs into SummaryBy_Equipment in iPLOD summary screen'
					,ReportingBitwiseHelpText  ='SUM these inputs into SummaryBy_Equipment in iPLOD summary screen'
          			UNION ALL--for iplod summary screen
			SELECT ReportingBitwiseValue  = 128
					, TypeAlias = 'Mining'
					,ModeCode = 'iplod'
					, Purpose = 'PLOD_SummaryScreenSummaryByMat'
					, AppliesForAllMiningTypes = 1
					,ReportingBitwiseLabel = 'SUM these inputs into SummaryBy_Material in iPLOD summary screen'
					,ReportingBitwiseHelpText  ='SUM these inputs into SummaryBy_Material in iPLOD summary screen'
			--UNION ALL --tbc
			--SELECT ReportingBitWiseValue  = 2
			--		, TypeAlias = 'Mining'
			--		, ModeCode = 'Final'
			--		, Purpose = 'DataSummary'
			--		, AppliesForAllMiningTypes = 1
)
GO
PRINT N'Altering [dbo].[View_ShiftSummary_Cuts_GradesandOunces]'
GO
ALTER VIEW [dbo].[View_ShiftSummary_Cuts_GradesandOunces]
AS 

/**

			2021-09-07 CA Create
							Removed the tonnes grab to calc ounces. We will calc it elsewhere
			2021-09-14 ts ... remove ounces from here. maybe bring it back later as "fired ounces" when we pull "fired tonnes" 
								real tonnes and ounces should be on th etrucking transactions though
							... add in time since last firing



SELECT * FROM View_ShiftSummary_Cuts_GradesandOunces
order by uniquecutnumber desc
SELECT * FROM View_ShiftSummary_CutNumbers
1 Troy Ounce = 31.1035
Calc = (tonnes * grams per tonne)/31.1035

A Note: Fired tonnes should be added to the master task that holds the cut number. This could be statCalc for dev and manual for stope. 
Then when we have stockpile tonnes tracking, this view can be a window into that. 
***/



SELECT LocationCode,LocationID, [Forecast Grade] = CAST([402] AS DEC(20,8)), [Actual Grade] = CAST([11] AS DEC(20,8))
--[Ounces] = CAST([183] AS DEC(20,8))
-- Tonnes = SUM(CAST(trkton.InputValue AS DEC(20,8))),
,piv.ProjectID	,UniqueCutNumber ,CutNumberLabel
,CutDateTime, PrevCutDateTime, HoursSincePrevCut
FROM 




	/*****
	Grade pivot
	******/


			(SELECT a.LocationCode,
					a.LocationID
					 ,gd.inputid
				   ,gd.InputValue
					,a.ProjectID
					,CutNo.UniqueCutNumber
					,CutNo.CutNumberLabel
					,CutDateTime = [CutNo].[CalStartTime]  --should be time fired? or end time
					--, CutTimeFired = how? see below. likely heavy on query time?
					--get deets from previous cut:
					,PrevCutDateTime =  PrevCut.[CalStartTime]
					, HoursSincePrevCut = DATEDIFF(HOUR,PrevCut.[CalStartTime], [CutNo].[CalStartTime])

					


					FROM  [dbo].[View_ShiftSummary_CutNumbers] AS CutNo
					LEFT JOIN dbo.tbl_DBT_Location AS a 
						ON a.LocationID = cutno.LocationID
				LEFT OUTER JOIN [dbo].[View_ShiftSummary_CutNumbers] AS PrevCut
				ON CutNo.LocationID = PrevCut.LocationID
					AND [PrevCut].[DateShiftIncrement] = [CutNo].[DateShiftIncrement]-1

					--method to get actual time fired: (need to have CutNo attri bute on firing task first
					--left join dbo.tbl_DWH_iPlodStagingTableEdited firingtask
					--	on CutNo.UniqueCutNumber = firingtask.[InputValue]
					--	and firingtask.[InputType] like '%attr%'
					--	and firingtask.[InputID]  = 107
					--	and firingtask.[ActivityReasonID] = XX --firing task act reason
					----then join again to get the time fired stat
					--	left join dbo.tbl_DWH_iPlodStagingTableEdited TimeFired
					--	on  TimeFired.[InputType] like '%timestamp%'
					--	and TimeFired.[InputID]  = xx
					--	and TimeFired.[ActivityReasonID] = XX --firing task act reason
					--	and [TimeFired].[DataStoreID] = firingtask.[DataStoreID]
					--	and [TimeFired].[DetailID] = firingtask.[DetailID]


			INNER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS gd
				ON cutno.LocationID = gd.Location
				--AND gd.ActivityReasonID IN (110,207) -- face charging and drag cut

				AND 
					(
					(inputid IN (402,11) -- actual grade and forecast grade and cut number
					AND gd.InputType LIKE '%att%')
				--OR
				--	(gd.InputID = 183 AND gd.InputType LIKE '%stat%') -- 183 is ounces
					)
				AND gd.DataStoreID = cutno.datastoreID
				AND gd.DetailID = cutno.detailID
				AND CutNo.projectid = gd.ProjectID
				--not needed, already filtered on "CutNumber" view and  exists (select processid from [dbo].[tbl_SYS_ActivityReasonLink] as arls
					--																	where gd.[ActivityReasonID] = arls.[ActivityreasonLinkID]
					--																	and [arls].[ProcessID] in(4,8)) -- Dev and Prod charge
			--INNER JOIN dbo.tbl_SYS_ActivityReasonLink AS act
			--ON gd.ActivityReasonID = act.ActivityreasonLinkID
		--WHERE --act.ProcessID IN (4,8) -- Dev and Prod charge
		WHERE a.LocationCode IS NOT NULL 
			) d
			PIVOT 
			(MAX(InputValue)
				FOR InputID IN ([402],[11])--,[183])
			) piv



			/*
			Dont need to get the tonnes

		-- Get the DataStoreID and DetailID of the Haul task that the cut/grade is linked to
		 LEFT OUTER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS trkcut
			ON CAST(piv.UniqueCutNumber AS VARCHAR(20)) = trkcut.InputValue
			AND trkcut.ProjectID = piv.ProjectID
		-- this is tonnes for that cut
		-- this join will give many lines for tonnes. Need to aggregate
		LEFT OUTER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS trkton
			ON trkcut.DetailID = trkton.DetailID
			AND trkcut.DataStoreID = trkton.DataStoreID
			AND trkton.ProjectID = trkcut.ProjectID
			AND trkton.InputID = 18 -- tonnes
			AND trkton.InputType LIKE '%stat%'

	--	GROUP BY LocationCode,LocationID, [402],[11] ,[183],piv.ProjectID	,UniqueCutNumber ,CutNumberLabel	 
	*/
GO
PRINT N'Altering [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED_ForApp]'
GO
ALTER view [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED_ForApp]
as
/*
SELECT * FROM [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED_ForApp] where projectid = 3 
	SELECT * FROM [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED_ForApp] where projectid  = 194 

ts 2022-07-13 ... created out of frustration, swith to this from the normal one.
ts 2022-09-03 ... bring summary templates from fixed function
CA 2022-09-08 ... Added WIth NoLock to the table
ts 2022-09-24 .. presumabley * might be slower.
ts 2022-09-26 ... created to kill @OnlyForApp
              ... bring some logic
              .. bring a heap more logic out, so it is fixed and not subject to fickle act reason settings.
              ... put some logic flags into ACtive to programatically prevent bad things happening hte app.
              ... add some things
              .. join to the mappings table to pick up the min supported version
              .. add the 
              .. don't kill the calc functions!
              .. dont' kill the attrjson
              ... {fuck knows} kill the fixed config funciton for performance?
              ... put it back.
              ... shift it to the MERGE proc on the task details... dbo.SP_ProjSetup_BuildCacheTablesWithMerge
              ... get the app calc function and the attrjosn on teh way out the door, not saved into teh cache table
              ... {yep better.} do a join instead of apply for the calc string
              ... {} do the CASE parsing on FieldType instead of INputtype
              ... added sargeable fieldtpye for filtering.
              ... try getting rid of locnAttributes 
                            (done in inputs proc now)
                ... don't send stat 7 out the door to inputs
ts 2022-10-12 ... don't send zeros out for tolerances.
ts 2022-10-23 ... supported version can go below zero (indicating retire this input for versions more than this)



              todo: remove this hard coded logic and let it be flexible out of act reason view if necessary.


todo:


,TypeCsvOld =
													CASE
													  WHEN @IsFixedParams4Maint = 1 AND
														aar.ActivityID IN (4, 5, 6)/*--2021-05-24*/ THEN REPLACE(REPLACE(dbt.[Type], 'ServiceSheets', ''), 'maint', '')      --2021-05-05--need to kill out type here (web app still uses varchar type) --need to convert these to integer string
													  --when @IsFixedParams4SrvcSheets = 1 then replace (dbt.[Type] ,'ServiceSheets','') --2021-05-05--not sure if this will kill both?? might need to nest them
													  ELSE dbt.[Type]
													END


*/



select RowId
     , a.ProjectID
     , a.OperationID
     , ActReasonID
     , TaskDetailType =              LookITM.appInputType
     , TaskDetailTypeId =            LookITM.appInputTypeId
     , TaskDetailTypeImageFileName = LookITM.appInputTypeImageFileName
     , Active =                      case
                         when FieldType like '%calc%'
                           and
                           isnull(gcalc.AppCalcFunction, '') = '' then
                           0
                         when FieldType = 'LoadedFrom' then
                           0
                         when isnull(appInputTypeId, 0) = 0 then
                           0
                         else
                           a.Active
               end
     , InputType =                   case --leave the input type handling here because this Function is used to cull ARs that do not have any inputs
                            /*******
    																InputType is converted to something meaningful for app here.  however "Fieldtype" is mapped to WebInputytpe in the mapping table, and is used when importing back to staging table.
    														 *********/
                            /*
                            do this out the ooor in the inputs proc, until a better soln is figured out for the LocnAttrs
                            when FieldType = 'AttrLocn_1' and ManualEntry_1 = 1  then 'AttrInput'
                            when FieldType = 'AttrLocn_2' and ManualEntry_2 = 1  then 'AttrInput'
                            when FieldType = 'AttrLocn_3' and ManualEntry_3 = 1  then 'AttrInput'
                            when fieldtype like 'attrlocn%' then 'AttrList'
                            */

                            /* do it like the above to avoid so many logical reads
                            when   iif(ManualEntry_1 = 1, 'AttrInput', 'AttrList')-- @AttrLocn_1Method
                             when FieldType = 'AttrLocn_2' then
                               iif(ManualEntry_2 = 1, 'AttrInput', 'AttrList')--  @AttrLocn_2Method
                             when FieldType = 'AttrLocn_3' then
                               iif(ManualEntry_3 = 1, 'AttrInput', 'AttrList')-- @AttrLocn_3Method
                               */

                            when
                              (
                                FieldType = 'Stat'
                                and a.InputID = 17
                              ) then
                              'TrkCount'  --this is the input for adding timestamped truck loads.  will give us back the LogDuration Field. can push back to a flag field and use on other inputs if needed 
                            when
                              (
                                FieldType = 'Stat'
                                and a.InputID = 15
                              ) then
                              'TimeStamp' --this is timestamp statistic, converts to 4 digit 24hr format
                            --WHEN @OnlyForApp = 0 AND
                            -- ari.InputType LIKE '%InGroup%' THEN 'Parameter'
                            else
                              [a].[InputType]
                  -- isnull(a.InputType, 'no map for input type')
                  end
     , FieldType =                   case
                            when --@OnlyForApp = 1 AND
                              --assume we all doing it this way now!!! aar.CombinedHaulRoute > 0 AND
                              [FieldType] = 'destination' then
                              'HaulRoute'  ----2020-05-25 special handling for combining into one for app (not supported in the web yet)
                            when --@OnlyForApp = 1 AND
                              [FieldType] = 'RelatedEquipment'
                              and
                              td_ProcessID = 4 then
                              'RelatedEquipmentUJ' --2020-07-22, swticheroo for jumboer list on chargeup tasks. because we don't have filtering in the uigroupgroup lists. have added a dataset in UI_GroupGroup to match this.
                            else
                              [FieldType]
                  end--these are the only ones that are allowed to be copied when user copy task
     , SargeableFieldType =          FieldType
     , a.InputID
     , HelpText
     , DisplayOrder
     , DisplayTrap
     , DataTypeDisplayed
     , DecPlaces
     , TimeStampThisInput
     , CalcString =                  case
                             when FieldType = 'location' then
                               ' ?'
                               + '((UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Location_1|||LocnParam1}%' + char(39) + ') '  --blank in param1 field will result in all active locns
                               + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Location_1|||LocnParam2}%' + char(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
                               + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Location_1|||LocnParam3}%' + char(39) + ') '
                               + ') '
                             when FieldType = 'Material' then
                               ' ?'
                               + '((UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Material_1|||MatParam1}%' + char(39) + ') '  --blank in param1 field will result in all active locns
                               + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Material_1|||MatParam2}%' + char(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
                               + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Material_1|||MatParam3}%' + char(39) + ') '
                               + ') '
                             when FieldType = 'RefNo' then
                               ' ?'
                               + '((UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%,{TaskHeader|||EquipmentCode},%' + char(39) + ') '  --blank in param1 field will result in all active locns
                               + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%,ALLEQUIP,%' + char(39) + ') '
                               + ') '

                             when --don't need this! @OnlyForApp IN (0, 1) AND
                               [FieldType] like '%InGroup%' then
                               case
                                         when [FieldType] = 'locationInGroup' then
                                           ' ?'
                                           + '((UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Location_1|||LocnParam1}%' + char(39) + ') '  --blank in param1 field will result in all active locns
                                           + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Location_1|||LocnParam2}%' + char(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
                                           + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Location_1|||LocnParam3}%' + char(39) + ') '
                                           + ') '
                                         when [FieldType] = 'MaterialInGroup' then
                                           ' ?'
                                           + '((UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Material_1|||MatParam1}%' + char(39) + ') '  --blank in param1 field will result in all active locns
                                           + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Material_1|||MatParam2}%' + char(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
                                           + ' OR (UIGroupGroupDetailFilterCsv LIKE ' + char(39) + '%{Material_1|||MatParam3}%' + char(39) + ') '
                                           + ') '
                               --SELECT * FROM [dbo].[udf_GetCalcFunctions_ForIplod](194,'get_all')
                               end

                             else
                               gcalc.AppCalcFunction
                   --CalcString
                   end
     , ForeLabel =                   case
                            when --@OnlyForApp = 1 AND
                              --assume we all doing it this way. aar.CombinedHaulRoute > 0 AND
                              [FieldType] = 'destination' then
                              'Haul Route'  ----2020-05-25 special handling for combining into one for app (not supported in the web yet)
                            else
                              ForeLabel
                  end
     , AftLabel
     , CompulsoryTrap
     , DefaultValue
     , ReviewTrap
     , IntolerableValues =           case --shift Questiontype answers into INTs
                                    when dbo.udfStringIsNullOrEmpty(IntolerableValues, null) <> 0 then
                                      ''
                                    when IntolerableValues = 'Yes' then
                                      '1' + ''
                                    when IntolerableValues = 'No' then
                                      '0' + ''
                                    when IntolerableValues = 'N/A' then
                                      '-1' + ''
                                    when FieldType = 'destination' then
                                      '-1'  ----2020-05-25 special handling for missing haul route
                                    when FieldType = 'location' then
                                      '-1' --dummy location drilled in according to this config I believe: @ShowzzDummyLocnInIplod
                                    else
                                      IntolerableValues
                          end
     , InitialValidationMsg =        case
                                       when FieldType = 'destination' then
                                         'Please write the actual haul route in comments'
                                       else
                                         InitialValidationMsg
                             end
     , FinalValidationMsg
     , InputListSelectionFilter =    isnull([Param1], '') + ',' + isnull([Param2], '') + ',' + isnull([Param3], '') + ','
       + isnull([Param4], '')
     , Shareable
     , InputGroup
     , SummaryGroup
     , DisplayInputComments
     , TypeCsvOld
     , TypeIdsCsv
     , [TrapIntolerableComment] =    case
                                           when FieldType = 'destination' then
                                             8  ----2020-05-25 special handling for missing haul route
                                           when FieldType = 'location' then
                                             8
                                           else
                                             [TrapIntolerableComment]
                                 end
     , [IsInputCommentRequired]
     , [IsInputPhotoRequired]
     , [IsInputAuthRequired]
     , KeepOnCopy =                  case
                             when td_ActivityID = 1
                               and
                               FieldType <> 'CommentsCheck'
                               and
                               inputtype = 'parameter' then
                               1
                             else
                               0
                   end
     , a.ModifiedOn
     , Param1
     , Param2
     , Param3
     , Param4
     , WebCalcString
     , AttrJson =                    case
                           -- when --don't need this! @OnlyForApp IN (0, 1) AND
                           -- FieldType like '%InGroup%' then
                           --case
                           when FieldType = 'locationinGroup' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
                           then
                             '[{"Key":"LocnParam1","Value":",Production,"}'
                             + ',{"Key":"LocnParam2","Value":",Development,"}'
                             --+ iif(isnull(param1,'') <> '' , ',{"Key":"LocnParam2","Value":",'+ isnull(Param2,'') + ',"}','')
                             --+ iif(isnull(Param3,'') <> '' , ',{"Key":"LocnParam3","Value":",'+ isnull(Param3,'') + ',"}','')				


                             + ']'
                           when FieldType = 'MaterialInGroup' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
                           then
                             '[{"Key":"MatParam1","Value":",Production,"}'
                             + ',{"Key":"MatParam2","Value":",Development,"}'
                             --	+ iif(isnull(Param2,'') <> '' , ',{"Key":"MatParam2","Value":",'+ isnull(Param2,'') + ',"}','')
                             --	+ iif(isnull(Param3,'') <> '' , ',{"Key":"MatParam3","Value":",'+ isnull(Param3,'') + ',"}','')				

                             + ']'
                           when FieldType = 'location' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
                           then
                             '[{"Key":"LocnParam1","Value":",' + dbo.FN_IsNotNullorEmpty(Param1, Param1, 'AllActive') + ',"}'
                             + iif(isnull(Param2, '') <> '', ',{"Key":"LocnParam2","Value":",' + isnull(Param2, '') + ',"}', '')
                             + iif(isnull(Param3, '') <> '', ',{"Key":"LocnParam3","Value":",' + isnull(Param3, '') + ',"}', '')


                             + ']'
                           when FieldType = 'Material' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
                           then
                             '[{"Key":"MatParam1","Value":",' + dbo.FN_IsNotNullorEmpty(Param1, Param1, 'AllActive') + ',"}'
                             + iif(isnull(Param2, '') <> '', ',{"Key":"MatParam2","Value":",' + isnull(Param2, '') + ',"}', '')
                             + iif(isnull(Param3, '') <> '', ',{"Key":"MatParam3","Value":",' + isnull(Param3, '') + ',"}', '')


                             + ']'
                           when a.FieldType like '%calc%' then
                             gcalc.AttrJSON
                           else
                             isnull(a.AttrJSON, '')
                 end
     , SupportedVersion =            case
                                   when SupportedVersion <> 0 then  --2022-10-23
                                     SupportedVersion
                                   when a.FieldType like '%calc%' then
                                     gcalc.MinVersionSupported
                                   else
                                     isnull(LookITM.MinSupportedVersion, 0)
                         end --2022-07-28  --supported version can be less than 0, in which case SupportedVersion indicates the maximum version before this input is retired
     , AdditionalRegex
     , td_ReportingBitWise
     , ToleranceLower =              nullif(ToleranceLower, 0)  --be very careful relaxing this!  it will get pushed out to device and render stat calcs invalid (with nothing to fix them)
       --the assumption here is that we would not use toleranceUpper/lower with value of zero. if want to force something to be compulsory use the compulsory flag instead.
     , TL_Text
     , ToleranceUpper =              nullif(ToleranceLower, 0)
     , TU_Text
     , td_ActivityID
     , td_ReasonID
     , td_ProcessID
       --,OnlyForApp
     , ExcludeFromApp
     , ExcludeFromWeb
     , DeploymentModeCsv --=        ''
     , DataSrc =                     'cachetable'
     , AppliesToAllProjects
from tbl_DBT_GetTaskDetails_ForIplod_Cached_v2 as a with (nolock)

  --just join the fukker, I put a unique constraint on it
  left join --(    select MinSupportedVersion = max(MinSupportedVersion)
  -- , appInputTypeId
  --from 
  dbo.tbl_SYS_iplodInputTypeMappings as LookITM with (nolock)
    --where Active > 0
    --group by appInputTypeId) as LookITM
    --on a.TaskDetailTypeId = LookITM.appInputTypeId
    on LookITM.Active = 1
      and a.FieldType = LookITM.webInputType
      and a.DataTypeDisplayed = LookITM.webDataTypeDisplayed

  --left join dbo.tbl_DBT_LocationAttributes as tdla with (nolock)
  -- on a.ProjectID = tdla.ProjectID
  -- and a.FieldType like '%attr%'


  -- outer apply dbo.udf_GetCalcFunctions_ForIplod(a.ProjectID, a.WebCalcString) as gcalc
  left join dbo.udf_GetCalcFunctions_ForIplod(0, 'get_all') as gcalc
    on a.WebCalcString = gcalc.WebCalcFunction

where /*not exists (
        select tdarshl.ActReasonID
        from dbo.tbl_DBT_ActReasonSpecialHandlingLink as tdarshl
        where tdarshl.AR_Groupingname in ('ARTemplatesShiftSummary', 'ShiftSummaryWorkflowActivityReasonIdCsv', 'ShiftSummaryActivityReasonNonFinaliseIdsCSV')
          and tdarshl.ActReasonID = a.ActReasonID)
          
      and */
      a.ExcludeFromApp = 0
      and not ([FieldType] = 'LoadedFrom')--the app deals hauls routes as composites single input, hinged off the destination. the web app uses 2 separate fields.
      and not (a.FieldType = 'stat'
        and a.InputID = 7)
      and a.active = 1
/*union all
--2022-10-04 put this into the dbo.SP_ProjSetup_BuildCacheTablesWithMerge
select RowId =                       0--pretty sure we pick it up in INputs Proc?yep, uniqueINputId is generated at the last.
     , ProjectID --
     , OperationID =                 (
         select top 1 OperationId
         from tbl_dbT_Project
         where ProjectId = ProjectID) --presume pick this up in INputs Proc?
     , ActReasonID
     , TaskDetailType =              inputType
     , TaskDetailTypeId
     , TaskDetailTypeImageFileName = ''
     , Active
     , InputType
     , FieldType =                   InputType
     , InputID
     , HelpText
     , DisplayOrder --=  ROW_NUMBER() OVER ( ORDER BY 1)  --order them the way we want in the fixed config fucntion
     , DisplayTrap =                 1
     , DataTypeDisplayed
     , DecPlaces
     , TimeStampThisInput =          0
     , CalcString
     , ForeLabel
     , AftLabel
     , CompulsoryTrap
     , DefaultValue =                '' --shift back if needed.
     , ReviewTrap =                  0
     , IntolerableValues
     , InitialValidationMsg
     , FinalValidationMsg
     , InputListSelectionFilter =    ''  --legacy, shift back if needed
     , Shareable =                   ''  --legacy, shift back if needed
     , InputGroup
     , SummaryGroup =                0 --legacy, shift back if needed
     , DisplayInputComments =        0 --legacy, shift back if needed
     , TypeCsvOld
     , TypeIdsCsv
     , [TrapIntolerableComment]
     , [IsInputCommentRequired]
     , [IsInputPhotoRequired]
     , [IsInputAuthRequired]
     , KeepOnCopy =                  0  --  shift back if needed
     , ModifiedOn =                  getdate()
     , Param1 =                      ''  --legacy, shift back if needed
     , Param2 =                      ''  --legacy, shift back if needed
     , Param3 =                      ''  --legacy, shift back if needed
     , Param4 =                      ''  --legacy, shift back if needed
     , WebCalcString =               ''  --legacy, shift back if needed
     , AttrJson =                    ''  -- shift back if needed
     , SupportedVersion  --supported version can be less than 0, in which case SupportedVersion indicates the maximum version before this input is retired
     , AdditionalRegex =             ''  -- shift back if needed
     , td_ReportingBitWise
     , ToleranceLower =              0  --legacy, shift back if needed
     , TL_Text =                     ''  --legacy, shift back if needed
     , ToleranceUpper =              0 --legacy, shift back if needed
     , TU_Text =                     ''  --legacy, shift back if needed
     , td_ActivityID =               tsarl.ActivityID
     , td_ReasonID =                 tsarl.ReasonID
     , td_ProcessID =                tsarl.ProcessID
     , ExcludeFromAPp =              0  --OnlyForApp = 1
     , ExcludeFromWeb =              1
     , DeploymentModeCsv --need to handle this in the Inputs Proc WHERE DeploymentModeCsv LIKE @DeploymentMode OR DeploymentModeCsv = ''
     , DataSrc =                     'fixedsummaryfunction'
     , AppliesToAllProjects =        'yes!'
from dbo.tvf_FixedConfigs_iPlodSummaryTemplateDetails(0, 0)   /* can't put it here: WITH RECOMPILE*/ as a
  inner join dbo.tbl_SYS_ActivityReasonLink as tsarl
    on tsarl.ActivityreasonLinkID = a.ActReasonID
--where 1=2
*/

/*
todo: check on these:
I have inspected the following:	399
Sign Register	399
Stope Sign Register	399
<p>Please write your name here</p>	291
<p>I would like to bring the following matters and hazards to my Supervisors attentions</p>	399
How To Guides	399






*/
GO
PRINT N'Refreshing [dbo].[View_ShiftSummary_HoleTemperatureReadings]'
GO
EXEC sp_refreshview N'[dbo].[View_ShiftSummary_HoleTemperatureReadings]'
GO
PRINT N'Altering [dbo].[vw_Reporting_Geology_Trucks]'
GO
ALTER VIEW [dbo].[vw_Reporting_Geology_Trucks]
AS
/*

			2022-04-21 CA ... Added batch join
      2022-09-20 CA ... Added EmployeeNAme and starttime 

SELECT * FROM vw_Reporting_Geology_Trucks
WHERE date = '2022-09-02' AND projectid = 399


Notes:
	Built this of the same principles as the reporting MCR Combined All Mapped view.
	Grabbed the att v3 pivot out of Att part of that. 
	Grabbed the kpi part as well. 
	Filtered on haul and tonnes only.

	ADDING THIS ANYWHERE KILLS IT
	Tried nested select, cte, moving the join inside/outside, indexes on locationdest
	WHERE  DestMasterID = 4 


Used this logic for join the s
--power BI how to:
select * from [vw_Reporting_KPINew_AllMappedPrimaryKpis_Stats_MCR] as a
	left join [vw_Reporting_KPINew_AllMappedPrimaryKpis_Stats_MCR] as b
		on a.PvtJn_TaskId = b.PvtJn_TaskId
			and (a.PvtJn_InputGroupId = b.PvtJn_InputGroupId OR b.PvtJn_InputGroupId = -1)  -- -1 indicates this attribute input is not inside the group




*/

--the attributes: fixed pivot for now.add or subtract fields as necessary. put the dynamic pivot back into teh web and service an api for suckinginto reporting.







/********************
Straight Table
**********************/
WITH cte
AS
(SELECT
    ---these fields are for joining between the straight table and the pivoted table
    --PvtJn_TaskID = detailid,  --integer.
    --	,PvtJn_TaskGroupId = CAST(detailid AS nvarchar(50)) +'_'+CAST(Sequence AS nvarchar)
    --	,PvtJn_OperatorDateShift = CAST(ISNULL(OperatorId,0) AS varchar) + '_'+CAST(format(date,'yyyy_MM_dd') AS varchar)+'_'+ISNULL(Shift,'--')
    a.ProjectID
    --these fields will show in teh result (if they exist in FieldSetCsv)
   ,a.Date
   ,[Dumped Time] = a.DumpedTimeStamp
   ,Shift
   ,l.LocationCode
   ,a.LocationId
   ,em.EmployeeName
   ,a.StartTime
   ,m.MaterialDescOp
   ,a.MaterialID
   ,eq.EquipmentCode
   ,a.EquipmentId
   ,DestinationCode = d.LocationCode
   ,a.DestinationID
   ,MasterDestDesc = dest.DestDescription
   ,MasterDestID = dest.DestMasterID
   ,[Cut Number] = cut.CutNumberLabel
   ,[GramsOfGold]
   ,[ForecastGramsOfGold]
   ,[Ounces]
   ,[Forecast Ounces]
   ,[Tonnes] = a.value
   ,[Original Tonnes] = a.OrigValue
   ,[cut].[Forecast Grade]
   ,[cut].[Actual Grade]
   ,batch.[Batch Number]
   ,[Starting Tonnes] = batch.[Remaining Tonnes]

  -- rom batch number

  --  FROM dbo.View_KPINew_Stat18_Tonnes_v3  AS kpi

  FROM dbo.tbl_DWH_ProdDataStorage_v3 AS a WITH (NOLOCK)
  /*	LEFT JOIN (SELECT detailid,sequence,ar.AttributeID FROM dbo.tbl_DWH_Attributes AS ar WITH (NOLOCK) 
					WHERE ar.AttributeTypeID = 48) AS ar
				ON a.DetailID = ar.DetailID AND a.Sequence = ar.sequence 
		LEFT JOIN (SELECT detailid, sequence, attributeid FROM dbo.tbl_DWH_Attributes AS aut WITH (NOLOCK) 
					WHERE  aut.AttributeTypeID = 289) AS aut
				ON a.DetailID = aut.DetailID AND a.Sequence = aut.sequence */
  --	LEFT JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cp
  --	ON a.ConsumableProjID =cp.ConsumableProjectID
  INNER JOIN dbo.tbl_SYS_Equipment AS eq WITH (NOLOCK)
    ON a.EquipmentID = eq.EquipmentCodeID
  LEFT JOIN [dbo].[tbl_SYS_ActivityReasonLink] AS arl WITH (NOLOCK)
    ON a.[ActivityReasonID] = arl.[ActivityreasonLinkID]
  INNER JOIN dbo.tbl_SYS_ResEquipTypes AS re WITH (NOLOCK)
    ON eq.EquipTypeID = re.EquipTypeID
  LEFT JOIN dbo.tbl_DBT_Location AS l WITH (NOLOCK)
    ON a.locationid = l.locationID
  LEFT JOIN dbo.tbl_DBT_Pit AS pit
    ON l.PitID = pit.PitID
  LEFT JOIN dbo.tbl_DBT_LocationSources AS ls WITH (NOLOCK)
    ON l.SourceID = ls.SourceID
  LEFT JOIN dbo.tbl_DBT_Location AS lla WITH (NOLOCK)
    ON a.LoadedFrom = lla.locationID --join on loaded At
  LEFT JOIN dbo.tbl_DBT_LocationSources AS las WITH (NOLOCK)
    ON lla.SourceID = las.SourceID
  LEFT JOIN dbo.tbl_DBT_Materials AS m WITH (NOLOCK)
    ON a.MaterialID = m.MaterialOpID
  LEFT JOIN dbo.tbl_DBT_Location AS d WITH (NOLOCK)
    ON a.DestinationID = d.LocationID
  LEFT JOIN dbo.tbl_DBT_LocationDest AS dest WITH (NOLOCK)
    ON d.DestID = dest.DestID

  LEFT JOIN dbo.tbl_SYS_Statistic AS s WITH (NOLOCK)
    ON a.StatisticID = s.StatisticID
  LEFT JOIN dbo.tbl_SYS_Units AS u WITH (NOLOCK)
    ON s.UnitID = u.UnitsID
  --LEFT JOIN  dbo.tbl_SYS_Equipment AS e ON tbl.EquipmentId = e.EquipmentCodeID  
  --LEFT JOIN dbo.tbl_SYS_ResEquipTypes AS re ON e.EquipTypeID = re.EquipTypeID
  --LEFT JOIN dbo.tbl_DBT_Location AS l ON tbl.locationid = l.locationID 
  --LEFT JOIN dbo.tbl_DBT_Location AS d ON tbl.DestinationID = l.LocationID
  INNER JOIN dbo.tbl_DBT_Project AS p WITH (NOLOCK)
    ON a.ProjectID = p.ProjectID
  INNER JOIN dbo.tbl_DBT_Operation AS o WITH (NOLOCK)
    ON p.OperationId = o.OperationID

  --INNER JOIN dbo.tbl_SYS_Equipment AS eq ON tbl.EquipmentID = eq.EquipmentCodeId
  INNER JOIN dbo.tbl_SYS_Reason AS r WITH (NOLOCK)
    ON a.ReasonID = r.ReasonID
  INNER JOIN dbo.tbl_SYS_Activity AS aa WITH (NOLOCK)
    ON a.ActivityID = aa.ActivityID

  INNER JOIN dbo.tbl_SYS_Process AS pp WITH (NOLOCK)
    ON pp.ProcessID = a.ProcessID
  LEFT JOIN dbo.tbl_DBT_Employees AS em WITH (NOLOCK)
    ON a.OperatorID = em.EmployeeID
  LEFT JOIN dbo.tbl_SYS_LocationSources AS sysls WITH (NOLOCK)
    ON ls.SourceMasterID = sysls.MasterSourceID
  --LEFT JOIN   dbo.[FN_ProjectMaskMap_New](NULL,NULL) tvProjMask 
  --	ON a.ProjectID = tvProjMask.ProjectID AND a.LocationID = tvProjMask.LocationID


  -- This join is the Attr pivot
  -- Cut Number has a case in here to return the ID not the label so I can join to cuts view.
  LEFT OUTER JOIN (SELECT
      ProjectId
     ,PvtJn_TaskId = [DetailID]
     ,PvtJn_InputGroupId = PvtSeqJoin
     ,[Comments]
     ,[Cut Number]
     ,[GramsOfGold]
     ,[ForecastGramsOfGold]
     ,[Ounces]
     ,[Forecast Ounces]
    FROM (SELECT --join fields
        --PvtJn_TaskID = a.detailid  --integer.
        ProjectId = a_ProjectId
       ,a.detailid
       ,PvtSeqJoin
        --,PvtJn_OperatorDateShift =NULL -- CAST(OperatorId AS varchar) + '_'+CAST(date AS varchar)+'_'+Shift

        --the field with teh dynamic field names:
       ,Pvt_FieldNames = a.a_AttrTypeDesc
        --the field with the values to be pivoted. no need to aggregate, I am already aggregating here (can do a count or whatever I want)
        -- Want to get the cut numberID not label so I can join to cuts view for grades. Hence the case. 
       ,Pvt_Value =
        CASE
          WHEN a.AttributeTypeID = 107 THEN MAX(a.A_InputValue)
          ELSE MAX(a.AttributeValue)
        END

      FROM dbo.tbl_DWH_Attributes_v3 AS a WITH (NOLOCK)  --v3 has only attributes.

      WHERE a_ProjectId = 399
      GROUP BY a.PvtSeqJoin
              ,a.DetailID
              ,a.a_AttrTypeDesc
              ,[a].[a_ProjectId]
              ,a.AttributeTypeID) AS a
    PIVOT
    (
    MAX(Pvt_Value)
    FOR Pvt_FieldNames IN (
    [Comments],
    [Cut Number],
    [GramsOfGold],
    [ForecastGramsOfGold],
    [Ounces],
    [Forecast Ounces]
    )
    ) AS pvt) AS att
    ON att.ProjectId = a.ProjectID
    AND att.PvtJn_TaskId = a.DetailId

    -- Should join on group or -1 is no group 
    AND (att.PvtJn_InputGroupId = a.Sequence
    OR att.PvtJn_InputGroupId = -1)



  LEFT OUTER JOIN dbo.View_ShiftSummary_Cuts_GradesandOunces AS cut
    ON CAST(att.[Cut Number] AS INT) = cut.UniqueCutNumber
    AND cut.LocationID = a.LocationId -- join from cut to kpi needed with the join above?

  LEFT OUTER JOIN dbo.Vw_Reporting_Geology_StockpileBatches AS batch
    ON a.ProjectID = batch.ProjectID
    AND a.DumpedTimeStamp >= batch.BatchCalStartTime
    AND a.DumpedTimeStamp < batch.BatchCalEndTime
    AND a.DestinationID = batch.Destination




  WHERE --kpi.ProjectID = 399 AND Date BETWEEN '2022-03-01' AND '2022-04-11' AND  --AND StatisticTypeID  =10 --only sum type inputs come this way.
  -- ReasonDescription = 'haul'
  a.ActivityReasonID = 116
  -- AND m.MaterialID = 11 -- ore only. Do geos want to see when waste goes on rom? 
  -- AND kpidefn.KPIId = 6
  AND a.BudgetCodeID = 1 -- actual
  AND a.StatisticId = 18 -- Tonnes not num trucks.
  AND a.ProjectID > 0 -- filter out deleted tasks. Not sure if needed
--	AND   DestMasterID = 4 
)


SELECT
  cte.*
FROM cte


-- these came out of the metric_subtotalID case logic
--AND ISNULL (las.SourceMasterID, 0) <> 10 
--AND ISNULL(dest.DestMasterID, 4) = 4 


--ORDER BY PvtJn_TaskID, PvtJn_TaskGroupId, PvtJn_OperatorDateShift										


/*
SELECT a.ProjectID
		--these fields will show in teh result (if they exist in FieldSetCsv)
		, Date
				  ,Shift
				  ,a.LocationCode
				--  ,LocationId
				 ,a.Material
				-- ,a.MaterialID
				  ,EquipmentCode
				--  ,a.EquipmentId
				  ,DestinationCode --= LocationCode
				   , a.DestDestCode
					,a.DestMasterID
				 -- ,a.[cut number]
				--  ,[Cut Number] = cut.CutNumberLabel
				  ,[GramsOfGold],
					[ForecastGramsOfGold],
					[Ounces],
					[Forecast Ounces],
					[Tonnes] = a.ActualValue,
					[Original Tonnes] = a.OriginalValue
				--	,[Forecast Grade]
				--	,[Actual Grade]


					FROM dbo.vw_Reporting_KPINew_AllMappedPrimaryKpis_Combined_MCR AS a 

		/*	LEFT OUTER JOIN dbo.View_ShiftSummary_Cuts_GradesandOunces AS cut
			ON a.[UniqueCutNumberID] = cut.UniqueCutNumber
			AND cut.LocationCode = a.LocationCode -- join from cut to kpi needed with the join above?
		*/
		WHERE a.StatisticId = 18
			AND a.BudgetCode = 'Actual'
		-- AND m.MaterialID = 11 -- ore only. Do geos want to see when waste goes on rom? 
		-- AND kpidefn.KPIId = 6
		-- AND a.ProjectID > 0 -- filter out deleted tasks. Not sure if needed



*/
GO
PRINT N'Altering [dbo].[tvf_FixedConfigs_iPlodSummaryTemplateDetails]'
GO
ALTER FUNCTION [dbo].[tvf_FixedConfigs_iPlodSummaryTemplateDetails]
(
@Projectid INT = 0,
@DebugMode INT = 1
--@appVersionINt  int =0,
--@appDeploymentMode AS NVARCHAR(50) = NULL
)
/*
select * from   dbo.tvf_FixedConfigs_iPlodSummaryTemplateDetails(0,0)--no debug
select * from   dbo.tvf_FixedConfigs_iPlodSummaryTemplateDetails(0,1)-- debug
SELECT * FROM [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED]    where projectid = 3   --can't put it here WITH RECOMPILE--and OnlyForApp = 1
 and actreasonid = 1607


--test result here:


  DECLARE @isPurge AS INT
  EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 3, @isPurge = @isPurge OUTPUT, @appDeploymentMode = 'mining_fitters', @appVersion = 'v2022.08.31 (269)'
  SELECT @isPurge AS isPurge
  

NOTES: special task templates for iplod are controlled in code here now, instead of in the act reason tables.
      can be source controlled and released for all live environmemts.

NOTE: this could be called direct in iplodsetup_Inputs as should only be used for app, howevr put it into the cached taskdetails view so that we can shift deployment mode back from there too in future if we need.

NOTE: there are some configs that control whether or not things are used on sites, check them at the top of this function.

use this to get existing ones out of current live situations (to plug into the below):
declare @projectId int = 387
select ForeLabel, ProjectID, ActReasonID, ProjectIdIncludeCsv='', ProjectIdExcludeCsv='', DeploymentModeCsv='', ClientCsv='', SupportedVersion, TypeCsvOld, Active, InputType, InputID, TaskDetailTypeId
, HelpText, DataTypeDisplayed, DecPlaces, CalcString,  AftLabel, CompulsoryTrap, IntolerableValues, InitialValidationMsg, FinalValidationMsg, InputGroup, TypeIdsCsv, TrapIntolerableComment
, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, AttrJson, td_ReportingBitWise 
from  [udf_GetTaskDetails_ForIplod](@ProjectId,'',1,0)  as a --only for app variant.
              WHERE -- ActReasonID IN (1607,1671)  --1671 is raisebore.
              exists (SELECT     * FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink AS tdarshl
                  WHERE tdarshl.AR_Groupingname IN('ARTemplatesShiftSummary', 'ShiftSummaryWorkflowActivityReasonIdCsv', 'ShiftSummaryActivityReasonNonFinaliseIdsCSV')
                  AND tdarshl.ActReasonID = a.ActReasonID)
order by displayorder


2022-09-03 ts ... create.
2022-09-05 ts ... add sign register adn config handling.
2022-09-05 ts ... use sever details, not master server details.
              ... added old summary tempaltes
              quick mod
2022-10-10 ts ... use web calc strings (they get mapped to PLOD versions on the way out the door)
2022-10-19 ts ... make sumamry look same as always for go-live of new version.
              ... tweak this and release to servers once ready.
2022-10-19 ts ... no fixed sign register




*/
RETURNS 
@resultFinal TABLE 
 (
    ForeLabel varchar(max),
    ProjectID int,
    ActReasonID int,
    ProjectIdIncludeCsv nvarchar(255),
    ProjectIdExcludeCsv nvarchar(255),
    DeploymentModeCsv varchar(255),
    ClientCsv nvarchar(255),
    SupportedVersion int,  --supported version can be less than 0, in which case SupportedVersion indicates the maximum version before this input is retired
    TypeCsvOld varchar(100),
    Active int,
    InputType varchar(250),
    InputID int,
    TaskDetailTypeId int,
    HelpText varchar(max),
    DataTypeDisplayed varchar(250),
    DecPlaces int,
    CalcString varchar(2500),
    --ForeLabel varchar(max),
    AftLabel varchar(250),
    CompulsoryTrap int,
    IntolerableValues varchar(50),
    InitialValidationMsg varchar(max),
    FinalValidationMsg varchar(max),
    InputGroup varchar(50),
    TypeIdsCsv varchar(100),
    TrapIntolerableComment int,
    IsInputCommentRequired int,
    IsInputPhotoRequired int,
    IsInputAuthRequired int,
    AttrJson nvarchar(max),
    td_ReportingBitWise int,
    DisplayOrder INT null


)

AS
BEGIN

--some configs used below:
DECLARE @Client NVARCHAR(50) =  dbo.FN_NameOfDtClient(@Projectid);
SET @Projectid = iif(@Projectid=0, (SELECT top 1 primaryprojectid FROM dbo.tvf_ServerDetails(1) ) ,@Projectid);
--DECLARE @debugmsg NVARCHAR(MAX) = (SELECT '@Client'=@Client) --,'@Projectid'=@Projectid);

DECLARE @SignRegisterIsInAction INT = CAST(ISNULL(dbo.FN_GetConfigValue(@projectid, 'IsSignRegisterActive'), 0) AS int)  --dbo.FN_GetConfigValue(@ProjectId , 'IsSignRegisterActive')
DECLARE @StopeSignResgisterIsInAction INT = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'IsSignRegisterActive_StopeVariant'), 0) AS int)  


/*
SELECT * FROM dbo.tbl_DBT_webbarConfigs AS tdc
where tdc.ConfigName LIKE '%signr%'
*/

--declare the initail one (same as the final one) allows rownum and other manipulations before the finel
DECLARE @result TABLE 
 (
    ForeLabel varchar(max),
    ProjectID int,
    ActReasonID int,
    ProjectIdIncludeCsv nvarchar(255),
    ProjectIdExcludeCsv nvarchar(255),
    DeploymentModeCsv varchar(255),
    ClientCsv nvarchar(255),
    SupportedVersion int,  --supported version can be less than 0, in which case SupportedVersion indicates the maximum version before this input is retired
    TypeCsvOld varchar(100),
    Active int,
    InputType varchar(250),
    InputID int,
    TaskDetailTypeId int,
    HelpText varchar(max),
    DataTypeDisplayed varchar(250),
    DecPlaces int,
    CalcString varchar(2500),
    --ForeLabel varchar(max),
    AftLabel varchar(250),
    CompulsoryTrap int,
    IntolerableValues varchar(50),
    InitialValidationMsg varchar(max),
    FinalValidationMsg varchar(max),
    InputGroup varchar(50),
    TypeIdsCsv varchar(100),
    TrapIntolerableComment int,
    IsInputCommentRequired int,
    IsInputPhotoRequired int,
    IsInputAuthRequired int,
    AttrJson nvarchar(max),
    td_ReportingBitWise int,
    DisplayOrder INT null


)

	-- Fill the table variable with the rows for your result set


INSERT INTO @result (ForeLabel, ProjectID, ActReasonID, ProjectIdIncludeCsv, ProjectIdExcludeCsv, DeploymentModeCsv, ClientCsv, SupportedVersion, TypeCsvOld, Active, InputType, InputID, TaskDetailTypeId
, HelpText, DataTypeDisplayed, DecPlaces, CalcString,  AftLabel, CompulsoryTrap, IntolerableValues, InitialValidationMsg, FinalValidationMsg, InputGroup, TypeIdsCsv, TrapIntolerableComment
, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, AttrJson, td_ReportingBitWise) 
VALUES
--1607 (normal summary screen)
('DeviceTrueSerial', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200601, 'Maint,Mining,Shiftboss,MinerOrFitter', 1, 'AttrInput', 500, 200, '<p>for mapping new tablets. copy the true serial number into here.</p>', '', 0, 'DisplayCalc_ShowForAdminOnly'/*'=IF({TaskHeader|||OperatorId}=-1 ,false,true)'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', NULL),

-->>>>can be deleted after v291 is gone:  --have put these onto the workflow template for newer versions.
('<p>Did you act up this shift?</p>', 1, 1607, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'',/*todo: put negative cutoverversion to retire these: -20220701 */0, 'Maint,Mining,Processing,Shiftboss,Stores', 1, 'Q', 6921, 101, '<p><br></p>', 'YNradio', 0, '', '', 1, '1', '<p>Write Position Performed</p>', '', NULL, '', 8, NULL, NULL, NULL, N'', NULL),
('<p>Is this an additional day worked?</p>', 1, 1607, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'',/*todo: put negative cutoverversion to retire these: -20220701*/0, 'Maint,Mining,Processing,Shiftboss,Stores', 1, 'Q', 6922, 101, '<p><br></p>', 'YNradio', 0, '', '', 1, '1', '<p>Reason for Overtime</p>', '', NULL, '', 8, NULL, NULL, NULL, N'', NULL),
--<<<< can be deleted after v291 is gone


--some specials for MCR shiftboss:
('I have inspected the following:', 1, 1607, N',399,3,', N'', 'Shiftboss,', N'', 20220801, 'Mining,Shiftboss,MinerOrFitter', 1, 'PageBreak', 21, 1, '', '', 0, '', 'Brown', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('<p>Stope Bund Condition</p>', 1, 1607, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Shiftboss', 1, 'Q', 6916, 101, '<p><br></p>', 'YNradio', 0, '', '', 1, '0', 'Please leave comments for your supervisor', '', NULL, '', 40, NULL, NULL, NULL, N'', NULL),
('<p>Ore Pass Stop Logs</p>', 1, 1607, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Shiftboss', 1, 'Q', 6917, 101, '', 'YNradio', 0, '', '', 1, '0', 'Please leave comments for your supervisor', '', NULL, '', 40, NULL, NULL, NULL, N'', NULL),
('<p>ROM Pad, Alt ROM Pad and Waste Dump Bunds</p>', 1, 1607, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Shiftboss', 1, 'Q', 6918, 101, '', 'YNradio', 0, '', '', 1, '0', 'Please leave comments for your supervisor', '', NULL, '', 40, NULL, NULL, NULL, N'', NULL),
--what is this one:> ?
('<p>I would like to bring the following matters and hazards to my Supervisors attentions</p>', 1, 1607, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Shiftboss', 1, 'Q', 6919, 200, '', 'text', 0, '', '', NULL, '', '<p><br></p>', '', NULL, '', NULL, NULL, NULL, NULL, N'', NULL),


--old sumamry methods: (gone after v291 is gone)
/*todo: put negative cutoverversion to retire these: */
/*leaving for now to minimise disruption to the release*/
('Your total TKMs (this shift)', 1, 1607, '', '', '', '', 0, 'Mining', 1, 'SummaryCalc', -4, 1700, '', 'decimal', 0, 'Summary_Sum_Stat37'/*'!*{Stat_37|||InputValue}'*/, '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Total Trucks this shift', 1, 1607, '', '', '', '', 0, 'Mining', 1, 'SummaryCalc', -10, 1700, '', 'decimal', 0, 'Summary_Sum_Stat17'/* '!*{Stat_17|||InputValue}'*/, '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Total Ore Trucks this shift', 1, 1607, '', '', '', '', 0, 'Maint,Mining,Shiftboss', 1, 'StatCalc', 174, 1700, '', 'int', NULL, 'Summary_SumOre_Stat17'/* '!*IF({Material_1|||MatSysId}=11,{Stat_17|||InputValue},0)'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', NULL),
('Total Waste Trucks', 1, 1607, '', '', '', '', 0, 'Maint,Mining,Shiftboss', 1, 'StatCalc', 175, 1700, '', 'int', NULL, 'Summary_SumWaste_Stat17'/*'!*IF({Material_1|||MatSysId}=12,{Stat_17|||InputValue},0)'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', NULL),
('Total Buckets to truck (this shift)', 1, 1607, '', '', '', '', 0, 'Mining', 1, 'SummaryCalc', -5, 1700, '', 'decimal', 0, 'Summary_Sum_Stat16ToTruck'/*'!*({1_2_BogStat_16|||InputValue}+{4_2_BogStat_16|||InputValue}+{2_2_BogStat_16|||InputValue})'*/, '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Prod Drillm this shift:', 1, 1607, '', '', '', '', 0, 'Mining', 1, 'SummaryCalc', -6, 1700, '', 'decimal', 0, 'Summary_Sum_Stat6_PD' /* '!*IF("{TaskHeader|||EquipTypeCode}"="PD",{Stat_6|||InputValue},0)'*/, '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Total Cabolt Drilm this shift:', 1, 1607, '', '', '', '', 0, 'Mining', 1, 'SummaryCalc', -8, 1700, '', 'decimal', 0, 'Summary_Sum_Stat6_CB'/*'!*IF("{TaskHeader|||EquipTypeCode}"="CB",{StatCalc_6|||InputValue}+{Stat_6|||InputValue},0)'*/, '', 0, '', '', '', '', '', 0, 0, 0, 0, N'[{"Key":"{Stat_6|||InputValue}","Value":0},{"Key":"{StatCalc_6|||InputValue}","Value":0}]', NULL),



--new summary methods (with drill in to see assocaated tasks) https://app.clickup.com/t/6938923/PLOD-383
/*todo: put cutoverversion to turn these on */
/*leaving out for now to minimise disruption to the release*/
('Shift Summary:', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20420801, 'Mining,Shiftboss,MinerOrFitter', 1, 'PageBreak', 21, 1, '', '', 0, '', 'Brown', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('Summary By Location _StatsFirst (forelabel up top)', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20420801, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'SummaryByCalc_StatsFirst', 11, 9998, '', 'decimal', 1, 'SummaryBy_Location_StatsFirst'/* '{Location_1|||InputValue}'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', 32),
('By Material', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20420301, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'SummaryByCalc', 3, 9998, '', 'decimal', 1, 'SummaryBy_Material' /* '~{Material_1|||InputValue}'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', 64),
('Time Summary:', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20420801, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'PageBreak', 13, 1, '', '', 0, '', 'Brown', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('By Equip', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20420801, 'Maint', 1, 'SummaryByCalc', 2, 9998, '', 'decimal', 1, 'SummaryBy_Equip'/*'~{TaskHeader|||EquipmentID}'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', 64),
('By Equip _StatsFirst (forelabel up top)', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20420301, 'Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'SummaryByCalc_StatsFirst', 12, 9998, '', 'decimal', 1, 'SummaryBy_Equip_StatsFirst'/*'{TaskHeader|||EquipmentID}'*/, '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', 64),

--quick links and other info:
('Quick Links:', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,LiveXTest,', N'', 0, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'PageBreak', 2, 1, '', '', 0, '', '#52BD21', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('Prestart History', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Maint,Mining,Processing,Shiftboss,MinerOrFitter', 1, '*PrestartHistory', 1, 250, '', '', 0, '', '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),
('Hazard History', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Maint,Mining,Shiftboss,MinerOrFitter', 1, '*HazardHistory', 1, 250, '', '', 0, '', '', NULL, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('Maintenance History', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,LiveXTest,', N'', 0, 'Maint,MinerOrFitter,Stores', 1, '*MaintHistory', 1, 250, '', '', 0, '', '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),
('Sign Register', 1, 1607, N''/*use the config for this instead.*/, '', ',Mining_Fitters,Shiftboss,', '', 0, ',Maint,Mining,Stores,Shiftboss,MinerOrFitter', 1, '*SignRegister', 1, 250, '', '', 0, '', '', NULL, '', '', '', NULL, '', NULL, 0, 0, 0, N'', NULL),
('Stope Sign Register', 1, 1607, N''/*use the config for this instead.*/, '', ',Mining_Fitters,Shiftboss,', '', 0, ',Maint,Mining,Stores,Shiftboss,MinerOrFitter', 1, '*SignRegisterStopes', 1, 250, '', '', 0, '', '', NULL, '', '', '', NULL, '', NULL, 0, 0, 0, N'', NULL),
('All documents on device', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,LiveXTest,', N'', 0, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'DocumentsAll', 0, 1800, '', '', 0, '', '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', NULL),
('Toyota Parts', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Maint,MinerOrFitter', 1, 'WebUrl', 3, 1100, '', '', 0, '', 'https://partsouq.com/en/catalog/genuine/locate?c=Toyota', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('Posting Data', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Stores', 1, '*StoresHistory', 1, 250, '', '', 0, '', 'history', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('{nameofapp} Feedback', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,LiveXTest,', N'', 0, 'Maint,Mining,Processing,Stores,MinerOrFitter', 1, 'AttrInput', 95, 200, '<p>Write your comments on the PLOD app, including suggestions, missing list values or problems you have.</p><p>More info about your situation will make it easier for us to fix.</p>', 'varchar', NULL, '', '', NULL, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),


--standard old saved tasks (every task showing):
('Saved Tasks:', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,LiveXTest,', N'', 0, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'PageBreak', 1, 1, '', '', 0, '', 'Brown', 0, '', '', '', NULL, '', 0, 2, 16, 128, N'', NULL),
('Saved Tasks:', 1, 1607, N'', N'', ',Mining_Fitters,Shiftboss,LiveXTest,', N'', 0, 'Maint,Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'SavedTask', 1, 9999, '', '', 0, '', '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),



--1671 (raisebore summary)
('Handover Notes', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Mining,MinerOrFitter', 1, 'AttrInput', 337, 200, '', 'varchar', 0, '', '', NULL, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Saved Tasks:', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Maint,Mining,Stores,MinerOrFitter', 1, 'PageBreak', 1, 1, '', '', 0, '', 'Brown', 0, '', '', '', '', '', 0, 2, 16, 128, N'', NULL),
('Saved Tasks:', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Maint,Mining,Stores,MinerOrFitter', 1, 'SavedTask', 1, 9999, '', '', 0, '', '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Prestart History', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Maint,Mining,Stores,MinerOrFitter', 1, '*PrestartHistory', 1, 250, '', '', 0, '', '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),
('Hazard History', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Maint,Mining,Stores,MinerOrFitter', 1, '*HazardHistory', 1, 250, '', '', 0, '', '', NULL, '', '', '', '', '', 0, 2, 16, 128, N'', NULL),
('{nameofapp} Feedback', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Maint,Mining,Stores,MinerOrFitter', 1, 'AttrInput', 95, 200, '<p>Write your comments on the PLOD app, including suggestions, missing list values or problems you have.</p><p>More info about your situation will make it easier for us to fix.</p>', 'varchar', NULL, '', '', NULL, '', '', '', '', '', 0, 2, 16, 128, N'', NULL),
('How To Guides', 1, 1671, N'', N'', ',raisebore,', N'', 0, 'Maint,Mining,Stores,MinerOrFitter', 1, 'DocumentsAll', 0, 1800, '', '', 0, '', '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', NULL),


--this expands the summary workflow downwards, towards the finalisation screen
--don't need this here ('Summary of Stats', 1, 1850, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20220301, 'Mining,Processing,Shiftboss,Stores,MinerOrFitter', 1, 'SummaryByCalc', 1, 9998, '', 'decimal', 1, '{Location_1|||InputValue}', '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', 32),
/*todo: turn this on, it needs an insert to actreason and inputs table and special handling to activate I think. 
also add the appropraite version */
('<p>Did you act up this shift?</p>', 1, 1850, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'', 20420801, 'Maint,Mining,Processing,Shiftboss,Stores', 1, 'Q', 6921, 101, '<p><br></p>', 'YNradio', 0, '', '', 1, '1', '<p>Write Position Performed</p>', '', NULL, '', 8, NULL, NULL, NULL, N'', NULL),
('<p>Is this an additional day worked?</p>', 1, 1850, N',399,3,', N'', ',Mining_Fitters,Shiftboss,', N'', 20420801, 'Maint,Mining,Processing,Shiftboss,Stores', 1, 'Q', 6922, 101, '<p><br></p>', 'YNradio', 0, '', '', 1, '1', '<p>Reason for Overtime</p>', '', NULL, '', 8, NULL, NULL, NULL, N'', NULL),



--this is a test "summary" for access from teh burger (not yet coded), expands the summary options sideways
('This Summary Template is for How Tos and Whatnot', 1, 1851, N',3,', N'', ',Mining_Fitters,Shiftboss,', N'', 0, 'Mining', 1, 'PageBreak', 1, 1, '', '', NULL, '', '', NULL, '', '', '', NULL, '', NULL, NULL, NULL, NULL, N'', NULL),
--suggest put these into summary template called "Performance" or something
('Your Bog Tonnes per shift (last 6wks)', 1, 0000, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200805, 'Mining,MinerOrFitter', 1, 'SummaryCalc', -9, 1700, '', 'decimal', 0, 'Summary_EmpStats_BogtPerShiftTrend'/*'!{TaskHeader|||BogtPerActiveShift}'*/, '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),
('Your Drillm per shift last 6 wks (PD)', 1, 0000, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200805, 'Mining,MinerOrFitter', 1, 'SummaryCalc', -3, 1700, '', 'decimal', 0, 'Summary_EmpStats_PDDrillmPerShiftTrend'/*'!{TaskHeader|||PDDrillmPerShift}'*/, '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),
('Your Drillm per shift last 6 wks (CB)', 1, 0000, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200805, 'Mining,MinerOrFitter', 1, 'SummaryCalc', -2, 1700, '', 'decimal', 0, 'Summary_EmpStats_CBDrillmPerShiftTrend'/*'!{TaskHeader|||CBDrillmPerShift}'*/, '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),
('Your TKMs per Shift (Average last 6wks)', 1, 0000, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200805, 'Mining,MinerOrFitter', 1, 'SummaryCalc', -1, 1700, '', 'decimal', 0, 'Summary_EmpStats_TKMPerShiftTrend' /* '!{TaskHeader|||TKMsPerActiveShift}'*/, '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),
('Your Drillm per shift last 6 wks (UJ)', 1, 0000, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200805, 'Mining,MinerOrFitter', 1, 'SummaryCalc', 1, 1700, '', 'decimal', 0, 'Summary_EmpStats_UJDrillmPerShiftTrend'/*'!{TaskHeader|||UJDrillmPerShift}'*/, '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL)
--duplicate?('Your TKMs per Shift last 6weeks', 1, 0000, N'', N'', ',Mining_Fitters,Shiftboss,', N'', 20200805, 'Mining,Shiftboss,MinerOrFitter', 1, 'StatCalc', 37, 1700, '', 'decimal', 0, '!{TaskHeader|||TKMsPerActiveShift}', '', 0, '', '', '', NULL, '', 0, 0, 0, 0, N'', NULL),






/*
IF @DebugMode = 1 
BEGIN
set @debug
print (SELECT 'beforedeletes',count(* ) FROM @result )
end
*/
DECLARE @CountBeforeDelete INT = (SELECT count(*) FROM @result)

DELETE @result
WHERE ( ClientCsv not LIKE   '%,'+@Client+',%' and ClientCsv <> '')  --if only for one client, then only send to that client.
OR ProjectIdExcludeCsv LIKE '%,'+cast(@Projectid as varchar)+',%'      --exclude projects csv excludes no matter what
OR (ProjectIdIncludeCsv <> '' AND ProjectIdIncludeCsv NOT LIKE '%,'+cast(@Projectid as varchar)+',%'  )  --if include csv is populated, then it has to include
OR ProjectID not in (@Projectid,1)  --could just use ProjectId field for nominating single project too.  (if PRoject 1 then use the other filtesr.

--special deletes based on configs:
OR (InputType = '*SignRegister' AND @SignRegisterIsInAction =0)
OR (InputType = '*SignRegisterStopes' AND @StopeSignResgisterIsInAction =0)





DECLARE @CountAfterDelete INT = (SELECT count(*) FROM @result)


insert INTO @resultFinal (ForeLabel, ProjectID, ActReasonID, ProjectIdIncludeCsv, ProjectIdExcludeCsv, DeploymentModeCsv, ClientCsv, SupportedVersion, TypeCsvOld, Active, InputType, InputID, TaskDetailTypeId, HelpText, DataTypeDisplayed, DecPlaces, CalcString, AftLabel, CompulsoryTrap, IntolerableValues, InitialValidationMsg, FinalValidationMsg, InputGroup, TypeIdsCsv, TrapIntolerableComment, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, AttrJson, td_ReportingBitWise, DisplayOrder)
  --VALUES ('', 0, 0, N'', N'', '', N'', 0, '', 0, '', 0, 0, '', '', 0, '', '', 0, '', '', '', '', '', 0, 0, 0, 0, N'', 0, 0);
SELECT ForeLabel
      ,ProjectID = @Projectid
      ,ActReasonID
      ,ProjectIdIncludeCsv
      ,ProjectIdExcludeCsv
      ,DeploymentModeCsv
      ,ClientCsv
      ,SupportedVersion
      ,TypeCsvOld
      ,ACTIVE
      ,InputType
      ,InputID
      ,TaskDetailTypeId
      ,HelpText
      ,DataTypeDisplayed
      ,DecPlaces
      ,CalcString
      ,AftLabel
      ,CompulsoryTrap
      ,IntolerableValues
      ,InitialValidationMsg
      ,FinalValidationMsg
      ,InputGroup
      ,TypeIdsCsv
      ,TrapIntolerableComment
      ,IsInputCommentRequired
      ,IsInputPhotoRequired
      ,IsInputAuthRequired
      ,AttrJson
      ,td_ReportingBitWise
      ,DisplayOrder =ROW_NUMBER() OVER (PARTITION BY ActReasonID ORDER BY ActReasonID)  
      FROM @result

insert INTO @resultFinal (ForeLabel )--, ProjectID, ActReasonID, ProjectIdIncludeCsv, ProjectIdExcludeCsv, DeploymentModeCsv, ClientCsv, SupportedVersion, TypeCsvOld, Active, InputType, InputID, TaskDetailTypeId, HelpText, DataTypeDisplayed, DecPlaces, CalcString, AftLabel, CompulsoryTrap, IntolerableValues, InitialValidationMsg, FinalValidationMsg, InputGroup, TypeIdsCsv, TrapIntolerableComment, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, AttrJson, td_ReportingBitWise, DisplayOrder)
 SELECT 
 ForeLabel =  '@Client: '+@Client+  '; @Projectid'+ cast(@Projectid as VARCHAR) + '; CntBeforeDelete:' + cast(@CountBeforeDelete AS NVARCHAR(20))+ '; CntAfterDelete:' + cast(@CountAfterDelete AS NVARCHAR(20))
 
 --, ProjectID, ActReasonID, ProjectIdIncludeCsv, ProjectIdExcludeCsv, DeploymentModeCsv, ClientCsv, SupportedVersion, TypeCsvOld, Active, InputType, InputID, TaskDetailTypeId, HelpText, DataTypeDisplayed, DecPlaces, CalcString, AftLabel, CompulsoryTrap, IntolerableValues, InitialValidationMsg, FinalValidationMsg, InputGroup, TypeIdsCsv, TrapIntolerableComment, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, AttrJson, td_ReportingBitWise, DisplayOrder
WHERE @debugmode = 1

	RETURN 
END
GO
PRINT N'Altering [dbo].[SP_ProjSetup_BuildCacheTablesWithMerge]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_BuildCacheTablesWithMerge]
-- Add the parameters for the stored procedure here
@Date DATE = NULL,
@Shift VARCHAR(2) = '',
@Type VARCHAR(25) = '',
@ProjectID INT,
@CrewID INT = 0,
@UserId INT = 0,
@Debugmode INT = 0,
@ShowTimings INT = 0
,@CacheRefreshCallPoint NVARCHAR(25) = 'TaskDetails_Manual'  --nominate where we calling from. see in the proc for options. do different things based on this.
                                                            --if adding new call points, add belwo in two spots. where we override @CacheRefreshCallPoint to ignore if not out of date
                                                              -- and where we actually proceed with the whole shebang
, @Result INT = NULL OUTPUT
, @ResultMessage VARCHAR(MAX) = NULL OUTPUT

AS
BEGIN
  /*		
  		call act reason, manually, all versions
      exec  [dbo].SP_ProjSetup_BuildCacheTablesWithMerge @ProjectID = 3, @CacheRefreshCallPoint = 'TaskDetails_Manual'
	 select * from   dbo.tbl_DBT_GetTaskDetails_ForIplod_Cached_V2 with (nolock)




      exec  [dbo].SP_ProjSetup_BuildCacheTablesWithMerge @ProjectID = 3, @CacheRefreshCallPoint = 'iplodWhatToDo',@debugmode =1

      exec  [dbo].SP_ProjSetup_BuildCacheTablesWithMerge @ProjectID = 399, @CacheRefreshCallPoint = 'ShiftSummary'

  		exec  [dbo].SP_ProjSetup_BuildCacheTablesWithMerge @ProjectID = 399, @CacheRefreshCallPoint = 'Attr_Manual'

  

  
  	2021-07-19 ts ... created for caching the attributes list.
  					
2022-09-20 ts ... CLEAN START. use merge methodology. map the call back to where we are calling from
2022-09-28 ts ... heck in v2 cache table fo ralreay done
2022-10-04 ts ... fixed web calc string vs calc string in specials
              ... add the bit out of the taskdeetails view for fixed summary proc
2022-10-05 ts ... check on updated tvf_FixedConfigs_iPlodSummaryTemplateDetails
2022-10-06 ts ... do'nt deal with app calcs, only web calcs (get calcs for app on the way out the door)
              ... try putting NULLS into some key fields (if empty)
              ... don't get the summary templates from act reason (get from fixed)
              ... how come the RowNum=1 doesnn't work on the merge! just delete it instead.
              ... don't put these in, dervie on teh way out using mapping: 
                                                  alter table dbo.tbl_DBT_GetTaskDetails_ForIplod_Cached_V2 drop column TaskDetailType 
                                                       , TaskDetailTypeId 
                                                       , TaskDetailTypeImageFileName

              ... don't do the merge if smaller than 1000 rows (something must be fucked)
              ... also bring Stat7 into the fold for the web. so we don't have to call twice to pick it up.
              ... add PageLabels
  2022-10-10  ... handling for no locnattribute setttings
              ... when bringing the summary configs, use web calc string
  2022-10-15 ... don't do duration calc (the web page handles it automatically)
  2022-10-19 ... get params for maint working. put -1 on the OrigProject same like normal special inputs.
              ... order by OrigProject asc for killing excess params
 2022-10-20 ... handling for multi-project.
            ... pull the typecsv out of teh rownum for deleting dupes (retain OrigProject) to avoid dupes coming out of params table.
2022-10-23 ts ... where did the statcalc_7's go?
              ... I killed them trying to fix CRC!! 
              ... todo: how come they were sneaking into the CRC recalcengine?





todo: if wondering why duration calcs aren't showing in summary screen on PLOD, add this:
INSERT INTO dbo.tbl_DBT_ActReasonInputLink (OperationID, ProjectID, ActReasonLinkID, TaskName, InputType, InputID, AutoValue, ExcludeFromApp, ExcludeFromWeb, InputLoop, DisplayOrder, DisplayTrap, DataTypeDisplayed, DecPlaces, LogDuration, CalcFunction, ForeLabel, AftLabel, HelpText, CompulsoryTrap, WriteZero, AllowDefault, DefaultValue, ReviewTrap, ToleranceLower, TL_Text, ToleranceUpper, TU_Text, IntolerableValue, IV_Text, Comments, ModifiedOn, Shareable, InputGroup, PlanTaskName, PlanTaskColour, PlanDefaultDuration, PlanDefaultStatValue, PlanDefaultEquipID, DisplayInputComments, Type, TrapIntolerableComment, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, ReportingBitwise) VALUES
(1, 1, 1609, 'zz_iplod_InputsForAllTasks', 'StatCalc', 7, NULL, 0, 1, NULL, 6, NULL, 'decimal', 1, NULL, 'Duration', 'Time Taken', '', '', NULL, NULL, NULL, '', 0, NULL, '', NULL, '', NULL, '', NULL, CONVERT(DATETIME, '2022-10-11 22:50:17.217', 121), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Maint,Mining,Processing,Shiftboss,MinerOrFitter', NULL, 2, 16, 128, 68)
GO



  */

  -- SET NOCOUNT ON added to prevent extra result sets from
  -- interfering with SELECT statements.
  SET NOCOUNT ON;

  --check on temp tables:
  IF OBJECT_ID('tempdb..#allinputs') IS NOT NULL   drop TABLE #allinputs;
 IF OBJECT_ID('tempdb..#inputsprep') IS NOT NULL  drop table  #inputsprep;
IF OBJECT_ID('tempdb..#cte_ActiveARs') IS NOT NULL   DROP TABLE #cte_ActiveARs;
 IF OBJECT_ID('tempdb..#tdformerge') IS NOT NULL  drop table #tdformerge;

DECLARE @PrimaryDbName nvarchar(50) = (SELECT tmsd.PrimaryDbName FROM master.dbo.tvf_MasterServerDetails(@Projectid) AS tmsd )

                                                DECLARE @OperationID INT;
                                                set @OperationID =
                                                (
                                                    select OperationID from tbl_DBT_Project WITH (NOLOCK) where ProjectID = @Projectid
                                                );
  DECLARE @ReturnAsTable INT;
  IF (@Result IS NULL)
    SET @ReturnAsTable = 1

--Find whether certain caches are old. 
 DECLARE  @NewestTaskDetailsSourceData datetime = (SELECT
                  MAX(ModOn)
                FROM (SELECT
                    modOn = MAX(ModifiedOn)
                  FROM dbo.tbl_DBT_ActReasonInputLink
                  WHERE ProjectID IN (@projectId, 1)
                  UNION ALL
                  SELECT
                    modOn = MAX(ModifiedOn)
                  FROM dbo.tbl_DBT_ParameterSetup
                  WHERE ProjectID IN (@projectId, 1)
                  UNION ALL
                  SELECT
                    modOn = MAX(ModifiedOn)
                  FROM dbo.tbl_SYS_Questions AS tsq
                 -- WHERE ProjectID IN (@projectId, 1)
                  UNION ALL 
                  SELECT
                    modOn = MAX(ModifiedOn)
                  FROM dbo.tbl_SYS_QuestionCategories  AS tsq
                 -- WHERE ProjectID IN (@projectId, 1)
                  UNION ALL 
                  SELECT
                    modOn = MAX(modify_date)
                  FROM sys.objects
                  WHERE name IN ('SP_API_IPLODSetup_Inputs', 'udf_GetTaskDetails_ForIplod', 'udf_GetCalcFunctions_ForIplod','SP_ProjSetup_BuildCacheTablesWithMerge','tvf_FixedConfigs_iPlodSummaryTemplateDetails')) AS tbl);
            
            DECLARE @LatestAppTaskBuildDAte DATETIME =(SELECT MAX (dte) FROM ( select dte = MAX(DAteCreated) FROM tbl_DBT_GetTaskDetails_ForIplod_Cached_v2 where projectid = @projectid
														UNION ALL 
														select dte = MAX(DateUpdated) FROM tbl_DBT_GetTaskDetails_ForIplod_Cached_v2 where projectid = @projectid
																			) AS tbl)
      
      declare @AppTaskDAtaNeedsBuilding int = case WHEN  isnull(@NewestTaskDetailsSourceData,getdate()) <  isnull(@LatestAppTaskBuildDAte,0) THEN 0
                                              ELSE 1 end

--does teh attribute cache need rebiulding?
 DECLARE  @NewestSourceDataAttr datetime = (SELECT
                  MAX(ModOn)
                FROM (SELECT
                    modOn = MAX(ModifiedOn)
                  FROM dbo.tbl_SYS_Attribute AS tsa
                  
                  UNION ALL
                  SELECT
                    modOn = MAX(ModifiedOn)
                  FROM dbo.tbl_SYS_AttributeType AS tsat
                  

                  UNION ALL 
                  SELECT
                    modOn = MAX(modify_date)
                  FROM sys.objects
                  WHERE name IN ('view_GetAttributes_LIVE')) AS tbl);
            
            DECLARE @LatestBuildDAteAttr DATETIME = (select max(ModifiedOn) FROM dbo.view_GetAttributes_Cached AS vgac where projectid = @projectid)
                    
                    declare @AttrNeedsBuilding int = case WHEN  isnull(@NewestSourceDataAttr,getdate()) >  isnull(@LatestBuildDAteAttr,0) /*AND @buildAttributesCacheLite =1*/ THEN 1
                                                            ELSE 0 end                                                    

--over-ride some things based on cache not out of date
SET @CacheRefreshCallPoint = case WHEN @CacheRefreshCallPoint in( 'iplodWhatToDo','PageLabels') AND  @AppTaskDAtaNeedsBuilding =0 THEN 'CacheIsAlreadyGood'
                                  WHEN @CacheRefreshCallPoint LIKE 'TaskDetails%' THEN 'TaskDetails'
                                  ELSE @CacheRefreshCallPoint end




--need some more things

  DECLARE @AR_GetINputForAllTasks INT = (SELECT TOP 1
      ISNULL(ActReasonID, 0)
    FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WITH (NOLOCK)
    WHERE AR_GroupingName = 'ARWithInputsForAlliPlodTasks'
    AND Active = 1);




IF @Debugmode=1 SELECT '@CacheRefreshCallPoint'=@CacheRefreshCallPoint,'@AppTaskDAtaNeedsBuilding'=@AppTaskDAtaNeedsBuilding,
'@LatestAppTaskBuildDAte'=@LatestAppTaskBuildDAte,'@NewestTaskDetailsSourceData'=@NewestTaskDetailsSourceData;

--start doing the jam

  DECLARE @TranCount INT;
  SET @TranCount = @@trancount;

  BEGIN TRY

    --SET TRANSACTION ISOLATION LEVEL SERIALIZABLE; --old mate on the internet reckoned this was needed?
    IF @TranCount = 0
      BEGIN TRANSACTION
    ELSE
      SAVE TRANSACTION SP_PS_BuildCacheTablesWithMerge;


/***********
do the work.
**************/

        
IF @CacheRefreshCallPoint IN ( 'iplodWhatToDo','TaskDetails','PageLabels' ) --add other ones what need to run this section


--todo: this needs fixing:
/*
SELECT tdaril.ActReasonInputLinkID,tdps.ParamSU_ID FROM dbo.tbl_DBT_ParameterSetup AS tdps
inner JOIN dbo.tbl_DBT_ActReasonInputLink AS tdaril
ON tdaril.ActReasonInputLinkID = tdps.ParamSU_ID
select * from dbo.udf_GetTaskDetails_ForIplod(3, '', 99, 0) 
*/


BEGIN  --MERGE ONLYFORAPP TASK DETAISL:
                                             If @Debugmode = 1 SELECT 'startTaskDetails'=getdate()
                                           -- DECLARE @Projectid INT = 3, @Operationid int = 83 ,@type NVARCHAR(15) = '',@debugMode int = 1, @OnlyForApp int = 99
                                           --put it into a temp table so I can kill dupes:
                                          
                                              --rip the guts out of that stupid function and put it in here:
        --START PREPPING FOR TASK DETAILS
										DECLARE @ShowzzDummyLocnInIplod INT = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ShowzzDummyLocnInIplod'), 0) AS INT)

												  DECLARE @AR_FixedParamsForAllTasks TABLE (
													ActivityReasonId INT    --make better config for this back into a table somewhere
												   ,Type NVARCHAR(25) NULL
												   ,IsServiceSheet INT NULL
												  )
												  INSERT INTO @AR_FixedParamsForAllTasks (ActivityReasonId
												  , Type
												  , IsServiceSheet)
													VALUES (1770 -- ActivityReasonId - int
													, N'Maint' -- Type - nvarchar(25)
													, 1)
													--, (1770  --don't think this is needed anymore ? we are doing based on IsServiceSheet across both maint and service sheets
													--,'ServiceSheets'
													--,1)
													, (1771, 'Maint', 0)

												  DECLARE @IsFixedParams4Maint INT = 1
												  --declare @IsFixedParams4SrvcSheets  int  = 1

												  -- Get config.
												  DECLARE @AttrLocn_1Method AS NVARCHAR(35);
												  DECLARE @AttrLocn_2Method AS NVARCHAR(35);
												  DECLARE @AttrLocn_3Method AS NVARCHAR(35);
												  SELECT
													@AttrLocn_1Method = isnull(AttrLocn_1Method,'AttrList')  --2022-10-10
												   ,@AttrLocn_2Method = isnull(AttrLocn_2Method,'AttrList')
												   ,@AttrLocn_3Method = isnull(AttrLocn_3Method,'AttrList')

												  FROM dbo.[udfLocnAttrMethods](@OperationID, @Projectid, '');  --2020-04-27

												  DECLARE @TwiAlias NVARCHAR(25) = dbo.FN_TWIAlias(@Projectid);
												  --from dbo.udfConfigConstants(@OperationID, @Projectid, '');

												  --these are act reasons activated on @Project
												  --;WITH cte_ActiveARs 
												  --AS (
												  CREATE TABLE  #cte_ActiveARs  (
													ActivityReasonId INT
												   ,ActivityID INT NULL
												   ,IsSpecialTemplate INT NULL
												   ,CombinedHaulRoute INT NULL
												   ,IsServiceSheet INT NULL
												   ,Type NVARCHAR(100) COLLATE DATABASE_DEFAULT NULL 
													--,ActivityID int null
												   ,ReasonID INT NULL
												   ,ProcessID INT NULL
   
												  )
												  INSERT INTO #cte_ActiveARs (ActivityReasonId
												  , ActivityID
												  , IsSpecialTemplate
												  , CombinedHaulRoute
												  , IsServiceSheet
												  , Type
												  --,ActivityID
												  , ReasonID
												  , ProcessID)

													SELECT DISTINCT
													  ActivityReasonId = ActReasonLinkID
													  --added these two for filtering out the extra input joins at the bottom of this function
													 ,arl.ActivityID
													 ,IsSpecialTemplate = ISNULL(arsh.ActReasonID, 0)
													 ,CombinedHaulRoute = ISNULL(haul.ActReasonID, 0)
													 ,IsServiceSheet = IIF(srcv.ActReasonID IS NULL, 0, 1)  --All service sheets regardles of @Type should be treated the same. if not servicesheet, then also treated teh same (regardless of ACtivty)
													 ,a.Type
													  --,arl.ActivityID
													 ,arl.ReasonID
													 ,arl.ProcessID
													--INTO #cte_ActiveARs
													FROM dbo.tbl_DBT_ActReasonInputLink AS a WITH (NOLOCK)
													INNER JOIN dbo.tbl_SYS_ActivityReasonLink AS arl WITH (NOLOCK)
													  ON a.ActReasonLinkID = arl.ActivityreasonLinkID
													LEFT JOIN dbo.tbl_DBT_ActReasonSpecialHandlingLink AS arsh WITH (NOLOCK)
													  ON a.ActReasonLinkID = arsh.ActReasonID
														AND arsh.AR_GroupingType = 'SpecialiPLODTemplates'
														AND arsh.ProjectID = 1
													LEFT JOIN dbo.tbl_DBT_ActReasonSpecialHandlingLink AS srcv WITH (NOLOCK)
													  ON a.ActReasonLinkID = srcv.ActReasonID
														AND srcv.AR_GroupingName = 'AR_ServiceSheets'
														AND srcv.ProjectID = 1
													LEFT JOIN dbo.tbl_DBT_ActReasonSpecialHandlingLink AS haul WITH (NOLOCK)
													  ON a.ActReasonLinkID = haul.ActReasonID
														AND haul.AR_GroupingName = 'CombinedHaulRoute'
														AND haul.ProjectID = 1

													WHERE InputType LIKE 'Stat%'
													AND InputID = 7 --duration input added indicates active task
													AND a.ProjectID = @Projectid
      --START DOING MORE PREP
												   SELECT
												  ActivityReasonId = ActReasonLinkID
												 ,InputType
												 ,InputID
												 ,ari.ProjectID
												 ,OrigProject = ProjectId
												 ,PartitionMethod = dbo.FN_IsNullorEmpty(PartitionMethod, 'normal')
												 ,RowNum_Project_Input = --get inputs from Project1, allowed to customise by adding inputs to individual project
												  ROW_NUMBER() OVER (PARTITION BY ActReasonLinkID
												  -- , ari.ProjectID
												  , InputType
												  , InputID
												  ORDER BY ActReasonLinkID
												  , ari.ProjectID DESC--2020-09-15. switch this. if adding a field to @Project, then this should over-ride same input on Project1  ASC
												  , InputType
												  , InputID
												  , ActReasonInputLinkID
												  )

												 ,RowNum_Project = --get inputs from Project1, not allowed any customisation 
												  CASE
													WHEN ari.ProjectID = 1 THEN ActReasonLinkID
													ELSE 0
												  END --ROW_NUMBER() OVER (PARTITION BY ActReasonLinkID,ProjectID , InputType, InputId ORDER BY ActReasonLinkID,ProjectID ASC, InputType, InputId,ActReasonInputLinkId )

												 ,RowNum_Input_Project =  --get inputs from normal project, allowed to add input to Project2 that will apply to all projects
												  ROW_NUMBER() OVER (PARTITION BY ActReasonLinkID
												  , InputType
												  , InputID
												  ORDER BY ActReasonLinkID
												  , InputType
												  , InputID
												  , ari.ProjectID ASC --2020-09-15 swtich this. if adding an input to Project2, then this input should over-rule the same input on @Project DESC
												  , ActReasonInputLinkID
												  )
												  INTO #allinputs
												FROM tbl_DBT_ActReasonInputLink AS ari WITH (NOLOCK)
												LEFT JOIN (SELECT DISTINCT
													ActReasonID
												   ,PartitionMethod
												  FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WITH (NOLOCK)
												  WHERE ProjectID = 1
												  AND AR_GroupingName <> 'AR_TWIs'
												  OR (
												  AR_GroupingName = 'AR_TWIs'
												  AND @TwiAlias = 'TWI'
												  ) --get TWI stuff from Project1 as long as TWIs arent aliased on this project
												) AS ars
												  ON ari.ActReasonLinkID = ars.ActReasonID
												WHERE ari.ProjectID IN (1, @Projectid, 2)
												--2022-10-07 AND NOT (ari.InputType = 'Stat'
											        --	AND ari.InputID = 7) -- 2019-02-26
												AND NOT (ari.InputType = 'Stat'
												AND ari.InputID = 86) -- 2020-04-16
											  --2022-07-13 AND (ari.ActReasonLinkID = @ActReasonId OR @ActReasonId =0)
  
											  IF @ShowTimings =1 SELECT '#InputsINserted'=GETDATE();

											  IF @DebugMode =1 SELECT * FROM #allinputs;
  
											  CREATE INDEX xx#allinputsXXbalh ON #allinputs (ProjectID,ActivityReasonId,InputType,InputID) INCLUDE (PartitionMethod,	RowNum_Project_Input,	RowNum_Project,	RowNum_Input_Project)
											 --update the stats (becuase #table query stats may be remembered from prior runs!
											 UPDATE STATISTICS #allinputs
											  UPDATE STATISTICS #cte_ActiveARs
											 --todo reomve the 1=2e
											 --todo shift handling for all @OnlyForApps in this!!!

											 IF @ShowTimings =1 SELECT '#InputsIndexDone'=GETDATE();

											--create the table so it forms the same way every time
											create table #INputsPrep  (
											  RowId INT NULL
											 ,[ProjectID] INT NULL
											 ,[OperationID] INT NULL
											 ,[ActReasonID] INT NULL
											 --,TaskDetailType [NVARCHAR](50) COLLATE DATABASE_DEFAULT    NOT NULL
											 --,TaskDetailTypeId [INT] NOT NULL
											 --,TaskDetailTypeImageFileName [NVARCHAR](100)  COLLATE DATABASE_DEFAULT   NOT NULL
											 --,Active INT NOT NULL
											 ,[InputType] VARCHAR(250) COLLATE DATABASE_DEFAULT NULL 
											 ,[FieldType] VARCHAR(250) COLLATE DATABASE_DEFAULT NULL 
											 ,[InputID] INT NULL
											 ,[HelpText] VARCHAR(MAX) COLLATE DATABASE_DEFAULT NULL 
											 ,[DisplayOrder] INT NULL
											 ,[DisplayTrap] INT NULL
											 ,[DataTypeDisplayed] [VARCHAR](250) COLLATE DATABASE_DEFAULT NULL 
											 ,[DecPlaces] [INT] NULL
											 ,TimeStampThisInput INT NULL
											-- ,[CalcString] [VARCHAR](2500) COLLATE DATABASE_DEFAULT NULL 
											 ,[ForeLabel] [VARCHAR](MAX) COLLATE DATABASE_DEFAULT NULL 
											 ,[AftLabel] [VARCHAR](250) COLLATE DATABASE_DEFAULT NOT NULL 
											 ,[CompulsoryTrap] [INT] NULL
											 ,[DefaultValue] [VARCHAR](250) COLLATE DATABASE_DEFAULT NULL 
											 ,[ReviewTrap] [INT] NULL
											 ,[IntolerableValues] [VARCHAR](50) COLLATE DATABASE_DEFAULT NULL 
											 ,[InitialValidationMsg] [VARCHAR](MAX) COLLATE DATABASE_DEFAULT NULL 
											 ,[FinalValidationMsg] [VARCHAR](MAX) COLLATE DATABASE_DEFAULT NULL 
											 ,[InputListSelectionFilter] [VARCHAR](MAX) COLLATE DATABASE_DEFAULT NULL 
											 ,[Shareable] [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL 
											 ,[InputGroup] [VARCHAR](50) COLLATE DATABASE_DEFAULT NULL 
											 ,[SummaryGroup] INT NULL
											 ,[DisplayInputComments] [INT] NULL
											 ,[TypeCsvOld] [VARCHAR](100) COLLATE DATABASE_DEFAULT NULL 
											 ,[TypeIdsCsv] [VARCHAR](100) COLLATE DATABASE_DEFAULT NULL 
											 ,[TrapIntolerableComment] [INT] NULL
											 ,[IsInputCommentRequired] [INT] NULL
											 ,[IsInputPhotoRequired] [INT] NULL
											 ,[IsInputAuthRequired] [INT] NULL
											 ,[KeepOnCopy] [INT] NULL
											 ,[ModifiedOn] [DATETIME] NOT NULL
											 ,Param1 VARCHAR(50) COLLATE DATABASE_DEFAULT NULL 
											 ,Param2 VARCHAR(50) COLLATE DATABASE_DEFAULT NULL 
											 ,Param3 VARCHAR(50) COLLATE DATABASE_DEFAULT NULL 
											 ,Param4 VARCHAR(35) COLLATE DATABASE_DEFAULT NULL 
											 ,WebCalcString [VARCHAR](250) COLLATE DATABASE_DEFAULT NULL 
											 ,AttrJson [NVARCHAR](MAX) COLLATE DATABASE_DEFAULT NULL 
											 ,SupportedVersion INT NULL
											 ,AdditionalRegex NVARCHAR(500)  COLLATE DATABASE_DEFAULT 
											 ,td_ReportingBitWise INT NULL
											 ,ToleranceLower DEC(18, 6) NULL
											 ,TL_Text VARCHAR(MAX)COLLATE DATABASE_DEFAULT NULL  
											 ,ToleranceUpper DEC(18, 6) NULL
											 ,TU_Text VARCHAR(MAX)COLLATE DATABASE_DEFAULT NULL  
											 ,td_ActivityID INT NULL
											 ,td_ReasonID INT NULL
											 ,td_ProcessID INT null
											  , ExcludeFromApp int null
											  , ExcludeFromWeb int NULL
                                              ,OrigProject INT null
                                              ,DeploymentModeCsv varchar(250) null
											)

	--START DOING THE POPULATING OF TASK DETAILS
										INSERT INTO #inputsprep 
																	([RowId],
																	[ActReasonID],
																	[InputType],
																	[FieldType],
																	[InputID],
																	[HelpText],
																	[DisplayOrder],
																	[DisplayTrap],
																	[DataTypeDisplayed],
																	[DecPlaces],
																	[TimeStampThisInput],
																--	[CalcString],
																	[ForeLabel],
																	[AftLabel],
																	[CompulsoryTrap],
																	[DefaultValue],
																	[ReviewTrap],
																	[IntolerableValues],
																	[InitialValidationMsg],
																	[FinalValidationMsg],
																	[InputListSelectionFilter],
																	[Shareable],
																	[InputGroup],
																	[SummaryGroup],
																	[DisplayInputComments],
																	[TypeCsvOld],
																	[TypeIdsCsv],
																	[TrapIntolerableComment],
																	[IsInputCommentRequired],
																	[IsInputPhotoRequired],
																	[IsInputAuthRequired],
																	[KeepOnCopy],
																	[ModifiedOn],
																	[Param1],
																	[Param2],
																	[Param3],
																	[Param4],
																	[WebCalcString],
																	[AttrJson],
																	[SupportedVersion],
																	[AdditionalRegex],
																	[td_ReportingBitWise],
																	[ToleranceLower],
																	[TL_Text],
																	[ToleranceUpper],
																	[TU_Text],
																	[td_ActivityID],
																	[td_ReasonID],
																	[td_ProcessID]
													  , ExcludeFromApp 
													   , ExcludeFromWeb 
													   ,OrigProject,DeploymentModeCsv)
									 --these are unique set of inputs, filtered depending on PartitionMethod from above.  some global handling in this set for transitioning to new iplod
										  SELECT
											RowId = ActReasonInputLinkID
										   ,[ActReasonID] = [ActReasonLinkID]
										   ,InputType =
                											CASE --leave the input type handling here because this Function is used to cull ARs that do not have any inputs
                											  /*******
                																InputType is converted to something meaningful for app here.  however "Fieldtype" is mapped to WebInputytpe in the mapping table, and is used when importing back to staging table.
                														 *********/
                											  WHEN ari.InputType = 'AttrLocn_1' THEN @AttrLocn_1Method
                											  WHEN ari.InputType = 'AttrLocn_2' THEN @AttrLocn_2Method
                											  WHEN ari.InputType = 'AttrLocn_3' THEN @AttrLocn_3Method
                											  WHEN
                												(
                												ari.InputType = 'Stat' AND
                												ari.InputID = 17
                												) THEN 'TrkCount'  --this is the input for adding timestamped truck loads.  will give us back the LogDuration Field. can push back to a flag field and use on other inputs if needed 
                											  WHEN
                												(
                												ari.InputType = 'Stat' AND
                												ari.InputID = 15
                												) THEN 'TimeStamp' --this is timestamp statistic, converts to 4 digit 24hr format
                											  --WHEN @OnlyForApp = 0 AND
                											   -- ari.InputType LIKE '%InGroup%' THEN 'Parameter'
                											  ELSE ISNULL(ari.InputType, 'no map for input type')
                											END
										   ,FieldType =
            											CASE
            											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
            												ari.InputType LIKE '%InGroup%' THEN REPLACE(ari.InputType, 'InGroup', '')
            											  ELSE ari.InputType     --this is for putting correct input type back on upload to server (needs to be on the JSON uploaded)
            											END                -- General.

										   ,InputID =
          											CASE
          											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
          												ari.InputType LIKE '%InGroup%' THEN 1
          											  ELSE ari.InputID
          											END
          											/*case
          																when ari.InputType like 'Attr%' then
          																	ari.InputID * -1
          																else
          																	ari.InputID
          															end  */             --change the attribute inputIDs to -ve so as to avoid confusion to stats or others
          											--alternative method for bringing bog stats back to server (if we decide not to keep the InputType alias field --CASE WHEN  InputType Like '%bog%' THEN cast(Left(inputtype,1)+substring(inputtype,3,1)as int)  ELSE InputID END--get both bog to and bog from IDs out of the INputType name and join together into the ID so the INputIDs are unique.  need to subsitute back in ID=16 when uploading to server
										   ,HelpText = ISNULL(Q.QHelpText, ari.HelpText) /*case
																			 when ari.InputType like 'Q%' then
																				 Q.QHelpText
																			 else
																				 ari.HelpText
																		 end  */ --2019-09-18  already mapped the questions on the join, safe to use IsNULL           --should include this in the mapping table?
										   ,DisplayOrder = DisplayOrder * 100 --force inputs below parameters
										   ,DisplayTrap                                  --display the input
										   ,DataTypeDisplayed = CONVERT(NVARCHAR(255),
											CASE
											  WHEN
												(
												ari.InputType = 'Stat' AND
												ari.InputID = 17
												) THEN 'TrkCount'
											  ELSE ISNULL(Q.AnswerType, CAST(ari.DataTypeDisplayed AS VARCHAR))
											END)
											/*CASE   --2019-04-30 
																  when ari.InputType like 'Q%' then
																	  isnull(Q.AnswerType, '')
																  else
																	  cast(ari.DataTypeDisplayed as varchar)
															  end */                   --data type for user input
										   ,DecPlaces                                    --decimal places, could be combined into new datatypedisplayed format (eg DECIMAL(5,2)
										   ,TimeStampThisInput = LogDuration       --for making timestamp on the input saved
										  /* ,CalcString =
                          											CASE
                          											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
                          												ari.InputType LIKE '%InGroup%' THEN CASE
                          												  WHEN ari.InputType = 'locationInGroup' THEN ' ?'
                          													+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam1}%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
                          													+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam2}%' + CHAR(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
                          													+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam3}%' + CHAR(39) + ') '
                          													+ ') '
                          												  WHEN ari.inputtype = 'MaterialInGroup' THEN ' ?'
                          													+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Material_1|||MatParam1}%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
                          													+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Material_1|||MatParam2}%' + CHAR(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
                          													+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Material_1|||MatParam3}%' + CHAR(39) + ') '
                          													+ ') '
                          												--SELECT * FROM [dbo].[udf_GetCalcFunctions_ForIplod](194,'get_all')
                          												END
                          
                          											  ELSE
                          
                          												/*IIF(LEFT(ISNULL(calcfn.AppCalcFunction,''),2) LIKE '%=%' OR LEFT(ISNULL(calcfn.AppCalcFunction,''),2) LIKE '%*%' OR LEFT(ISNULL(calcfn.AppCalcFunction,''),2) LIKE '%#%'
                          																							,replace ( replace (REPLACE(calcfn.AppCalcFunction,'=','=ROUND(') ,'*','*ROUND('),'#','#ROUND(')
                          																				  + ','+CAST(ISNULL(ari.DecPlaces,0) AS nvarchar)	+')'	--2020-8-08
                          																					--otherwise:
                          																					,ISNULL(calcfn.AppCalcFunction,''))
                          																					--,'') --CalcFunction      --need mapping table for web calc function names vs iplod calc strings.
                          															*/
                          												calcfn.AppCalcFunction
                          
                          											END*/
										   ,ForeLabel = ISNULL(Q.QuestionText, ForeLabel) /*case
																 when ari.InputType like 'Q%' then
																	 Q.QuestionText
																 else
																	 ForeLabel
															 end    */           --should include this in the mapping table?
										   ,AftLabel
										   ,CompulsoryTrap                               --is input compulsory? notify user
										   ,DefaultValue = IIF(AllowDefault = 1, DefaultValue, '') --only send value if allowed                              --existing value to load input with ...  is over-ridden by [DefaultString] if applicable
										   ,ReviewTrap
										   ,IntolerableValues = ISNULL(Q.IntolerableValue, CAST(ISNULL(ari.IntolerableValue, '') AS VARCHAR))
											/*case
																  when ari.InputType like 'Q%' then
																	  isnull(Q.IntolerableValue, '')
																  else
																	  cast(ari.IntolerableValue as varchar)
															  end*/
										   ,InitialValidationMsg = --ISNULL(Qparam.NotificationText, HelpText)         --need new field for this? currently borrowed into here
											CASE
											  WHEN ari.InputType LIKE 'Q%' AND
												Qparam.Category IS NULL THEN ISNULL(Q.NotificationText, '') ----if not mapped to question category, then get the notification text from question table.
											  WHEN ari.InputType LIKE 'Q%' AND
												Qparam.Category IS NOT NULL THEN COALESCE(NULLIF(Qparam.NotificationText, ''), NULLIF(q.NotificationText, ''), '')  --2020-06-26 get from qparam, unless null or ''--otherwise get from question category
											  --ELSE ari.HelpText  --need new field for this? currently borrowed into here
											  ELSE ISNULL(ari.[IV_Text], '')  --2020-04-23 ... grab this field for initial validation. final validation causes valid intolerable and will show review screen on device
											--SELECT * FROM dbo.tbl_DBT_ActReasonInputLink
											END
										   ,FinalValidationMsg =
											CASE
											  WHEN ari.InputType LIKE 'Q%' AND
												Qparam.Category IS NOT NULL THEN ISNULL(Qparam.FinalNotificationText, '')  --final nofification not available on question table yet if mapped to question category, then get from there.
											  --removed 2020-04-23 , FinalValidationMsg triggers teh review screen (valid intolerable) WHEN ari.InputType LIKE 'Q%' AND Qparam.Category IS  NULL THEN ISNULL(Q.NotificationText, '')    --if not mapped to question category, then get the notification text from question table.
											  -- dbo.FN_IsNullorEmpty(Qparam.FinalNotificationText,isnull(Q.NotificationText, ''))  --2020-03-06
											  WHEN ari.InputType LIKE 'Q%' AND
												Qparam.Category IS NULL THEN ''
											  ELSE  --SELECT * FROM dbo.tbl_SYS_Questions
												--SELECT * FROM dbo.tbl_SYS_QuestionCategories												
												--ISNULL(ari.[IV_Text], '')
												''  --mostly don't use the final validation message for non-questions ... if we need to will add a new field?
											END
										   ,InputListSelectionFilter = ''                --could put name of table to query in here?
										   ,Shareable                                    --not used for data entry, used for returning summary stats
										   ,InputGroup                                   --for putting inputs together in a group cycle that can be repeated
										   ,SummaryGroup =
											CASE
											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
												ari.InputType LIKE '%InGroup%' THEN 1
											  ELSE 0
											END
										   ,DisplayInputComments                         --whether to display comment box as well as input so user can add comments against an input.

										   ,TypeCsvOld = ari.[Type]            --need to convert these to integer string
										   ,TypeIdsCsv = '' /* don't do this twice, had to take it to the top to use @DeploymentMode ISNULL((
																	SELECT DISTINCT
																		   ',' + CONVERT(nvarchar(50), TypeID)
																	FROM dbo.udfSplit([Type], ',')  AS CSV
																		INNER JOIN dbo.tbl_SYS_Type AS LookT
																			ON CSV.Item = LookT.TypeCode
																	FOR XML PATH('')
																) + ','
															  , ''

														   )*/
											--this is the handling if user selects Intolerable value
										   ,[TrapIntolerableComment] = COALESCE(NULLIF(Qparam.IntolerableBitWise, ''), NULLIF(q.IntolerableBitWise, ''), TrapIntolerableComment)
											--ISNULL(qparam.IntolerableBitWise, [TrapIntolerableComment])


											--these are regardless of user answer
										   ,[IsInputCommentRequired] = ISNULL(qparam.[IsInputCommentRequired], ari.[IsInputCommentRequired])
										   ,[IsInputPhotoRequired] = ISNULL(qparam.[IsInputPhotoRequired], ari.[IsInputPhotoRequired])
										   ,[IsInputAuthRequired] = ISNULL(qparam.[IsInputAuthRequired], ari.[IsInputAuthRequired])
										   ,KeepOnCopy = 0
										   ,ari.ModifiedOn                               --should combine with questions?
										   ,Param1 =
											CASE
											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
												ari.InputType LIKE '%InGroup%' THEN 'Development'
											  ELSE ''
											END
										   ,Param2 =
											CASE
											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
												ari.InputType LIKE '%InGroup%' THEN 'Production'
											  ELSE ''
											END
										   ,Param3 = ''
										   ,Param4 = ''
										   ,WebCalcString = CalcFunction --for mapping back to the web
										   ,AttrJson =''/*=removed from here, put into the view
											CASE
											  WHEN --don't need this! @OnlyForApp IN (0, 1) AND
												ari.InputType LIKE '%InGroup%' THEN CASE
												  WHEN ari.InputType = 'locationinGroup' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
												  THEN '[{"Key":"LocnParam1","Value":",Production,"}'
													+ ',{"Key":"LocnParam2","Value":",Development,"}'
													--+ iif(isnull(param1,'') <> '' , ',{"Key":"LocnParam2","Value":",'+ isnull(Param2,'') + ',"}','')
													--+ iif(isnull(Param3,'') <> '' , ',{"Key":"LocnParam3","Value":",'+ isnull(Param3,'') + ',"}','')				


													+ ']'
												  WHEN ari.InputType = 'MaterialInGroup' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
												  THEN '[{"Key":"MatParam1","Value":",Production,"}'
													+ ',{"Key":"MatParam2","Value":",Development,"}'
													--	+ iif(isnull(Param2,'') <> '' , ',{"Key":"MatParam2","Value":",'+ isnull(Param2,'') + ',"}','')
													--	+ iif(isnull(Param3,'') <> '' , ',{"Key":"MatParam3","Value":",'+ isnull(Param3,'') + ',"}','')				


													+ ']'
												  ELSE ''
												END
											  ELSE ISNULL(calcfn.AttrJSON, '')
											END*/




										   ,SupportedVersion =0-- ISNULL(calcfn.MinVersionSupported, 0) --defo supported if null!
										   ,Qparam.AdditionalRegex
										   ,td_ReportingBitWise = ari.ReportingBitwise
										   ,ToleranceLower = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, ToleranceLower)  --2021-04-27 
										   ,TL_Text = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, TL_Text)
										   ,ToleranceUpper = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, ToleranceUpper)
										   ,TU_Text = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, TU_Text)
										   ,td_ActivityID=actar.ActivityID
										   ,td_ReasonID =actar.ReasonID
										   ,td_ProcessID =actar.ProcessID
										   , ari.ExcludeFromApp 
													   , ari.ExcludeFromWeb 
													   ,ai.OrigProject
                             ,DeploymentModeCsv = null
										--INTO #inputsprep
										  FROM dbo.tbl_DBT_ActReasonInputLink AS ari WITH (NOLOCK)
										  INNER JOIN #cte_ActiveARs AS actar
											ON actar.ActivityReasonId = ari.[ActReasonLinkID]
										  INNER JOIN #allinputs AS ai
											ON ari.ProjectID = ai.ProjectID
											AND ari.InputType = ai.InputType
											AND ari.InputID = ai.InputID
											AND ari.ActReasonLinkID = ai.ActivityReasonId
										  LEFT JOIN dbo.tbl_SYS_Questions AS Q WITH (NOLOCK)
											ON ari.InputID = Q.QuestionID
											AND ari.InputType LIKE 'Q%'
										  LEFT OUTER JOIN (SELECT
											  *
											FROM [dbo].[udf_GetQuestionDetails](@ProjectID, @Type)) AS Qparam
											ON q.Category = Qparam.category
										 -- OUTER APPLY dbo.udf_GetCalcFunctions_ForIplod(@projectid, ari.CalcFunction) AS calcfn
										  WHERE (
										  (
										  PartitionMethod = 'normal'
										  AND ari.ProjectID = @Projectid
										  )
										  OR (
										  PartitionMethod = 'AR_Project'
										  AND ari.ProjectID = 1
										  ) --just filter on proj1 here ... don't need the RowNum?
										  OR
										  (
										  PartitionMethod = 'AR_Project_Input'
										  AND RowNum_Project_Input = 1
										  )
										  OR (
										  PartitionMethod IN ('AR_Input_Project', 'Normal')  --allowed to whack an input on all projects, without identifying partiion method in special handling table
										  AND RowNum_Input_Project = 1
										  AND ari.ProjectID = 2  --2020-07-28 
										  )
										  )
                      
										  --only get inputs that are on active tasks for @ProjectID
										  --2021-05-24 switch from exists to inner join so we can grab the act/proc/reason IDs
										  --and EXISTS
										  --(
										  --    SELECT ActivityReasonId
										  --    FROM #cte_ActiveARs actar
										  --    WHERE actar.ActivityReasonId = ari.[ActReasonLinkID]
										  --	--cte_ActiveARs.ActivityReasonId is always going to exist!
										  --)
										  AND ari.ProjectID IN (@Projectid, 1, 2)
                     and  actar.IsSpecialTemplate = 0 --2022-10-06
                     /*not exists ( --get these from fixed config below
                          select tdarshl.ActReasonID
                          from dbo.tbl_DBT_ActReasonSpecialHandlingLink as tdarshl
                          where tdarshl.AR_Groupingname in ('ARTemplatesShiftSummary', 'ShiftSummaryWorkflowActivityReasonIdCsv', 'ShiftSummaryActivityReasonNonFinaliseIdsCSV')
                            and tdarshl.ActReasonID = ari.ActReasonLinkID)
                            */
										  --2021-04-07   AND ((ISNULL(ExcludeFromApp, 0) <> 1 AND @OnlyForApp = 1) 
										  --	OR (ISNULL(ExcludeFromApp, 0)+ISNULL(ExcludeFromWeb, 0) <> 2 AND @OnlyForApp = 0))  --if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)
										/*doing this latere now  AND (((ExcludeFromApp <> 1
										  OR ari.ExcludeFromApp IS NULL)
										  AND @OnlyForApp = 1)
										  OR (ExcludeFromApp + ExcludeFromWeb IN (0, 1, NULL)
										  AND @OnlyForApp = 0))  --if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)
										  */
										  --dont get unmapped statcalcs to device
										 --shift this to down bottom too AND NOT ((calcfn.AppCalcFunction = ''
										--  OR calcfn.AppCalcFunction IS NULL)
										 -- AND ari.InputType LIKE '%calc%'
									   --   AND @OnlyForApp = 1) --200-07-10  2020-07-22  added @onlyForapp just to be sure
										  --  AND NOT (@OnlyForApp = 0 AND ari.InputType = 'SummaryCalc') --2020-07-27 better to get iplodinputmappings ExcludeFromImport?  should be covered down the bottom with ExcludeFromImport
										--  AND 1=2

										 -- UNION ALL
									/*SELECT  QUOTENAME([name]) + ',' as ColumnName,
											TYPE_NAME(user_type_id) as DataTypeName, * 
									FROM tempdb.sys.columns 
									WHERE OBJECT_ID = OBJECT_ID('tempdb..#inputsprep');	 
									*/
									IF @ShowTimings =1 SELECT '#inputsprep_1stOneINserted'=GETDATE();

		--START DOING A FEW MORE INSERTS OF TASK DETAILS (USING UNION)
			 --add the parameters and whatnot
												INSERT INTO #inputsprep 
																			([RowId],
																			[ActReasonID],
																			[InputType],
																			[FieldType],
																			[InputID],
																			[HelpText],
																			[DisplayOrder],
																			[DisplayTrap],
																			[DataTypeDisplayed],
																			[DecPlaces],
																			[TimeStampThisInput],
																		--	[CalcString],
																			[ForeLabel],
																			[AftLabel],
																			[CompulsoryTrap],
																			[DefaultValue],
																			[ReviewTrap],
																			[IntolerableValues],
																			[InitialValidationMsg],
																			[FinalValidationMsg],
																			[InputListSelectionFilter],
																			[Shareable],
																			[InputGroup],
																			[SummaryGroup],
																			[DisplayInputComments],
																			[TypeCsvOld],
																			[TypeIdsCsv],
																			[TrapIntolerableComment],
																			[IsInputCommentRequired],
																			[IsInputPhotoRequired],
																			[IsInputAuthRequired],
																			[KeepOnCopy],
																			[ModifiedOn],
																			[Param1],
																			[Param2],
																			[Param3],
																			[Param4],
																			[WebCalcString],
																			[AttrJson],
																			[SupportedVersion],
																			[AdditionalRegex],
																			[td_ReportingBitWise],
																			[ToleranceLower],
																			[TL_Text],
																			[ToleranceUpper],
																			[TU_Text],
																			[td_ActivityID],
																			[td_ReasonID],
																			[td_ProcessID], ExcludeFromApp 
															   , ExcludeFromWeb ,OrigProject,DeploymentModeCsv)
											
                          												  SELECT [RowId],								[ActReasonID],								[InputType],								[FieldType],								[InputID],								[HelpText],								[DisplayOrder],								[DisplayTrap],								[DataTypeDisplayed],
																			[DecPlaces],								[TimeStampThisInput],							--	[CalcString],
                                      								[ForeLabel],								[AftLabel],								[CompulsoryTrap],								[DefaultValue],								[ReviewTrap],								[IntolerableValues],
																			[InitialValidationMsg],								[FinalValidationMsg],								[InputListSelectionFilter],								[Shareable],								[InputGroup],								[SummaryGroup],								[DisplayInputComments],
																			[TypeCsvOld],								[TypeIdsCsv],								[TrapIntolerableComment],								[IsInputCommentRequired],								[IsInputPhotoRequired],								[IsInputAuthRequired],								[KeepOnCopy],
																			[ModifiedOn],								[Param1],								[Param2],								[Param3],								[Param4],								[WebCalcString],								[AttrJson]='',								[SupportedVersion],								[AdditionalRegex],
																			[td_ReportingBitWise],								[ToleranceLower],								[TL_Text],								[ToleranceUpper],								[TU_Text],								[td_ActivityID],								[td_ReasonID],								[td_ProcessID] 
																			, ExcludeFromApp 
															   , ExcludeFromWeb , OrigProject,DeploymentModeCsv
                              
																		  FROM (  
		--GRAB THE SPECIALS																  
																		  SELECT     RowId                    = ActReasonInputLinkID *-1 --otherwise will get duplicates!!! device doesnt like
																				   , [ActReasonID]       = tasks.ActivityReasonId  --[ActReasonLinkID]
																				   , InputType                = CASE /*--leave the input type handling here because this Function is used to cull ARs that do not have any inputs
																													when ari.InputType = 'AttrLocn_1' then
																														@AttrLocn_1Method
																													when ari.InputType = 'AttrLocn_2' then
																														@AttrLocn_2Method
																													when ari.InputType = 'AttrLocn_3' then
																														@AttrLocn_3Method
																													when
																													(
																														ari.InputType = 'Stat'
																														and ari.InputID = 17
																													) then
																														'TrkCount'*/  --this is the input for adding timestamped truck loads.  will give us back the LogDuration Field. can push back to a flag field and use on other inputs if needed 
																													WHEN
																													(
																														ari.InputType = 'Stat'
																														AND ari.InputID = 15
																													) THEN
																														'TimeStamp' --this is timestamp statistic, converts to 4 digit 24hr format
																													ELSE
																														ISNULL(ari.InputType, 'no map for input type')
																												END
																				   , FieldType                = ari.InputType     --this is for putting correct input type back on upload to server (needs to be on the JSON uploaded)
																																  -- General.
																				   , InputID                  =  ari.InputID /*case
																													when ari.InputType like 'Attr%' then
																														ari.InputID * -1
																													else
																														ari.InputID
																												end  */             --change the attribute inputIDs to -ve so as to avoid confusion to stats or others
																																  --alternative method for bringing bog stats back to server (if we decide not to keep the InputType alias field --CASE WHEN  InputType Like '%bog%' THEN cast(Left(inputtype,1)+substring(inputtype,3,1)as int)  ELSE InputID END--get both bog to and bog from IDs out of the INputType name and join together into the ID so the INputIDs are unique.  need to subsitute back in ID=16 when uploading to server
																				   , HelpText =ISNULL(Q.QHelpText,ari.HelpText) /*case
																													when ari.InputType like 'Q%' then
																														Q.QHelpText
																													else
																														ari.HelpText
																												end  */ --2019-09-18  already mapped the questions on the join, safe to use IsNULL           --should include this in the mapping table?
																				   , DisplayOrder             =iif(ari.InputID = 6331,displayorder *100000  --hard coded hackery to put this question at the bottom. should shift to specialhandling or something I guess
                              																											, DisplayOrder *-1)  -- will put these ones at top of task.  will need to fix somehow if want to get some to the end of the task--* 10 --force inputs below parameters
																				   , DisplayTrap                                  --display the input
																				   , DataTypeDisplayed       = ISNULL(Q.AnswerType,CAST(ari.DataTypeDisplayed AS varchar)) /*CASE   --2019-04-30 
																													when ari.InputType like 'Q%' then
																														isnull(Q.AnswerType, '')
																													else
																														cast(ari.DataTypeDisplayed as varchar)
																												end */                   --data type for user input
																				   , DecPlaces                                    --decimal places, could be combined into new datatypedisplayed format (eg DECIMAL(5,2)
																				   , TimeStampThisInput       = LogDuration       --for making timestamp on the input saved
																				 --  , CalcString              =ISNULL(calcfn.AppCalcFunction,'') --        --need mapping table for web calc function names vs iplod calc strings.
																				  
																				  , ForeLabel                = ISNULL(Q.QuestionText,ForeLabel) /*case
																													when ari.InputType like 'Q%' then
																														Q.QuestionText
																													else
																														ForeLabel
																												end    */           --should include this in the mapping table?
																				   , AftLabel
																				   , CompulsoryTrap                               --is input compulsory? notify user
																				   , DefaultValue     = IIF(AllowDefault=1 ,DefaultValue,'') --only send value if allowed                            --existing value to load input with ...  is over-ridden by [DefaultString] if applicable
																				   , ReviewTrap
																				   , IntolerableValues        = ISNULL(Q.IntolerableValue,CAST(ISNULL(ari.IntolerableValue,'') AS varchar))
                              																					/*case
																													when ari.InputType like 'Q%' then
																														isnull(Q.IntolerableValue, '')
																													else
																														cast(ari.IntolerableValue as varchar)
																												end*/
																				   , InitialValidationMsg     = --ISNULL(Qparam.NotificationText, HelpText)         --need new field for this? currently borrowed into here
                              																					CASE WHEN  ari.InputType LIKE 'Q%' AND Qparam.Category IS  NULL THEN ISNULL(Q.NotificationText, '') ----if not mapped to question category, then get the notification text from question table.
                              																							WHEN  ari.InputType LIKE 'Q%' AND Qparam.Category IS NOT NULL THEN COALESCE(NULLIF(Qparam.NotificationText,''),NULLIF(q.NotificationText,''), '') --otherwise get from question category
                              
                              																							ELSE ari.HelpText  --need new field for this? currently borrowed into here
                              																								end
                              													, FinalValidationMsg       = CASE
																													WHEN ari.InputType LIKE 'Q%' AND Qparam.Category IS NOT NULL THEN ISNULL(Qparam.FinalNotificationText,'')  --if mapped to question category, then get from there.
                              																					 --removed 2020-04-23 , FinalValidationMsg triggers teh review screen (valid intolerable) WHEN ari.InputType LIKE 'Q%' AND Qparam.Category IS  NULL THEN ISNULL(Q.NotificationText, '')    --if not mapped to question category, then get the notification text from question table.
																												   -- dbo.FN_IsNullorEmpty(Qparam.FinalNotificationText,isnull(Q.NotificationText, ''))  --2020-03-06
																													WHEN  ari.InputType LIKE 'Q%' AND Qparam.Category IS  NULL THEN ''
                              																					  ELSE  --SELECT * FROM dbo.tbl_SYS_Questions
																														ISNULL(ari.[IV_Text], '')
																												END 
																				   , InputListSelectionFilter = ''                --could put name of table to query in here?
																				   , Shareable                                    --not used for data entry, used for returning summary stats
																				   , InputGroup                                   --for putting inputs together in a group cycle that can be repeated
																				   , SummaryGroup             = 0
																				   , DisplayInputComments                         --whether to display comment box as well as input so user can add comments against an input.
                              
																				   , TypeCsvOld               = ari.[Type]  /*CASE WHEN tasks.ActivityID IN (4,5,6) THEN 'Maint'
                              																						CASE WHEN tasks.ActivityID IN (4,5,6) THEN 'Maint'	--miners don't need to do a TWI for Equip breakdowns! might be changed? should put to config somehow
                              																					--WHEN 
                              																					ELSE 'Mining,Maint'
                              																					END */  --[Type]            --need to convert these to integer string
																				   , TypeIdsCsv               = --CASE WHEN tasks.ActivityID IN (4,5,6) THEN ',3,'	--miners don't need to do a TWI for Equip breakdowns! might be changed? should put to config somehow 2019-12-09
                              																					--ELSE ',1,3,'
                              																					--enD 
                              																						ISNULL((
																														   select distinct
																																  ',' + convert(nvarchar(50), TypeID)
																														   from dbo.udfSplit(ari.[Type], ',')  as CSV
																															   inner join dbo.tbl_SYS_Type as LookT
																																   on CSV.Item = LookT.TypeCode
																														   for xml path('')
																													   ) + ','
																													 , ''
                              
                              																					   )
                              													  --this is the handling if user selects Intolerable value
                              													 ,[TrapIntolerableComment] =  COALESCE(NULLIF(Qparam.IntolerableBitWise,''),NULLIF(q.IntolerableBitWise,''), TrapIntolerableComment)
                              
                              
                              
                              
                              
                              
                              													 --these are regardless of user answer
                              													 ,[IsInputCommentRequired] = ISNULL(qparam.[IsInputCommentRequired], ari.[IsInputCommentRequired])
                              													 ,[IsInputPhotoRequired] = ISNULL(qparam.[IsInputPhotoRequired], ari.[IsInputPhotoRequired])
                              													 ,[IsInputAuthRequired] = ISNULL(qparam.[IsInputAuthRequired], ari.[IsInputAuthRequired])
																				   , KeepOnCopy               = 0
																				   , ari.ModifiedOn                               --should combine with questions?
                              		 												  ,Param1=''
                              												  ,Param2 =''
                              												  ,Param3 = ''
                              												  ,Param4 =''
                                                        ,WebCalcString = ari.CalcFunction
                              												  ,td_ActivityID = tasks.ActivityID
																			  ,td_ProcessId = tasks.processid
																			  ,td_ReasonId = tasks.reasonid
                              												  ,RowNum = ROW_NUMBER() OVER (PARTITION BY tasks.ActivityReasonId,ari.inputtype,ari.inputid ORDER BY tasks.ActivityReasonId,ari.inputtype,ari.inputid,ari.projectid desc )
                              												  ,[td_ReportingBitwise]= [ari].[ReportingBitwise]
																			  ,SupportedVersion =0-- ISNULL(calcfn.MinVersionSupported, 0)
																			  ,Qparam.AdditionalRegex
																					 ,ToleranceLower = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, ToleranceLower)  --2021-04-27 
																				   ,TL_Text = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, TL_Text)
																				   ,ToleranceUpper = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, ToleranceUpper)
																				   ,TU_Text = IIF(ari.InputType LIKE 'Q%' OR ari.InputType = 'pagebreak', NULL, TU_Text)
																				   , ExcludeFromApp = ISNULL(ExcludeFromApp,0)
																				   , ExcludeFromWeb --2022-10-19 use the flag on the table instead of hard coding it.= 1  --exclude all special inputs from web.
																				   ,OrigProject = -1  ---1 is special
                                           ,DeploymentModeCsv = NULL
																			  FROM dbo.tbl_DBT_ActReasonInputLink AS ari WITH (NOLOCK)
																				 LEFT JOIN dbo.tbl_SYS_Questions AS Q WITH (NOLOCK)
																					  ON ari.InputID = Q.QuestionID
																						 AND ari.InputType LIKE 'Q%'
																		  LEFT OUTER JOIN (SELECT * FROM [dbo].[udf_GetQuestionDetails](@ProjectID, @Type)) AS Qparam
                              														ON q.Category = Qparam.category
																			  cross JOIN #cte_ActiveARs AS tasks
                              											--	   OUTER APPLY dbo.udf_GetCalcFunctions_ForIplod(@projectid,ari.CalcFunction) AS calcfn	
																			  WHERE ari.projectID in ( 1,@ProjectID)
                              												AND ari.ActReasonLinkID = @AR_GetINputForAllTasks--205 --get actual one from config soemwhere
                              												AND (activityId IN (1,4,5,6) -- put this on config somewhere if need to change 
                  																				  OR (ari.InputType = 'statcalc' and inputid = 7)  --let the duration one come in. can add others here programtically, might need to grease them through in the iplodSetup_inputs proc too.
                  																				  )
                              												AND tasks.IsSpecialTemplate = 0 
																		  AND NOT (ari.InputType = 'Stat' AND ari.InputID = 7)  --2019-12-06
																				--    AND ((ISNULL(ExcludeFromApp, 0) <> 1 AND @OnlyForApp = 1) 
                              																	--OR (ISNULL(ExcludeFromApp, 0)+ISNULL(ExcludeFromWeb, 0) <> 2 AND @OnlyForApp = 0))  --if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)
                              
                              												--	and (((ExcludeFromApp  <> 1  or ari.ExcludeFromApp is null) and @OnlyForApp = 1) 
                              																	--OR (ExcludeFromApp+ExcludeFromWeb in (0,1,null) AND @OnlyForApp = 0))  --if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)
                              													--				OR (ExcludeFromWeb in (0,null) AND @OnlyForApp = 0)) --for the speicals, use the excludefromweb checkbos for its intended purpose.
                              												--remove from web: 2020-04-17
                              												--AND @OnlyForApp =1
                              												--removed again 2021-07-12. put "excludeFromImprot" filter below on the join	
																			  ) AS specials 
																			  where RowNum  =1 



											union all

	--set of parameters (not able to customise parameters for projects if they come from Project1)
												  SELECT
													-- Mining Specific Return Fields.
													RowId = ParamSU_ID
												   ,[ActReasonID]=DBT.ActivityReasonID
												   ,InputType = 'Parameter'
												   ,[FieldType] = DBT.FieldName /*=
													CASE
													  WHEN @OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 'HaulRoute'  ----2020-05-25 special handling for combining into one for app (not supported in the web yet)
													  WHEN @OnlyForApp = 1 AND
														DBT.FieldName = 'RelatedEquipment' AND
														aar.ProcessID = 4 THEN 'RelatedEquipmentUJ' --2020-07-22, swticheroo for jumboer list on chargeup tasks. because we don't have filtering in the uigroupgroup lists. have added a dataset in UI_GroupGroup to match this.
													  ELSE FieldName
													END--these are the only ones that are allowed to be copied when user copy task
													*/
													-- General.
												   ,[InputID] = 1
												   ,HelpText
												   ,[DisplayOrder] =
													CASE
													  WHEN Fieldname = 'CommentsCheck' THEN 1000000
													  ELSE DBT.DisplayOrder
													END
												   ,[DisplayTrap] = 1
												   ,[DataTypeDisplayed] = ''
												   ,[DecPlaces] = 0
												   ,TimeStampThisInput = 0
												--   ,[CalcString] =''
                           /*=
													CASE
													  WHEN DBT.FieldName = 'location' THEN ' ?'
														+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam1}%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam2}%' + CHAR(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam3}%' + CHAR(39) + ') '
														+ ') '
													  WHEN DBT.FieldName = 'Material' THEN ' ?'
														+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Material_1|||MatParam1}%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Material_1|||MatParam2}%' + CHAR(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Material_1|||MatParam3}%' + CHAR(39) + ') '
														+ ') '
													  WHEN DBT.FieldName = 'RefNo' THEN ' ?'
														+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%,{TaskHeader|||EquipmentCode},%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%,ALLEQUIP,%' + CHAR(39) + ') '
														+ ') '



													  ELSE ''
													END*/
												   ,[ForeLabel] =[DisplayLabel]
													/*CASE
													  WHEN @OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 'Haul Route'  ----2020-05-25 special handling for combining into one for app (not supported in the web yet)
													  ELSE [DisplayLabel]
													END*/
												   ,[AftLabel] = ''
												   ,[CompulsoryTrap] = [EntryTrap]
												   ,[DefaultValue] = IIF(DBT.AllowDefault = 1, DBT.DefaultValue, '') --only send value if allowed
												   ,[ReviewTrap]
												   ,IntolerableValues = null
													/*CASE
													  WHEN --@OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN '-1'  ----2020-05-25 special handling for missing haul route
													  WHEN --@OnlyForApp = 1 AND
														@ShowzzDummyLocnInIplod = 1 AND
														DBT.FieldName = 'location' THEN '-1'  --2021-06-04
													  --could nearly replace this CASES and just set intolerable to be -1 for all parameter fields?
													  ELSE NULL
													END*/
												   ,InitialValidationMsg =
													CASE
													  WHEN --@OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 'Please write the actual haul route in comments'  ----2020-05-25 special handling for missing haul route
													  ELSE NULL
													END
												   ,FinalValidationMsg = NULL
												   ,InputListSelectionFilter = ISNULL([Param1], '') + ',' + ISNULL([Param2], '') + ',' + ISNULL([Param3], '') + ','
													+ ISNULL([Param4], '')
												   ,[Shareable] = ''
												   ,[InputGroup] = ''
												   ,[SummaryGroup]                         --used to summarising in reports
												   ,[DisplayInputComments] = 0
												   ,TypeCsvOld =
													CASE
													  WHEN @IsFixedParams4Maint = 1 AND
														aar.ActivityID IN (4, 5, 6)/*--2021-05-24*/ THEN REPLACE(REPLACE(dbt.[Type], 'ServiceSheets', ''), 'maint', '')      --2021-05-05--need to kill out type here (web app still uses varchar type) --need to convert these to integer string
													  --when @IsFixedParams4SrvcSheets = 1 then replace (dbt.[Type] ,'ServiceSheets','') --2021-05-05--not sure if this will kill both?? might need to nest them
													  ELSE dbt.[Type]
													END
												   ,TypeIdsCsv = '' /* don't do this twice, had to take it to the top to use @DeploymentMode  ISNULL((
																				SELECT DISTINCT
																					   ',' + CONVERT(nvarchar(50), TypeID)
																				FROM dbo.udfSplit(dbt.[Type], ',')  AS CSV
																					INNER JOIN dbo.tbl_SYS_Type AS LookT
																						ON CSV.Item = LookT.TypeCode
																		where not exists(select fp.ActivityReasonId from @AR_FixedParamsForAllTasks as fp  --2021-05-05don't get Type for types where we set all params on a zz task
																									where   LookT.TypeCode =    fp.type)
																				FOR XML PATH('')
																			) + ','
																		  , ''
																		   )*/

												   ,[TrapIntolerableComment] =
													CASE
													  WHEN --@OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 8  ----2020-05-25 special handling for missing haul route 
													  WHEN --@OnlyForApp = 1 AND
														@ShowzzDummyLocnInIplod = 1 AND
														DBT.FieldName = 'location' THEN 8
													  ELSE 1
													END
												   ,[IsInputCommentRequired] = 0
												   ,[IsInputPhotoRequired] = 0
												   ,[IsInputAuthRequired] = 0

												   ,KeepOnCopy =
													CASE
													  WHEN aar.ActivityID = 1 AND
														DBT.FieldName <> 'CommentsCheck' THEN 1
													  ELSE 0
													END
												   ,dbt.ModifiedOn
												   ,DBT.Param1
												   ,DBT.Param2
												   ,DBT.Param3
												   ,DBT.Param4
												   ,WebCalcString = ''
												   ,AttrJson =''/*=
													CASE
													  WHEN DBT.FieldName = 'location' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
													  THEN '[{"Key":"LocnParam1","Value":",' + dbo.FN_IsNotNullorEmpty(DBT.Param1, DBT.Param1, 'AllActive') + ',"}'
														+ IIF(ISNULL(DBT.Param2, '') <> '', ',{"Key":"LocnParam2","Value":",' + ISNULL(DBT.Param2, '') + ',"}', '')
														+ IIF(ISNULL(DBT.Param3, '') <> '', ',{"Key":"LocnParam3","Value":",' + ISNULL(DBT.Param3, '') + ',"}', '')


														+ ']'
													  WHEN DBT.FieldName = 'Material' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
													  THEN '[{"Key":"MatParam1","Value":",' + dbo.FN_IsNotNullorEmpty(DBT.Param1, DBT.Param1, 'AllActive') + ',"}'
														+ IIF(ISNULL(DBT.Param2, '') <> '', ',{"Key":"MatParam2","Value":",' + ISNULL(DBT.Param2, '') + ',"}', '')
														+ IIF(ISNULL(DBT.Param3, '') <> '', ',{"Key":"MatParam3","Value":",' + ISNULL(DBT.Param3, '') + ',"}', '')


														+ ']'
													  ELSE ''
													END*/
												   ,SupportedVersion = 0--can't do it here becuase it will kill locaiton field!!!. do it in the final iif (DBT.FieldName = 'location',20210220,0) 
												   ,AdditionalRegex = null
												   ,td_ReportingBitWise = DBT.ReportingBitwise --add field to the params table?!
												   ,ToleranceLower = null
												   ,TL_Text = null
												   ,ToleranceUpper = NULL
												   ,TU_Text = NULL
												   ,td_ActivityID=aar.ActivityID
												   ,td_ReasonID =aar.ReasonID
												   ,td_ProcessID =aar.ProcessID
												   , ExcludeFromApp = case when aar.CombinedHaulRoute > 0  AND fieldname = 'LoadedFrom' then 1 
																	  else  ISNULL(ExcludeFromApp,0) end
													, ExcludeFromWeb =0
													, OrigProject = DBT.ProjectID
                          ,DeploymentModeCsv = NULL
												  --, DBT.ReportingBitwise
												  FROM dbo.tbl_DBT_ParameterSetup AS DBT WITH (NOLOCK)
												  LEFT JOIN (SELECT DISTINCT
													  ActReasonID
													FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WITH (NOLOCK)
													WHERE ProjectID = 1
													AND PartitionMethod = 'AR_Project'  --2020-06-26 this means all elements of a task come from Project1..  more sophisticated partition methods not available on parameters
													AND AR_GroupingName <> 'AR_TWIs'
													OR (
													AR_GroupingName = 'AR_TWIs'
													AND @TwiAlias = 'TWI'
													)) AS Proj1
													ON DBT.ActivityReasonID = Proj1.ActReasonID
												  --LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS arl WITH (NOLOCK) 
												  --ON DBT.ActivityReasonID = arl.ActivityreasonLinkID
												  INNER JOIN #cte_ActiveARs AS aar
													ON DBT.ActivityReasonID = aar.ActivityReasonId
												  WHERE -- ISNULL(ExcludeFromApp, 0) <> 1
												  /*(((ExcludeFromApp <> 1
												  OR ExcludeFromApp IS NULL)
												  AND @OnlyForApp = 1)
												  OR (@OnlyForApp = 0))  --if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)
												  AND*/
												  ((
												  ProjectID = @Projectid
												  AND Proj1.ActReasonID IS NULL
												  ) --get from @Project
												  OR
												  (
												  Proj1.ActReasonID IS NOT NULL
												  AND DBT.ProjectID = 1
												  ) --or get from Project1
												  ) --2020-03-27

												  --AND NOT (@OnlyForApp = 1
												  --AND aar.CombinedHaulRoute > 0
												  --AND fieldname = 'LoadedFrom') --2020-05-25. haulroute remove or expand this as necessry, is for sending only one haul route field to the app.
												 -- AND 1=2


												  UNION ALL

 --set of parameters for fixed param templates, SErvice Sheets
												  SELECT
													-- Mining Specific Return Fields.
													RowId = ParamSU_ID
												   ,[ActReasonID] = aar.ActivityReasonID
												   ,InputType = 'Parameter'
												   ,[FieldType] = DBT.FieldName /*=
													CASE
													  WHEN @OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 'HaulRoute'  ----2020-05-25 special handling for combining into one for app (not supported in the web yet)
													  WHEN @OnlyForApp = 1 AND
														DBT.FieldName = 'RelatedEquipment' AND
														aar.ProcessID = 4 THEN 'RelatedEquipmentUJ' --2020-07-22, swticheroo for jumboer list on chargeup tasks. because we don't have filtering in the uigroupgroup lists. have added a dataset in UI_GroupGroup to match this.
													  ELSE FieldName
													END--these are the only ones that are allowed to be copied when user copy task
													*/
													-- General.
												   ,[InputID] = 1
												   ,HelpText
												   ,[DisplayOrder] --leave it up teh top! we don't put commenst on service sheets anyway= CASE WHEN Fieldname = 'CommentsCheck' THEN 10000 ELSE DBT.DisplayOrder END
												   ,[DisplayTrap] = 1
												   ,[DataTypeDisplayed] = ''
												   ,[DecPlaces] = 0
												   ,TimeStampThisInput = 0
												   --,[CalcString] =''
													/*CASE
													  WHEN DBT.FieldName = 'location' THEN ' ?'
														+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam1}%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam2}%' + CHAR(39) + ') '  --2021-04-19, don't put commas here, they are already included in LocnParam values in teh attrJson beloew
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%{Location_1|||LocnParam3}%' + CHAR(39) + ') '
														+ ') '
													  WHEN DBT.FieldName = 'RefNo' THEN ' ?'
														+ '((UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%,{TaskHeader|||EquipmentCode},%' + CHAR(39) + ') '  --blank in param1 field will result in all active locns
														+ ' OR (UIGroupGroupDetailFilterCsv LIKE ' + CHAR(39) + '%,ALLEQUIP,%' + CHAR(39) + ') '
														+ ') '



													  ELSE ''
													END*/
												   ,[ForeLabel] =[DisplayLabel]
													/*CASE
													  WHEN @OnlyForApp = 1 AND
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 'Haul Route'  ----2020-05-25 special handling for combining into one for app (not supported in the web yet)
													  ELSE [DisplayLabel]
													END*/
												   ,[AftLabel] = ''
												   ,[CompulsoryTrap] = [EntryTrap]
												   ,[DefaultValue] = IIF(DBT.AllowDefault = 1, DBT.DefaultValue, '') --only send value if allowed
												   ,[ReviewTrap]
												   ,IntolerableValues =null /*=
													CASE
													  WHEN --@OnlyForApp = 1 AND--don't need to only push this to app, because this field is not used in web anyway!
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN '-1'  ----2020-05-25 special handling for missing haul route
													  ELSE NULL
													END*/
												   ,InitialValidationMsg = null
													/*CASE
													  WHEN --@OnlyForApp = 1 AND--don't need to only push this to app, because this field is not used in web anyway!
														aar.CombinedHaulRoute > 0 AND
														DBT.FieldName = 'destination' THEN 'Please write the actual haul route in comments'  ----2020-05-25 special handling for missing haul route
													  ELSE NULL
													END*/
												   ,FinalValidationMsg = NULL
												   ,InputListSelectionFilter ='' /*= ISNULL([Param1], '') + ',' + ISNULL([Param2], '') + ',' + ISNULL([Param3], '') + ','
													+ ISNULL([Param4], '')*/
												   ,[Shareable] = ''
												   ,[InputGroup] = ''
												   ,[SummaryGroup]                         --used to summarising in reports
												   ,[DisplayInputComments] = 0
												   ,TypeCsvOld = dbt.[Type]
												   ,TypeIdsCsv = '' /* don't do this twice, had to take it to the top to use @DeploymentMode  ISNULL((
																				SELECT DISTINCT
																					   ',' + CONVERT(nvarchar(50), TypeID)
																				FROM dbo.udfSplit(dbt.[Type], ',')  AS CSV
																					INNER JOIN dbo.tbl_SYS_Type AS LookT
																						ON CSV.Item = LookT.TypeCode

																				FOR XML PATH('')
																			) + ','
																		  , ''
																		   )*/

												   ,[TrapIntolerableComment] =null /*=
																			  CASE
																				WHEN --@OnlyForApp = 1 and  --don't need to only push this to app, because this field is not used in web anyway!
																				  aar.CombinedHaulRoute > 0 AND
																					  DBT.FieldName = 'destination' THEN 8  ----2020-05-25 special handling for missing haul route
																					ELSE 1
																				  END*/
												   ,[IsInputCommentRequired] = 0
												   ,[IsInputPhotoRequired] = 0
												   ,[IsInputAuthRequired] = 0

												   ,KeepOnCopy=0 /*=
													CASE
													  WHEN aar.ActivityID = 1 AND
														DBT.FieldName <> 'CommentsCheck' THEN 1
													  ELSE 0
													END*/
												   ,dbt.ModifiedOn
												   ,DBT.Param1
												   ,DBT.Param2
												   ,DBT.Param3
												   ,DBT.Param4
												   ,WebCalcString = ''
												   ,AttrJson =''/*
													CASE
													  WHEN DBT.FieldName = 'location' -- and isnull(DBT.Param1,'') <> '' --if the first one is blank, then assume "AllActive"
													  THEN '[{"Key":"LocnParam1","Value":",' + dbo.FN_IsNotNullorEmpty(DBT.Param1, DBT.Param1, 'AllActive') + ',"}'
														+ IIF(ISNULL(DBT.Param2, '') <> '', ',{"Key":"LocnParam2","Value":",' + ISNULL(DBT.Param2, '') + ',"}', '')
														+ IIF(ISNULL(DBT.Param3, '') <> '', ',{"Key":"LocnParam3","Value":",' + ISNULL(DBT.Param3, '') + ',"}', '')


														+ ']'
													  ELSE ''
													END*/
												   ,SupportedVersion = 0--can't do it here becuase it will kill locaiton field!!!. do it in the final iif (DBT.FieldName = 'location',20210220,0) 
												   ,AdditionalRegex = ''
												   ,td_ReportingBitWise = 0 --add field to the params table?!
												   ,ToleranceLower = NULL
												   ,TL_Text = NULL
												   ,ToleranceUpper = NULL
												   ,TU_Text = NULL
												   ,td_ActivityID=aar.ActivityID
												   ,td_ReasonID =aar.ReasonID
												   ,td_ProcessID =aar.ProcessID
												   , ExcludeFromApp = ISNULL(ExcludeFromApp,0)/*= case when aar.CombinedHaulRoute > 0  AND fieldname = 'LoadedFrom' then 1 
																	  else ExcludeFromApp end*/
															   , ExcludeFromWeb =0
															   , OrigProject = -1  --2022-10-19 DBT.ProjectID
                                 ,DeploymentModeCsv = NULL
												FROM #cte_ActiveARs AS aar
												  INNER JOIN dbo.tbl_DBT_ParameterSetup AS DBT WITH (NOLOCK)
													ON ((@IsFixedParams4Maint = 1
													AND (DBT.Type LIKE '%ServiceSheets%'
													OR DBT.Type LIKE '%Maint%')
													AND aar.IsServiceSheet > 0
													AND EXISTS (SELECT
														fp.ActivityReasonId
													  FROM @AR_FixedParamsForAllTasks AS fp
													  WHERE dbt.ActivityReasonID = fp.ActivityReasonId
													  AND fp.IsServiceSheet = 1)
													)  --only get from template
													OR (@IsFixedParams4Maint = 1
													AND (DBT.Type LIKE '%ServiceSheets%'
													OR DBT.Type LIKE '%Maint%')
													AND aar.IsServiceSheet = 0
													AND (aar.Type LIKE '%ServiceSheets%'
													OR aar.Type LIKE '%Maint%')  --non-service sheets may be on other types!
													AND EXISTS (SELECT
														fp.ActivityReasonId
													  FROM @AR_FixedParamsForAllTasks AS fp
													  WHERE dbt.ActivityReasonID = fp.ActivityReasonId
													  AND fp.IsServiceSheet = 0)
													)  --only get from template

													)
												  -- just get all from project 1!  LEFT JOIN
												  --   (
												  --       SELECT DISTINCT
												  --              ActReasonID
												  --       FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WITH (NOLOCK) 
												  --       WHERE ProjectID = 1
												  --and PartitionMethod = 'AR_Project'  --2020-06-26 this means all elements of a task come from Project1..  more sophisticated partition methods not available on parameters
												  --             AND AR_GroupingName <> 'AR_TWIs'
												  --             OR
												  --             (
												  --                 AR_GroupingName = 'AR_TWIs'
												  --                 AND @TwiAlias = 'TWI'
												  --             )
												  --   )                           AS Proj1
												  --       ON DBT.ActivityReasonID = Proj1.ActReasonID
												  -- LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS arl WITH (NOLOCK) 
												  -- ON DBT.ActivityReasonID = arl.ActivityreasonLinkID
												  ---- inner JOIN #cte_ActiveARs AS aar

												  --ON DBT.ActivityReasonID = aar.ActivityReasonId
												  WHERE -- ISNULL(ExcludeFromApp, 0) <> 1
												  aar.ActivityID IN (4, 5, 6)  --2021-05-24
												 /* AND (((ExcludeFromApp <> 1
												  OR ExcludeFromApp IS NULL)
												  AND @OnlyForApp = 1)
												  OR (@OnlyForApp = 0)) */ --if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)
												  AND DBT.ProjectID = 1 --just get all from proejct 1 to speed up query time.  set this to @Project for situations other than Pybar maybe? or get the query working better. or get from @Project + Proj1 and rownum it
												  AND aar.IsSpecialTemplate = 0
												  --AND 1=2
												  --      ((
												  --          ProjectID = @Projectid
												  --          AND Proj1.ActReasonID IS NULL
												  --      ) --get from @Project
												  --      OR
												  --      (
												  --          Proj1.ActReasonID IS NOT NULL
												  --          AND DBT.ProjectID = 1
												  --      ) --or get from Project1
												  --) --2020-03-27

												 -- AND NOT (@OnlyForApp = 1
												 -- AND aar.CombinedHaulRoute > 0
											   --   AND fieldname = 'LoadedFrom') --2020-05-25. haulroute remove or expand this as necessry, is for sending only one haul route field to the app.


												--and exists (select fp.ActivityReasonId from @AR_FixedParamsForAllTasks as fp
												--			where dbt.ActivityReasonID = fp.ActivityReasonId)
	
  --DO INSERT OF THE SPECIAL FIXED SUMMARY TEMPLATE
  INSERT INTO #inputsprep 
																			([RowId],
																			[ActReasonID],
																			[InputType],
																			[FieldType],
																			[InputID],
																			[HelpText],
																			[DisplayOrder],
																			[DisplayTrap],
																			[DataTypeDisplayed],
																			[DecPlaces],
																			[TimeStampThisInput],
																		--	[CalcString],
																			[ForeLabel],
																			[AftLabel],
																			[CompulsoryTrap],
																			[DefaultValue],
																			[ReviewTrap],
																			[IntolerableValues],
																			[InitialValidationMsg],
																			[FinalValidationMsg],
																			[InputListSelectionFilter],
																			[Shareable],
																			[InputGroup],
																			[SummaryGroup],
																			[DisplayInputComments],
																			[TypeCsvOld],
																			[TypeIdsCsv],
																			[TrapIntolerableComment],
																			[IsInputCommentRequired],
																			[IsInputPhotoRequired],
																			[IsInputAuthRequired],
																			[KeepOnCopy],
																			[ModifiedOn],
																			[Param1],
																			[Param2],
																			[Param3],
																			[Param4],
																			[WebCalcString],
																			[AttrJson],
																			[SupportedVersion],
																			[AdditionalRegex],
																			[td_ReportingBitWise],
																			[ToleranceLower],
																			[TL_Text],
																			[ToleranceUpper],
																			[TU_Text],
																			[td_ActivityID],
																			[td_ReasonID],
																			[td_ProcessID], ExcludeFromApp 
															   , ExcludeFromWeb ,OrigProject,DeploymentModeCsv)
											
                          									/*			  SELECT [RowId],								[ActReasonID],								[InputType],								[FieldType],								[InputID],								[HelpText],								[DisplayOrder],								[DisplayTrap],								[DataTypeDisplayed],
																			[DecPlaces],								[TimeStampThisInput],								[CalcString],								[ForeLabel],								[AftLabel],								[CompulsoryTrap],								[DefaultValue],								[ReviewTrap],								[IntolerableValues],
																			[InitialValidationMsg],								[FinalValidationMsg],								[InputListSelectionFilter],								[Shareable],								[InputGroup],								[SummaryGroup],								[DisplayInputComments],
																			[TypeCsvOld],								[TypeIdsCsv],								[TrapIntolerableComment],								[IsInputCommentRequired],								[IsInputPhotoRequired],								[IsInputAuthRequired],								[KeepOnCopy],
																			[ModifiedOn],								[Param1],								[Param2],								[Param3],								[Param4],								[WebCalcString],								[AttrJson]='',								[SupportedVersion],								[AdditionalRegex],
																			[td_ReportingBitWise],								[ToleranceLower],								[TL_Text],								[ToleranceUpper],								[TU_Text],								[td_ActivityID],								[td_ReasonID],								[td_ProcessID] 
																			, ExcludeFromApp 
															   , ExcludeFromWeb , OrigProject*/
                            select RowId =                       0--pretty sure we pick it up in INputs Proc?yep, uniqueINputId is generated at the last.
                               --, ProjectID --
                               
                               , ActReasonID
                               --, TaskDetailType =              inputType
                              -- , TaskDetailTypeId
                              -- , TaskDetailTypeImageFileName = ''
                              -- , Active
                               , InputType
                               , FieldType =                   InputType
                               , InputID
                               , HelpText
                               , DisplayOrder --=  ROW_NUMBER() OVER ( ORDER BY 1)  --order them the way we want in the fixed config fucntion
                               , DisplayTrap =                 1
                               , DataTypeDisplayed
                               , DecPlaces
                               , TimeStampThisInput =          0
                             --  , CalcString
                               , ForeLabel
                               , AftLabel
                               , CompulsoryTrap
                               , DefaultValue =                '' --shift back if needed.
                               , ReviewTrap =                  0
                               , IntolerableValues
                               , InitialValidationMsg
                               , FinalValidationMsg
                               , InputListSelectionFilter =    ''  --legacy, shift back if needed
                               , Shareable =                   ''  --legacy, shift back if needed
                               , InputGroup
                               , SummaryGroup =                0 --legacy, shift back if needed
                               , DisplayInputComments =        0 --legacy, shift back if needed
                               , TypeCsvOld
                               , TypeIdsCsv
                               , [TrapIntolerableComment]
                               , [IsInputCommentRequired]
                               , [IsInputPhotoRequired]
                               , [IsInputAuthRequired]
                               , KeepOnCopy =                  0  --  shift back if needed
                               , ModifiedOn =                  getdate()
                               , Param1 =                      ''  --legacy, shift back if needed
                               , Param2 =                      ''  --legacy, shift back if needed
                               , Param3 =                      ''  --legacy, shift back if needed
                               , Param4 =                      ''  --legacy, shift back if needed
                               , WebCalcString =              a.CalcString --legacy, shift back if needed
                               , AttrJson =                    ''  -- shift back if needed
                               , SupportedVersion  --supported version can be less than 0, in which case SupportedVersion indicates the maximum version before this input is retired
                               , AdditionalRegex =             ''  -- shift back if needed
                               , td_ReportingBitWise
                               , ToleranceLower =              0  --legacy, shift back if needed
                               , TL_Text =                     ''  --legacy, shift back if needed
                               , ToleranceUpper =              0 --legacy, shift back if needed
                               , TU_Text =                     ''  --legacy, shift back if needed
                               , td_ActivityID =               tsarl.ActivityID
                               , td_ReasonID =                 tsarl.ReasonID
                               , td_ProcessID =                tsarl.ProcessID
                               , ExcludeFromAPp =              0  --OnlyForApp = 1
                               , ExcludeFromWeb =              1
                               , OrigProject = -2
                               --, DeploymentModeCsv --need to handle this in the Inputs Proc WHERE DeploymentModeCsv LIKE @DeploymentMode OR DeploymentModeCsv = ''
                               --, DataSrc =                     'fixedsummaryfunction'
                              -- , AppliesToAllProjects =        'yes!'
                                  ,DeploymentModeCsv
                          from dbo.tvf_FixedConfigs_iPlodSummaryTemplateDetails(@projectid, 0)   /* can't put it here: WITH RECOMPILE*/ as a
                            inner join dbo.tbl_SYS_ActivityReasonLink as tsarl
                              on tsarl.ActivityreasonLinkID = a.ActReasonID
                          --where 1=2

  
  
  
  
  
  
  
  
  
  
  
  --START DOING SOME INDEXES ON THE TEMP TABLE
									  UPDATE #inputsprep SET DataTypeDisplayed=ISNULL(DataTypeDisplayed,'')  --so can make the join below more sargable
									  where 1=1
									  UPDATE STATISTICS #inputsprep

						IF @ShowTimings=1 SELECT '#inputsPrepAllDone'=GETDATE();

	--START DONIG THE TASK DETAILS MERGE

												SELECT DISTINCT
													  RowId
													 ,ProjectId = @Projectid
													 ,OperationId = @OperationID
													 ,[ActReasonID]
													 ,TaskDetailType = LookITM.appInputType
													 ,TaskDetailTypeId = LookITM.appInputTypeId
													 ,TaskDetailTypeImageFileName = LookITM.appInputTypeImageFileName
													 ,Active= ISNULL(LookITM.Active,0)  --can't pu nulls into Active. assume that null means it shouldn't go there?
													 ,InputType
													 ,FieldType
													 ,sudata.InputID
													 ,HelpText
													 ,DisplayOrder-- = ROW_NUMBER() OVER ( ORDER BY sudata.DisplayOrder,sudata.ForeLabel )  --put this to force every line has unique display order. for some reason the app won't show the second item if they have same dispaly order? 2020-03-27
													 ,DisplayTrap
													 ,DataTypeDisplayed
													 ,DecPlaces
													 ,TimeStampThisInput
													-- ,CalcString
													 ,ForeLabel
													 ,AftLabel
													 ,CompulsoryTrap
													 ,DefaultValue
													 ,ReviewTrap
													 ,IntolerableValues /*=
													  CASE --shift Questiontype answers into INTs
														WHEN dbo.udfStringIsNullOrEmpty(IntolerableValues, NULL) <> 0 THEN ''
														WHEN IntolerableValues = 'Yes' THEN '1' + ''
														WHEN IntolerableValues = 'No' THEN '0' + ''
														WHEN IntolerableValues = 'N/A' THEN '-1' + ''
														ELSE IntolerableValues
													  END*/
													 ,InitialValidationMsg
													 ,FinalValidationMsg
													 ,InputListSelectionFilter
													 ,Shareable
													 ,InputGroup =
													  --CASE

													  --  WHEN @OnlyForApp = 0 THEN IIF(RIGHT(InputGroup, 1) = '>', '', InputGroup) --meh, this is unsupported in teh web, not that important This is to strip out GroupMakesNewTask in MANAGE adding new task.

														--ELSE 
														CASE
															WHEN ISNULL(sudata.InputGroup, '') = 'Hazard' THEN '+'
															ELSE ''
														  END
														  +
														  CASE
															WHEN sudata.InputGroup = 'Shift Boss Approval' THEN ''  --to manage transition btwn v2 and 3 can remove when on v3. this was input group on v2 only becasuse we wanted to put it down the bottom below the hazards.
															ELSE sudata.InputGroup
														  END
													 -- END

													  --SELECT DISTINCT inputgroup FROM dbo.tbl_DBT_ActReasonInputLink
													  --for future, suggest we knock up a wee table or function for the InputGroup optinos? or could install the leading symbol in ActReason itself (ideally would strip it out of reporting places shift summary etc that are not iplod)
													  /*
															 ~ (tilde) – indicates that the group cannot be replicated (i.e. no +, it is a singleton),
														+ (plus) – indicates that the group starts visually as just the header, and the first “+”
														selected populates the group, with subsequent “+”’s triggering new groups as per normal.
														The “-“ for the group will remove items from the first group if they are not modified – giving
														the group its initial collapsed appearance.
														 (EMPTY) functions AS per NORMAL expands collapses
															 */


													 ,SummaryGroup
													 ,DisplayInputComments
													 ,TypeCsvOld
													 ,TypeIdsCsv
													 ,[TrapIntolerableComment]
													 ,[IsInputCommentRequired]
													 ,[IsInputPhotoRequired]
													 ,[IsInputAuthRequired]
													 ,KeepOnCopy
													 ,ModifiedOn
													 ,Param1
													 ,Param2
													 ,Param3
													 ,Param4
													 ,WebCalcString = case when sudata.FieldType = 'stat' and sudata.inputid = 7 and  sudata.excludefromweb =1 and sudata.OrigProject <0  then '' --2022-10-23   there are a heap of old data with "duration" calc fucntion on them
                                            else nullif(WebCalcString,'') end  --leave the stat7 calcs come through if they only going to PLOD

													 ,AttrJson
													 ,SupportedVersion /*= put this into the view.
													  CASE
														WHEN SupportedVersion > 0 THEN SupportedVersion
														ELSE ISNULL(LookITM.MinSupportedVersion, 0)
													  END --2022-07-28*/ 
													 ,AdditionalRegex
													 ,td_ReportingBitWise
													 ,ToleranceLower
													 ,TL_Text
													 ,ToleranceUpper
													 ,TU_Text
													 ,td_ActivityID 
													 ,td_ReasonID 
													 ,td_ProcessID 

													 --todo shift these further upstream (retain this over-rdie thought to avoid slow join below)
													 , ExcludeFromApp = ISNULL(ExcludeFromApp,0)/*=  CASE WHEN LookITM.appInputTypeId IS NULL  THEN 1 
																			WHEN LookITM.appInputTypeId=0  THEN 1
																			--WHEN sudata.InputType LIKE '%calc%' AND ISNULL(sudata.CalcString,'') ='' THEN 1
																			ELSE ISNULL(ExcludeFromApp,0) end*/
							
													  , ExcludeFromWeb = CASE WHEN ExcludeFromImport =1 THEN 1  --2022-10-15 if exclude fom imprt, then don't want it. had the logic wrong. 
                                                    when sudata.FieldType = 'stat' and sudata.inputid = 7 and sudata.excludefromapp + sudata.excludefromweb <2 then 0 --2022-10-07 if it is not turned off from both, then send it in for web too. 
                                            ELSE 
																					ISNULL(ExcludeFromWeb,0) end
                             , AppliesToAllProjects = CASE WHEN sudata.OrigProject =@Projectid THEN ''
																						WHEN sudata.OrigProject IN (1,2) THEN 'AllProjects'
																						
																						WHEN sudata.OrigProject =-1  THEN 'AllTasks'
                                            WHEN sudata.OrigProject =-2  THEN 'FixedSummary'
																						ELSE '' END
                                                                                        
														, RowNum = ROW_NUMBER() OVER (partition by sudata.FieldType,sudata.ActReasonID,sudata.ProjectID,sudata.InputID ,sudata.OrigProject  -- use orign project instead of type. need to be careful removing this, must ensure all params come through from specials for Maint--,sudata.TypeCsvOld
                            ORDER BY sudata.FieldType,sudata.ActReasonID,sudata.ProjectID,sudata.InputID,/*sudata.TypeCsvOld,*/sudata.OrigProject )
												    ,DeploymentModeCsv
												INTO #tdformerge  
													FROM 
													--shfit this to above, then join to the # temp table becuase we are computing a join field (inputtype)
													 #inputsprep AS sudata
													LEFT JOIN /*(
													SELECT
														appInputType
													   ,appInputTypeId
													   ,appInputTypeImageFileName
													   ,webInputType
													   ,webDataTypeDisplayed
													   ,Active
													   ,ExcludeFromImport
													   ,MinSupportedVersion
														--this row num may not be totally effectual ... because the web is only interested in webINputType by itself, not including the datatypedisplayed!
													  -- ,rownum = ROW_NUMBER() OVER (PARTITION BY webInputType, webDataTypeDisplayed ORDER BY webInputType, webDataTypeDisplayed, appInputTypeId)
													  FROM */
													  dbo.tbl_SYS_iplodInputTypeMappings	 AS LookITM WITH (NOLOCK)
													 -- WHERE Active > 0) 	 AS LookITM
													  ON sudata.FieldType = LookITM.webInputType
														AND --ISNULL(sudata.DataTypeDisplayed, '') 
																sudata.DataTypeDisplayed= LookITM.webDataTypeDisplayed
														--AND lookITM.rownum = 1
														AND LookITM.Active > 0

												   -- WHERE
													-- App stuff only!
												   /*kill this, put onto logical kills above to avoid this nonsargeable pice of shite
												   NOT (LookITM.appInputType IS NULL) --send upmapped inputs to the web
													AND ((ISNULL(LookITM.appInputTypeId, -1) > 0
													AND @OnlyForApp = 1)--only supported inputs to the app.
													OR
													(ISNULL(LookITM.appInputTypeId, -1) >= 0
													AND @OnlyForApp = 0
													AND (ExcludeFromImport <> 1
													OR LookITM.ExcludeFromImport IS NULL))); -- if sending to web, still need to be "mapped" but can just be a line inteh inputtypemapping table, with 0 app input type
												  --if sending to the web, don't send "ExcludeFromImport" mappings
												  */
--check on row count, don't do the merge if merging nothing in there!
declare @rowcnt int = @@rowcount

  IF @DebugMode =1 AND OBJECT_ID('tempdb..#inputsprep') IS NOT NULL   SELECT ' #tdformergePreDeleted',* FROM  #tdformerge;

--2022-10-06 kill dupes here, instead of trickery on the merge
  delete #tdformerge where RowNum >1

  IF @DebugMode =1 AND OBJECT_ID('tempdb..#inputsprep') IS NOT NULL   SELECT ' #tdformergePostDeleted',* FROM  #tdformerge;

--now do the actual merge
IF @Debugmode=0 and @rowcnt >1000
  begin

                                            MERGE dbo.tbl_DBT_GetTaskDetails_ForIplod_Cached_V2 AS dest
                                            USING --dbo.udf_GetTaskDetails_ForIplod(@projectId, @type, 99, 0) AS src  --call with @onlyForApp =99 will bring both web and app. and has some logic to kill some inputs (ie sets ExcludeFromApp =1 ) check the function
                                                  #tdformerge AS src
                                            ON --the RowIds are not uniquec accros tables!!
                                               -- src.RowId = dest.RowId
                                               src.FieldType = dest.FieldType  --Input type for parameters just = "parameter"
                                               AND src.InputID = dest.InputID
                                               AND src.ProjectID = dest.ProjectID
                                               and src.ActReasonID = dest.ActReasonID
                                               and src.TypeCsvOld = dest.TypeCsvOld
                                              --2022-10-06 dont think this works, they insert anyway. AND src.RowNum =1  --don't bring the occasional duplicated parameter!
                                                --and src.OnlyforApp = dest.OnlyForApp
                                            
                                            WHEN NOT MATCHED BY TARGET THEN	
                                            	INSERT ([RowId], [ProjectID], [OperationID], [ActReasonID]/*, [TaskDetailType], [TaskDetailTypeId], [TaskDetailTypeImageFileName]*/, [Active], [InputType], [FieldType], [InputID], [HelpText], [DisplayOrder], [DisplayTrap], [DataTypeDisplayed], [DecPlaces], [TimeStampThisInput]--, [CalcString]
                                              , [ForeLabel], [AftLabel], [CompulsoryTrap], [DefaultValue], [ReviewTrap], [IntolerableValues], [InitialValidationMsg], [FinalValidationMsg], [InputListSelectionFilter], [Shareable], [InputGroup], [SummaryGroup], [DisplayInputComments], [TypeCsvOld], [TypeIdsCsv], [TrapIntolerableComment], [IsInputCommentRequired], [IsInputPhotoRequired], [IsInputAuthRequired], [KeepOnCopy], [ModifiedOn], [Param1], [Param2], [Param3], [Param4], [WebCalcString], [AttrJson], [SupportedVersion], [AdditionalRegex], [td_ReportingBitWise], [ToleranceLower], [TL_Text], [ToleranceUpper], [TU_Text], [td_ActivityID], [td_ReasonID], [td_ProcessID], [ExcludeFromApp], [ExcludeFromWeb], [DateCreated], [DateUpdated],AppliesToAllProjects,DeploymentModeCsv)
                                            	VALUES (src.[RowId], src.[ProjectID], src.[OperationID], src.[ActReasonID]/*, src.[TaskDetailType], src.[TaskDetailTypeId], src.[TaskDetailTypeImageFileName]*/, src.[Active], src.[InputType], src.[FieldType], src.[InputID], src.[HelpText], src.[DisplayOrder], src.[DisplayTrap], src.[DataTypeDisplayed], src.[DecPlaces], src.[TimeStampThisInput]--, src.[CalcString]
                                              , src.[ForeLabel], src.[AftLabel], src.[CompulsoryTrap], src.[DefaultValue], src.[ReviewTrap], src.[IntolerableValues], src.[InitialValidationMsg], src.[FinalValidationMsg], src.[InputListSelectionFilter], src.[Shareable], src.[InputGroup], src.[SummaryGroup], src.[DisplayInputComments], src.[TypeCsvOld], src.[TypeIdsCsv], src.[TrapIntolerableComment], src.[IsInputCommentRequired], src.[IsInputPhotoRequired], src.[IsInputAuthRequired], src.[KeepOnCopy], src.[ModifiedOn], src.[Param1], src.[Param2], src.[Param3], src.[Param4], src.[WebCalcString], src.[AttrJson], src.[SupportedVersion], src.[AdditionalRegex], src.[td_ReportingBitWise], src.[ToleranceLower], src.[TL_Text], src.[ToleranceUpper], src.[TU_Text], src.[td_ActivityID], src.[td_ReasonID], src.[td_ProcessID]
                                                          , src.ExcludeFromApp, src.ExcludeFromWeb, GETDATE(), GETDATE(),AppliesToAllProjects,DeploymentModeCsv)
                                            
                                            WHEN MATCHED THEN UPDATE SET
                                            	dest.ProjectID = src.ProjectID,
                                            	dest.OperationID = src.OperationID,
                                            	dest.ActReasonID = src.ActReasonID,
                                            --	dest.TaskDetailType = src.TaskDetailType,
                                            	--dest.TaskDetailTypeId = src.TaskDetailTypeId,
                                            	--dest.TaskDetailTypeImageFileName = src.TaskDetailTypeImageFileName,
                                            	dest.Active = src.Active,
                                            	dest.InputType = src.InputType,
                                            	dest.FieldType = src.FieldType,
                                            	dest.InputID = src.InputID,
                                            	dest.HelpText = src.HelpText,
                                            	dest.DisplayOrder = src.DisplayOrder,
                                            	dest.DisplayTrap = src.DisplayTrap,
                                            	dest.DataTypeDisplayed = src.DataTypeDisplayed,
                                            	dest.DecPlaces = src.DecPlaces,
                                            	dest.TimeStampThisInput = src.TimeStampThisInput,
                                            --	dest.CalcString = src.CalcString,
                                            	dest.ForeLabel = src.ForeLabel,
                                            	dest.AftLabel = src.AftLabel,
                                            	dest.CompulsoryTrap = src.CompulsoryTrap,
                                            	dest.DefaultValue = src.DefaultValue,
                                            	dest.ReviewTrap = src.ReviewTrap,
                                            	dest.IntolerableValues = src.IntolerableValues,
                                            	dest.InitialValidationMsg = src.InitialValidationMsg,
                                            	dest.FinalValidationMsg = src.FinalValidationMsg,
                                            	dest.InputListSelectionFilter = src.InputListSelectionFilter,
                                            	dest.Shareable = src.Shareable,
                                            	dest.InputGroup = src.InputGroup,
                                            	dest.SummaryGroup = src.SummaryGroup,
                                            	dest.DisplayInputComments = src.DisplayInputComments,
                                            	dest.TypeCsvOld = src.TypeCsvOld,
                                            	dest.TypeIdsCsv = src.TypeIdsCsv,
                                            	dest.TrapIntolerableComment = src.TrapIntolerableComment,
                                            	dest.IsInputCommentRequired = src.IsInputCommentRequired,
                                            	dest.IsInputPhotoRequired = src.IsInputPhotoRequired,
                                            	dest.IsInputAuthRequired = src.IsInputAuthRequired,
                                            	dest.KeepOnCopy = src.KeepOnCopy,
                                            	dest.ModifiedOn = src.ModifiedOn,
                                            	dest.Param1 = src.Param1,
                                            	dest.Param2 = src.Param2,
                                            	dest.Param3 = src.Param3,
                                            	dest.Param4 = src.Param4,
                                            	dest.WebCalcString = src.WebCalcString,
                                            	dest.AttrJson = src.AttrJson,
                                            	dest.SupportedVersion = src.SupportedVersion,
                                            	dest.AdditionalRegex = src.AdditionalRegex,
                                            	dest.td_ReportingBitWise = src.td_ReportingBitWise,
                                            	dest.ToleranceLower = src.ToleranceLower,
                                            	dest.ToleranceUpper = src.ToleranceUpper,
                                            	dest.TL_Text = src.TL_Text,
                                            	dest.TU_Text = src.TU_Text,
                                            	dest.td_ActivityID = src.td_ActivityID,
                                            	dest.td_ReasonID = src.td_ReasonID,
                                            	dest.td_ProcessID = src.td_ProcessID,
                                              dest.ExcludeFromApp = src.ExcludeFromApp
                                              ,dest.ExcludeFromWeb = src.ExcludeFromWeb
                                              ,dest.[DateUpdated] = getdate()
											  ,dest.AppliesToAllProjects = src.AppliesToAllProjects
                        ,dest.DeploymentModeCsv = src.DeploymentModeCsv
                                            
                                            WHEN NOT MATCHED BY SOURCE and dest.projectid = @projectid THEN	
                                            --todo: change this to logical delete (ie UPDATE) if applicable. (ie if this becomes more than just a cache
                                            		DELETE;

--now update stats
UPDATE STATISTICS tbl_DBT_GetTaskDetails_ForIplod_Cached_V2



				end
	  IF @Debugmode = 1 SELECT 'TaskDetailsMergeAllDone'=getdate()
 
 END --end of the whole shebang (inside teh trans stuff though)                                              
    
--THIS IS THE END OF ALL THE WORK
    
    
               
        

    -- return success
    SET @Result = 1
    SET @ResultMessage = 'Cache Table Updated'
    IF (@ReturnAsTable = 1)
    BEGIN
      SELECT
        @Result AS 'Result'
       ,@ResultMessage AS 'Message';
    END

    IF @TranCount = 0
      COMMIT TRANSACTION;

  END TRY
  BEGIN CATCH

    -- something went wrong, rollback  
    DECLARE @xstate INT = XACT_STATE();
    IF @xstate = 1
      AND @TranCount > 0
      ROLLBACK TRANSACTION SP_PS_BuildCacheTablesWithMerge;
    ELSE
      ROLLBACK

    -- PRINT ERROR_MESSAGE();

    SET @Result = 0
    SET @ResultMessage = ERROR_MESSAGE()
    IF (@ReturnAsTable = 1)
    BEGIN
      SELECT
        @Result AS 'Result'
       ,@ResultMessage AS 'Message';
    END

  END CATCH;



/*********
end of the work
*********/ 

--cleanup some temp stuff
  IF @DebugMode =1 AND OBJECT_ID('tempdb..#inputsprep') IS NOT NULL   SELECT ' #inputsprep',* FROM  #inputsprep;



IF OBJECT_ID('tempdb..#allinputs') IS NOT NULL   drop TABLE #allinputs;
 IF OBJECT_ID('tempdb..#inputsprep') IS NOT NULL  drop table  #inputsprep;
IF OBJECT_ID('tempdb..#cte_ActiveARs') IS NOT NULL   DROP TABLE #cte_ActiveARs;
 IF OBJECT_ID('tempdb..#tdformerge') IS NOT NULL  drop table #tdformerge;

  IF @ShowTimings=1 SELECT 'AllOver'=GETDATE();






/*  this will cause kill state error if altered into the plod db!!!  */
  --if rebuild, rebuild the index too:
  --don't do this until it is needed
  IF 1=2 --AND @RebuildWithDelete = 1 AND @BuildAttributesCache = 1
  BEGIN
    
	ALTER INDEX idx_GetAttributes_Cached ON view_GetAttributes_Cached REBUILD
    ALTER INDEX [idx_GetAttributes_Cached_2] ON view_GetAttributes_Cached REBUILD
  END
  




/*to delete:
       IF @AttrNeedsBuilding =1 OR @BuildAttributesCache = 1 
                    begin
                                                              IF @BuildAttributesCache =1 OR @AttrNeedsBuilding = 1
                                                              BEGIN  --see XXX for the end
                                                                  --get live attributes data into temp table.
                                                                  DECLARE @AttrLive TABLE (
                                                                    [AttProjID] BIGINT NULL  --allow it to go into here, so can get debug results below
                                                                   ,[ProjectID] [INT] NULL
                                                                   ,OperationID [INT] NULL
                                                                   ,[AttributeDescription] [NVARCHAR](200) NULL
                                                                   ,[AttributeTypeID] [INT] NULL
                                                                   ,[AttributeID] [INT] NULL
                                                                   ,[AttTypeDesc] [NVARCHAR](200) NULL
                                                                   ,[Active] [INT] NOT NULL
                                                                   ,[Comments] [NVARCHAR](200) NULL
                                                                   ,AttrMethod [NVARCHAR](25) NULL
                                                                   ,ModifiedOn DATETIME NULL
                                                                   ,AssociatedNumeral DEC(10, 5) NULL
                                                                  )
                                                                  INSERT INTO @AttrLive ([AttProjID]
                                                                  , [ProjectID]
                                                                  , [OperationID]
                                                                  , [AttributeDescription]
                                                                  , [AttributeTypeID]
                                                                  , [AttributeID]
                                                                  , [AttTypeDesc]
                                                                  , [Active]
                                                                  , [Comments]
                                                                  , [AttrMethod]
                                                                  , [ModifiedOn]
                                                                  , AssociatedNumeral)
                                                                    /*todo: sort best method for attPojId
                                                                  	*/
                                                                    SELECt   
                                                                    [AttProjID] -- this overflows INT: = iif([AttProjID]<1000000, -- if it is small enough, whack projectid on the front!  some fuckery to avoid the bigint for a bit longer (only an issue on central PBW with multi-projects
                                                                                        --     CONVERT(INT, + CAST(Projectid AS VARCHAR(5)) + CAST([AttProjID] AS VARCHAR(25)))
                                                                                          --   , [AttProjID]) 
                                                                  , [ProjectID]
                                                                  , [OperationID]
                                                                  , [AttributeDescription]
                                                                  , [AttributeTypeID]
                                                                  , [AttributeID]
                                                                  , [AttTypeDesc]
                                                                  , [Active]
                                                                  , [Comments]
                                                                  , [AttrMethod]
                                                                  , [ModifiedOn]
                                                                  , AssociatedNumeral
                                                                    FROM (
                                                                      SELECT
                                                                      [AttProjID] = IIF([AttributeTypeID] = 107, CONVERT(INT, case WHEN @ProjectID = 3 THEN  '3'  
                                                                                                                                  WHEN @projectid = 291 THEN  '7'
                                                                                                                                    WHEN @projectid = 388 THEN  '2'     
                                                                                                                                    ELSE '-1'end
                                                                      + CAST([AttributeID] AS VARCHAR(25))), --if 107, then the attirbute Id is quite big (= localstagingid). so don't add the attributetypeid on front. start the nymber with a 7 so it doesn't overlap with the others
                                                                      CONVERT(bigint,/* let it go as BIGINT to get debugging results. it will fail on actual insert will result in bigint: cast(ProjectId as varchar)+*/
                                                                      --2021-10-23 allow proj3 to be put in here for test system. if wanting to run multiple @orojecst on live system will need to think again (maybe just make AttProjId = bigints?
                                                                      --The conversion of the varchar value '3100081363' 
                                                                      --select convert(int,2007320576) --overflowed an int column.
                                                                      case WHEN @ProjectID = 3 THEN  '3'
                                                                           WHEN @projectid = 291 THEN  '7'
                                                                           WHEN @projectid = 388 THEN  '2'               
                                                                           --add new project here. as a work around to avoid smashin bigint eveywhere!
                                                              
                                                                           ELSE '-1'
                                                                           end
                                                                      -- + '1'
                                                                      + case WHEN tbl.AttTypeDesc LIKE 'employees%' THEN CAST([AttributeTypeID]  AS VARCHAR) 
                                                                             WHEN tbl.AttTypeDesc LIKE 'location%' THEN  CAST([AttributeTypeID]  AS VARCHAR) 
                                                                      --(locations and employees are unique in their own tables, across projects. try and make them unique in amoungst attributes!)
                                                                          ELSE CAST([dbo].[FN_StringPad]([AttributeTypeID], 4, '0') AS VARCHAR) 
                                                                      end
                                                                      + CAST([AttributeID] AS VARCHAR))
                                                                      )    --just make a compositekey for all. will never fail.--iif([AttProjID] = 0, convert(int ,cast(ProjectId as varchar)+cast(RowNumAttrProjId as varchar) ) * -1 , [AttProjID]) --use actual AttrProjId if we have it, that is a table ID
                                                                     ,[ProjectID]
                                                                     ,[OperationID]
                                                                     ,[AttributeDescription]
                                                                     ,[AttributeTypeID]
                                                                     ,[AttributeID]
                                                                     ,[AttTypeDesc]
                                                                     ,[Active]
                                                                     ,[Comments]
                                                                     ,[AttrMethod]
                                                                     ,[ModifiedOn] = GETDATE()
                                                                     ,AssociatedNumeral
                                                                    FROM (SELECT
                                                                        [AttProjID]
                                                                       ,[ProjectID] = IIF([ProjectID] = 0, @ProjectID, ProjectId)
                                                                       ,[OperationID] = (SELECT
                                                                            OperationId
                                                                          FROM tbl_dbT_Project
                                                                          WHERE ProjectId = @ProjectID)
                                                                       ,[AttributeDescription]
                                                                       ,[AttributeTypeID]
                                                                       ,[AttributeID]
                                                                       ,[AttTypeDesc]
                                                                       ,[Active] = 1
                                                                       ,[Comments] = ''
                                                                       ,AttrMethod
                                                                       ,AssociatedNumeral
                                                                       ,RowNum = ROW_NUMBER() OVER (PARTITION BY [AttributeTypeID], ProjectId, AttProjId ORDER BY [AttributeTypeID], ProjectId, AttProjId)
                                                                       ,RowNumUniqueAttrProjId = ROW_NUMBER() OVER (PARTITION BY [AttributeTypeID], [AttributeID] ORDER BY [AttributeTypeID], [AttributeID], [AttProjID]) --should be the same every time
                                                                      FROM [view_GetAttributes_LIVE]
                                                                      WHERE [ProjectID] IN (@ProjectID
                                                                      , 0)
                                                                      AND ([AttributeTypeID] = @AttrTypeId
                                                                      OR @AttrTypeId = 0)) AS tbl
                                                                    WHERE [tbl].[RowNum] = 1
                                                                    AND tbl.[RowNumUniqueAttrProjId] = 1
                                                                    ) AS tbl
                                                              
                                                              
                                                              
                                                                  IF @RebuildWithDelete = 1
                                                                  BEGIN
                                                                    DELETE [dbo].[view_GetAttributes_Cached]
                                                                    WHERE [ProjectID] = @ProjectID
                                                                      AND ([AttributeTypeID] = @AttrTypeId
                                                                      OR @AttrTypeId = 0)
                                                                  END
                                                              
                                                                  IF @Debugmode = 0
                                                                  BEGIN
                                                                    --update if already there:
                                                                    UPDATE t
                                                                    SET t.[AttributeDescription] = tvp.[AttributeDescription]
                                                                       ,t.[AttributeTypeID] = tvp.[AttributeTypeID]
                                                                       ,t.[AttributeID] = tvp.[AttributeID]
                                                                       ,t.[AttTypeDesc] = tvp.[AttTypeDesc]
                                                                       ,t.[Active] = tvp.[Active]
                                                                       ,t.[Comments] = tvp.[Comments]
                                                                       ,t.AttrMethod = tvp.AttrMethod
                                                                       ,t.[ModifiedOn] = tvp.[ModifiedOn]
                                                                       ,t.AssociatedNumeral = tvp.AssociatedNumeral
                                                              
                                                                    FROM dbo.[view_GetAttributes_Cached] AS t
                                                                    INNER JOIN @AttrLive AS tvp
                                                                      ON t.[AttProjID] = tvp.[AttProjID]
                                                                      AND t.[ProjectID] = [tvp].[ProjectID]
                                                                      AND t.[AttributeTypeID] = tvp.[AttributeTypeID]
                                                                    --where  (t.[AttributeTypeID] =@AttrTypeId or @AttrTypeId=0)  don't need this? 
                                                                    ;
                                                                    --insert if not there yet:
                                                                   --todo: this can't be run from the plod schema db (because it is a syn) so will have to wrap a sql call on @dbDefaultName to perform this.
                                                              					--in practice, unlikely to want to run this attributes rebuild from here as it is a beast.
                                                                       -- DECLARE @Sql NVARCHAR(MAX) = 'use '+@PrimaryDbName+ ' SET IDENTITY_INSERT '+'[dbo].[view_GetAttributes_Cached] ON '
                                                                        --execute ( @Sql )
                                                              
                                                                       SET IDENTITY_INSERT [dbo].[view_GetAttributes_Cached] ON 
                                                              
                                                                    INSERT dbo.[view_GetAttributes_Cached] ([AttProjID], [ProjectID], [OperationID], [AttributeDescription], [AttributeTypeID], [AttributeID], [AttTypeDesc], [Active], [Comments], AttrMethod, [ModifiedOn], AssociatedNumeral)
                                                                      SELECT
                                                                        [AttProjID]
                                                                       ,[ProjectID]
                                                                       ,[OperationID]
                                                                       ,[AttributeDescription]
                                                                       ,[AttributeTypeID]
                                                                       ,[AttributeID]
                                                                       ,[AttTypeDesc]
                                                                       ,[Active]
                                                                       ,[Comments]
                                                                       ,AttrMethod
                                                                       ,[ModifiedOn]
                                                                       ,AssociatedNumeral
                                                                      FROM @AttrLive AS tvp
                                                                      WHERE NOT EXISTS (SELECT
                                                                          1
                                                                        FROM dbo.[view_GetAttributes_Cached]
                                                                        WHERE [AttProjID] = tvp.[AttProjID]
                                                                        AND [ProjectID] = [tvp].[ProjectID]
                                                                        AND [AttributeTypeID] = tvp.[AttributeTypeID]);
                                                                  --	set identity_insert [view_GetAttributes_Cached] off
                                                                  END
                                                              
                                                                  IF @Debugmode = 1
                                                                  BEGIN
                                                                    SELECT
                                                                      [AttProjID]
                                                                     ,[ProjectID]
                                                                     ,[OperationID]
                                                                     ,[AttributeDescription]
                                                                     ,[AttributeTypeID]
                                                                     ,[AttributeID]
                                                                     ,[AttTypeDesc]
                                                                     ,[Active]
                                                                     ,[Comments]
                                                                     ,[AttrMethod]
                                                                     ,[ModifiedOn]
                                                                     ,AssociatedNumeral
                                                                    FROM @AttrLive
                                                              
                                                                    SELECT
                                                                      'duplicates:'
                                                                     ,attprojid--,[ProjectID],[AttributeTypeID]
                                                                     ,COUNT(*) occurrences
                                                                    FROM @AttrLive
                                                                    GROUP BY attprojid--,[ProjectID],[AttributeTypeID]
                                                                    HAVING COUNT(*) > 1;
                                                              
                                                                    SELECT
                                                                      'BIGINTS:'
                                                                     ,*
                                                                    FROM @AttrLive
                                                                    WHERE AttProjID >=2147483648
                                                                    
                                                                    SELECT
                                                                      'dupeIdentityInsertViolations:'
                                                                     ,s.*
                                                                     ,'alreadyincache:'
                                                                     ,vgac.*
                                                                    FROM @AttrLive s
                                                                    inner JOIN 
                                                                    view_GetAttributes_Cached vgac 
                                                                    ON  s.AttProjID = vgac.AttProjID
                                                              
                                                              
                                                                  END
                                                              END --XXXX

            end --whether or not do do rebuild

*/


--this is the final end:
END;
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_DataSummary_Geology]'
GO
ALTER   PROCEDURE [dbo].[SP_ShiftSummary_DataSummary_Geology] @ProjectID INT, @Type VARCHAR(25) = 'Mining'  -- =TypeAlias from page URL  ... could be mining1 or mining2 or maintenance
    ,  @Date DATE, @Shift VARCHAR(2), @Mode NVARCHAR(35) = '',@SupervisorId INT = 0, @CrewId INT= 0, @UserId INT= 0, @ActivityReasonCsv nvarchar (50) =''

    AS
    BEGIN
        /*
             select * from tbl_DWH_iplodstaging

			 perfect day:

             EXEC [dbo].SP_ShiftSummary_DataSummary_Geology @ProjectID = 399, @Type = 'geology', @Date = '2019-07-04', @Shift = 'NS'

             EXEC [dbo].SP_ShiftSummary_DataSummary_Geology @ProjectID = 259, @Type = 'Mining', @Date = '2021-01-31', @Shift = 'DS'

        TS 2018-09-18 ... chanbges to maint section
        IP 2018-10-04 add handler to PartsList, the InputType is as it is, not changed to ConsArea
        TS 2018-10-11 ... further changes to maint section ... only showing parts list inputs
        CA 2018-12-20 ... Added Shiftboss Type to mining shift summary for non shiftboss tasks (ProcessID <> 25)
        AD 2019-01-31 ... add handler for @type = mining1 / mining 2 etc
        TS 2019-02-02 ... add pitId to all sets
                            further filtering for types
        TS 2019-02-12 ... removed this for 24hr summary (should take the whole section out on type alias config
                        ... prepared the overtime bit for ActReason = 1489
        IAN 2019-05-16 ... added check 24hr type to the maint
        AD 2019-06-24 ... add case when inputValue = stat calc and has >2 decimal places Round value
             TS 2019-07-11 ... add commenst about delay task duration
                                        ... rounded all statcalcs to 1 decimal. were still getting weird multiple decimals on the summary row on front end for some reason.
             TS 2019-07-14  ... revert the comments about delay task duration ...this isn't a good idea because it will get saved to the data for any line edited. not for lines not edited.
             TS 2019-07-22  ... reduced rounding to zero decimals
             TS 2019-07-23 ... task alias
             CA 2019-07-24 ...Fix VIV bogging special handling
             IP 2019-07-24 ... add dummy ShowButtonDayworks field
             AD 2019-08-18 ... Shift changeLog field to changeLog table
             AD 2019-08-19 ... use the existing table change log, fix duplicate change 
             IP 2019-08-21 ... change changelog query to fix changelog pivot issue
             TS 2019-09-03 ... add RefNo for maint (not editable, they can change it up top in the timeline only)
                                 ... added ItemId on desc parts list
             TS 2019-09-12 ... add config for the post parts, will need to source this out of a view when we get cracking with it. the intent is to use config @PartsUsedEquipTypeIdfilter to turn it on for LV fitter only at PEA.
             CA 2019-09-13 ... Added Config for show dayworks button
             CA 2019-09-24 ... Added exception for record ground noise and record scaling as a new config. 
			 CA 2019-10-01 ...Made AdHoc stocktakes appear on Maint - ARID 1602
			 AD 2019-10-13 ... show Question data on summary
			 CA 2019-10-22 ...Made Special handling for Charge Up Shutdown checks to be red
			 ts reverted ca's addition of type = 'elect'  ... the iplod data wont have this on it anyway

			 TS 2019-11-23 ... only show question inputs for normal shareable controls (in mining set)
							... add act reason multi proect (in mining set)
							...add whole new dataset for Perfect Day
			ts 2019-11-26 ... added the else on perfect day set
			IP 2019-11-04 ... capitalize first letter on YNRadio answer to make it uniform related to front end (#1266) 
			TS 2019-12-17 ... remove Perfect day
							... put scalar pit id check onto inital variable instead of in line of the WHERE
							... put the change log on join dataset down below
			TS 2019-12-18 ... fix the max partition thing for last local stagingid
			IP 2020-01-07 ... fix Changelog not retrieved correctly on ConsArea 
			IP 2020-01-15 ... added SHareable filter to match fields returned with SP_ShiftSummary_DataSummary_ParamsInputsSetups
						  ... added query to get AttrList Value
			CA 2020-01-23 ...Fix for Peak bogging
			IP 2020-02-24 ... change query to use FN_GetAttribute
			CA 2020-02-27 ... Commented out Attr join...it was breaking the TWI hazards. search for date to find

			IAN 2020-02-27 ... Added AllowChangeTask params
				           ... Added fields for Edit/Change task

			FM 2020-02-27 ... added @Mode, @SupervisorId, @CrewId, @UserId params no changes on query (1568)
			IP 2020-03-05 ... change the changelog join
			AD 2020-03-10 ... remove OR i.InputGroup <> '', the handler is on PHP right now
			IP 2020-03-30 ... added query to get AttrList Value
			ts 2020-04-17 ... type alias get from new function
						removed:ts 2020-04-20 TEMPORAY SWITCH ONLY ON CENTRAL< REVERT AFTER FIX PARTS LIST
			ts 2020-04-22 ... added is null handling for maint parts list
			CA 2020-04-30 ...Added @ProjectId to select for shiftsummary sepecific config value. Was bringing TWI's into all projects. Date stamped on the line. 
			CA 2020-05-04 ... Added colour handling for TWIs. 
						  ... Removed excludefromweb! Discussed with TS
						  ... All to get TWIs on shift summary working
			CA 2020-05-05 ...Commented out the Q inputType line. Search for this date to find it.
			CA 2020-06-10 ...Hide No further action required on shift summary
			CA 2020-06-11 ...Fix TWI join
						  ...Set No Count on
			ts 2020-08-27 ... pit fileter should also look at desitaiont pitid! for CRF task that has no location field.
			ts 2020-11-23 ... safeguard the join to attributes INT
			ts 2020-11-25 ... added actreasonCsv call for debugging
			ts 2020-11-30 ... add INputComment 
			ip 2020-12-01 ... add AllowFormEdit flag (#A2332)
			ts 2020-12-17 ... modified the filter to utilise the reproting bitwise flag
							... also permission the Edit Form button
		ts 2020-12-18		.... "fix" TypeID to support pea
							... bogging Process split by processid instead of actreason list
			IP 2021-01-05 ... Added InputPhoto for displaying photos on data summary

			ts 2021-03-01 ... try removing the old complicated filters ... handle everything with reportin bitwise instead mainly to get the ground support form to come back)
			CA 2021-03-05 ... Fixed handling for showing TWIs and Ground noise. Ground noise poorly done, hardcoded. Needs a config or sometihng. Search for 1643. 
			ts 2021-03-10 ... remove dayworks join for speed
			CA 2021-03-24 ... Removed IsNull on reportingbitwise in where and in join. Sargable!
			ts 2021-06-01 ... fix teh OR =camera. not sure who or why. probably is a good idea though as camera input types will just be a hyperlink, no need not to show them
			ts 2021-06-09 .. put taskalias of electronic forms into groupheader so we don't get too many fields
			CA 2021-07-14 ... Create for Geology charging tasks only.
      ts --2022-08-12 ... remove @parameters on teh join for last stagingid
                      {went from 7secs to 0.6 secs}  put #inputs into it

      todo: consult this [SP_ShiftSummary_DataSummary] for further optimisations as required
          todo: use the new cached TaskDetailsForIplod table!!!
      
... this is not fully resolved. need to figure out how to sort the TWIs stuff, and whether or not to show a task at all (use ReportingBitWise on Stat7 to turn on a task)





        */

		SET NOCOUNT ON

        DECLARE @TrkGrouping as Varchar (20)
        SET @TrkGrouping = (SELECT isnull(ShiftSummary_TrkGrouping,'Location')  FROM dbo.tbl_DBT_Project WHERE Projectid = @ProjectID);

		DECLARE @IsDbAdmin int = dbo.FN_IsWebbarFullAdmin(@userId)

        DECLARE @InclMiningARIDs as varchar(100)
        SET @InclMiningARIDs = isnull((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_IncludeInShiftSummaryMining' AND Active = 1 ),0)

        DECLARE @TypeAliasMethod int
        SET @TypeAliasMethod = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@Type,1,'TypeAliasMethod','DataV')); --  methods are    0 --> no Type Alias used, just mining and maint

        DECLARE @Is24HrSummary INT
        SET @Is24HrSummary = CASE WHEN @Type like '%24' THEN 1 ELSE 0 END                                                                                                                                                                                                                                          --  1 --> PitId (aka work area)

        DECLARE @MaintOverTimeActive int
        SET @MaintOverTimeActive = dbo.FN_GetConfigValue(@ProjectId,'OverTimeMaint')

             DECLARE @PartsUsedEquipTypeIdfilter nvarchar(50) = ISNULL(dbo.FN_GetConfigValue(@ProjectId,'PostPartsUsedEquipTypeIds'),0);
             DECLARE @IsPartsPostActive int
             SET @IsPartsPostActive = CASE WHEN @PartsUsedEquipTypeIdfilter=0 THEN 0 ELSE 1 END

             DECLARE @Dayworks INT 
             SET @Dayworks = (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias(@ProjectID,@type,1,'Show_DayworksButton'))

			 DECLARE @DayWorksInputsCsv NVARCHAR(500) = dbo.FN_GetConfigValue(@ProjectID, 'DayworksInputCsv'); -- stat 156 = chargeableequiphours

DECLARE @TypeAliasPitId int = [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type);

DECLARE @ShowTWIHazards INT = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ShiftbossTWIReview'), 0) AS INT)

	DECLARE @AllowChangeTask INT = 1

   DECLARE @TypeId INT =IIF(@type LIKE 'mining',1,0) --not sure on the history of this fukker .. it is killing PEA type aliases. I think it is probably for the iplod type conversion to ids dbo.FN_ConvertType_TypeCode_To_TypeID(@Type);

   DECLARE @ReportingBitwiseValue INT = (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectID,@Type,@TypeId,'DataSummaryReportingBitwiseFlag',@Mode));
   -- DECLARE @ReportingBitwiseValue INT = (SELECT TOP 1 ReportingBitwiseValue FROM [dbo].[tvf_ReportingBitWise](@ProjectID) WHERE ModeCode = @Mode)


	DECLARE @AllowedToEditForms nvarchar(255) = IIF(@IsDbAdmin=1 ,1,ISNULL((select PermissionConfigValue from [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'ShiftSummary','_AllMiningTypes','_AllModes','AllowedToEditForms')),0)
														)

	declare @PutAliasIntoHeaderForElecForms int = 1

	
	SELECT DISTINCT ActReasonLinkID INTO #GeoGradeTasks 
		FROM dbo.tbl_DBT_ActReasonInputLink
		WHERE InputID IN (402, 11) 
		AND InputType LIKE 'att%'
		AND ProjectID = @ProjectID
		
	 
   --2022-08-12
       -- ;with inputs as (
    SELECT   -- Changed from Inner Join to bring in TWI stuff
      InputType
     ,InputID
     ,InputGroup
     ,DisplayOrder
     ,AftLabel
     ,ForeLabel
     ,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType, INputId, ActReasonLinkId ORDER BY InputType, INputId, ActReasonLinkId, ProjectID DESC)  --get from @project first, then Proj1
     ,ActReasonLinkID
      --,ExcludeFromWeb
      --, Shareable
     ,ReportingBitwise INTO #inputs
    FROM [dbo].[tbl_DBT_ActReasonInputLink] AS i WITH (NOLOCK)
    WHERE ProjectID IN (1, 2, @ProjectId)
    --AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
    --AND Shareable <> ''
    -- AND @ReportingBitwiseValue & ISNULL(ReportingBitwise, 0) = @ReportingBitwiseValue -- Turned off because we changed to left outer and filter in the where.
    --can't put this because it can flick onto the other project:	and ReportingBitwise>= @ReportingBitwiseValue				-- or InputType = 'Camera'  --2021-08-10
    --and ((@ReportingBitwiseValue & ReportingBitwise = @ReportingBitwiseValue) OR InputType = 'Camera' )  --added back in, try to optimise query.
    --)

    CREATE NONCLUSTERED INDEX #inputsxxx
    ON [dbo].#inputs ([InputType], [InputID], [RowNum], [ActReasonLinkID])
    INCLUDE ([InputGroup], [DisplayOrder], [AftLabel], [ForeLabel], [ReportingBitwise])


   
   	  
        --SELECT @TrkGrouping
        ------------------------------------------------------------------------------------------------------------------------------------
        -- Mining
        ------------------------------------------------------------------------------------------------------------------------------------
     
                SELECT
                     s.ProjectID
                     ,s.Date
                     ,s.Shift
                     ,s.OperatorID AS  'OperatorID'
                     --'ProcessID'
                     ,s.StagingID
                     ,s.DataStoreID
                     ,e.EmployeeName +  IIF(@IsDbAdmin =1 ,' '+CAST(s.OperatorID AS varchar) ,'' )+ ' (' + eq.EquipmentCode +  IIF(@IsDbAdmin =1 ,' '+CAST(eq.EquipmentCodeID AS varchar) ,'' )+ ')' AS 'Operator'
                     --'Process'
                     --,CASE WHEN aretc.ProcessID = 13 THEN -13 ELSE aretc.ProcessID END AS ProcessID
                     --s.OperatorID AS 'OperatorID'
                     ,CASE WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'SourceCode' THEN l.SourceID--6
                           WHEN  aretc.ProcessID IN (5,6) AND @TrkGrouping = 'Location' THEN s.Location
							WHEN aretc.ProcessID =5--2020-12-18i.ActReasonLinkID IN (1505,1506,1507,1508) 
											AND @TrkGrouping = 'Process' THEN i.ActReasonLinkID
							when @PutAliasIntoHeaderForElecForms = 1 and aretc. IsElecForm = 1 then  i.ActReasonLinkID
						   WHEN aretc.ProcessID = 13 THEN -13 ELSE aretc.ProcessID END as ProcessID
                     --,aretc.ProcessDescription AS 'Process'
                     --,'OperatorName' AS 'Process'  -- for swapping to operator view
                     ,CASE WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'SourceCode' THEN l.SourceCode
                           WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'Location' THEN l.LocationCode
						    WHEN aretc.ProcessID =5--2020-12-18i.ActReasonLinkID IN (1505,1506,1507,1508) 
									AND @TrkGrouping = 'Process' THEN aretc.taskname --dbo.FN_IsNullorEmpty(aretc.ReasonAlias,aretc.ReasonDescription)
                                       --THEN 'Trucking and Bogging' ELSE aretc.ProcessDescription END as Process  --for swapping to truck and bog view
							when @PutAliasIntoHeaderForElecForms = 1 and aretc. IsElecForm = 1 then aretc.ProcessDescription + ' - '+aretc.taskname
                           ELSE aretc.ProcessDescription END as Process
                     -- colour source http://www.colors.commutercreative.com/grid/
                     ,CASE
                          WHEN aretc.ProcessID IN (5, 6)
                              THEN 'Tan'
						  WHEN aretc.ActivityID = 2 AND aretc.ActivityReasonId = 1603 THEN 'crimson' -- 2019-10-23
						  WHEN aretc.ActivityID = 2 
							and (aretc.IsTWI=1   --(aretc.ActivityreasonLinkID IN (SELECT ActReasonID FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WHERE AR_GroupingName = 'AR_TWIs')
										OR aretc.ActivityReasonId = 1643
										or aretc.ProcessID = 16 --saftey stuff
										) 
							  THEN 'Coral'
                          ELSE 'SteelBlue'
                                       END AS 'ProcessColour'

                     --,aretc.ActivityDescription as 'Activity'
                     ,'TaskDescription'=CASE
                                       --   WHEN aretc.ProcessID IN (5,6) THEN l.LocationCode
                          WHEN aretc.ActivityID <> 1 THEN ActivityDescription + ' - ' +eq.EquipmentCode+' - ' + aretc.taskname--ReasonDescription
                          else aretc.taskname-- dbo.FN_IsNullorEmpty(aretc.ReasonAlias,aretc.ReasonDescription)
                                       END 
									   + IIF(@IsDbAdmin =1 ,' '+CAST(aretc.ActivityReasonId AS varchar) ,'' )

                     --add equipmentID into this CASE to get equipment into taskdescription in case want to see summary against different equipment
                     ,CommentsCheck = s.CommentsCheck --+ IIF(ISNULL(delayhrs.delayhrs,0)>0,' (incl. ' + CAST(delayhrs.delayhrs AS varchar) +'hrs of delays)','')
                     ,RTRIM(eq.EquipmentCode) AS 'EquipID'
                     ,m.MaterialDescOp AS 'Material'
                     ,l.LocationCode AS 'Location'
                     -- ,CASE WHEN aretc.ProcessID IN (5,6) AND ActivityReasonID = 113 THEN aretc.ReasonDescription
                     -- WHEN aretc.ProcessID IN (5,6) and ActivityReasonID <> 113  THEN 'Load and Haul' ELSE l.LocationCode END AS Location
                     ,s.LocSource
                     ,s.LocDest
                     ,d.LocationCode AS 'Destination'
                     ,s.InputID
                     ,s.InputType

                     --  , case when s.InputType = 'Stat' and s.InputID = 7 then s.inputvalue  else s.InputValue end as 'InputValue'
                     --this is trying to get rid of many decimals on screen for statcalcs (giving conversion error, even though it should only be doing it for stats)... ,InputValue = CASE WHEN s.InputType = 'StatCalc' THEN CAST(s.InputValue  as float) ELSE s.InputValue END--CASE WHEN s.INputType = 'AttrList' THEN isnull(att.AttributeDescription,0) ELSE s.InputValue END AS 'InputValue'

                     -- WHEN Inputvalue has >2 decimal places THEN ROUND
                     ,InputValue = CASE
										--  WHEN s.INputType like 'Stat%' AND s.INputId = 7 THEN dbo.FN_GetDuration(STartTime, EndTime) - ISNULL(delayhrs.delayhrs,0)
										WHEN s.InputType = 'StatCalc' --AND i.InputID IN (18,37) --AND (((abs(CAST(s.InputValue  as FLOAT))*100) - CONVERT(INT,(abs(CAST(s.InputValue  as FLOAT))*100))) <> 0)
										THEN
											CAST(ROUND (CAST(s.InputValue AS FLOAT), 0) AS VARCHAR(MAX))
										WHEN (s.InputType = 'Q' AND qt.AnswerType = 'YNradio')
										THEN
											UPPER(LEFT(s.InputValue, 1)) + LOWER(SUBSTRING(s.InputValue, 2, LEN(s.InputValue)))
									    WHEN (s.InputType = 'AttrList') --2020-02-27
									    THEN --2020-02-27
											(SELECT TOP 1 AttributeDescription FROM [dbo].[FN_GetAttributes](@ProjectID, '', '', 0, s.InputID, 0, 'Attr') WHERE CAST(AttributeID AS nvarchar(50)) = CAST(s.InputValue AS nvarchar(50))) --2020-02-27
										ELSE
											s.InputValue
									END

                     --,s.InputValue
                     --,RefNo
                     ,s.ConsumableProjectID
                     ,CASE
                          WHEN ISNULL(s.ConsumableProjectID, 0) <> 0 THEN (SELECT
                                                                               ConsumableID
                                                                           FROM tbl_DBT_ConsumablesProjectLink
                                                                           WHERE ConsumableProjectID = s.ConsumableProjectID)
                          ELSE 0
                                       END AS 'ConsumableID'
                     ,os.EmployeeName AS 'Offsider'
                     ,GroundCond = [GroundCondDesc]
                     ,la.LocationCode AS 'LoadedFrom'
                     ,bf.BogFromDesc AS 'BogFrom'
                     ,bt.BogToDesc AS 'LoadedTo'
                     ,re.EquipmentCode AS 'RelatedEquipment'
                     ,ISNULL(s.ClientDelay, 0) AS 'ClientDelay'
                     --,ISNULL(s.Damage, 0) AS 'DamageCheck'
                     ,s.DetailID
                     --,REPLICATE('0', 4 - LEN(s.StartTime)) + s.StartTime AS 'StartTime'
                     --,REPLICATE('0', 4 - LEN(s.EndTime)) + s.EndTime AS 'EndTime'
                     ,lp.Profile AS 'Profile'
                     ,ISNULL(s.Sequence, 0) AS 'Sequence'
                     ,s.ActivityReasonID AS 'ActivityReasonLinkID'
                     ,i.ForeLabel
                     ,cons.ConsumableDescShort
                     ,i.AftLabel
                     -- ,case when i.AftLabel = 'hrs' then ''
                     -- when s.inputtype like 'stat%' and s.inputid = 6 then '1'
                     --  else i.AftLabel end as 'AftLabel'   -- need to add a case when <> stat 7  remove aft label
                     --,ISNULL(i.ReviewTrap, 0) AS 'ReviewTrap'
                     ,st.StatisticTypeID
                     ,s.Reviewed AS 'Reviewed'
                     ,SupervisorComments = s.SupervisorComments
                                 ,LastLocalStagingID = MaxLocalStaging --MAX(s.LocalStagingID) OVER (PARTITION BY s.DataStoreID, s.DetailID ORDER BY s.DataStoreID, s.DetailID)
                                 ,s.LocalStagingID
                                 -- ,ChangeLog = chnglg.ChangeLog 
                     ,l.pitid
                     ,Method = CASE
                          WHEN (st.StatisticTypeID = 9 OR s.InputType like 'Attr%' OR s.Inputtype = 'ConsArea' OR s.InputType = 'Q') THEN 'Group' -- exclude attributes from grand total
                          WHEN st.StatisticTypeID = 10 THEN 'SUM'
                          ELSE 'SUM'
                      END
                     ,i.InputGroup
                     ,ShowButtonDayworks = @Dayworks * case when (@DayWorksInputsCsv LIKE '%,' + s.InputType + '_' + CAST(s.InputID AS VARCHAR) + ',%') then 1 else 0 end  --2021-03-10 mayeb this needs to show on all lines for a task, even if only some of them are dayworks lines?!  -- ISNULL(dw.IsDayWorksTask,  0)
                     ,i.DisplayOrder
                     -- ,aretc.ReasonAlias
					 ,l.LocationID
					 ,eq.EquipmentCodeID
					 ,s.StartTime
					 ,s.EndTime
					 ,AllowChangeTask = @AllowChangeTask
					 ,ChangeLog = STUFF(
							(SELECT CASE 
								WHEN ISNULL(l.NewValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								WHEN ISNULL(l.ExistingValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								WHEN ISNULL(l.ExistingValue, '') = '' AND ISNULL(l.NewValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								ELSE '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								END
								FROM dbo.[tbl_DWH_iPlodStagingEditedChangeLog] AS l
								LEFT JOIN dbo.tbl_SYS_User AS u
									ON l.UserID = u.UserID
								WHERE l.ProjectID = s.ProjectID
									AND l.UpdateType = 'Edit_DataSummary'
									AND l.DataStoreID = s.DataStoreID
									AND l.DetailIDCsv LIKE '%,' + CAST(s.DetailID AS VARCHAR(5)) + ',%'							
									AND (l.SequenceIDCsv IS NULL OR ( l.SequenceIDCsv IS NOT NULL AND l.SequenceIDCsv LIKE '%,' + CAST(s.Sequence AS VARCHAR(5)) + ',%'))
								ORDER BY l.RowID ASC
							FOR XML PATH (''))
							,1,1,'')
					,s.InputComment
					,s.InputPhoto
					,AllowFormEdit = @AllowedToEditForms
					,i.ReportingBitwise
                FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
                    LEFT OUTER JOIN #inputs AS i 
                    /*(SELECT   -- Changed from Inner Join to bring in TWI stuff
								InputType
								,InputID
								,InputGroup
								,DisplayOrder
								,AftLabel
								,ForeLabel
								,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )  --get from @project first, then Proj1
								,ActReasonLinkID
								,ExcludeFromWeb
								, Shareable
								,ReportingBitwise
								FROM[dbo].[tbl_DBT_ActReasonInputLink] 
								WHERE ProjectID IN(1,2, @projectid)
									--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
									--AND Shareable <> ''
									-- AND @ReportingBitwiseValue & ISNULL(ReportingBitwise, 0) = @ReportingBitwiseValue -- Turned off because we changed to left outer and filter in the where.

								)AS i*/
                                   ON i.ActReasonLinkID = s.ActivityReasonID
                                       AND s.InputID = i.InputID
                                       --AND s.ProjectID = i.ProjectID
                                       AND s.InputType = i.InputType
									                  AND i.RowNum =1
                     inner join dbo.vw_Iplod_GetAR_TaskGroupingsAll AS aretc
                      ON s.ActivityReasonID = aretc.ActivityReasonId 
                      AND s.ProjectID = aretc.ProjectID
					--2022-08-12	inner join dbo.FN_Iplod_GetAR_TaskGroupingsAll(@ProjectID,0) as aretc
								  -- ON s.ActivityReasonID = aretc.ActivityReasonId
                         --INNER JOIN (SELECT
                         --                     ar.ActivityreasonLinkID
                         --                      ,ar.ProcessID
                         --                      ,p.ProcessDescription
                         --                      ,r.ReasonDescription
                         --                      ,ar.ActivityID
                         --                      ,a.ActivityComments
                         --                      ,a.ActivityDescription
                         --                                                   ,ar.ReasonAlias
                         --                 FROM dbo.tbl_SYS_ActivityReasonLink AS ar
                         --                          INNER JOIN dbo.tbl_SYS_Process AS p
                         --                                     ON ar.ProcessID = p.ProcessID
                         --                          INNER JOIN dbo.tbl_SYS_Reason AS r
                         --                                     ON ar.ReasonID = r.ReasonID
                         --                          INNER JOIN dbo.tbl_SYS_Activity AS a
                         --                                     ON ar.ActivityID = a.ActivityID) AS aretc
                         --                ON s.ActivityReasonID = aretc.ActivityreasonLinkID


						INNER JOIN  (SELECT MaxLocalStaging= MAX(LocalStagingID), DetailId, DataStoreID    , date, shift, projectid
										FROM [dbo].[syn_DWH_iPlodStagingTable] 
									--	WHERE date = @Date
									--	AND ProjectID = @ProjectID
									--	AND shift = @Shift
										GROUP BY DetailId, DataStoreID  , date,shift, projectid

										) AS LastStagingId
									ON s.DetailID = LastStagingId.DetailID
									AND s.DataStoreID = LastStagingId.DataStoreID
                  AND s.date = LastStagingId.date   --2022-08-12
                   AND s.shift = LastStagingId.shift
                    AND s.ProjectID = LastStagingId.projectid 




						 LEFT OUTER JOIN dbo.tbl_SYS_Equipment AS eq
                                         ON s.EquipmentID = eq.EquipmentCodeID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS l
                                         ON s.Location = l.LocationID
                         LEFT OUTER JOIN dbo.tbl_DBT_Employees AS e
                                         ON s.OperatorID = e.EmployeeID
                         LEFT OUTER JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cons
                                         ON s.ConsumableProjectID = cons.ConsumableProjectID
                                             AND s.InputType IN ('Cons', 'ConsArea')
                         LEFT OUTER JOIN dbo.tbl_DBT_Materials AS m
                                         ON s.Material = m.MaterialOpID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS d
                                         ON s.Destination = d.LocationID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS la
                                         ON s.LoadedFrom = la.LocationID
                         LEFT OUTER JOIN dbo.tbl_SYS_BogFrom AS bf
                                         ON s.BogFrom = bf.BogFromID
                         LEFT OUTER JOIN dbo.tbl_SYS_BogTo AS bt
                                         ON s.BogTo = bt.BogToID
                         LEFT OUTER JOIN dbo.tbl_SYS_Equipment AS re
                                         ON s.RelatedEquipment = re.EquipmentCodeID
                         LEFT OUTER JOIN dbo.tbl_DBT_LocationProfiles AS lp
                                         ON s.ProfileID = lp.ProfileID
                         LEFT OUTER JOIN dbo.tbl_DBT_Employees AS os
                                         ON s.Offsider = os.EmployeeID
                         LEFT JOIN dbo.tbl_DBT_GroundCond as gc
                                   ON s.GroundCond = gc.GroundCondID
                                       AND gc.ProjectID = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
                                         ON st.StatisticID = s.InputID
                                             AND s.InputType IN ('Stat', 'StatCalc')
						 LEFT JOIN dbo.tbl_SYS_Questions AS qt
										ON s.InputType = 'Q'
											AND qt.QuestionID = s.InputID
											AND qt.QuestionID = i.InputID
                         LEFT JOIN tbl_DBT_Pit AS pit
                                   ON l.PitID = pit.PitID

					   WHERE 
				--2020-04-04 Removed the Exclude from web filter for hazards. Discussed with TS and we dont need anymore
				--(ISNULL(i.ExcludeFromWeb, 0) <> 1 )  --removed to assist performance. will have better soln next time need viv type bogging handling--OR s.ActivityReasonID IN (112,297,131,1505,1506,1507,1508))  --bogging tasks for VIV special handling
				EXISTS (SELECT g.ActReasonLinkID FROM #GeoGradeTasks AS g 
							WHERE g.ActReasonLinkID = s.ActivityReasonID)

				-- (@ActivityReasonCsv LIKE '%,' + CAST(s.ActivityReasonID  AS varchar) + ',%' OR @ActivityReasonCsv = '')
	
				--AND  (EXISTS (SELECT inputid FROM [dbo].[tbl_DBT_ActReasonInputLink] AS stat7
				--				WHERE stat7.ProjectID = @projectid
				--					--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
				--					--AND Shareable <> ''
				--					AND @ReportingBitwiseValue & stat7.ReportingBitwise = @ReportingBitwiseValue
				--					AND s.ActivityReasonID = stat7.ActReasonLinkID
				--					AND stat7.inputtype LIKE 'stat%'
				--					AND stat7.InputID=7)

				--	)

			

							AND ((@ReportingBitwiseValue & i.ReportingBitwise = @ReportingBitwiseValue) 										OR s.InputType = 'Camera' )



                  -- the filter
                  AND s.Date = @Date
                  AND s.Shift = @Shift
                  AND s.ProjectID = @ProjectID
              --    AND (s.Type = 'mining'
               --     OR s.Type = 'Shiftboss' OR s.Type = '') -- 2018-12-20

     --             AND (@TypeAliasMethod = 0   --no type alias used
     --               OR --[dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) 
					--@TypeAliasPitId= l.PitID
					--OR @TypeAliasPitId= d.PitID )  --or filter based on Pitid  2019-12-17.  or pit associated to destinationId, for CRF where there is no location parameter field!
     --             AND @Is24HrSummary = 0 --don't show this section for 24hr summary for now (should put on config instead)


				  --and s.DataStoreID = '291_202011300730DS_11499_1'


                ORDER BY ProcessID, s.DetailID, ActivityReasonLinkID, i.InputGroup, Sequence, Method DESC, cons.DisplayOrder, i.ForeLabel;



    DROP TABLE #inputs
  
  
  END
GO
PRINT N'Altering [dbo].[tvf_FixedConfigs_iPlodInputTypeMappings]'
GO
ALTER FUNCTION [dbo].[tvf_FixedConfigs_iPlodInputTypeMappings]
(
@Projectid INT = 0
)
/*
select * from   dbo.tvf_FixedConfigs_iPlodInputTypeMappings(3)

--test result here:


  DECLARE @isPurge AS INT
  EXEC dbo.SP_API_IPLODSetup_Configs @operationId = 0, @projectId = 3, @isPurge = @isPurge OUTPUT, @appDeploymentMode = 'mining_fitters', @appVersion = 'v2022.08.31 (269)'
  SELECT @isPurge AS isPurge


NOTES: add new configs to this. (and commit)
after deploy to live, can over-ride settings in here using normal front end changes.
can put in defaults for different projects direct to here if known

NB: the funciton that calls this already has handling to assume for configs missing from say TypeAlias=mining2 will match on a config for Mining.
so likely only one config is needed, to apply for all typeAlias. any that need different behaviour will need to be added separately though.

2022-08-31 ts ... created for source controlling config defaults
2022-08-31 ts ... 
2022-09-05 ts ... add AndroidCanUseInAppCamera
					... use correct data tpe tto avoid conversion
2022-10-10 ts ... don't go live with the poxy iplod duration stuff
2022-10-18 ts ... add the past work orders one out of PBW

*/
RETURNS 
@result TABLE 
 (

[webInputType] [nvarchar] (50) collate database_default NOT NULL,
[appInputType] [nvarchar] (50) collate database_default NOT NULL,
[EditedDate] [datetime] NOT NULL ,
[Active] [int] NOT NULL,
[Comments] [nvarchar] (500) collate database_default NULL,
[InputID] [int] NULL,
[PrimaryRegX] [nvarchar] (250) collate database_default NULL,
[RenderMethod] [nvarchar] (50) collate database_default NULL,
[webDataTypeDisplayed] [nvarchar] (250) collate database_default NOT null ,
[appInputTypeId] [int] NOT NULL ,
[appInputTypeImageFileName] [nvarchar] (100) collate database_default  NULL,
[ExcludeFromImport] [int] null,
[MinSupportedVersion] int null
)

AS
BEGIN
	-- Fill the table variable with the rows for your result set





INSERT INTO @result (webInputType, appInputType, EditedDate, Active, Comments, InputID, PrimaryRegX, RenderMethod, webDataTypeDisplayed, appInputTypeId, appInputTypeImageFileName, ExcludeFromImport, MinSupportedVersion) 

values (N'AttrInput', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, N'Text', N'decimal', 103, N'input.png', 0, 0),
(N'AttrList', N'AttrList', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! TS updated teh AppInputytpeId', NULL, NULL, N'Text', N'', 250, N'input.png', 0, 0),
(N'AttrLocn_1', N'xx', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! handled in the SP, due to changing on each project', NULL, NULL, N'Text', N'', 0, N'input.png', 0, 0),
(N'AttrLocn_2', N'xx', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! handled in the SP, due to changing on each project', NULL, NULL, N'Text', N'', 0, N'input.png', 0, 0),
(N'AttrLocn_3', N'xx', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! handled in the SP, due to changing on each project', NULL, NULL, N'Text', N'', 0, N'input.png', 0, 0),
(N'Camera', N'Camera', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! REVERTED to test: mapped into app as checkbox, becuase the app has a bug preventing us from making camera input type compulsory.', NULL, NULL, N'Picture', N'', 1600, N'input.png', 0, 0),
(N'Cons', N'Q_Number', '2021-07-27 15:55:54.253', 1, N'USE FIXED CONFIG FUNCTION! put to 104, backwards handling in inputs proc. maybe some shouldnt have inline, sort that in this table as needed', NULL, NULL, N'Text', N'', 104, N'input.png', 0, 0),
(N'ConsArea', N'ConsArea', '2021-07-27 15:55:54.253', 1, N'USE FIXED CONFIG FUNCTION! put to 104, backwards handling in inputs proc. maybe some shouldnt have inline, sort that in this table as needed', NULL, NULL, N'Text', N'', 104, N'input.png', 0, 0),
(N'ConsAreaInOut', N'xx', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! not coded in iplod yet ...', NULL, NULL, N'Text', N'', 0, N'input.png', 0, 0),
(N'EmpCodeList', N'x', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! not coded, will it be used?', NULL, NULL, N'Text', N'', 0, N'input.png', 0, 0),
(N'OpList', N'zz', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! for selecting other employees, not likely to be used', NULL, NULL, NULL, N'', 0, N'input.png', 0, 0),
(N'PageBreak', N'PageBreak', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! also used for screen breaks for certain tasks (set as Prestarts only in app v2)', NULL, NULL, N'PageBreak', N'', 1, N'input.png', 1, 0),
(N'PartsList', N'PartsList', '2021-07-27 15:54:26.273', 0, N'USE FIXED CONFIG FUNCTION! mapped further down to SToresPickItems', NULL, NULL, N'Text', N'', 0, N'input.png', 0, 0),
(N'Q', N'Q_radio', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'Radio', N'radio', 100, N'input.png', 0, 0),
(N'Stat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, N'Text', N'', 103, N'input.png', 0, 0),
(N'StatCalc', N'StatCalc', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! no stat calcs supported as yet TS', NULL, NULL, N'Text', N'', 1700, N'input.png', 0, 0),
(N'1_1_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, NULL, N'int', 103, N'input.png', 0, 0),
(N'StatEquip', N'StatEquip', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! handle it on the validation string', NULL, NULL, N'Text', N'decimal', 1500, N'input.png', 0, 0),
(N'Q', N'Q_ynradio', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'ynradio', N'ynradio', 101, N'input.png', 0, 0),
(N'Q', N'Q_checkbox', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'Checkbox', N'checkbox', 102, N'input.png', 0, 0),
(N'Q', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, N'Text', N'number', 103, N'input.png', 0, 0),
(N'Q', N'Q_text', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'Text', N'text', 200, N'input.png', 0, 0),
(N'CommentsCheck', N'Q_text', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! keep it consistent on app, comments no different to q_text', NULL, NULL, N'Text', N'', 200, N'input.png', 0, 0),
(N'WO_Pick', N'StoresWOPick', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! added by TS for initial testing', 0, NULL, N'Text', N'', 61, N'', 1, 0),
(N'AttrInput', N'Q_text', '2021-05-06 22:16:25.133', 1, NULL, NULL, NULL, N'Text', N'varchar', 200, N'input.png', 0, 0),
(N'AttrInput', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, N'Text', N'int', 103, N'input.png', 0, 0),
(N'AttrInput', N'Q_text', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! missing datatype assumed to be varchar', NULL, NULL, N'Text', N'', 200, N'input.png', 0, 0),
(N'StocktakeItem', N'StoresItemStocktake', '2021-05-06 22:16:25.133', 0, N'USE FIXED CONFIG FUNCTION! not used?', NULL, NULL, N'text', N'', 51, N'', 1, 0),
(N'WO_Return', N'StoresWOReturns', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! ', NULL, NULL, N'Text', N'', 62, N'', 1, 0),
(N'StocktakeGen', N'StoresStocktake', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! ', NULL, NULL, N'Text', N'', 63, N'', 1, 0),
(N'PO_Receipt', N'StoresPOReceipt', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! ', NULL, NULL, N'Text', N'', 64, N'', 1, 0),
(N'PO_Putaway', N'StoresPOPutAway', '2021-05-06 22:16:25.133', 0, N'USE FIXED CONFIG FUNCTION! ', NULL, NULL, N'Text', N'', 65, N'', 1, 0),
(N'PartsList', N'StoresPickItems', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! ', NULL, NULL, N'Text', N'', 66, N'', 0, 0),
(N'Stat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, N'Text', N'int', 103, N'input.png', 0, 0),
(N'Stat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', NULL, NULL, N'Text', N'decimal', 103, N'input.png', 0, 0),
(N'Stat', N'TrkCount', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! updated by TS to get app working.  FieldType = web.InputType', NULL, NULL, N'Text', N'TrkCount', 1300, N'input.png', 0, 0),
(N'Stat', N'xx time fired placeholder', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'Text', N'nchar(4)', 0, N'input.png', 0, 0),
(N'DeliveryNote', N'Q_text', '2019-02-28 13:15:15.090', 1, N'USE FIXED CONFIG FUNCTION! purely for stores, to get into the PO receipt API', 1, N'', N'Text', N'varchar', 200, N'', 1, 0),
(N'DocumentsAll', N'DocumentView', '2020-08-21 20:36:13.443', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 1800, N'', 1, 0),
(N'ReturnItems', N'StoresReturnItems', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! ', NULL, NULL, N'Text', N'', 68, N'', 1, 0),
(N'Documents', N'DocumentView', '2020-08-21 20:36:13.443', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 1800, N'', 1, 0),
(N'Location', N'Location', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 250, N'', 0, 0),
(N'PrestartHistory', N'PrestartHistory', '2020-08-17 21:47:11.877', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 250, N'', 1, 0),
(N'*PrestartHistory', N'*PrestartHistory', '2020-08-17 21:47:11.877', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 250, N'', 1, 0),

(N'PastWorkOrders', N'PastWorkOrders', '2021-07-27 15:54:26.273', 0, N'USE FIXED CONFIG FUNCTION! for putting parts back into old work orders', NULL, N'', N'Text', N'', 250, N'', 0, 0),

(N'PoOneStep', N'StoresPOReceiptOneStep', '2021-07-27 15:54:26.273', 0, N'USE FIXED CONFIG FUNCTION! one step po function', NULL, N'', N'Text', N'', 69, N'', 0, 0),
(N'AllPutAway', N'StoresAllPutAway', '2019-07-25 10:50:34.357', 1, N'USE FIXED CONFIG FUNCTION! added as final version, no more changes Downer!', 0, N'', N'Text', N'', 70, N'', 1, 0),
(N'CameraEdit', N'CameraTakePickWithEdit', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! Editable photo input', NULL, NULL, N'Picture', N'', 1610, N'input.png', 0, 0),
(N'SketchPad', N'SketchPad', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! Drawable sketch pad', NULL, NULL, N'Picture', N'', 1650, N'input.png', 0, 0),
(N'StoresLocationPutAway', N'StoresLocationPutAway', '2019-09-16 14:09:24.383', 1, N'USE FIXED CONFIG FUNCTION! this type provides the UIGG selector for locations, then adds ALL items at this location onto list with RegExpIntolerable allowing >=0. https://trello.com/c/ReSJMhVF. intended for Explosives', 0, N'', N'', N'', 71, N'', 1, 0),
(N'StoresLocationPick', N'StoresLocationPick', '2019-09-16 14:09:24.383', 1, N'USE FIXED CONFIG FUNCTION! this type provides the UIGG selector for locations, then adds ALL items at this location onto list with RegExpIntolerable allowing >=0 <=QtyInStore. https://trello.com/c/ReSJMhVF. intended for Explosives', 0, N'', N'', N'', 72, N'', 1, 0),
(N'SavedTask', N'Savedtask', '2019-11-19 12:29:57.247', 1, N'USE FIXED CONFIG FUNCTION! for templating the shift summary screen.  a variant of this likely for create task as delay', 0, N'', N'', N'', 9999, N'', 1, 0),
(N'readonly lookup ... tbc', N'UIGroupGroupDetailRO', '2021-05-06 22:16:25.133', 0, N'USE FIXED CONFIG FUNCTION! this is another method for readonly list. instead of the * in front. dont think we need to ave the appinputType field specific? just th eappINptTypeId matched. beacuse the list should search unique input id which is webinputtype + inputId ', 0, N'', N'', N'', 251, N'', 0, 0),
(N'n/a', N'StoresPOReceipt_NoPutAway', '2020-03-20 12:11:48.173', 0, N'USE FIXED CONFIG FUNCTION! this input is used on device to avoid generating a putaway', 0, N'', N'', N'', 67, N'', 0, 0),
(N'*StoresHistory', N'*StoresHistory', '2020-03-25 15:54:37.327', 1, N'USE FIXED CONFIG FUNCTION! added by TS to feed the stores posting data into', 0, N'', N'', N'', 250, N'', 1, 0),
(N'SectionBreak', N'SectionBreak', '2020-03-25 15:54:37.327', 1, N'USE FIXED CONFIG FUNCTION! added by TS, not sure what it looks like?', 0, N'', N'', N'', 5, N'', 1, 0),
(N'WebUrl', N'WebUrl', '2020-03-25 15:54:37.327', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'', 1100, N'', 1, 0),
(N'TimeStamp', N'TimeStamp', '2020-05-25 13:17:12.967', 1, N'USE FIXED CONFIG FUNCTION! added by TS, not sure it is working?', 0, N'', N'', N'', 1200, N'', 0, 0),
(N'1_3_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'4_2_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'2_2_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'2_1_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'2_6_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'2_7_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'2_4_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'4_1_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'2_3_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'5_6_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'4_3_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'1_2_BogStat', N'Q_number', '2021-08-03 14:42:58.020', 1, N'USE FIXED CONFIG FUNCTION! mostly dont have inline numbers, only put for consarea (fixed). or specia data type displayed = int_InlineControl', 0, N'', N'', N'int', 103, N'', 0, 0),
(N'*AppSessionLogs', N'*AppSessionLogs', '2020-04-05 13:49:28.053', 1, N'USE FIXED CONFIG FUNCTION! added by TS to show app session logs. intended only for test server', 0, N'', N'', N'', 250, N'', 1, 0),
(N'TO_Ship', N'TO_Ship', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! Transfer Order shipping', NULL, N'', N'', N'', 76, N'', 1, 0),
(N'TO_receipt', N'TO_receipt', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! Transfer order receipting', NULL, N'', N'', N'', 73, N'', 1, 0),
(N'StoresWOReturnsOneStep', N'StoresWOReturnsOneStep', '2021-05-06 22:16:25.133', 1, N'USE FIXED CONFIG FUNCTION! Stores Work Order returns, choose work order first', NULL, N'', N'', N'', 75, N'', 1, 0),
(N'FreightZone', N'Q_text', '2020-04-06 12:25:48.007', 1, N'USE FIXED CONFIG FUNCTION! FreightZone text entry for TO shipping', 1, N'', N'Text', N'varchar', 200, N'', 1, 0),
(N'RefNo', N'RefNoList', '2021-05-06 22:16:25.137', 1, N'USE FIXED CONFIG FUNCTION! ADDED TO MAP INTO WEBBAR, set AppInputTypeId = 0 to keep it out of the app. set to 200 if we want to send RefNo down to the app', 0, N'', N'', N'', 250, N'', 0, 0),
(N'LoadedFrom', N'LoadedFrom', '2020-05-28 22:19:05.673', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'', 250, N'', 0, 0),
(N'Destination', N'Destination', '2020-05-28 22:19:05.677', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'', 250, N'', 0, 0),
(N'RelatedEquipment', N'RelatedEquipment', '2020-05-28 22:19:05.677', 1, N'USE FIXED CONFIG FUNCTION! for haul ... need the UIGroupGroupDetailFilterCsv to work in device!', 0, N'', N'', N'', 250, N'', 0, 0),
(N'HaulRoute', N'HaulRoute', '2020-05-25 20:38:21.573', 1, N'USE FIXED CONFIG FUNCTION! combining loadedfrom and dest atrificially to send to device (re-hydrate them upon import)', 0, N'', N'', N'', 250, N'', 0, 0),
(N'StoresItemDetail', N'StoresItemDetail', '2020-05-26 17:09:48.280', 1, N'USE FIXED CONFIG FUNCTION! added by TS for mapping the import of fitters PartsList data back in', 0, N'', N'', N'', 50, N'', 0, 0),
(N'Material', N'Material', '2020-05-26 19:15:57.183', 1, N'USE FIXED CONFIG FUNCTION! added by ts', 0, N'', N'', N'', 250, N'', 0, 0),
(N'Cons', N'Q_number_InlinePlusMinus', '2021-06-09 21:48:31.150', 1, N'USE FIXED CONFIG FUNCTION! changed from 103 (Q_Number) for testing. use the datatypedisplyed if it isnt going to lfy across the boardchanged from 103 for testing. use the datatypedisplyed if it isnt going to lfy across the boardadded in case the inputs are mapped with different data types', 0, N'', N'', N'int', 104, N'', 0, 0),
(N'Cons', N'Q_Number', '2021-07-27 15:55:54.253', 1, N'USE FIXED CONFIG FUNCTION! put to 104, backwards handling in inputs proc. maybe some shouldnt have inline, sort that in this table as needed', 0, N'', N'', N'decimal', 104, N'', 0, 0),
(N'SaveBack', N'StatCalcSaveBack', '2020-06-09 21:35:06.537', 1, N'USE FIXED CONFIG FUNCTION! added by tom', 0, N'', N'', N'', 1701, N'', 1, 0),
(N'ClientDelay', N'Q_checkbox', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! added by CA for rb', 0, NULL, NULL, N'', 102, N'input.png', 0, 0),
(N'DamageCheck', N'Q_checkbox', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! added by CA for rb', 0, NULL, NULL, N'', 102, N'input.png', 0, 0),
(N'1_1_BogStatCalc', N'StatCalc', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! can derive Bog To and BogFrom parameter fields. maybe use both bogfrom and bog to as the INputID !!! will only work if they stay as single digits!', NULL, NULL, NULL, N'decimal', 1700, N'input.png', 0, 0),
(N'1_2_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'1_3_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'2_1_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'2_2_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'2_3_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'2_4_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'2_6_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'2_7_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'4_1_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'4_2_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'4_3_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'5_6_BogStatCalc', N'StatCalc', '2020-06-30 21:11:26.413', 1, N'USE FIXED CONFIG FUNCTION! added by TS', 0, N'', N'', N'decimal', 1700, N'', 0, 0),
(N'SummaryCalc', N'StatCalc', '2020-07-27 20:41:14.290', 1, N'USE FIXED CONFIG FUNCTION! added for the summary calcs. may need new lines for different datatypes?', 0, N'', N'', N'', 1700, N'', 1, 0),
(N'StatCalc', N'StatCalc', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! added other datatypes', NULL, NULL, N'Text', N'int', 1700, N'input.png', 0, 0),
(N'StatCalc', N'StatCalc', '2021-07-27 15:54:26.273', 1, N'USE FIXED CONFIG FUNCTION! added other datatypes', NULL, NULL, N'Text', N'decimal', 1700, N'input.png', 0, 0),
(N'SummaryCalc', N'StatCalc', '2020-07-27 20:41:14.290', 1, N'USE FIXED CONFIG FUNCTION! added other datatypes', 0, N'', N'', N'int', 1700, N'', 1, 0),
(N'SummaryCalc', N'StatCalc', '2020-07-27 20:41:14.290', 1, N'USE FIXED CONFIG FUNCTION! added other datatypes', 0, N'', N'', N'decimal', 1700, N'', 1, 0),
(N'RelatedEquipmentUJ', N'RelatedEquipmentUJ', '2020-08-10 16:50:50.500', 1, N'USE FIXED CONFIG FUNCTION! for chargeup ... need the UIGroupGroupDetailFilterCsv to work in device!', 0, N'', N'', N'', 250, N'', 0, 0),
(N'*HazardHistory', N'*HazardHistory', '2020-08-17 21:53:10.787', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 250, N'', 1, 0),
(N'*RaiseboreHistory', N'*RaiseboreHistory', '2020-08-17 21:53:10.787', 1, N'USE FIXED CONFIG FUNCTION! added as test ts', 0, N'', N'', N'', 250, N'', 1, 0),
(N'Operator', N'Operator', '2020-11-14 21:25:33.337', 1, N'USE FIXED CONFIG FUNCTION! appInputTypeId=0 so we dont send this into app. needs to be mapped so it appears in various places in the web', 0, N'', N'', N'', 0, N'', 0, 0),
(N'*MaintHistory', N'*MaintHistory', '2021-02-10 16:49:11.193', 1, N'USE FIXED CONFIG FUNCTION! copied from prestarthistroy ts', 0, N'', N'', N'', 250, N'', 1, 0),
(N'specialAttrInput', N'Q_text', '2022-09-01 21:57:02.380', 1, N'USE FIXED CONFIG FUNCTION! row inputted so that iplod feedback gets imported through to staging edited. NOTE, it will presumably be ""deleted"" when users saves/edits teh task that it is on. should still be available though.', NULL, NULL, N'Text', N'varchar', 200, N'input.png', 0, 0),
(N'*ProdDrillHistory', N'*ProdDrillHistory', '2021-06-03 11:12:56.450', 1, N'USE FIXED CONFIG FUNCTION! copied from prestarthistroy ts', 0, N'', N'', N'', 250, N'', 1, 0),
(N'*EquipStatus', N'*EquipStatus', '2021-06-03 11:12:56.450', 1, N'USE FIXED CONFIG FUNCTION! copied from prestarthistroy ts', 0, N'', N'', N'', 250, N'', 1, 0),
(N'Stat', N'Q_number_InlinePlusMinus', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'Text', N'int_InlineControl', 104, N'input.png', 0, 0),
(N'Q', N'Q_Rating', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'Rating', N'rating', 105, N'input.png', 0, 0),
(N'AbortTask', N'TaskOnHoldWithVoidIntolerable', '2021-07-27 15:54:26.273', 1, NULL, NULL, NULL, N'', N'', 9500, N'input.png', 0, 0),
(N'Q', N'Q_number', '2021-10-05 10:44:45.347', 1, N'USE FIXED CONFIG FUNCTION! not int', NULL, NULL, N'Text', N'numeric', 103, N'input.png', 0, 0),
(N'*SignRegister', N'*SignRegister', '2021-12-15 16:53:22.163', 1, N'USE FIXED CONFIG FUNCTION! CA for sign regitster', 0, N'', N'', N'', 250, N'', 1, 0),
(N'LocationInGroup', N'LocationInGroup', '2022-01-14 16:44:45.820', 1, N'USE FIXED CONFIG FUNCTION! CA for new location in group', NULL, NULL, N'Text', N'', 250, N'input.png', 0, 0),
(N'VideoViewer', N'VideoViewer', '2022-01-21 10:54:47.320', 1, N'USE FIXED CONFIG FUNCTION! for viewing videos in device', 0, N'', N'Picture', N'', 1620, N'', 1, 0),
(N'SummaryByCalc', N'StatCalc', '2022-07-28 14:35:05.840', 1, N'USE FIXED CONFIG FUNCTION! for summary by placeholders', 0, N'', N'', N'decimal', 9998, N'', 1, 20220710),
(N'SummaryByCalc', N'StatCalc', '2022-07-28 14:35:04.263', 1, N'USE FIXED CONFIG FUNCTION! for summary by placeholders', 0, N'', N'', N'int', 9998, N'', 1, 20220710),
(N'SummaryByCalc_StatsFirst', N'StatCalc', '2022-07-28 14:34:57.983', 1, N'USE FIXED CONFIG FUNCTION! for summary by placeholders', 0, N'', N'', N'decimal', 9998, N'', 1, 20220710),
(N'SummaryByCalc_StatsFirst', N'StatCalc', '2022-07-28 14:34:56.607', 1, N'USE FIXED CONFIG FUNCTION! for summary by placeholders', 0, N'', N'', N'int', 9998, N'', 1, 20220710),
(N'appQR_GenerateCalc', N'TaskQRCodeGenerate', '2022-08-03 14:06:47.137', 1, N'USE FIXED CONFIG FUNCTION! for viewing videos in device', 0, N'', N'Picture', N'', 300, N'', 1, 20220710),
(N'appQR_Reader', N'TaskQRCodeScan', '2022-07-28 15:12:14.680', 1, N'USE FIXED CONFIG FUNCTION! for viewing videos in device', 0, N'', N'Picture', N'', 301, N'', 0, 20220710)


--add new rows like:
/* 
SELECT 
      ConfigId = -54 , ConfigName ='AdminPwd'                            
       , ConfigValue  = ''                        
       , Comments = 'what this config is for'
       , EditedDate = '2022-09-01'
       , MinAppVersionINt = 20220901
       ,DeploymentMode = '_Default'
       ,OperationId=1, ProjectId=1,  IsEnabled=1

*/


	RETURN 
END
GO
PRINT N'Altering [dbo].[tvf_FixedConfigs_DbtWebbarConfigs]'
GO
ALTER FUNCTION [dbo].[tvf_FixedConfigs_DbtWebbarConfigs]
(
@Projectid INT = 0
)
/*

test restul here:
select * from  dbo.tvf_FixedConfigs_DbtWebbarConfigs(1)

select [dbo].[FN_GetConfigValue](259, 'GenGraphsTrigger_LocalUpdate')

NOTES: add all new configs to this. (and commit)
after deploy to live, can over-ride settings in here using normal front end changes.
can put in defaults for different projects direct to here if known

2022-08-31 ts ... created for source controlling config defaults
2022-09-02 ts ... add etl recacl config 
2022-09-05 ts ... add sign register with defaults
              ... add the background sync jobs ones.
              ... add @AnyoneIsAllowedToAuth, this will limit the need fro this config: https://app.clickup.com/t/6938923/PLOD-411
              ... add single signon config (off for normal )
2022-09-29 ts ... do we need a fucking operationID?
2022-09-30 ip ... new config


todo: where to file it:
select distinct configtype from tbl_dbt_webbarconfigs
*/
RETURNS 
@result TABLE 
(
	-- Add the column definitions for the TABLE variable here
    ConfigType varchar(50),
    ConfigName varchar(50),
    ConfigValue varchar(max),
    EditedDate datetime,
    Active int,
    ProjectID int,
    OperationID int,
    Comments varchar(1000),
    UserID int
)
AS
BEGIN
	-- Fill the table variable with the rows for your result set



INSERT INTO @result 
(ConfigType           , ConfigName                        , ConfigValue                         , EditedDate    , Active  , ProjectID , OperationID , Comments, UserID) 
VALUES
('ProjectSetups'    , 'GenGraphsTrigger_LocalUpdate'       , '1'                              , '2022-08-31'  , 1       , 1       , 1         
                                                                                              , 'https://app.clickup.com/t/6938923/MANAGE-478', NULL)
,('ProjectSetups'    , 'GenGraphsTrigger_OnDisplayRefresh'       , '1'                              , '2022-08-31'  , 1       , 1       , 1         
                                                                                              , 'https://app.clickup.com/t/6938923/MANAGE-478', NULL)
,('ProjectSetups'    , 'GenGraphsTrigger_LocalUpdate'       , '1'                              , '2022-08-31'  , 1       , 1       , 1         
                                                                                              , 'https://app.clickup.com/t/6938923/MANAGE-478', NULL)
,('ShiftSummary'    , 'ExecOptionsOnEtlRecalcCsv'       , 'ImportV3,UpdateCrew,AddRows,CreateStopeGradeTask,AssignCuts,AssignGrades,BuildCacheAttributes,Recalc'                              , '2022-09-02'  , 1       , 1       , 1         
                                                                                              , 'the executables that run on elt_recalc schedule, instead of on page load. add to this or change the order as needed.', NULL)

--sign register stuff:
,('iPLOD_Setup', 'IsSignRegisterActive', '1', '2021-12-15 17:08:22.570', 1, 399, 1, 'This controls sign register group group', 250)
,('iPLOD_Setup', 'IsSignRegisterActive_StopeVariant', '1', '2021-12-15 17:08:22.570', 1, 399, 1, 'This controls sign register group group', 250)
,('iPLOD_Setup', 'IsSignRegisterActive', '1', '2021-12-15 17:08:22.570', 1, 259, 1, 'This controls sign register group group', 250)
,('iPLOD_Setup', 'IsSignRegisterActive', '1', '2021-12-15 17:08:22.570', 1, 236, 1, 'This controls sign register group group', 250)
,('iPLOD_Setup', 'IsSignRegisterActive', '0', '2021-12-15 17:08:22.570', 1, 1, 1, 'This controls sign register group group', 250) --default is off
,('iPLOD_Setup', 'IsSignRegisterActive_StopeVariant', '0', '2021-12-15 17:08:22.570', 1, 1, 1, 'This controls sign register group group', 250) --default is off

--other ipldo stuff:
,('iPLOD_Setup', 'AnyoneIsAllowedToAuth', '0', '2021-12-15 17:08:22.570', 1, 1, 1, 'dont narrow down the teh list of people who are allowed to authorise', 250)
,('iPLOD_Setup', 'AnyoneIsAllowedToAuth', '1', '2021-12-15 17:08:22.570', 1, 399, 1, 'MCR is using the work around where we use intolerable auth to register a signature for logged in user.', 250)



--2022-09-05 config for "background recalc jobs instead of on page load"
--NEED TO ENSURE THE BACKGROUND ETL_RECALC JOB IS ROCK SOLID BEFORE TURNING THESE ONES ON!!!
--(turning them on will cause the page load exectuabels to stop running.
,('ProjectSetups', 'PageloadExecutablesAreOnBackgroundSyncJob', '0', '2022-09-05', 1, 1, 1, 'instead of running executables on page load, run them on background etl scheduled job (only fires on dates where there is new data since last time it ran)', 250) --default is off
,('ProjectSetups', 'DataSummarySaveExecutablesAreOnBackgroundSyncJob', '0', '2022-09-05', 1, 1, 1, 'instead of running executables on save of data in data summary, run them on background etl scheduled job (only fires on dates where there is new data since last time it ran)', 250) --default is off
,('ProjectSetups', 'ReconPageSaveExecutablesAreOnBackgroundSyncJob', '0', '2022-09-05', 1, 1, 1, 'instead of running executables on commit of reconciliation, run them on background etl scheduled job (only fires on dates where there is new data since last time it ran)', 250) --default is off

--single signon
,('ProjectSetups', 'SingleSignOnIsActive', '0', CONVERT(DATETIME, '2022-07-20 21:10:27.817', 121), 1, 1, 1, 'whether single signon is active or not. ', 1)
,('ProjectSetups', 'SingleSignOnIsActive', '1', CONVERT(DATETIME, '2022-07-20 21:10:27.817', 121), 1, 3, 83, 'whether single signon is active or not. ', 1)  --on for repo-test?


,('ShiftSummary', 'BypassDataSummaryParamInputCache', '1', '2022-09-19', 1, 1, 1, 'Whether to cache data summary param input or not. If this config is not availabe, default is 0 or dont use cache.', NULL)


--add new rows like:
/* ,('ProjectSetups'    , 'GenGraphsTrigger_LocalUpdate'       , '1'                              , '2022-08-31'  , 1       , 1       , 1         
                                                                                              , 'added for BRK (Glencore) if null then just use our normal TWIs', NULL)

 */
 --sort the operationId here:
 /*
 this is very slow
 UPDATE a SET  a.operationid = p.OperationId
 FROM @result as a
 INNER JOIN dbo.tbl_dbT_Project as p with (nolock)
 ON p.ProjectID = a.ProjectID
WHERE 1 = 1
*/

	RETURN 
END
GO
PRINT N'Refreshing [dbo].[View_ItemPosting_InventSum_AX]'
GO
EXEC sp_refreshview N'[dbo].[View_ItemPosting_InventSum_AX]'
GO
PRINT N'Altering [dbo].[FN_GetItems_WebbarPrimaryConsumption]'
GO
ALTER  FUNCTION [dbo].[FN_GetItems_WebbarPrimaryConsumption](@ProjectID INT =0 , @StartDate DATE = '', @EndDate DATE = '', @Shift NVARCHAR(2) = '' )
RETURNS TABLE 
AS
RETURN 
(

--I got this view from PBW.View_ItemPosting_PrimaryConsumption_v2 on 20180626 ...TS
--updated 20180409 to put partition on the locations table joining to magman data ... was pulling duplicates if locationCode existed twice (which is currently possible in the database)

/*  change log
(TS) 20180808 get project via function
(TS) 20180827 get sub project from consumable listing instead of task listing for certain setups in ActReasonLink (where subproject field = ConsArea)
(TS) 2018-09-25 minor changes to the magman set to get it to flow into the explosives validation page
(TS) 2018-09-28 added isnull on the default sub-project
TS 2018-10-10 ... handling for magman = 2 ... indicates that magman is active on a project, but some explosives are logged through iplod/webbar (mainly emulsion)  NEED TO BE CAREFUL THAT ITEMS ARE NOT DOUBLE RECORDED AND POSTED!!
TS 2018-11-23 ... brought teh grouping field back here to get magman stamped where applicable
TS 2018-12-03 ... Indra added DataStoreID to this one ... will it have ramafications to the items posting page? probably not ...
TS 2018-12-07 ... added proj mask map on the magman set
TS 2018-12-07 ... allowed to have exclude from posting on for ConsArea=40
TS 2018-12-11 ... allowed the stock replenishment transactions through for the validation page (should be excluded already on the post page)
TS 2018-12-11 ... allowed zero values through for webbar trans, so change log is still shown
TS 2018-01-03 ... get consumable desc from SYS_Cons for magman ... so that explosives validation page will work
TS 2019-03-25 ... added formula for magman time
TS 2019-04-30 ... added source code handling for items sub project
TS 2019-08-27 ... send excludefrompsoting through for filtering on the post (so we can still use this same function to get item trans for the explosivies validation page)
TS 2019-09-09 ... dodgy handling for PEA explosives on different warehouse
TS 2019-09-10 ... shift the PEA onto a config (sort of)
TS 2019-09-26 ...  added handling for magman data not having proper location. farken thing. not ideal, but the items posting page is getting too out of control.
			... too hard doing it here, putting it back into the magman view instead
ts 2020-03-17 ... added no lock to teh main select
ts 2020-05-21 ... added pit id
ts 2020-05-25 ... fix for itemid data type

*/
	SELECT
		GroupingField = 'webBAR',
        a.DataStoreID,
		a.Date,
		a.ReasonID,
		b.ReasonDescription,
		a.LocationID,
		c.LocationCode + ' - ' + b.ReasonDescription + '; webbarDesc:' +d.ConsumableDescShort AS LocationCode,
		c.ProfileName,
		a.Shift,
		a.ConsumableID,
		d.ConsumableDescShort,
		a.ConsumableProjID,
		d.MinepointITEM,
		a.ClientDelay AS ClientChargeable,
		a.ProjectID,
		a.DetailID,
		e.SubProjectSuffix,
		f.ProjectMask,
		Warehouse = g.OperationCode,--shift it back up to the SP CASE WHEN a.ProjectID = 259 AND d.ConsumableArea = 42 THEN 'PEB' ELSE g.OperationCode END ,   -- one off dodginess for Peak explosives. if need to get more cunning will need proper link table for ConsArea and Warehouses. (and be careful of duplicatsion!)
		SUM(a.Value)
			AS Qty,
		SubProject = CASE 
							WHEN LEN(e.SubProjectSuffix) <= 5
								THEN (dbo.FN_ProjectMaskMap(a.ProjectID,a.LocationID ) + '-' + e.SubProjectSuffix)
							 WHEN e.SubProjectSuffix = 'ConsArea' THEN dbo.FN_ProjectMaskMap(a.ProjectID,a.LocationID ) + '-' + ISNULL(RIGHT(d.DefaultSubProject,2),'xxxxxx')   --get sub project from consumable listing in DBT_ConsumableProjectLink
							WHEN e.subprojectsuffix = 'sourcecode' AND
								 LEN(j.SubProjectSuffix) = 2 THEN (dbo.FN_ProjectMaskMap(a.ProjectID,a.LocationID ) + '-' + ISNULL(j.SubProjectSuffix,'xxxxxx'))  --2019-04-30
							ELSE 'xxxxxx'
						  END,

		h.ITEMNAME,
		h.ITEMGROUPID,
		REPLICATE('0', 2 - LEN(d.ConsumableArea)) + CAST(d.ConsumableArea AS VARCHAR) + REPLICATE('0', 2 - LEN(d.DisplayOrder)) + CAST(d.DisplayOrder AS VARCHAR) AS DisplayOrder
		,c.LocationCode AS 'Location'
		,EmployeeName AS Operator
		,d.ConsumableArea AS 'ConsAreaID'
		,StartTime = dbo.FN_NormalizeTime(a.StartTime, a.Shift) 
		,a_ExcludeFromPosting = d.ExcludeFromPosting
		,a_PitID=c.PitID
	FROM dbo.tbl_DWH_ProdDataStorage AS a WITH (NOLOCK)


	LEFT OUTER JOIN dbo.tbl_SYS_Reason AS b
		ON a.ReasonID = b.ReasonID
	LEFT OUTER JOIN dbo.tbl_DBT_Location AS c
		ON a.LocationID = c.LocationID
	LEFT OUTER JOIN (
		SELECT DISTINCT
			ConsumableDescShort,
			ConsumableArea,
			MinepointITEM=CAST(MinepointITEM AS nchar(15)),
			ExcludeFromPosting,
			ConsumableID,
			ConsumableProjectID,
			DisplayOrder,
			ProjectID,
			DefaultSubProject
		FROM dbo.tbl_DBT_ConsumablesProjectLink
	) AS d
		ON a.ConsumableProjID = d.ConsumableProjectID
		AND a.ProjectID = d.ProjectID
/*LEFT JOIN 
		(SELECT DISTINCT Warehouse, ConsAreaID FROM [dbo].[FN_GetProjectWarehouses](@ProjectId ) 
		)AS warehouseoverride
		ON d.ConsumableArea = warehouseoverride.ConsAreaID 
			OR (d.ConsumableArea NOT IN (40,41,42) AND warehouseoverride.ConsAreaID = 0)  --be very careful of duplicates in t
		reverted due to likely issues in duplication!!!
			*/



	LEFT OUTER JOIN (SELECT reasonid, activityid, processid, SubprojectSuffix, ROW_NUMBER() OVER(PARTITION BY reasonID, ActivityID, ProcessID ORDER BY SubProjectSuffix) AS RowNum 
						FROM dbo.tbl_SYS_ActivityReasonLink) AS e
		ON a.ReasonID = e.ReasonID
		AND a.ActivityID = e.ActivityID
		AND a.ProcessID = e.ProcessID
		AND e.RowNum = 1 
	LEFT OUTER JOIN dbo.tbl_DBT_Project AS f
		ON a.ProjectID = f.ProjectID
	LEFT OUTER JOIN dbo.tbl_DBT_Operation AS g
		ON a.OperationID = g.OperationID
	LEFT OUTER JOIN dbo.syn_PYB_InventTable AS h
		ON d.MinepointITEM = h.ITEMID
	LEFT OUTER JOIN dbo.tbl_DBT_Employees AS em 
		ON a.OperatorID = em.EmployeeID
LEFT OUTER JOIN dbo.tbl_DBT_LocationSources AS i  --2019-04-30
       ON c.SourceID = i.SourceID
LEFT OUTER JOIN dbo.tbl_SYS_LocationSources AS j
       ON i.SourceMasterID = j.MasterSourceID
	WHERE (a.BudgetCodeID = 1)
	AND a.ReasonID NOT IN (335) --only exclude stocktake variations in here, exclude the other reasons from posting page, show in expl validation page, 354,458,459) --consumable stocktake variations and magazine transfers + expl deliveris and stocktakes
	AND (a.ActivityID = 1)
	AND (a.ClientDelay = 1
	OR a.ClientDelay = 0)
	AND (a.ConsumableID > 0)
	AND (d.ExcludeFromPosting = 0 OR d.ExcludeFromPosting IS NULL  OR d.ConsumableArea = 40)
	--AND a.Value <>0 --added due to entries going to PDS with zero value for some reason? 31/3/2017  --TS 2018-12-11
	AND (@ProjectId = a.ProjectID OR @ProjectID = '')
	AND (a.Date > = @StartDate OR @StartDate = '')
		AND (a.Date <= @EndDate OR @EndDate = '')
	AND (@Shift = a.Shift  OR @Shift = '')
AND (MagmanActive IN(0,2) OR (MagmanActive=1 AND ConsumableArea NOT IN (4,8))) --TS 2018-10-10

	GROUP BY a.Date, 
             a.DataStoreID,
			 a.ReasonID,
			 b.ReasonDescription,
			 a.LocationID,
			 c.LocationCode,
			 c.ProfileName,
			 a.Shift,
			 a.ConsumableID,
			 d.ConsumableDescShort,
			 a.ConsumableProjID,
			 d.MinepointITEM,
			 a.ClientDelay,
			 a.ProjectID,
			 a.DetailID,
			 e.SubProjectSuffix,
			 f.ProjectMask,
			 g.OperationCode,
			 h.ITEMNAME,
			 h.ITEMGROUPID,  
			 d.DisplayOrder,
			 d.ConsumableArea,
			 c.LocLevel,
			 em.EmployeeName,
			 a.StartTime,
			 d.DefaultSubProject
			 ,j.SubProjectSuffix
			 ,d.ExcludeFromPosting
			 ,c.PitID

UNION ALL

SELECT
GroupingField = 'Magman',
DataStoreID = 0, -- currently hardcoded to 0
ProjectDate AS [Date]
,[ReasonID] = CASE WHEN mm.TransactionType = 3 THEN 458 ELSE NULL END ----TS 2018-12-11  if stockreplenishment, then treat it like "Explosives Delivery" task from webbar
--,NULL AS [ReasonDescription]
,[ReasonDescription] = tbl_DWH_MagmanTransType.Name
--,tbl_DBT_Location.[LocationID]
,[LocationID] = ISNULL(tbl_DBT_Location.[LocationID],0)
,'Trans type: ' + tbl_DWH_MagmanTransType.Name + ' - ' 
			+ ISNULL(tbl_DBT_Location.[LocationCode],'Magman location not found in webBAR (' + ISNULL(mm.Location,'LocnNotOnMagmanData') + ')') 
			+ ' (' + mm.OperatorName + ')'  AS LocationCode
--,tbl_DBT_Location.[ProfileName]
,[ProfileName] =  ISNULL(mm.Reason,'--')
,mm.[Shift] 
,ISNULL(tbl_SYS_Consumables.[ConsumableID],-mm.ItemID) AS [ConsumableID] --set as unique number which is not a consumable so that front end works if magman item not mapped to consumable
--,mm.ShortDescription AS [ConsumableDescShort]  --  magman desc
,ConsumableDescShort --get from SYS_Consumables instead, so that expl validation page works
,NULL AS [ConsumableProjID] -- ???
      ,CAST(tbl_SYS_Consumables.MinePointID AS nchar(20)) AS [MinepointITEM]
      ,0 AS [ClientChargeable]  -- = 0
      ,mm.[ProjectID]
      ,NULL AS [DetailID]
      ,NULL AS [SubProjectSuffix]
      ,NULL AS [ProjectMask]
      ,tbl_DBT_Operation.OperationCode AS [Warehouse]
      ,SUM(mm.Quantity)*-1 AS [Qty]
      ,CASE 
--	   WHEN ISNULL([tbl_SYS_LocationSources].SubProjectSuffix,'') = '' --remove this line
	  WHEN (ISNULL([tbl_SYS_LocationSources].SubProjectSuffix, '') = '' OR LEN(ISNULL([tbl_SYS_LocationSources].SubProjectSuffix,'')) > 5)   --added the greater than 5 char because sub-projects will always be <=5

	   THEN 'xxxxxx' -- if sub project not known, display 'xxxxx'
	   --ELSE tbl_DBT_Project.ProjectMask + '-' + [tbl_SYS_LocationSources].SubProjectSuffix 
	    ELSE dbo.FN_ProjectMaskMap(mm.ProjectID,tbl_DBT_Location.LocationID ) + '-' + [tbl_SYS_LocationSources].SubProjectSuffix 
	   END AS [SubProject]   
      ,i.[ITEMNAME]

      ,i.[ITEMGROUPID]
      ,99999 AS [DisplayOrder] --added to get them at the bottom of the list
	  ,ISNULL(tbl_DBT_Location.[LocationCode],'Magman location not found in webBAR (' + mm.Location + ')')  AS 'Location'
	  ,mm.OperatorName AS Operator
	  ,CASE WHEN ISNULL([tbl_SYS_LocationSources].SubProjectSuffix,'04') = '06' THEN 8 ELSE  4 END AS  'ConsAreaID' -- unallocated ones spill into dev charging... maybe a better solution?
	,StartTime = dbo.FN_StringPad( CAST(DATEPART(HOUR,mm.ProjectDateTime) AS varchar),2,0)  +dbo.FN_StringPad( CAST(DATEPART(MINUTE,mm.ProjectDateTime) AS varchar),2,0) -- 1  --substitute Time From Magman transactions
	 ,a_ExcludeFromPosting = 0
	 ,a_pitId =0
	 FROM 

View_MagmanShiftDate AS mm
INNER JOIN tbl_DWH_MagmanTransType ON mm.TransactionType = tbl_DWH_MagmanTransType.ID
--LEFT OUTER JOIN tbl_DBT_Location ON mm.Location = tbl_DBT_Location.LocationCode AND mm.ProjectID = tbl_DBT_Location.ProjectID  --remove this line
LEFT OUTER JOIN dbo.tbl_DBT_Defaults AS def ON mm.ProjectID = def.ProjectID
LEFT JOIN (SELECT ProjectID, LocationID, LocationCode, ROW_NUMBER() OVER (PARTITION BY ProjectID,LocationCode ORDER BY ProjectID,LocationCode, Active DESC ) AS RowNum, SourceID, ProfileName 
								FROM  tbl_DBT_Location  ) AS tbl_DBT_Location   --20180409 ... added the partition because of duplicate LocationCodes on same project (one was inactive)
			ON (mm.Location = tbl_DBT_Location.LocationCode OR (mm.Location  IS NULL AND def.DummyLocn = tbl_DBT_Location.LocationId))  --join the dummy locn instead
				AND mm.ProjectID = tbl_DBT_Location.ProjectID
				AND RowNum = 1

LEFT OUTER JOIN tbl_SYS_Consumables ON mm.ItemID = tbl_SYS_Consumables.MagmanID
LEFT OUTER JOIN dbo.syn_PYB_InventTable AS i ON CAST(tbl_SYS_Consumables.MinePointID AS NVARCHAR(20))  = i.ITEMID AND i.DATAAREAID = N'pms'
LEFT OUTER JOIN tbl_DBT_Project ON mm.ProjectID = tbl_DBT_Project.ProjectID
LEFT OUTER JOIN tbl_DBT_Operation ON tbl_DBT_Project.OperationID = tbl_DBT_Operation.OperationID
LEFT OUTER JOIN [tbl_DBT_LocationSources] ON tbl_DBT_Location.SourceID = [tbl_DBT_LocationSources].SourceID
LEFT OUTER JOIN tbl_SYS_LocationSources ON [tbl_DBT_LocationSources].SourceMasterID = tbl_SYS_LocationSources.MasterSourceID 
--LEFT OUTER JOIN dbo.tbl_DBT_Defaults AS def ON mm.ProjectID = def.ProjectID
WHERE tbl_DBT_Project.MagmanActive IN (1,2)  --TS 2018-10-10 
AND mm.TransactionType IN (0,1,2,3,4,5)  --TS 2018-12-11
AND mm.Quantity <>0  --added to exlude lines gather by stocktake function in magman that cause in no movement of stock
	AND (@ProjectID = mm.ProjectID OR @ProjectID = '')
	AND (ProjectDate > = @StartDate OR @StartDate = '')
		AND (ProjectDate <= @EndDate OR @EndDate = '')
	AND (@Shift = mm.Shift  OR @Shift = '')


GROUP BY 
ProjectDate   
,tbl_DBT_Location.[LocationID]
,tbl_DBT_Location.[LocationCode]
,tbl_DBT_Location.[ProfileName]
,[Shift]
,tbl_SYS_Consumables.[ConsumableID]
,mm.ShortDescription 
,tbl_SYS_Consumables.MinePointID 
,mm.[ProjectID]
,tbl_DBT_Operation.OperationCode
,[tbl_SYS_LocationSources].SubProjectSuffix 
,tbl_DBT_Project.ProjectMask 
,i.[ITEMNAME]
,i.[ITEMGROUPID]
,mm.ItemID
,mm.OperatorName
,tbl_DWH_MagmanTransType.Name
,mm.Location 
,mm.Reason
,mm.TransactionType 
,ConsumableDescShort
,mm.ProjectDateTime




)
GO
PRINT N'Refreshing [dbo].[View_ShiftSummary_SupervisorStuff]'
GO
EXEC sp_refreshview N'[dbo].[View_ShiftSummary_SupervisorStuff]'
GO
PRINT N'Altering [dbo].[FN_IsNullorEmptyorZero]'
GO
ALTER FUNCTION [dbo].[FN_IsNullorEmptyorZero]
(
    @Value varchar(MAX),
    @ReturnValue varchar(MAX)
)
RETURNS varchar(MAX)
AS
BEGIN
    RETURN
	-- Function to combine isnull and isblank for local and central functionality. 
	
    CASE
        WHEN ISNULL(@Value, '') IN ( '',0)
              THEN
            @ReturnValue
        ELSE
            @Value
    END;
END;
GO
PRINT N'Altering [dbo].[tvf_Etl_KpiSnapShotOutstandingDates]'
GO
ALTER FUNCTION [dbo].[tvf_Etl_KpiSnapShotOutstandingDates]
(
    @ProjectID INT
    , @LastRunDT_Override datetime = NULL
    , @JobCode NVARCHAR(255) = null

  --  , @TableSourceCode nvarchar(50) = null
)
RETURNS @iPlodTable TABLE 
(
    Date DATETIME
    ,LastSyncedDateTime datetime
    ,JobName NVARCHAR(255)
  --  , DebugInfo nvarchar(500) null
  
)
AS
BEGIN
/*
select * from 	[dbo].[tvf_Etl_KpiSnapShotOutstandingDates](@ProjectID, NULL, NULL)


	2022-02-17 IP ... copied from SP_ProjSetup_WebbarSync_EtlJobInfo
    2022-02-18 ts ... don't want to lock it up for the end users, added  WITH (nolock)  to the ips and change log tables.
    2022-02-21 ts ... return the last synced date time too for use down stream
                  ... get a fair few days if not run before!
     2022-02-22 ts ... put manual over-ride option in here
     2022-03-04 ts ... add @jobname for knowing whether secondary or primary. is a bit awkward. probably should have added them to the main data proc!
        2022-05-17 ts ... if job start date is null, grab last run date time. (repoing page doesn't log the start time yet)
        2022-05-23 ts ... add teh call at the top
                      ... add ETL_KPISNAPSHOT_FULLREBUILDMTHBYMTH to the call. if it was a full rebuild, then should be up to date!
        2022-07-21 ts ... simplify. just show last run datetime  where job = job
        2022-08-07 ts ... add handling for the pybar scenario
        2022-08-13 ts ... make the left fucntion round the right way
        2022-10-11 ts ... optimise as per the NewDAta one.
        2022-10-18 ts ... add debug mode
                      ...check on the logs table for ProjecTI d 1 as well (indicates running for all projects potentially.)

        todo: better putting the secondary dataset as a separate job to the main KPI proc, and pushing them all across together in the same queue maybe 

*/

	--call this function into SP_ProjSetup_WebbarSync_EtlJobInfo
    --we will also call this function into say stoplights page, or throw a message onto reporting page.
    
    DECLARE @tableset NVARCHAR(25) = (SELECT top 1 left(DateMethod,3) FROM tbl_SYS_SyncTasks_EtlJobs WHERE @JobCode = EtlJobName) 
      SET @tableset= case WHEN @tableset not in ('ips','pds') THEN 'ips' ELSE @tableset end  --just in case there is dodgy data. if making new method, with new tables, then add to this NOT IN.  everything miscoded can hit ips by default.



	-- DECLARE @ProjectID INT = 3
    DECLARE   @LastSyncedDAteTime DATETIME  = isnull(@LastRunDT_Override  , isnull((SELECT MAX(isnull(tdasl.JobStartDateTime,tdasl.LastRunDateTime)) FROM tbl_DBT_AutoSyncLogs tdasl WITH (nolock)
                                                            WHERE ( /*(tdasl.AutoTaskName IN ('ETL_KPISNAPSHOT_INCREMENTALDAILY','ETL_KPISNAPSHOT_FULLREBUILDMTHBYMTH')  AND @JobCode LIKE 'etl_kpisnapshot%')
                                                                    OR (tdasl.AutoTaskName = 'ETL_KPISECONDARYSNAPSHOT_INCREMENTALDAILY'  AND @JobCode LIKE 'etl_kpisecondarysnapshot%')
                                                                    OR (tdasl.AutoTaskName IN (  'ETL_KPISECONDARYSNAPSHOT_INCREMENTALDAILY' ,'ETL_KPISNAPSHOT_INCREMENTALDAILY'
                                                                                                  ,'ETL_KPISNAPSHOT_FULLREBUILDMTHBYMTH' ) 
                                                                                AND @JobCode is null )*/
                                                                          tdasl.AutoTaskName =      @JobCode 
                                                                  )
                                                            AND tdasl.IsSuccess =1 AND tdasl.ProjectID in (1, @ProjectID))

                                                             ,DATEADD(DAY,-150, GETDATE()) ) --manipulate fo testing. derive from the actual logging table in future
                                                  )
                                            --DATEADD(DAY,-50, GETDATE())  --manipulate fo testing. derive from the actual logging table in future
                                            --to manipulate more test data in, do this:
                                       --     UPDATE tbl_DWH_iPlodStagingTableEdited SET UploadDateTime =getdate() where ProjectID = 3 AND Date >DATEADD(DAY,-50, GETDATE())
    INSERT INTO @iPlodTable
    SELECT DISTINCT Date 
    ,@LastSyncedDAteTime
    , @JobCode --should pull this from teh above to get the actual ones!
       FROM dbo.tbl_DWH_iPlodStagingTableEdited tdpste WITH (NOLOCK)
    left join dbo.tbl_DWH_iPlodStagingEditedChangeLog tdpsecl WITH (NOLOCK)
            on  tdpsecl.localstagingid = tdpste.stagingid 
            and tdpste.ProjectId = tdpsecl.ProjectID
    WHERE (
              tdpste.UploadDateTime > @LastSyncedDateTime
              OR tdpste.ModifiedOn > @LastSyncedDateTime
              or  tdpsecl.UpdateDateTime > @LastSyncedDateTime
             /*this is much slower:  OR EXISTS
				(
					SELECT tdpsecl.RowID
					FROM dbo.tbl_DWH_iPlodStagingEditedChangeLog tdpsecl WITH (NOLOCK)
					WHERE --tdpsecl.DataStoreID = tdpste.DataStoreID
              tdpsecl.localstagingid = tdpste.stagingid 
						  AND tdpsecl.UpdateDateTime > @LastSyncedDateTime
				)*/
          )
          AND tdpste.ProjectID = @ProjectID
          AND @tableset =  'ips'   

       /*todo delete: FROM tbl_DWH_iPlodStagingTableEdited tdpste WITH (nolock) 
        WHERE ( tdpste.UploadDateTime > @LastSyncedDAteTime
                  OR tdpste.ModifiedOn > @LastSyncedDAteTime
                  OR exists(SELECT tdpsecl.RowID FROM tbl_DWH_iPlodStagingEditedChangeLog tdpsecl  WITH (nolock) 
                              WHERE tdpsecl.DataStoreID = tdpste.DataStoreID
                              AND tdpsecl.UpdateDateTime > @LastSyncedDAteTime)
                )
                AND tdpste.ProjectID = @ProjectID
                */
         

    INSERT INTO @iPlodTable
    SELECT DISTINCT Date 
    ,@LastSyncedDAteTime
    , @JobCode --should pull this from teh above to get the actual ones!

        FROM dbo.tbl_DWH_ProdDataStorage AS tdpds  WITH (nolock) 
        WHERE ( tdpds.EnteredOn > @LastSyncedDAteTime
                 -- OR tdpste.ModifiedOn > @LastSyncedDAteTime
                  OR exists(SELECT tdsl.LockID  FROM dbo.tbl_DBT_ShiftLocksV2  AS tdsl   WITH (nolock) 
                              WHERE tdsl.LockDate = tdpds.Date
                              AND tdsl.LockedOn > @LastSyncedDAteTime)
                )
                AND tdpds.ProjectID = @ProjectID
         AND @tableset =  'pds'   
    --todo: does the old recon method update the EnteredOn ... ??? suspect it doesn't!!!

	RETURN;
END
GO
PRINT N'Altering [dbo].[SP_API_IPLODSetup_Inputs]'
GO
ALTER procedure [dbo].[SP_API_IPLODSetup_Inputs]
            @operationId as int,
            @projectId as int,
            @appId as nvarchar(100) = null,
            @appVersion as nvarchar(50) = null,
            @appDeploymentMode as nvarchar(50) = null,
            @appCfgRefreshPoint as int = null,
            @fromDate as datetime = null,
            @activityReasonId as int = 0,
	        @deviceSerialNo AS NVARCHAR(50) = NULL,
            @employeeId AS INT = NULL,
            @isPurge as int output ,
            @DebugMode int = 0
as
/**********************************************************************
Purpose :          Lookup Config - Inputs.
Notes   :            The table dbo.tbl_SYS_iplodInputTypeMappings forms the basis
                                    for mapping between existing logic and the device code/enum.


  DECLARE @isPurge AS INT
  EXEC dbo.SP_API_IPLODSetup_inputs_FixedSummary @operationId = 0, @projectId =401, @isPurge = @isPurge OUTPUT, @appDeploymentMode = 'mining_fitters', @appVersion = 'v2022.07.13 (299)'
  ,@DebugMode = 1
  SELECT @isPurge AS isPurge

  DECLARE @isPurge AS INT
  EXEC dbo.SP_API_IPLODSetup_inputs @operationId = 0, @projectId = 3, @isPurge = @isPurge OUTPUT, @appDeploymentMode = 'mining_fitters', @appVersion = 'v2022.07.13 (299)'
  with recompile
  SELECT @isPurge AS isPurge


DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 53, @activityReasonId = 247, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 259, @activityReasonId = 0, @isPurge = @isPurge OUTPUT, @appCfgRefreshPoint =3, @appDeploymentMode = 'stores'
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 3, @activityReasonId = 0, @isPurge = @isPurge OUTPUT, @appCfgRefreshPoint =3, @appDeploymentMode = 'mining_fitters'--,@DebugMode = 1
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 242, @activityReasonId = 0, @isPurge = @isPurge OUTPUT, @appCfgRefreshPoint =3, @appDeploymentMode = 'servicesheets',@DebugMode = 1
SELECT @isPurge AS isPurge


DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 19400, @activityReasonId = 0, @isPurge = @isPurge OUTPUT, @appCfgRefreshPoint =3, @appDeploymentMode = 'raisebore',@DebugMode = 1
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 53, @activityReasonId = 329, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 53, @activityReasonId = -329, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Inputs @operationId = 0, @projectId = 19400, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge


SELECT * FROM tbl_DBT_ParameterSetup
SELECT * FROM dbo.tbl_DBT_ActReasonInputLink                   where actreasonlinkid = 259 and projectid =1  (test for Prestart_IT)
SELECT * FROM dbo.tbl_SYS_iplodInputTypeMappings

SELECT * FROM dbo.View_webbarAPI_EquipmentDetails
SELECT * FROM dbo.View_WebbarAPI_EquipStats

-- Test Data.
INSERT INTO dbo.zTestInputs
            (OperationID, ProjectID, InputUniqueId, ActivityReasonID, FieldType, InputID, TaskDetailType, TaskDetailTypeId, TaskDetailTypeImageFileName, CalcString, OrderBy, HelpTextHtml, ForeLabelHtml, AftLabelHtml, DefaultValue, InputListSelectionFilterCsv, InputGroup, IsInputGroupMandatory, IntolerableValuesRegExp, TypeCsvOld, TypeIdsCsv, IsEnabled, DecimalPlaces, IsHidden, IsMandatory, IsInputCommentRequired, IsInputPhotoRequired, IsInputAuthRequired, IsKeepOnCopy, ReportingBitwise)
EXEC dbo.SP_API_IPLODSetup_Inputs 0, 53, NULL, 329


History  :           IRJ       10-Sep-2018      Initial Creation.
                                    IRJ       14-Sep-2018      Added IsEnabled.
                                    IRJ       18-Sep-2018      ADDED TEST DATA ;)
                                    IRJ       24-Sep-2018      Added test query.
                                    IRJ       05-Oct-2018      Dropped FinalValidationMsg and IsMandatory from output.
                                    IRJ       07-Nov-2018      Added IsClientOnly.
                                                                                    Additional annodations.
                                    TS  29-Nov-2018 question text into forelabel
                                    TS  03-Jan-2019 shifted back to a function
                                    IRJ       09-Jan-2019      Added IsKeepOnChangeTask property.
                                                                                    Modified InputUniqueId.
                                                                                    Added InputMatchId.
                                    TS 11-01-2019  added some fields back from setup tables (inputcomments, photos etc) 
                                                                        + fleshed out regex's ... NEEDS WORK!!
                                    TS 15-Jan-2019 ... loaded inputs again with current configs in Helptext
                                    TS 22-Jan-2019 ... reversed logic on IsKeepOnChangeTask (questions should be filled in again)
                                                                                    ... added ConsArea in as atest InputGroup ...
                                    IRJ       24-Jan-2019      Added @appId, @appVersion, and @appDeploymentMode parameters.
                                    TS  29-Jan-2019 minor changes on the consumbles trick list
                                    TS 27-Feb-2019 added other flag fields to help text
                                    IRJ       27-Feb-2019      Modified @appDeploymentMode NVARCHAR(50) > INT input param.
                                                                                    Added @appCfgRefreshPoint input param.
                                                                                    Added @isPurge OUTPUT param.
                                                                                    Added IsDeleted output field.
                                    TS 28-Feb-2019 updated the too long RegEx to use the new INputID of 200
                                    CA 28-Feb-2019 Added StatEquip Limits to RegEx
                                    TS 01-Mar-2019 ... compulsory over-ride fro comments on US-- ActivityTypes
                                    SH 6-Mar-2019 Add @IsPurge to where clause
                                    CA ...........swap the operators on stat equip
                                    TS 22-Mar-2019 ... added comment char length to the intolerable
                                                                        TS 02-April-2019  --- send nothing if @ProjectId = 0
                                    TS 10-Apr-2019 ... removed help text debug stuff except for ProjectId = 53
                                                                                    ... removed debug stuff for Project 53 as well
                                    IRJ       17-May-2019     Added ReportingBitwise output field.
                                                                                    Dropped IsReviewTrap, IsShareable, IsSummaryGroup.
                                    CA 2019-05-17 Stripped * out of everything except fieldtype for GroupGroup read only
                                                                                    -- Note - Ian uses the * on field type to determine read only. But does the actual match on InputMatchID
                                    GJ 2019-06-06 reversed IsHidden derivation
                                    GJ 2019-07-26 Removed test data
                                    TS 2019-07-31 ... added purge stuff
                                    TS 2019-08-05 ... set IsPUrge =1 whenever getting data
                                    TS 2019-08-07 ... added UTC conversion
                                    TS 2019-08-15 ... added intolerable debugging into help text for not live server
                                    TS 2019-08-21 ... removed the display trapped inputs (not coded on device, hopefully won't need them anyway?)
                                    TS 2019-08-31 ... added the debug stuff for test server.
                                    CA 2019-09-04 ... Swapped Math operators around < and > for Stat Equip Intolerable
                                    TS 2019-09-18 ... show help text first even on debug mode 
                                    TS 2019-09-19 ... added the tilde for cons set
                                    TS 2019-09-23 ... changed the Intolerable flags for ConsArea
                                    TS 2019-10-23 ... hid photo for cons area
                                    TS 2019-11-11 ... add Ians type Id to the debug comments
                                    TS 2019-11-11 ... changed the consumables join to be inner to drop all the non-active ones 
                                                                                    ... added final valid intolerables to the stat equips
                                    ts 2019-11-23 ... add summary sceen temlate handling
                                    reverted! revert out of live too ... summary template is on config now

                                    ts 2020-02-01 ... checking for most recent modified to include Project 1
                                                                                    ... amended the default message for intolerables (it was Wrong Answer?)
                                    ts 2020-02-02 ... get modified of the proc
                                    ts 2020-02-21 ... remove the replace on InputGroup .. it was trashing the + ... not sure why it was installed there?
                                    ts 2020-03-06 ... remove the valid intolerable if no FinalValidationMsg
                                                                                    ... first intolerable is the Initialmsg, not final
                                    ts 2020-04-01  ... added TypeIdMultiplier
                                                                                    ... brought the TypeIdCsv rendering to here (it was in the inputs function)
                                                            ...hopefully doesn't affect query time?!!
                                    ts 2020-04-02 ... changed the special character in front of consarea inptgroup
                                    ts 2020-04-03 ... made intolerables on Extra Ground Support cons area
                                    ts 2020-04-02 ... bring the dislay order regen to here (device won't show two items with same dispaly order!). *10 onto ConsArea to match them to other inputs.
                                    ts 2020-04-09 ...update the call on the funciton
                                                                                    ... add debug Ids config
                                                ts 2020-04-14                             ... added handling for compulsory consareas
                                                ts 2020-04-14                             ... set default for input comment to be Optional. this was to address input comment (optional) disappearing on question when authorise regex was done
                                                ts 2020-04-23 ... update the regexs
                                                ts 2020-0-27 ... reverted teh compulsory regex on question for have you done all the items on a cons list.
                                                ts 2020-04-27 ... revert teh compulsory regex on the rest too (doesn't work on our do you need a TWI question I think)
                                                ts 2020-04-27 ... new function called in for the inputs on all tasks
                                                ts 2020-04-27 ... call the function with actreason
                                                                                                ... minor update to typeold on the special
                                                                                                --only do twi on prdt for miners 2020-04-27 
                                                ts 2020-4-30 ... try again wiht the only doing twi on prdt for miners
                                                ts 2020-05-01 ... changed messaging for TWI question
                                                ts 2020-05-02 ... don't process StatEquip in IntolerableValues
                                                ts 2020-5-12 ... AttributesJson
                                                ts 2020-05-22 ... help text on paramters
                                                                                                ... add different regex for the compulsory on UI group group input types (use the one ian reccommended
                                                                                                ... fixed the logic on compulsory regex
                                                ts 2020-05-25 ... reverted, it wasn't the problem. the issue was default value set as something not available
                                                ts 2020-05-27 ... show statcal inpts in device for now (if they are mapped through) we could get funky with CalcDispaly on them? don't have DisplayTrap handled as dedicated field in deviec I don't think
                                                ts 2020-05-28 ... locatoin compulsory config
                                                ts 2020-05-31 ... put calcstring into the forelabel if calc input type
                                                ts 2020-06-03 ... calcstring onto help text in debug mode
                                                ts 2020-06-08 ... added ReqDrillm attr for cons
                                                ts 2020-06-10 ... remove the help text from forelable on SaveBacks
                                                ts 2020-06-10 ... lablel the special inputs "special" so they don't map through to import to stagingedited
                                                ts 2020-06-11 ... multiply the consarea by 10000 for mapping out the other end
                                                ts 2020-06-11 ... don't get consarea from the main set (they are unioned in below)
                                                ts 2020-06-11 ... special handling for all/any intolerable
                                                ts 2020-06-16 ... display order on consumables
                                                ts 2020-06-17 ... don't send consumables that have ExcludeFromApp = 1
                                                ts 2020-06-22 ... added dummy set of data into #consattr
                                                ts 2020-06-23 ... add to the last modified [udf_GetCalcFunctions_ForIplod]
                                                ts 2020-06-26 ... kill the FOR JSON PATH for now
                                                ts 2020-07-06 ... config the specials off
                                                                                    ...        change the message for compulsory for checkbox uqestion types
                                                ts 2020-07-07 ... remove the cons JSON fucntion for the debug text 
                                                ts 2020-07-09 ... get of jail card for prestarts all/any only has intolerable=1 on IsTest
                                                ts 2020-08-03 ... strip html from initial validation message (not currenly supported in iplod)
                                                ts 2020-08-07 .. input matchID should not include "calc" if it is a stat. eg so we can match stat6 into other calculatons whether it is a calc to begin wth or not
                                                ts 2020-08-08 .. messing with display of hidden inputs
                                                ts 2020-08-08 .. bring the ATtrJson for the defaults on StatCalcs
                                                ts 2020-08-08 .. manipulate the hidden inputs to setup scenario for Ian REVERT
                                                ts 2020-08-09 .. min version ssettings on suppoted calcs
                                                ts 2020-08-10 .. or calc filter uses like calc instead of = statcalc
                                                ts 2020-08-17 .. stat calcs are never intolerable (pick up the other control fields as well as the regex one)
                                                ts 2020-08-17 .. fix regex on statequips (removed the special handlig for compulsory trap ... it should work now (was allowing comment out) but think it best we don't tell them first, let htem start typing
                                                ts 2020-08-24 .. fix order by on consumable lists
                                                ts 2020-08-31 .. remove the dummy cons used in v2. put the compulsory question at the top
                                                ts 2020-08-31 .. bring the AdditionalRegex trhough
                                                ts 2020-09-01 ..  fix regex intolerable for N/A
                                                ts 2020-09-02 ..  camera inputs are not normal intolerables
                                                ts 2020-09-04 .. reverted intolerable for compupslyr
                                                                                                .. it wasn't that
                                                ts 2020-09-07 ... name of app config
                                                ts 2020-09-08 .. add back compulsory camera settings. 
                                                ts 2020-09-10 .. finessed the messaging around compulsory camera
                                                ts 2020-09-14 .. handling for non-compulsory camera
                                                ts 2020-09-17 .. join in task groupings so we cna do soe dodgy mappings for v3 go live (and still keep v2 up and running) 
                                                                                                .. dodgy hacking on IsEnabled to suit this (remove when no more v2. but also deactivate camera input from affected tasks.)
                                                                                                .. put "calculated" label on all statcalcs that don't already have them
                                                                                                .. config the sanitiser question, ditch this handling, should be done through customising the prestart form to projects really
                                                ts 2020-09-18 ... don't set intolerableBitWise to be 0 if missing. 0 is a block in device (used for compulsory trap type things)
                                                                                                ... killed IntolerableBitWise = 0 out of the data. the act reason page is currnelty saving 0 in this field... which will block the input if there is an intolerablevalue. Unlikely to want to do this!
                                                ts 2020-09-21 ... change all intolerableBitWise = 0 to be compulsory comment instead.  
                ts 2020-11-26 ... page breaks/sectionbreaks not allowed to have compulsory
                                                CA 2021-02-12 ... Changed some handling on stat calc and intolerables
                                                                                    ... Added isnull on compulsoryTrap
                                                ts 2021-02-24 ... kill filter calc on old versions in case bad things happen
                                                CA 2021-02-25 ... Set Arithabort ON
                                                ts 2021-03-03 ... remove special from the inputmatchid
                                                ts 2021-03-11 ... handling for intolerable AUTH over-ride on all Qs
                                                CA 2021-03-24 ... Added Tolerance Lower and Upper Handling
												ts 2021-03-31 ... shifted optional camera back into actual camera input.  (compulsory still doesn't work for camera input
												ts 2021-04-19 ... allow refno filtercalcs
												ts 2021-04-27 ... config regex for extra bolts
												ts 202-06-08 ... intolerables handling for NotOnList locations, 		eg, can just put locaitons in like: --		locationcode like 'NotOnList%' then bitwise=8
																															--		'NotOnList - Rehab Location'
																															--		,'NotOnList - Other Location'
																															--		,'NotOnList - Rehab Location'



												ts 2021-06-09 ... consumables have the new method
												ts 2021-06-15 ... tidy up the compulsory and otherwise camera shite.
												ts 2021-06-18 ... put locations at the top of all tasks (so they
												ts 2021-07-06 ... don't do upper and lowers for inputtype = q
												ts 2021-07-27 ... camera input not supported.


												ts 2021-07-22 ... get actual type for cons
												ts 2021-07-27 ... backwards compatibility for inputTypeIds. can be via two methods
										global: deactivate based on appversionint
										switcheroo: switch to another inputtypeid based on appversionint

												ts 2021-07-30 ...  camera compuslory on old version gets teh correct regex
												ts 2021-08-02 ... hard coded 104 to Consareas. becuase ian was calling with no version?
																... reverted
												ts 2021-08-03 ... INlineNumber Buttons min version on config.
												ts 2021-08-03 ... add new field for Ian's number increment button value of zero will inherit global config in the app. value of -1 will hide the middle button.
												ts 2021-08-05 ... if missing config, put big number in for app version
												ts 2021-09-09 ... wire in config for intincrease back to inputmapping.
																...set @projectId= abs(@projectId)
		                    ts 2021-12-14 ... camera has IsEnabled turned off for Prestarts and TWIs. this is becuase camera input exists on v2 as a separate input, when better to capture photo beside each question (only available on v3)
                                      ... can unwind this out, but best to remove dedicated camera input from affected tasks.
                                      ... or not, do we fucking care?
                                      ... have unwound it here anyway, just so we don't get caught again. when deploying this to pybar should script dispalytrap=0 on camera input on all TWIs and Prestart tasks.
                                      ... RAN THE UPDATE TO EXCLUDE FROM APP ALL CAMERA INPUTS ON PRESTARTS AND TWIs
                    
                        ts 2021-12-20 ... fix shit up to avoid duplicates on the special inputs 
                        ts 2022-03-17 ... hard codced hackery for reporting bitwise. should drag through from teh task details function properly.
                                      ... or not really, might be better off hard coding. or join to STatisiticId flag field? so tey don't get missed.
                        ts 2022-03-25 ... add a few more summable stats, using SummaryByLocnStatIdCsv
                                       temporary hack on calc for sleuthing stuff REVERTED.
                                       ... manipulate the forelabel of the duration stat.
                        ts 2022-03-26 ... removed "calculated" on the stats forelabel. will get them greyed out so don't need this?!
                         ts 2022-04-01 ... add handlgin on specials triggers for minintOrFitter 10         
                        ts 2022-04-05 .. pulled out teh OR on stat7 on specials for speed?
                                      .. didn't help, put it back.
                        ts 2022-04-07 ... add fake mode
                        ts 2022-04-07 ... don't show the stat 7 special on older versions of teh app.
                        ts 2022-04-21 ... stat17 gets material bitwise as well
                        ts 2022-05-17 ... don't send html until if fucking works!
                        ts 2022-06-08 ... get teh historical temperature data
                        ts 2022-06-12 ... minor change to the previous readings label
                        ts 2022-06-12 ... don't kill null cuts
                        ts 2022-06-13 ... add debugging.
                        ts 2022-07-04 ... wind back the temp labels and add page break with info on when the last reading was.
                        ts 2022-07-04 ... fix teh page breaks
                        ts 2022-07-05 ... amend labeling for no reading
                        ts 2022-07-07 ... alway proceed, there are too many db objects referenced by this beast now.
                        ts 2022-07-07 ... various optimiations
                                      ... {} put missing cut numerbs to 0
                        ts 2022-07-08 ... don't delete stuf fwith cut number = 0
                        ts 2022-07-13 ... pull from task details cached BE CAREFUL SENDING THIS LIVE!!!!!
                        ts 2022-08-16 ... html support is version based now
                        ts 2022-09-04 ... mod the call for fixed summary templates
                        ts 2022-09-06 ... chasing down temperature page break dupe. try doing InputType instead of double INputId on the rwo num for a start
                                      ... nah, fuck knows how to fix.
                        ts 2022-09-14 ... add distinct to the calls on the cache to prevent duplicates.
                        ts 2022-09-27 ... pull from the new v2 cache instead.
                                      ... pull taskgroupings from teh view instead
                                      ... the specials should only be the specials!
                                      ... do the poxy typeid thingo once at the top. should maybe do a table variable instead?
                                      ... do AllwdTypes
                       ts 2022-09-30   ... kill the dipslaytrap filter. I think this is mostly legacy? bring back if need but with simpler filter. cehck the comments
                                          (didn't do much, could bring it back if needed)
                                      ... remove the split function, use like
									  ... remove task groupings join at the bottom, unsure why it was there?!
                    ...todo: put a new index as requested onto consproject table, it appears to have made it worse, but only when you run without recompile.
                    ... added hack on the typeidcsv
                    ts 2022-10-03 ... {maybe 1 sec off. still stubbornly at the 10-12 sec mark} shift min version to flag on active to speed up.
                                  ... {meh, only a second better if that.}  add this index: [idx_tbl_DBT_GetTaskDetails_ForIplod_Cached_v2_inputsWithAll]
                                  ... dont' get operationid, just sort it up here.
                    ts 2022-10-06 ... {meh} some conversion issues fixed?
                                  ... the @temp table should have vachrar instead of nvarchar on inputtype for joining below
                                  ... do FieldType on all WHEREs (FieldType is in the index)
                                  ... add sargeable field type instead
                                  ... {fuckyeah, took 20secs off it} kill the order by at the bottom. it is on the output anyway
                                   ... {FAAARK, back to 26 secs} on second thoughts, the deploymentmodeCsv of NULL was killing most of the rows and nothing to do with the order by 
                                    ... kill the distincts
                                    ...{meh} try #table for temps
                                    ... {halved cost of temp insert} index TestForTempinInputsProc seemed to halve the temperatures table population.
                                    ... grab the cons ones out of the cache table
                                    ... pickup the locnAttrs here, until somthing better is decided
    
    
    									




                                                NEED TO HAVE CAMEAR MAPPED TO Checkbox (102) IN tbl_SYS_iplodInputTypeMappings (should be right on v269 and above)


                                                STATCALCS: ts 2020-08-06 ... removed intolerables, don't think they are handed properly in device? needs good testing before showing again. 
                                        2020-11-26 ... configged now

                                                HIDDEN INPUTS: ts 2020-08-07 ... have allowed Stat4 and         Stat2 in (only if they have a default set). other things are hidden when they should be excluded or specials to get around v2 "you need at least one input" stuff.
                                                                                                                                    ... didn't work. have tried removing the default
                                                                                                                                    ... set them as statcalcs to get by. needs Ian to sort, as per this: https://trello.com/c/YcgLxWFi
                                                                                                                                    ... check date 2020-09-15, three spots to revert out in the top select


                                                DEFAULTS: 2020-05-25 ts ... defaults in UI Group Groups not supported until we have a fix for instance when default value is not available in a particular list. (easiest is to fix this in device.  defualts are over-rated anyway, better off requiring user to proactively select in most instances
														  2021-10-20 CA ... The wrong default value does not appear to break the app. So we are turning on defaults.
																				When deploying this run an update to set allowdefault = 0 then we can slowly turn them back on. Particularly on PBW 


                                                INTOLERABLES: ts 2020-09-18 ... removed TrapIntolerableComment=0 out of the data. this is unintentional, will block the input in device (can't save the task) if user types intolerable value.  need to clean up actreasoninput link befoer unwinding this. (set all TrapIntolerableComment='' 
                                                                                                ts 2020-09-21 ... rather than remove, replace with compulsory comment.  this means user can still save the form (rather than get blocked from savin. as per other comments, if unwinding this, run checks on bad data (unintentional bitwise=0)




**********************************************************************/

SET ARITHABORT ON 

SET NOCOUNT ON
DECLARE @Error AS INT = 0
DECLARE @projectIdCalled INT = @projectId

set @projectId= abs(@projectId)


DECLARE @IsTempDeploymentModeToken INT = (SELECT case WHEN  FakeDeploymentMode <> TrueDeploymentMode OR killthisapp = 1  --add kill this app, in case we map fakemode = truemode
                                                  then 1 else 0 end  FROM dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId) )
DECLARE @TempTokenIsOutOfDate INT = case WHEN @IsTempDeploymentModeToken = 0 THEN 0
                                          WHEN    @IsTempDeploymentModeToken =1 THEN (SELECT  KillThisApp FROM dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId) )
                                          ELSE 0 
                                          END   
DECLARE @TrueDeploymentMode NVARCHAR(50) = (select TOP 1 TrueDeploymentMode FROM  dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId))
  SET @appDeploymentMode = case WHEN @IsTempDeploymentModeToken = 1 THEN @TrueDeploymentMode ELSE ISNULL(@appDeploymentMode, 'Mining') END  --2022-04-07


            -- init.
            SET @activityReasonId = ISNULL(@activityReasonId, 0)
            SET @appId = ISNULL(@appId, 'au.com.pybar.iplod')
            SET @appVersion = ISNULL(@appVersion, '2019.01.01')
            --SET @appDeploymentMode = ISNULL(@appDeploymentMode, 'Mining')
            SET @appCfgRefreshPoint = ISNULL(@appCfgRefreshPoint, 1) -- Login Config Button.
            SET @isPurge =  dbo.udfIsPurge('SP_API_IPLODSetup_Inputs',@appDeploymentMode,@appCfgRefreshPoint);   -- 0 = false, else true.
            DECLARE @appVersionInt AS INT = CASE WHEN LEN(@appVersion) >= 11
                                            -- Strip and get initial version info!
                                            THEN CONVERT(INT, SUBSTRING(REPLACE(REPLACE(@appVersion, '.', ''), 'v', ''), 1, 8))
                                        ELSE 0
                                        END

            -- fail the reload for ProjectId = 0 (due to problem in the app)
            if (@projectId > 0)
            begin
            DECLARE @NewestSourceData datetime 
            SET @NewestSourceData = GETDATE();  --if ispurge=1 get everything anyway

            DECLARE @IsLiveDB int = dbo.FN_IsLiveDB(@projectId);


            --this is the offset from UTC to compare modified on (local time) to @FromDate on device (UTC)
            DECLARE @UtcOffset numeric =  CONVERT(numeric,dbo.udfUTCVsWebBAROffset()) * -1;  

            DECLARE @IsDisplayTrapUsed int = 0;  --if we code handling for this in the v3 (eg for calc stats) then need to remove all the old v2 ones that aren't required any more first before activating this!!!

            --reset the fromdate to "local"
            SET @fromDate = DATEADD(HOUR,@UtcOffset,@FromDate);

DECLARE @HtmlIsSupportedInForeLable INT = iif(@appVersionInt >20220810 ,1,0) --expand this out to based on version number!

                        -- Get OperationId from ProjectId.
                        SELECT @operationId = OperationID   
                        FROM dbo.tbl_DBT_Project 
                        WHERE ProjectID = @projectID
                        SET @operationId = ISNULL(@operationId, 0)

                        IF @isPurge = 50 --0 2022-07-07 put this back to "0" to do the latest data check. --if not purging, then get most recent data first to decide whether or not to proceed or not
                                                                        BEGIN 
                                                                                    SET @NewestSourceData =  (SELECT MAX(ModOn) FROM (SELECT modOn= MAX(ModifiedOn) FROM dbo.tbl_DBT_ActReasonInputLink WHERE ProjectID IN( @projectId ,1)
                                                                                                                                                                        UNION ALL 
                                                                                                                                                                        SELECT modOn= MAX(ModifiedOn) FROM dbo.tbl_DBT_ParameterSetup WHERE ProjectID IN( @projectId,1) 
                                                                                                                                                                        UNION ALL 
                                                                                                                                                                        SELECT modOn= MAX(DateCreated) FROM dbo.tbl_DBT_GetTaskDetails_ForIplod_Cached_v2 WHERE ProjectID IN( @projectId )
                                                                                                                                                                        UNION ALL 
                                                                                                                                                                        SELECT modOn= MAX(DateUpdated) FROM dbo.tbl_DBT_GetTaskDetails_ForIplod_Cached_v2 WHERE ProjectID IN( @projectId) 
                                                                                                                                                                        UNION ALL
                                                                                                                                                                        SELECT modOn =  max(modify_date )
                                                                                                                                                                                    FROM sys.objects
                                                                                                                                                                                    WHERE  name IN( 'SP_API_IPLODSetup_Inputs' , 'udf_GetTaskDetails_ForIplod','udf_GetCalcFunctions_ForIplod','view_udf_GetTaskDetails_ForIplod_CACHED_ForApp')
                                                                                                                                                                                    ) AS tbl
                                                                                                                                                                        );
            END 
if (@NewestSourceData > @FromDate or @isPurge = 1)
            begin
SET @isPurge = 1 ; --sync config table has decided IsPurge = 0, however data has indicated that some data is newer than app.  no incremental loads on this table though, so need to set Purge to 1 in this scenario

                        -- Get config.
                        /*DECLARE @ActReasForms AS NVARCHAR(1000)
                        DECLARE @AttrLocn_1Method AS NVARCHAR(35)
                        DECLARE @AttrLocn_2Method AS NVARCHAR(35)
                        DECLARE @AttrLocn_3Method AS NVARCHAR(35)
                        SELECT 
                                    @ActReasForms = ActReasForms,
                                    @AttrLocn_1Method = AttrLocn_1Method,
                                    @AttrLocn_2Method = AttrLocn_2Method,
                                    @AttrLocn_3Method = AttrLocn_3Method
                        FROM dbo.udfConfigConstants(@operationId, @projectId, @fromDate)*/

--not used 2020-07-06 old source too DECLARE @ARSummaryTemplate_01 int = (SELECT TOP 1 ISNULL(configvalue,0) FROM dbo.tbl_SYS_webbarConfigs WHERE ConfigName = 'ARid_iPlod_SummaryTask_01'            AND Active = 1);
DECLARE @TypeIdMultiplier int = (SELECT TOP 1  CAST(ISNULL(DeploymentModeConfigValue,1) AS int)  FROM  dbo.udf_iPlodDeploymentConfigs(@appDeploymentMode,'TypeIdMultiplier')  );              
DECLARE @ShowSpecialsOnEveryTaskInputIdCsv nvarchar(255) = ISNULL((SELECT TOP 1  CAST(ISNULL(DeploymentModeConfigValue,',0,') AS nvarchar(255))  FROM  dbo.udf_iPlodDeploymentConfigs(@appDeploymentMode,'SpecialInputsOnEveryTask_InputIdCsv')  ),1);
DECLARE @showDebugIds int = (SELECT dbo.FN_GetConfigValue(@ProjecTid,'ShowDebugIds'));
DECLARE @NameofApp nvarchar(25) = dbo.FN_NameOfApp(@projectId,1);
DECLARE @PrestartsHaveCovidSanitiserQuestion int = ISNULL( dbo.FN_GetConfigValue(@ProjecTid,'PrestartsHaveCovidSanitiserQuestion'),1);
DECLARE @CalcInputsAllowedToBeCompulsory int  = isnull( dbo.FN_GetConfigValue(@ProjecTid,'CalcInputsAllowedToBeCompulsory'),0);
declare @VersionMinForInlineNumberButtons int = cast(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'VersionMinForInlineNumberButtons'), 20210831) AS int);

DECLARE @SummaryByLocnStatIdCsv nvarchar(255) = isnull( dbo.FN_GetConfigValue(@ProjecTid,'SummaryByLocnStatIdCsv'),',16,17,37,6,13,35,27,10,');  --shift to deployment mode config as necessary. thogh extras wont show if the data hasn't been inputted.

DECLARE @SummaryByMatStatIdCsv nvarchar(255) = isnull( dbo.FN_GetConfigValue(@ProjecTid,'SummaryByMatStatIdCsv'),',17,');  --shift to deployment mode config as necessary. thogh extras wont show if the data hasn't been inputted.



--kill this, teh app will allocate global config when there is value of 0 on the linesDECLARE @IntIncrease nvarchar(25) = ISNULL((SELECT TOP 1 IntIncrease  FROM dbo.tbl_DBT_Project WHERE @projectId = ProjectID),4) ;  --this is for the bogger buckets really. ties to this field: IntegerIncrease  below (have the option of customising this to differnet inputs. have set consuambles to be 5


DECLARE @AuthOverrideOnAllQs int = (SELECT TOP 1  CAST(ISNULL(DeploymentModeConfigValue,0) AS int)  FROM  dbo.udf_iPlodDeploymentConfigs(@appDeploymentMode,'AuthOverrideOnAllQs')  );

declare @RegExForExtraBolts nvarchar(255) =  isnull( dbo.FN_GetConfigValue(@ProjecTid,'RegExForExtraBolts'),'');

DECLARE @LocnCompulsoryForAll int --is location compulsory for all tasks(1) or just go by act reason settings (0)
SET @LocnCompulsoryForAll  = (SELECT   ISNULL(dbo.FN_GetConfigValue(@ProjectId, 'LocnCompulsoryForAll'), 0) ) ;

declare @LocnIntolerableIDsCsv nvarchar(max) = [dbo].[udf_GetLocnIdCsvThatRequireComment] (@projectId)

  declare @AttrLocn_1Method as nvarchar(35);
  declare @AttrLocn_2Method as nvarchar(35);
  declare @AttrLocn_3Method as nvarchar(35);
  select @AttrLocn_1Method = AttrLocn_1Method
       , @AttrLocn_2Method = AttrLocn_2Method
       , @AttrLocn_3Method = AttrLocn_3Method

  from dbo.[udfLocnAttrMethods](@OperationID, @Projectid, '');  --2020-04-27

DECLARE @GetHistoricalTemperaturesIntoInputs INT = iif(@projectId in (401,3) ,1,0)

--DECLARE #temperaturehistory  table 
IF OBJECT_ID('tempdb..#temperaturehistory') IS  null   
begin
      create table #temperaturehistory
             (tActivityReasonId INT null , tLocationId int null , tInputType varchar(250)  COLLATE DATABASE_DEFAULT NULL 
             , tInputID INT null, CutId int null, MostRecentFirstIncrement INT NULL
                                                  ,  LastReading nvarchar(50)  COLLATE DATABASE_DEFAULT NULL 
                                                  , SecondLastReading  nvarchar(50)  COLLATE DATABASE_DEFAULT NULL 
                                                  ,ReadingLabelForPlodPageBreak nvarchar(250)  COLLATE DATABASE_DEFAULT NULL 
                                                  ,SecondLastReadingLabelForPlodPageBreak nvarchar(250)  COLLATE DATABASE_DEFAULT NULL 
                                                  , RowNum int 
                                                  )
                                                  end

select TypeId = DeploymentModeConfigValue 
into #AllwdTypes
from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'AllowedTypeIds')   --only get allowed types out.
                                        --)  as AllwdTypes
    --on a.TypeIdsCsv like '%,' + cast (AllwdTypes.TypeId as varchar) +',%'



IF @GetHistoricalTemperaturesIntoInputs =1

            BEGIN
                    insert INTO #temperaturehistory (tActivityReasonId, tLocationId , tInputType, tInputID, CutId ,MostRecentFirstIncrement, LastReading,ReadingLabelForPlodPageBreak, RowNum)
                    SELECT s.ActReasonID, s.LocationId
                                        ,s.InputType, s.InputID , CutNumberId=isnull(s.CutNumberId,0)
                                                              --  ,s.InputGroup
                                                              ,MostRecentFirstIncrement
                                                                , s.ReadingLabelForPlod
                                                                ,ReadingLabelForPlodPageBreak
                                                              
                                                              /*  ,s.Date
                                                                ,s.Shift
                                                                ,s.CalStartTime
                                                                ,s.StartTime
                                                                ,s.ProjectID
                                                                ,s.LocationId
                                                                ,s.LocationCode
                                                                ,s.OperatorID
                                                                ,s.EmployeeName
                                                                ,s.ReadingsIncrement
                                                                ,s.MostRecentFirstIncrement
                                                                ,s.CutNumberId
                                                                ,s.CutNumberName */ 
                                                                ,RowNum = ROW_NUMBER() OVER (partition by s.ActReasonID,s.InputType,s.InputID, s.MostRecentFirstIncrement ORDER BY s.ActReasonID,s.InputType,s.InputID,s.MostRecentFirstIncrement ,s.LocationId desc)
                                                               -- ,rownumForPageBreaks
                                                                FROM dbo.View_ShiftSummary_HoleTemperatureReadings AS s
                    WHERE s.Date > dateadd(day,-7,getdate())
                    and s.ProjectID = @projectid
     
     if @DebugMode = 1 
     BEGIN
    SELECT  '#temperaturehistory before delete', * FROM #temperaturehistory
      end
                      
                      --the most recent cut 
                      DECLARE @MaxCutID INT = (select max( CutId) FROM #temperaturehistory)
                      
                        --kill teh ones not from the most recent cut:
                      DELETE FROM #temperaturehistory
                      where (cutid <> @MaxCutID 
                      and NOT (cutid = 0 ) --2022-07-08
                      )
                      or tLocationId is null  --added for bad data
                      
                      --grab the second most recent reading too
                      UPDATE a SET SecondLastReading=Iif (isnull(b.lastreading,'-deg')='-deg', '', ' 2ndLast: '+b.lastreading)
                                  , SecondLastReadingLabelForPlodPageBreak = b.ReadingLabelForPlodPageBreak
                                  ,lastreading=Iif (a.lastreading='-deg', '', ' LastReading: '+a.lastreading)

                      FROM #temperaturehistory as a
                      left JOIN #temperaturehistory as b
                      ON a.tActivityReasonId = b.tActivityReasonId
                      AND a.tInputType = b.tInputType
                      AND a.tInputID = b.tInputID
                      AND isnull( a.CutId,'') = isnull(b.CutId ,'')
                      AND a.MostRecentFirstIncrement + 1 = b.MostRecentFirstIncrement
                      AND a.tLocationId = b.tLocationId
                     -- left JOIN (select DISTINCT ReadingLabelForPlodPageBreak,SecondLastReadingLabelForPlodPageBreak,tActivityReasonId, tLocationId FROM  #temperaturehistory ) AS tempsPageBrk
                       --       ON a.tLocationId = tempsPageBrk.tLocationId
                      WHERE  a.MostRecentFirstIncrement = 1
                  

                  
                      
                      --kill the ones that are not most recent reading (+ the second most recent reading now)
                       DELETE #temperaturehistory
                       WHERE MostRecentFirstIncrement <> 1
            
            --catcher to ensure we don't duplicate inputs:
                      DELETE #temperaturehistory
                       WHERE RowNum <> 1

                  --insert teh 2 rows for the page breaks
                  INSERT INTO #temperaturehistory (tActivityReasonId, tLocationId, tInputType, tInputID, CutId, MostRecentFirstIncrement, LastReading, SecondLastReading, ReadingLabelForPlodPageBreak, SecondLastReadingLabelForPlodPageBreak, RowNum)
                      select top 1 tActivityReasonId, tLocationId
                      , tInputType = 'PageBreak'
                      , tInputID  = xInputId
                      , CutId, MostRecentFirstIncrement, LastReading, SecondLastReading, ReadingLabelForPlodPageBreak, SecondLastReadingLabelForPlodPageBreak, RowNum
                      FROM #temperaturehistory
                      cross join (SELECT xINputId = 98
                      union ALL 
                      select xInputId = 99) as tbl


       if @DebugMode = 1 
     BEGIN
    SELECT  '#temperaturehistory after delete', * FROM #temperaturehistory
      end
              
  
  end




--;WITH cte_attr--buildup for attrJSON
--AS (
SELECT 
[Key]=CASE WHEN c.Parameter3=1 THEN 'ReqDrillm' WHEN c.Parameter3 =2 THEN 'MeshArea' ELSE '' END 
, [Value]=ISNULL(c.Parameter1,0) 
,cp.ConsumableArea
, cp.ConsumableProjectID
INTO #consattr
FROM dbo.tbl_DBT_ConsumablesProjectLink AS cp --changed to inner join. don't want any inactive consumables
                                                                                                                        INNER JOIN dbo.tbl_SYS_Consumables AS c
                                                                                                                        ON cp.ConsumableID = c.ConsumableID
                                                                                                WHERE   cp.ProjectId = @projectId
                                                                                                                        AND cp.Active = 1
                                                                                                                        AND c.Parameter3 IN (1,2) --only bolts or mesh
                                 and 1=2 --do it below on teh join instead.                                                                                       
UNION ALL 
SELECT --added in case a project doesn't have any data to whack into #consattr
[Key]='ReqDrillm' 
, [Value]=0 
,ConsumableArea = -1
, ConsumableProjectID = -1
                                                                                                --FOR JSON PATH
--)

                        --view_webbarAPI_TaskConfigurations
                        select 
                                    --add second load to allow putting regex into Help text where I can see it
                                    OperationID = @operationId
                                    , ProjectId = @projectIdCalled

                                    -- Key.
                                    , InputUniqueId = replace(tbl2.InputUniqueId,'*','')
                                    , InputMatchId = replace(tbl2.InputMatchId,'*','')  

                                    -- Required for Mining return.
                                    , tbl2.ActivityReasonID --= CASE WHEN tbl2.ActivityReasonId = @ARSummaryTemplate_01 THEN -1 ELSE tbl2.ActivityReasonId end
                                    , FieldType
                                    , InputId 

                                    -- Amalgamated field type.
                                    , TaskDetailType = replace(tbl2.TaskDetailType,'*','')
                                    , TaskDetailTypeId = case when fieldtype= 'AttrLocn_1' then case @AttrLocn_1Method when  'AttrList' then 250 else 103 end
                                                               when fieldtype= 'AttrLocn_2' then case @AttrLocn_2Method when  'AttrList' then 250 else 103 end
                                                               when fieldtype= 'AttrLocn_3' then case @AttrLocn_3Method when  'AttrList' then 250 else 103 end
                                                            when fieldtype = 'stat' and inputid in (2,4) and IsHidden =1 then  1700
                            																when FieldType='camera' and isnull(CompulsoryTrap,0)=0 then 1600
                            																--backwards compatibility switherooos:
                            																--2021-08-02 
                            																when @appVersionInt < @VersionMinForInlineNumberButtons and TaskDetailTypeId =104  then 103  --2021-08-03 hopefully right for next release! see below on cons list set too (it is hard coded there, not from inputs mapping)
                            																when FieldType='camera' and @appVersionInt < 20210610 and  isnull(CompulsoryTrap,0)=1 then 102
                            
                            
                            																else TaskDetailTypeId end   --2020-09-15 ditch this complete hackery once better soln for hidden calcs (not supported in app yet)

                                    , TaskDetailTypeImageFileName 

                                    -- Calc Engine Stuff.
                                    , CalcString = case WHEN ( @projectIdCalled <0 /*OR @projectId = 3*//*remove the proj3*/) AND CalcString <> '' and left(CalcString,1) <> '~' THEN '~'  else '' END  --2022-03-25 if passing @ProjectId as -ve, the show some calc deubugging love. 
                                                            +CASE  when fieldtype = 'stat' and inputid in (2,4) and IsHidden =1
                                                                                                            then '=' + cast( isnull(DefaultValue,'0') as varchar)
                                                                                                when fieldtype in('refno', 'Location') and CalcString <> '' and @appVersionInt < 20210220 then ''  --delete this once version through. don't send down for older versions. can kill this out once everywhere is updated.
                                                                                                            else CalcString end  --2020-09-15 ditch this complete hackery once better soln for hidden calcs (not supported in app yet)

                                    -- General.
                                    , OrderBy = row_number() over (partition by tbl2.ActivityReasonID order by  tbl2.ActivityReasonID,OrderBy,OrderByDetail,ForeLabelHtml ,InputMatchId)  --put this to force every line has unique display order. for some reason the app won't show the second item if they have same dispaly order? 2020-03-27

                                    , HelpTextHtml = replace(isnull(HelpTextHtml,''),'{nameofapp}',@NameofApp)+ case when isnull(@showDebugIds,0) = 1 
                                                                                                then 'initialValiationMsg:' + isnull(tbl2.InitialValidationMsg,'') + ', finalMsg: '+isnull(tbl2.FinalValidationMsg,'')+ ', RegEx:'+isnull(IntolerableValuesRegExp ,'')
                                                                                                +', InputComm:'+cast(isnull(IsInputCommentRequired ,0) as varchar) +'InputPhoto:'+cast(isnull(IsInputPhotoRequired ,0) as varchar)
                                                                                                +', InputAuth:'+cast(isnull(IsInputAuthRequired ,0) as varchar) 
                                                                                                 +', CalcString:'+isnull(calcString ,'')  
                                                                                                 --+--comment this out when not needed again (is the attrJson fro the cons params
                                                                                                            --', AttrJson:'+               ISNULL((SELECT [Key], [Value]
                                                                                                            --                                                                                                                      from     --cte_attr 
                                                                                                            --                                                                                                                                              #consattr          AS ca
                                                                                                            --                                                                                                                      WHERE tbl2.INputMatchId  --'' +  'ConsArea' + '_' + CONVERT(NVARCHAR(50), ISNULL(ConsumableProjectId,-1))
                                                                                                            --                                                                                                                                                                      LIKE '%_'+ CAST( ca.ConsumableProjectId AS varchar)
                                                                                                            --                                                                                                                      FOR JSON PATH),'') 
                                                                                                 else '' end
                                    , ForeLabelHtml = case when fieldtype  like '%calc%' and fieldtype not in ( 'summaryCalc','DisplayCalc') and tbl2.ForeLabelHtml not like '%calc%' AND @appVersionInt <20220310 /*pretty sure only put this in becuase they weren't greyed out*/ then tbl2.ForeLabelHtml +' (calculated)'  -- if we didn't suffix already, then suffix. the main purpose of this is to make the calculated stats stand out in device. if we make a ui improvement in device, can unwind this.
                                                                                                else replace(isnull(tbl2.ForeLabelHtml, ''),'{nameofapp}',@NameofApp) end
                                                                                                                                                +--add debugging stuff 
                                                                                                                                                case when isnull(@showDebugIds,0)=1 and taskdetailtypeid not in( 1700,1701)--fieldtype NOT LIKE '%calc%' AND FieldType <> 'saveback' --can't mess with the forelabel on these ones I think
                                                                                                                                                                                                then ' ('+ replace(tbl2.InputUniqueId,'*','')+ ' .. ' +cast(TaskDetailTypeId as varchar)+')' 
                                                                                                                                                            when isnull(@showDebugIds,0)=1 and taskdetailtypeid =1700 -- fieldtype  LIKE '%calc%' 
                                                                                                                                                                                    then ' ('+ replace(tbl2.InputUniqueId,'*','')+') '+isnull(CalcString, '')
                                                                                                                                                       
                                                                                                                                                       
                                                                                                                                                       else '' END
                                                                                                                                                       + iif(  ReportingBitwise = 32 AND isnull(@showDebugIds,0)=1,' bitwise= 32','') --2022-03-24 
                                                                                                                                                       + iif(temps.LastReading is null ,'',    temps.LastReading +  isnull(temps.SecondLastReading,''))
                                                                                                                                                        + iif(temps.ReadingLabelForPlodPageBreak is not null and tbl2.ActivityReasonId = 1817 AND fieldtype = 'PageBreak' AND tbl2.InputId in (99) ,' ' +  isnull(temps.ReadingLabelForPlodPageBreak,'!!no last readings available!!') 
                                                                                                                                                                                                                                        
                                                                                                                                                                ,'' )
                                                                                                                                                                 + iif(temps.ReadingLabelForPlodPageBreak is not null and tbl2.ActivityReasonId = 1817 AND fieldtype = 'PageBreak' AND tbl2.InputId in (98) ,' ' +  isnull(temps.SecondLastReadingLabelForPlodPageBreak,'!!no last readings available!!') 
                                                                                                                                                                ,'' )
                                                                                                                                                            --2022-06-08 historical hole temperatures for MCO trial

                                   
                                   , AftLabelHtml 
                                    , DefaultValue = DefaultValue --IIF(tbl2.TaskDetailTypeId = 250,'',DefaultValue) --no defualts alowed on lists until scenario for defualt value not available on a particular list is fixed -- see comment at the top as to why this is commented out (in defaultS)
															
                                    -- Special input list filter field.
                                    , InputListSelectionFilterCsv 

                                    -- Grouping.
                                    -- n.b. a '+' symbol in front of the definition makes group mandatory.
                                    , InputGroup 
                                    , IsInputGroupMandatory 

                                    -- Intolerables.
                                    -- three (3) part RegExp, can be in sets of three (3), OR logic'd.
                                    -- order of RegExp's is critical as first intolerable match gives the UI settings.
                                    , IntolerableValuesRegExp = case when taskdetailtypeid  in( 1700,1701) and @CalcInputsAllowedToBeCompulsory = 0 then ''
                                                                                                                                    when fieldtype = 'stat' and inputid in (2,4) and IsHidden =1 then ''    --2020-09-15 ditch this complete hackery once better soln for hidden calcs (not supported in app yet)
                                                                                                                                                else IntolerableValuesRegExp end
                                    , TypeCsvOld
                                    , TypeIdsCsv =[dbo].[udfTypeConvertToTypeId](TypeCsvOld)  --massive hack and will have to be updated. horrible solution
                                                 
                                                 
                                                 --nah, try putting it down belwo on all
                                                  /*=  --shift it up to here and do it once.
                                                    CASE WHEN TypeIdsCsv is not null  --hopefully same outcome, but quicker datasrc = 'specialinputs' 
                                                                  THEN TypeIdsCsv  --they are done alrady down on the join for this
                                                    ELSE isnull((
                                                 select distinct
                                                        ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                                 from /*dbo.udfSplit(TypeCsvOld, ',')  as CSV
                                                     inner join*/
                                                     dbo.tbl_SYS_Type as LookT
                                                         --on CSV.Item = LookT.TypeCode
                                                         where ','+TypeCsvOld+',' --they don't ahve leadinga nd traliing commas !
                                                                    like '%,'+ LookT.typecode +',%'
                                                 for xml path('')
                                             ) + ','
                                           , ''

                                                           )
                                              end*/

                                    -- UI Flags.
                                    , IsDeleted = 0
                                    , IsEnabled  = CASE --2021-12-14: when isnull(IsTWI,0) + isnull(isPrestart,0) >0 and fieldType = 'Camera' then 0 
                                                                                                when @PrestartsHaveCovidSanitiserQuestion = 0 and inputid = 2181 and fieldtype = 'q' then 0 --2020-09-17 remove htis hackery
                                                                                            --add global backwards compatibility for input types here: (archive old ones after time has passed)
																							when @appVersionInt < 20210610 and TaskDetailTypeId in (9500) then 0
																						--thihs is handled on a switcheroo up top	when @appVersionInt < 20210727 and TaskDetailTypeId in ( 104) then 0 --hopefully right for next build?!
																							when @appVersionInt < 20210927 and TaskDetailTypeId in ( 105) then 0 

																							else IsEnabled end   --2020-09-17 dodgy hacking to support both v2 and v3. ditch this. is to remove the camera input from these forms (should be using the intolerable camera instead)
                                    -- decimal places to display for certain inputs.
                                    , DecimalPlaces 
                                    -- Hidden / IsDisplayTrap
                                    , IsHidden 

                                    -- Comment?
                                    -- 2 = Comment Never.
                                    -- 4 = Comment Optional.
                                    -- 8 = Comment Mandatory.
                                    , IsInputCommentRequired 
                                    -- Photo?
                                    -- 16 = Photo Never.
                                    -- 32 = Photo Optional.
                                    -- 64 = Photo Mandatory.
                                    , IsInputPhotoRequired 

                                    -- Authorisation?
                                    -- 128 = Authorisation Never.
                                    -- 256 = Authorisation Optional.
                                    -- 512 = Authorisation Mandatory.
                                    , IsInputAuthRequired 

                                    -- Engine flags.
                                    , IsKeepOnCopy 
                                    , IsKeepOnChangeTask
                                    , IsClientOnly 

                                    -- Reporting Flags.
                                    , ReportingBitwise  = case --normally stat 17. needs to particapate in mat and locn.
                                                              WHEN @SummaryByMatStatIdCsv LIKE '%,'+cast(InputId as varchar) + ',%'  AND FieldType LIKE '%stat%' THEN isnull(ReportingBitwise,0) + 128
                                                                ELSE tbl2.ReportingBitwise end
                                      
                                    

                                    ,AttributesJson /*= case when fieldType = 'ConsArea' then isnull((select '[{"Key":"ReqDrillm","Value":'+cast(isnull(ca.Value,0) as varchar(25))+'}]' from #consattr          as ca
                                                                                                                                                                                                                                    where tbl2.INputMatchId  --'' +  'ConsArea' + '_' + CONVERT(NVARCHAR(50), ISNULL(ConsumableProjectId,-1))
                                                                                                                                                                                                                                                                                    like '%_'+ cast( ca.ConsumableProjectId as varchar)
                                                                                                                                                                                                                                                                                    ),'') else AttributesJSON end 
                                                                                                                                                                                                                                                                                    */

                                                                                                                                                                                    --replace with this after locals can use FOR JSON
                                                                                                                                                                                    /*ISNULL((SELECT [Key], [Value]
                                                                                                                                                                                                                                    from     --cte_attr 
                                                                                                                                                                                                                                                            #consattr          AS ca
                                                                                                                                                                                                                                    WHERE tbl2.INputMatchId  --'' +  'ConsArea' + '_' + CONVERT(NVARCHAR(50), ISNULL(ConsumableProjectId,-1))
                                                                                                                                                                                                                                                                                    LIKE '%_'+ CAST( ca.ConsumableProjectId AS varchar)
                                                                                                                                                                                                                                    FOR JSON PATH),'')
                                                                                                                                                                                                ELSE AttributesJSON END */

									,IntegerIncrease 

					   from 
                        (
                                    select 
                                    OperationID = @operationId
                                    , ProjectId = @projectId

                                    -- Key.
                                    , InputUniqueId = '' + convert(nvarchar(50), ActivityReasonID) + '_' +  FieldType + '_' + convert(nvarchar(50), InputID) +'_' +  convert(nvarchar(50), DisplayOrder)   --2022-09-04 added order by to account for the possibliy of multiple inputtypes/id's on speciall summaary tempaltes (tey are fixed in code, not in table)
                                    , InputMatchId = '' + replace ( replace(FieldType,'Calc','') ,'special','') --2020-08-07  ; 2021-03-03. don't put "special" on this beucases it buggers up teh list selection
                                                                                                            + '_' + convert(nvarchar(50), InputID)

                                    -- Required for Mining return.
                                    , ActivityReasonID
                                    , FieldType
                                    , InputId = convert(nvarchar(50), tbl.InputID)

                                    -- Amalgamated field type.
                                    , TaskDetailType 
                                    , TaskDetailTypeId 
                                    , TaskDetailTypeImageFileName 

                                    -- Calc Engine Stuff.
                                    , CalcString = isnull(CalcString, '')

                                    -- General.
                                    , OrderBy = case when fieldtype = 'location' then -9999 else  DisplayOrder end  --locations should go at the top!! this will let them pre-popuate thoruhg to the delays
                                    ,OrderByDetail                          --ROW_NUMBER() OVER ( ORDER BY DisplayOrder,ForeLabel ,InputMatchId)  --put this to force every line has unique display order. for some reason the app won't show the second item if they have same dispaly order? 2020-03-27
                                    , HelpTextHtml = isnull(HelpText, '') /*for testing, remove*/   --+ tbl.InitialValidationMsg
                                    , ForeLabelHtml = iif(@HtmlIsSupportedInForeLable =0, dbo.FN_StripHTML( isnull(ForeLabel, '') ) , isnull(ForeLabel, ''))  --2022-05-17
                                    , AftLabelHtml = isnull(AftLabel, '') /*for testing, remove*/  --+ tbl.FinalValidationMsg
                                    , DefaultValue = isnull(DefaultValue, '')

                                    --temporary to check mapping to server setups
                                    ,tbl.InitialValidationMsg
                                    ,tbl.FinalValidationMsg

                                    -- Special input list filter field.
                                    , InputListSelectionFilterCsv = InputListSelectionFilter

                                    -- Grouping.
                                    -- n.b. a '+' symbol in front of the definition makes group mandatory.
                                    , InputGroup = InputGroup  --REPLACE(ISNULL(InputGroup, ''), '+', '')
                                    , IsInputGroupMandatory = case when charindex('+', InputGroup, 1) >= 1 then 1
                                                                                                            else 0 end

                                    -- Intolerables.
                                    -- three (3) part RegExp, can be in sets of three (3), OR logic'd.
                                    -- order of RegExp's is critical as first intolerable match gives the UI settings.
                                    , IntolerableValuesRegExp = 
                                                                                                                        -- Comments length special?
                                                                                                                        case   
                                                                                                                                                --2020-09-10 ... special for compulsory camera. the "camera" input does not handle being made compulsory in v222 of the app. so we map it as checkbox
                                                                                                                                    when tbl.FieldType='camera' and isnull(tbl.CompulsoryTrap,0)=1 and (@appVersionInt < 20210610 or tbl.TaskDetailTypeId = 102) /*2021-07-30 only do this for when we have tricked camera into checkbox for making compulsory*/
																																																									then '~~~!NullOrEmpty~~~Photo Required~~~64~~~NullOrEmpty~~~Photo Required~~~64'  --regardless of whether they tick the box, still need to take a photo.
																																	  when tbl.FieldType='camera' and isnull(tbl.CompulsoryTrap,0)=1 and tbl.TaskDetailTypeId = 1600 then '~~~NullOrEmpty~~~Photo Required~~~64'  --2021-06-15 normal camera input being compulsory

																																 --2021-03-31 shifted this up top, so it becomes a normal camera input  WHEN tbl.FieldType='camera' AND ISNULL(tbl.CompulsoryTrap,0)=0 THEN '~~~1~~~Untick box if you dont need a photo~~~64~~~!NullOrEmpty~~~Tap on the black square to take a photo~~~32~~~NullOrEmpty~~~Tap on the black square to take a photo~~~32'  --

                                                                                                                                    when TaskDetailTypeId = 200  --=Q_Text 
                                                                                                                                                            and isnull(DecPlaces, 0) > 0 
                                                                                                                                                then '~~~!^[ -~]{0,' + convert(nvarchar(50), isnull(DecPlaces, 0)) +  '}$~~~Comment is only allowed to be ' +convert(nvarchar(50), isnull(DecPlaces, 0))  + ' characters long~~~0'
                                                                                                                                                --2020-04-23(don't break what is already working!
                                                                                                                                                --THEN '~~~[^ \r\n]{0,' + CONVERT(NVARCHAR(50), ISNULL(DecPlaces, 0)) +  '}$~~~Comment is only allowed to be ' +CONVERT(NVARCHAR(50), ISNULL(DecPlaces, 0))  + 'characters long~~~0'
                                                                                                                                    --[^ \r\n]{1,20} = allowed to input any character, can't just be space (or line return) has to be between 1 and 20 char
                                                                                                                                    else ''
                                                                                                                                    end

                                                                                                                        +

                                                                                                                        -- IsMandatory?
                                                                                                                        case 
                                                                                                                                    -- ditch the whole thing. user should at least try to start typing before we tell them what range WHEN tbl.FieldType = 'StatEquip' THEN '~~~![a-zA-Z0-9].*~~~We think your reading should be between {LowerLimit} and {UpperLimit}~~~0' --We think your reading should be between {LowerLimit} and {UpperLimit}~~~0' 
                                                                                                                                    when  isnull(CompulsoryTrap, 0) = 1  /*AND tbl.TaskDetailTypeId NOT IN( 102,1600) this may ditch checkboxes?!*/  and tbl.FieldType <>'camera'/*camera handled up above*/ then '~~~NullOrEmpty~~~Must have response~~~0'   --
                                                                                                                                                                                                                                                                        --'~~~![a-zA-Z0-9].*~~~Must have response~~~0'    -- camera input not set normally (set it with photo flag field down below)
                                                                                                                                    when  isnull(CompulsoryTrap, 0) = 1 and tbl.TaskDetailTypeId = 102 and tbl.FieldType <>'camera' then  '~~~NullOrEmpty~~~Tick the box~~~0'

                                                                                                                                                                                                                                                                                                                                                            --'~~~![a-zA-Z0-9].*~~~Tick the box~~~0'  --2020-07-06 special comment for Tickbox types
                                                                                                                                    --could add in here ability to allow no entry, but force a comment....    ~~~![a-zA-Z0-9].*~~~Must have response, else comment required!~~~8
                                                                                                                                    --2020-04-23, reverted 2020-04-27 
                                                                                                                                    --try again wiht this one to fix the UI Group Group instance (maybe!)
                                                                                                                        --          WHEN  ISNULL(CompulsoryTrap, 0) = 1 AND tbl.TaskDetailTypeId = 250 THEN '~~~![^ \r\n]{1,}~~~Must have response~~~0'  --could add in here ability to allow no entry, but force a comment....    ~~~![a-zA-Z0-9].*~~~Must have response, else comment required!~~~8

                                                                                                                                    --[^ \r\n]{1,}   looks for min 1 character, can't just be a space or line return
                                                                                                                                    else ''
                                                                                                                                    end

                                                                                                                        +

                                                                                                                        -- IsSpecialListValue?  used for making certain locations require a commenf roeg.
                                                                                                                        case 
                                                                                                                                    -- ditch the whole thing. user should at least try to start typing before we tell them what range WHEN tbl.FieldType = 'StatEquip' THEN '~~~![a-zA-Z0-9].*~~~We think your reading should be between {LowerLimit} and {UpperLimit}~~~0' --We think your reading should be between {LowerLimit} and {UpperLimit}~~~0' 
                                                                                                                                    when   tbl.FieldType in( 'Location','destination') and @LocnIntolerableIDsCsv is not null then '~~~IN('+@LocnIntolerableIDsCsv+')~~~Please Describe this Location~~~8'   --
                                                                                                                                  else ''
                                                                                                                                    end

                                                                                                                        + --special case for STatEquips
                                                                                                                        case 
                                                                                                                                                            when tbl.FieldType = 'StatEquip' then --'~~~![a-zA-Z0-9].*~~~Your reading should be between {LowerLimit} and {UpperLimit}~~~8' +
                                                                                                                                                            '~~~>={UpperLimit}~~~Please check your reading. We think it should be below {UpperLimit}~~~40~~~<={LowerLimit}~~~Please check your reading. We think it should be above {LowerLimit}~~~40'
                                                                                                                                                            --add the final validation message.
                                                                                                                                                            +'~~~>={UpperLimit}~~~You are confirming a reading that is more than {UpperLimit} Please be sure of this.~~~-1~~~<={LowerLimit}~~~You are confirming a reading that is less than {LowerLimit} Please be sure of this.~~~-1'

                                                                                                                                                            else ''
                                                                                                                                                end

                                                                                                                                    -- Added lower and Upper tolerances as a fully built string here, instead of building them in chunks. 

                                                                                                                                    + --lower tolerance

                                                                                                                                    case when tbl.ToleranceLower is not null and [tbl].[FieldType] <> 'Q' then  '~~~<='  +  cast(tbl.ToleranceLower as varchar)+'~~~' + TL_text + '~~~' +
                                                                                                                                    + isnull(cast([TrapIntolerableComment] as varchar),'8')   
                                                                                                                                    else '' end

                                                                                                                                    + --Upper tolerance

                                                                                                                                    case when tbl.ToleranceUpper is not null and [tbl].[FieldType] <> 'Q'  then  '~~~>='  +  cast(tbl.ToleranceUpper as varchar)+'~~~' + TU_text + '~~~' +
                                                                                                                                    + isnull(cast([TrapIntolerableComment] as varchar),'8')   
                                                                                                                                    else '' end



                                                                                                                        + 
                                                                                                                        -- 1. RegExp for intolerables.
                                                                                                                        case 
                                                                                                                                    when (dbo.udfStringIsNullOrEmpty(IntolerableValues, null) <> 0)  or tbl.FieldType = 'StatEquip' --2020-05-02 don't do any further processing on StatEquips. will prevent accidental value for IntolerableValues beig used on actreason setup
                                                                                                                                                                                                                                                                                                                                    or            isnull(tbl.TrapIntolerableComment,0) = 0                                 --2020-09-18 ditch intolerableBitWise = 0 for now. this will cause input to not able to be filled in if intolerable values are breached. unlikely to really want to do this?
also ditch NULL on intolerableBitWise ... this sneaks in when intolerable value is set, but intolerable bitwise is not. (likely becuase no category on the questions)
                                                                                                                                                                                                                                                                                                                                                                                    --if we do want to do this, then we should clean up activity reasonINput and remove the zero values in this field. also need to make sure all questions are governed out of categories ideally (not essential)

                                                                                                                                                                                                                                                                                                                                                                                                then ''

                                                                                                                                    else '~~~' +
                                                                                                                                    case when intolerablevalues = 'all/any' and @IsLiveDB = 1 then '!NullOrEmpty'--'[a-zA-Z0-9].*'  --special for 'all/any' indicating that any answer is "intolerable"
                                                                                                                                                                                                            when intolerablevalues = 'all/any' and @IsLiveDB = 0 then '=1'  -- on test server, only answer of "1" is intolerable  2020-07-09
                                                                                                                                                                                                                        else '=' --might need to finesse this if we end up sending non-numeric intolerable values. search for date 2020-09-01
                                                                                                                                                                                                                                                +  cast(IntolerableValues as varchar) end
                                                                                                                                    + '~~~'  
                                                                                                                                                -- 2. InitialValidationMsg.... ?
                                                                                                                                    +
                                                                                                                                      --substitute InitialMsg when handling setup on front end for it ... for now is = final validation msg
                                                                                                                                                + dbo.FN_IsNullorEmpty(dbo.FN_StripHTML(InitialValidationMsg),'Please Check your answer')   --2020-08-03change the default message for no message specified.  2020-02-01  .. this should be the InitialVaidtionMsg, not the final



                                                                                                                                                +'~~~' +
                                                                                                                                                --CAST(ISNULL([TrapIntolerableComment],0) AS varchar)
                                                                                                                                                isnull(cast([TrapIntolerableComment] as varchar),'')  --2020-09-18 ... don't set zero as default (this is used for compulsory inputs)
                                                                                                                                                                                                                                                                                                                                                            --... can't set '' on int field, cast first
                                                                                                                                                -- Comment / Camera / Authorisation / etc binary integer.
                                                                                                                                                -- 2 = Comment Never.
                                                                                                                                                -- 4 = Comment Optional.
                                                                                                                                                -- 8 = Comment Mandatory.
                                                                                                                                                -- 16 = Photo Never.
                                                                                                                                                -- 32 = Photo Optional.
                                                                                                                                                -- 64 = Photo Mandatory.
                                                                                                                                                -- 128 = Authorisation Never.
                                                                                                                                                -- 256 = Authorisation Optional.
                                                                                                                                                -- 512 = Authorisation Mandatory.
                                                                                                                                                -- 1024 = Optional signature pad
                                                                                                                                                -- 2048 = mandatory signature pad

                                                                                                                                                --AdditionalREgex?
                                                                                                                                                + isnull(tbl.AdditionalRegex,'')
                                                                                                                                                --put further up so it gets first dibs at the mapping+ --2020-09-10 ... special for compulsory camera. the "camera" input does not handle being made compulsory in v222 of the app. so we map it as checkbox
                                                                                                                                                --            IIF(tbl.FieldType='camera' AND tbl.CompulsoryTrap=1,'~~~!NullOrEmpty~~~Photo Required~~~64~~~NullOrEmpty~~~Photo Required~~~64','')  --regardless of whether they tick the box, still need to take a photo.

                                                                                                                                    -- Final Validation Msg?
                                                                                                                                                +
                                                                                                                                                case 
                                                                                                                                                            when dbo.udfStringIsNullOrEmpty(IntolerableValues, null) <> 0 then ''
                                                                                                                                                            when isnull(FinalValidationMsg,'') = '' then ''   --if no final validatoin message, then don't use the valid intolerable
                                                                                                                                                            else '~~~' +
                                                                                                                                                            case when intolerablevalues = 'all/any' and @IsLiveDB = 1 then '!NullOrEmpty'--'[a-zA-Z0-9].*'  --special for 'all/any' indicating that any answer is "intolerable"
                                                                                                                                                                                                            when intolerablevalues = 'all/any' and @IsLiveDB = 0 then '=1'  -- on test server, only answer of "1" is intolerable  2020-07-09
                                                                                                                                                                                                            else '=' +  --might need to finesse this if we end up sending non-numeric intolerable values. 2020-09-01
                                                                                                                                                                                                            cast(IntolerableValues as varchar) end
                                                                                                                                                                        + '~~~'
                                                                                                                                                                        +  dbo.FN_IsNullorEmpty(FinalValidationMsg,'')   --valid intolerable needs no default message I think    2020-02-01
                                                                                                                                                                        +'~~~'
                                                                                                                                                                        + '-1'  --indicates valid Intolerable

                                                                                                                                                end
                                                                                                                        end
                                    -- Types.
                                    , TypeCsvOld
                                    , TypeIdsCsv /* do it once at the top. = CASE WHEN  TypeIdsCsv is not null THEN TypeIdsCsv  --they are done alrady down on the join for this
                                                    ELSE isnull((
                                                 select distinct
                                                        ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                                 from dbo.udfSplit(TypeCsvOld, ',')  as CSV
                                                     inner join dbo.tbl_SYS_Type as LookT
                                                         on CSV.Item = LookT.TypeCode
                                                 for xml path('')
                                             ) + ','
                                           , ''

                                                           )
                                              end*/
                                    -- UI Flags.
                                    , IsEnabled = case when isnull(Active, 0) > 0 then 1
                                                                                    else 0 end
                                    -- decimal places to display for certain inputs.
                                    , DecimalPlaces = case when DataTypeDisplayed = 'int_inlinecontrol' and [tbl].[DecPlaces] > 0 then 0  --just using dec places for the intincrease, if this is the case, shwtich this field back in case it causes issues
														else  isnull(DecPlaces, 0) end
                                    -- Hidden / IsDisplayTrap
                                    , IsHidden = iif(isnull(DisplayTrap, 0)=0,1,0)


                                    -- Comment?
                                    -- 2 = Comment Never.
                                    -- 4 = Comment Optional.
                                    -- 8 = Comment Mandatory.
                                    , IsInputCommentRequired = case when TaskDetailTypeId in (100,101,102,103) --normal question controls get optional comment. to help with intolerable workflow poblems as well as just because  SELECT DISTINCT appInputTypeId,appInputType FROM dbo.tbl_SYS_iplodInputTypeMappings
                                                                                                                                                            or tbl.FieldType = 'Location'  --might be useful FOR WHEN locations ARE missing!also needs to be in here for ian to fix something 2020-04-14
                                                                                                                                                                                                                                    then dbo.FN_IsNullorEmptyorZero([IsInputCommentRequired],4) 
                                                                                                                        else  dbo.FN_IsNullorEmptyorZero([IsInputCommentRequired],2)--2) ts 2020-04-14  everything else get no comment at this stage (it is just cluttering up screen and likely not handled anywhere on reporting?!
                                                                                                                        end
                                                                                                                        /*CASE   -- this is duplicated field!!!! don't think DisplayInputComments was ever used, shoudl drop it out of the table
                                                                                                                                    WHEN ISNULL(DisplayInputComments, 0) = 0 THEN 2
                                                                                                                                    WHEN ISNULL(DisplayInputComments, 0) = 1 THEN 4
                                                                                                                                    ELSE DisplayInputComments
                                                                                                                                    END*/
                                    -- Photo?
                                    -- 16 = Photo Never.
                                    -- 32 = Photo Optional.
                                    -- 64 = Photo Mandatory.
                                    , IsInputPhotoRequired = --IIF(tbl.FieldType='camera' AND tbl.CompulsoryTrap=1, 64   --if Webinputtype = camera and is compulsory then use this flag to set the compulsory
                                                                                                                        --            ,dbo.FN_IsNullorEmptyorZero([IsInputPhotoRequired],16)) -- 16 
                                                                                                                        --            ,dbo.FN_IsNullorEmptyorZero([IsInputPhotoRequired],16))  --2020-09-04 doesn't work for the camera input
                                                                                                                        dbo.FN_IsNullorEmptyorZero([IsInputPhotoRequired],16)

                                    -- Authorisation?
                                    -- 128 = Authorisation Never.
                                    -- 256 = Authorisation Optional.
                                    -- 512 = Authorisation Mandatory.
                                    , IsInputAuthRequired = case when @AuthOverrideOnAllQs <> 0 and fieldtype like 'Q%' then @AuthOverrideOnAllQs
                                                                                                                        else dbo.FN_IsNullorEmptyorZero([IsInputAuthRequired],128) --128
                                                                                                                        end

                                    -- Engine flags.
                                    , IsKeepOnCopy = isnull(KeepOnCopy, 0)
                                    , IsKeepOnChangeTask = case 
                                                                                                            when tbl.FieldType like 'Q%' then 0 
                                                                                                            else 1 
                                                                                                            end
                                    , IsClientOnly = 0           -- Client only inputs do NOT need to come back to server.

                                    -- Reporting Flags.
                                    , ReportingBitwise =  case --mark the calc input itself so the calc knows what bitwise to look for on inputs
                                                            WHEN 	TaskDetailTypeId  = 9998 AND CalcString LIKE '%location_1%' THEN  32 --2022-03-17 remove this
                                                              WHEN 	TaskDetailTypeId  = 9998 AND CalcString LIKE '%material_1%' THEN  128  --2022-04-21
                                                             WHEN 	TaskDetailTypeId  = 9998 AND CalcString LIKE '%equipmentid%' THEN  64 
                                                           --inputs what get summed:
                                                          --when adding multiples, needs to add, eg on top select!
                                                           WHEN @SummaryByLocnStatIdCsv LIKE '%,'+cast(InputId as varchar) + ',%'  AND FieldType LIKE '%stat%' THEN 32  
                                                              --special for time one: 
                                                             WHEN InputId= 7 AND FieldType LIKE '%stat%' THEN 64
                                                              --when tbl.InputID
                                                -- ReviewTrap (2^0 = 1)
                                                             when isnull(ReviewTrap, 0) <> 0 then 1 
                                                             else 0 END  --do'nt actually think this does anything!
                                                -- ? (2^1 = 2)
                                                -- ? (2^2 = 4)
                                                ,AttributesJson --=''
												,tbl.CompulsoryTrap  --2021-03-31
												,IntegerIncrease = case when DataTypeDisplayed = 'int_inlinecontrol' and [tbl].[DecPlaces] > 0 then [tbl].[DecPlaces]
																		else 0 end -- @IntIncrease --value of zero will inherit global config in the app. value of -1 will hide the middle button.
                        ,tbl.datasrc
                        from 
                                                                                                                                                (select --distinct
                                                                                                                                                            a.ProjectID
                                                                                                                                                            , OperationID=0  --gettting this up top now (for speedt)
                                                                                                                                                            , ActivityReasonId = ActReasonID
                                                                                                                                                            , TaskDetailType 
                                                                                                                                                            , TaskDetailTypeId --
                                                                                                                                                            , TaskDetailTypeImageFileName 
                                                                                                                                                            , Active= case when @appVersionInt < a.SupportedVersion then 0
                                                                                                                                                                             when @appVersionInt>abs(a.SupportedVersion ) AND a.SupportedVersion <0 then 0 --if @appversion is below zero, then use this as a way to leave old shit in and kill it when the new version arrives.
                                                                                                                                                                              when a.SargeableFieldType = 'ConsArea' then 0
                                                                                                                                                                             else [Active] end
                                                                                                                                                            , a.InputType
                                                                                                                                                            , FieldType
                                                                                                                                                            , a.InputID
                                                                                                                                                            , HelpText
                                                                                                                                                            , DisplayOrder
                                                                                                                                                            , OrderByDetail = a.DisplayOrder --this is for input groups, mainly used below in consareas
                                                                                                                                                            , DisplayTrap --not coded for app i think. =IIF (a.DisplayTrap = 0 AND a.InputID IN (2,4) AND a.InputType = 'stat', 1, a.DisplayTrap)
                                                                                                                                                            , DataTypeDisplayed
                                                                                                                                                            , DecPlaces
                                                                                                                                                            , TimeStampThisInput
                                                                                                                                                            , CalcString = iif (a.DisplayTrap = 0 and a.InputID in (96 /*96 was some test data for ian. swap back with these: 2,4*/) and a.InputType = 'stat', '=IF( 1 > 0, true, true)',a.CalcString)  --if input is hidden on act reason, keep it hidden in v3
                                                                                                                                                            , ForeLabel
                                                                                                                                                            , AftLabel
                                                                                                                                                            , CompulsoryTrap = case when td_ActivityID in (3,5) and a.FieldType = 'CommentsCheck' then 1 
                                                                                                                                                                                                                                    when isnull(@LocnCompulsoryForAll,0) = 1 and a.FieldType = 'Location' then 1  --2020-05-28
                                                                                                                                                                                                                                    when a.TaskDetailType  ='StatCalc' and @CalcInputsAllowedToBeCompulsory = 0 then 0  --2020-08-17, 2020-11-26
                                                                            when a.TaskDetailTypeId in (1,5) then 0 --2020-11-26
                                                                                                                                                                                                                        else isnull(CompulsoryTrap,0) end
                                                                                                                                                            , DefaultValue --=IIF (a.DisplayTrap = 0 AND a.InputID IN (2,4) AND a.InputType = 'stat', '', a.DefaultValue)
                                                                                                                                                            , ReviewTrap
                                                                                                                                                            , IntolerableValues
                                                                                                                                                            ,ToleranceLower
                                                                                                                                                            ,TL_Text
                                                                                                                                                            ,ToleranceUpper
                                                                                                                                                            ,TU_Text
                                                                                                                                                            , InitialValidationMsg
                                                                                                                                                            , FinalValidationMsg
                                                                                                                                                            , InputListSelectionFilter
                                                                                                                                                            , Shareable
                                                                                                                                                            , InputGroup
                                                                                                                                                            , SummaryGroup
                                                                                                                                                            , DisplayInputComments
                                                                                                                                                            , TypeCsvOld
                                                                                                                                                            , TypeIdsCsv /*= isnull((
                                                                                                                                                                                   select distinct
                                                                                                                                                                                          ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                                                                                                                                                                   from /*dbo.udfSplit(TypeCsvOld, ',')  as CSV
                                                                                                                                                                                       inner join*/
                                                                                                                                                                                       dbo.tbl_SYS_Type as LookT
                                                                                                                                                                                           --on CSV.Item = LookT.TypeCode
                                                                                                                                                                                           where ','+TypeCsvOld+',' --they don't ahve leadinga nd traliing commas !
                                                                                                                                                                                                      like '%,'+ LookT.typecode +',%'
                                                                                                                                                                                   for xml path('')
                                                                                                                                                                               ) + ','
                                                                                                                                                                             , ''
                                                                                                                                  
                                                                                                                                                                                             )*/
                                                                                                                                                ,[TrapIntolerableComment] =case  when a.TaskDetailType  ='StatCalc' and @CalcInputsAllowedToBeCompulsory = 0 then null 
                                                                                                                                                                                                                                                            when [TrapIntolerableComment] = 0 then 8  --2020-09-21 convert zero values to 8, zero is likely bad data.
                                                                                                                                                                                                                                                                        else [TrapIntolerableComment] end --2020-08-17
                                                                                                                                                ,[IsInputCommentRequired] =case  when a.TaskDetailType  ='StatCalc' then 0 else [IsInputCommentRequired] end
                                                                                                                                                ,[IsInputPhotoRequired] =case  when a.TaskDetailType  ='StatCalc' then 0 else [IsInputPhotoRequired] end
                                                                                                                                                ,[IsInputAuthRequired] =case  when a.TaskDetailType  ='StatCalc' then 0 else [IsInputAuthRequired] end

                                                                                                                                                            , KeepOnCopy
                                                                                                                                                            , a.ModifiedOn
                                                                                                                                                            ,AttributesJson =AttrJson  --this is currently where we stash some defaults for formulas. will need to be careful expanding other use cases here (that we piece the JSON together correctly!
                                                                                                                                                            ,a.AdditionalRegex
                                                                                                                                                ,datasrc = 'normalinputs'
                                                                                                                                                from --dbo.udf_GetTaskDetails_ForIplod(@ProjectId,'',1,0) 
                                                                                                                                                [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED_ForApp] as a

                                                                                                                                                --todo: remove this join, act,reas,process is in the underlying inputs proc nowadays (for the web stuff)
                                                                                                                                               -- inner join dbo.tbl_SYS_ActivityReasonLink as arl
                                                                                                                                                     --       on a.ActReasonID = arl.ActivityreasonLinkID
                                                                                                                                                where   not(a.AppliesToAllProjects = 'AllTasks')  --this is varcrhar on the table)
                                                                                                                                                        and a.projectid = @Projectid 
                                                                                                                                                         --AND a.OnlyForApp = 1
                                                                                                                                                         --ActReasonID = case when @activityReasonId = 0 then ActReasonID
                                                                                                                                                           --                                                             else @activityReasonId
                                                                                                                                                             --                                                           end
                                                                                                                                                                        --AND (a.ModifiedOn > @FromDate 
                                                                                                                                                                        --            OR @isPurge = 1)
                                                                                                                                                                       -- and not(a.SargeableFieldType = 'ConsArea')  --2020-06-11 --this is varcrhar on the table
                                                                                                                                                                     /*kill display trap filter. mainly for speed. 2022-09-30
                                                                                                                                                                     be careful bringing back. also likely can just simplifyt it to Displaytrap=1 OR inputtype like '%calc%'
                                                                                                                                                                     and (a.DisplayTrap =1 or @IsDisplayTrapUsed = 1 or 
                                                                                                                                                                                                                                    (a.InputType like'%Calc%' and a.CalcString <> '')  --2020-05-27 
                                                                                                                                                                                                                                    or (a.inputtype = 'Stat' and a.InputID in (2,4))  --2020-08-07 ... let # of holes and hole depth, these are legit hidden inputs. others were mainly used to get around v2 trap for need at least one input filled in.
                                                                                                                                                                                                                                    --suggest we tidy up act reason before removing this hard coded filter (and no more v2 in the field)
                                                                                                                                                                                                            )  
                                                                                                                                                                                                            */
                                                                                                                                                            --2020-08-09
                                                                                                                                                            --2022-10-03 shift up to Acivet toggle to avoid sarg/index
                                                                                                                                                          --  and @appVersionInt>=a.SupportedVersion
                                                                                                                                                           -- AND NOT (@appVersionInt>abs(a.SupportedVersion ) AND a.SupportedVersion <0 )  --if @appversion is below zero, then use this as a way to leave old shit in and kill it when the new version arrives.
                                                                                                                                                            AND ( a.DeploymentModeCsv LIKE '%,'+ @appDeploymentMode +',%' OR a.DeploymentModeCsv = '' or a.DeploymentModeCsv is null )   --if deploymentmodeCsv is empty, then this is used for all deployment modes.


                                                                                                                                    union all 

                                                                                                                                    --set of inputs (eg for prestart or TWi trigger) that gets whacked on all tasks
                                                                                                                                    select   --distinct
                                                                                                                                                            ProjectID
                                                                                                                                                            , OperationID=0  --gettting this up top now (for speedt)
                                                                                                                                                            , ActivityReasonId = ActReasonID
                                                                                                                                                            , TaskDetailType 
                                                                                                                                                            , TaskDetailTypeId 
                                                                                                                                                            , TaskDetailTypeImageFileName 
                                                                                                                                                            , Active = iif( a.InputType = 'statcalc' and inputid = 7 AND @appVersionInt < 20220404 , 0 ,Active)  --backwards compatibilty on the delay sumary stat.
                                                                                                                                                            , InputType
                                                                                                                                                            , FieldType = 'special'+ a.FieldType --added "Special" onto this so that it doesnn't map through to import to stagingedited table
                                                                                                                                                            , InputID
                                                                                                                                                            , HelpText
                                                                                                                                                            , DisplayOrder
                                                                                                                                                            , OrderByDetail = a.DisplayOrder
                                                                                                                                                            , DisplayTrap
                                                                                                                                                            , DataTypeDisplayed
                                                                                                                                                            , DecPlaces
                                                                                                                                                            , TimeStampThisInput
                                                                                                                                                            , CalcString
                                                                                                                                                            , ForeLabel = iif( a.InputType = 'statcalc' and inputid = 7,  --stat7 is the duration stat whacked on all tasks. for summarising. into summary screen.
                                                                                                                                                                                      case a.td_ActivityID WHEN 1 THEN 'Productive Time'  --hack this back to a function (or field on the sys_activitey table if need to customise it
                                                                                                                                                                                                        WHEN 2 THEN 'Scheduled DELAY'   
                                                                                                                                                                                                        WHEN 3 THEN 'Unscheduled DELAY'
                                                                                                                                                                                                        WHEN 4 THEN 'Equipment DOWNTIME'
                                                                                                                                                                                                        WHEN 5 THEN 'Equipment DOWNTIME'
                                                                                                                                                                                                       -- WHEN 2 THEN 'Equipment DOWNTIME'
                                                                                                                                                                                        ELSE ForeLabel end
                                                                                                                                                                                ,ForeLabel) 
                                                                                                                                                            , AftLabel
                                                                                                                                                            , CompulsoryTrap = case when td_ActivityID in (3,5) and a.FieldType = 'CommentsCheck' then 1 else isnull(CompulsoryTrap,0) end
                                                                                                                                                            , DefaultValue
                                                                                                                                                            , ReviewTrap
                                                                                                                                                            , IntolerableValues
                                                                                                                                                            ,ToleranceLower = null 
                                                                                                                                                            ,TL_Text = null 
                                                                                                                                                            ,ToleranceUpper = null 
                                                                                                                                                            ,TU_Text = null
                                                                                                                                                            , InitialValidationMsg = case when AllwdTypes.TypeId = 3 and inputid =1363 then '{377} Tap Back button and a TWI form will be created as a delay'  --hacked in here because it was too hard to setup in questioncateogries!
                                                                                                                                                                                                                                              WHEN AllwdTypes.TypeId =10 /*2022-04-01*/ and inputid =1363 and td_ActivityID in (4,5,6)
                                                                                                                                                                                                                                                                    THEN  '{377} Tap Back button and a TWI form will be created as a delay'
                                                                                                                                                                                                                                              when AllwdTypes.TypeId in( 1,10) /*2022-04-01*/ and inputid =1363 and td_ActivityID =1 --only do twi on prdt for miners 2020-04-27
                                                                                                                                                                                                                                                                       then '{283}  Tap Back button and a TWI form will be created as a delay' 
                                                                                                                                                                                                                                                else InitialValidationMsg end
                                                                                                                                                                                                --SELECT * FROM dbo.tbl_SYS_QuestionCategories
                                                                                                                                                                                                --SELECT * FROM  dbo.tbl_SYS_Questions WHERE QuestionText  LIKE '%twi%'
                                                                                                                                                            , FinalValidationMsg
                                                                                                                                                            , InputListSelectionFilter
                                                                                                                                                            , Shareable
                                                                                                                                                            , InputGroup
                                                                                                                                                            , SummaryGroup
                                                                                                                                                            , DisplayInputComments
                                                                                                                                                            , TypeCsvOld = case when AllwdTypes.TypeId =1 then 'mining' when  AllwdTypes.TypeId =3 then 'maint'
                                                                                                                                                                                WHEN AllwdTypes.TypeId = 10 THEN 'MinerOrFitter'  --2021-12-20 added this. unsure why the fuck.  fixed up top in the TypeId compile. (don't do it for this dataset)
                                                                                                                                                                                WHEN AllwdTypes.TypeId = 5 THEN 'Shiftboss'
                                                                                                                                                                                  ELSE ''-- replace (replace( replace(  replace(TypeCsvOld , 'mining','')  , 'maint','')  , 'MinerOrFitter','') , 'Shiftboss','')
                                                                                                                                                                                  end --not ideal but getting too hard. is used up top in this proc
                                                                                                                                                            , TypeIdsCsv = ','+cast(cast(AllwdTypes.TypeId as int)  as varchar)+','   --get the TypeId from teh deploymentMode.ALlowedTypeIds Join. there should be only one TypeId per line now, can use this to make edits on handling inside CASE's

                                                                                                                                                ,[TrapIntolerableComment]=case  when a.TaskDetailType  ='StatCalc' then null 
                                                                                                                                                                                                                                                            else [TrapIntolerableComment] end --2020-08-17
                                                                                                                                                ,[IsInputCommentRequired]
                                                                                                                                                ,[IsInputPhotoRequired]
                                                                                                                                                ,[IsInputAuthRequired]

                                                                                                                                                            , KeepOnCopy
                                                                                                                                                            , a.ModifiedOn
                                                                                                                                                            ,AttributesJson =''
                                                                                                                                                            ,AdditionalRegex = ''
                                                                                                                                                             ,datasrc = 'specialinputs'
                                                                                                                                                from  [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED_ForApp]--
                                                                                                                                                --dbo.udf_GetTaskDetails_ForIplod_Specials(@ProjectId,'',1) 
                                                                                                                                                              as a
                                                                                                                                               -- inner join dbo.tbl_SYS_ActivityReasonLink as arl
                                                                                                                                                 --           on a.ActReasonID = arl.ActivityreasonLinkID
                                                                                                                                                                        inner join     /*(select TypeId = DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'AllowedTypeIds')   --only get allowed types out.
                                                                                                                                                                                                                                                )*/
                                                                                                                                                                                       #AllwdTypes
                                                                                                                                                                                                           as AllwdTypes
                                                                                                                                                                                                            on a.TypeIdsCsv like '%,' + cast (AllwdTypes.TypeId as nvarchar(5)) +',%'

                                                                                                                                                where a.Projectid = @projectid --AND a.OnlyForApp = -1
                                                                                                                                                and a.AppliesToAllProjects = 'AllTasks'  --this is varcrhar on the table
                                                                                                                                                          and ( 
                                                                                                                                                            not( AllwdTypes.TypeId = 1 and a.td_ActivityID in (4,5,6) )
                                                                                                                                                              OR (a.SargeableFieldType = 'statcalc' and a.InputID = 7)  --2022-03-26
                                                                                                                                                              ) -- don't show this input onto equipment downtime for miners!  2020-04-30
                                                                                                                                                           -- and ActReasonID = case when @activityReasonId = 0 then ActReasonID
                                                                                                                                                                --                                                        else @activityReasonId
                                                                                                                                                                 --                                                       end
                                                                                                                                                                        --AND (a.ModifiedOn > @FromDate 
                                                                                                                                                                        --            OR @isPurge = 1)
                                                                                                                                                                      /*kill display trap filter. mainly for speed. 2022-09-30
                                                                                                                                                                     be careful bringing back. also likely can just simplifyt it to Displaytrap=1 OR inputtype like '%calc%'
                                                                                                                                                                      and (a.DisplayTrap = 1 or @IsDisplayTrapUsed = 1   
                                                                                                                                                                                   or  ( a.InputType = 'statcalc' AND inputid = 7) --2022-03-26 send it into the app to get the displaytrap back working. can pull this bit out and fix the @IsDisplayTrapUsed once it is defo working in app.
                                                                                                                                                                                      )
                                                                                                                                                                                      */
                                                                                                                                                            --config question set: 2020-07-06
                                                                                                                                                            and @ShowSpecialsOnEveryTaskInputIdCsv  like '%,' + cast (a.InputID as nvarchar(5)) +',%'




                                                                                                                                    ) as tbl

                        --(add ConsARea inputs as list on the main form.
                        union all
                        select 
                                    OperationID=0  --gettting this up top now (for speedt)
                                    , ProjectID = @projectIdCalled
                                    , InputUniqueId = '' + convert(nvarchar(50), ar.ActReasonID) + '_' +  'ConsArea' + '_' + convert(nvarchar(50), isnull(ConsumableProjectId,-1)) -- CONVERT(NVARCHAR(50), InputID)
                                    , InputMatchId = '' +  'ConsArea' + '_' + convert(nvarchar(50), isnull(ConsumableProjectId,-1))
                                    -- Mining Specifics.
                                    , ActivityReasonID = ar.ActReasonID
                                    , FieldType = 'ConsArea'--+CONVERT(NVARCHAR(50), InputId) --add InputId here for unmapping on the way out.
                                    , InputID = convert(nvarchar(50),InputId*100000 + isnull(ConsumableProjectId,-1))  --trick to carry both ConsAreaId and ConsumableProjectId down.
                                                                        --CONVERT(NVARCHAR(50), ISNULL(ConsumableProjectId,-1))  -- CONVERT(NVARCHAR(50), InputId)   --make this ConsProjId so I can differentiate them on import
                                    -- General. 
                                    , TaskDetailType ='Q_Number'
                                    , TaskDetailTypeId = 104 --don';t wporry about deactivating here, just do it up top 2021-08-02  iif(@appVersionInt >= 20210727,104, 103)  --2021-06-09  ... 2021-06-09  103

                                    , TaskDetailTypeImageFileName  = ''
                                    , CalcString =''
                                    , OrderBy = ar.DisplayOrder*100 --all "inputs" given 100 extra to put them below parmters--cp.DisplayOrder * 100 --ar.DisplayOrder * 100 --puts inputs belwo parameters
                                    , OrderByDetail = cp.DisplayOrder
                                    , HelpTextHtml = ar.HelpText
                                    , ForeLabelHtml = isnull(cp.ConsumableDescShort, 'no match')
                                    , AftLabelHtml = ar.AftLabel
                                    , DefaultValue
                                    ,InitialValidationMsg =''
                                    ,FinalValidationMsg =''

                                    , InputListSelectionFilterCsv = ''
                                    , InputGroup = '>'+ar.ForeLabel --tmp.ConsumableAreaName --'ConsList' --tmp.ConsumableAreaName  --add some stuff for RegEx on the child count
                                                                                                                                                /*InputGroup:    • Prefix :-
                                                                                                                                                                                                                        ~ (tilde) – indicates that the group cannot be replicated (i.e. no +, it is a singleton),
                                                                                                                                                                                                                        + (plus) – indicates that the group starts visually as just the header, and the first “+”
                                                                                                                                                                                                                                    selected populates the group, with subsequent “+”’s triggering new groups as per normal.
                                                                                                                                                                                                                                    The “-“ for the group will remove items from the first group if they are not modified – giving
                                                                                                                                                                                                                                    the group its initial collapsed appearance.
                                                                                                                                                                                                                        >   this opens to new screen with the full list.  chosen items are injected back on the main task
                                                                                                                                                                                                                        Empty – no prefix is actually required.
                                                                                                                                                                                                • Group Label – is the label to display on the UI,
                                                                                                                                                                                                • Group intolerables – can be a standard intolerables regular expression list appended to the group
                                                                                                                                                                                                name. When a group with intolerables is defined, the InputValue of the group is constantly derived
                                                                                                                                                                                                to the count of non-empty/non-default child values.
                                                                                                                                                                                                The Intolerable expressions can therefore be evaluated against this counter, so for example :-
                                                                                                                                                                                                “+Some Group~~~>0~~~Must have one (1) non-default input!~~~0”
                                                                                                                                                                                                would evaluate to be an initially blank group called “Some Group”, which once expanded with
                                                                                                                                                                                                children would require at least one (1) item in the group to be completed, and until that is done, the
                                                                                                                                                                                                message “Must have one (1) non-default input!” will be displayed in the group header.
                                                                                                                                                                                                Note the final bitwise flag should always be zero (0), and is hardcoded into the app as zero (0) since
                                                                                                                                                                                                no comments / photo / auth can be handled by a group header!

                                                                                                                                                */
                                    , IsInputGroupMandatory = 0
                                    , IntolerableValuesRegExp = case when cp.ConsumableArea = 21 and c.ConsumableStatID = 10 --Extra Ground Support, requires photo + comment. only for Bolts
                                                                                                                                                            then @RegExForExtraBolts-- '~~~[a-zA-Z0-9].*~~~Reason For Extra Ground Support?~~~72'
                                                                                                                                    else ''
                                                                                                                                    end
                                    , TypeCsvOld --= type--',mining,'
                              , TypeIdsCsv --= null 
                                              /* isnull((
                                               select distinct
                                                      ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                               from /*dbo.udfSplit(TypeCsvOld, ',')  as CSV
                                                   inner join*/
                                                   dbo.tbl_SYS_Type as LookT
                                                       --on CSV.Item = LookT.TypeCode
                                                       where ','+Type+',' --they don't ahve leadinga nd traliing commas !
                                                                  like '%,'+ LookT.typecode +',%'
                                               for xml path('')
                                           ) + ','
                                         , ''

                                                         )*/



                                     /* isnull((
                                                 select distinct
                                                        ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                                 from dbo.udfSplit(Type, ',')  as CSV
                                                     inner join dbo.tbl_SYS_Type as LookT
                                                         on CSV.Item = LookT.TypeCode
                                                 for xml path('')
                                             ) + ','
                                           , ''

                                                           )--CASE WHEN @TypeIdMultiplier <> 1 THEN ','+CAST(ISNULL(@TypeIdMultiplier,1) AS varchar)+','  ELSE ',1,' END
                                                  */
                                   --, IsDeleted = 0
                                    , IsEnabled = 1
                                    , DecimalPlaces = 0
                                    , IsHidden = 0
                                    , IsInputCommentRequired = 4
                                    , IsInputPhotoRequired = 16--32  changed to photo never.  may want to get photos for "Extra Ground Support" can work that in down the track.
                                    , IsInputAuthRequired = 128
                                    , IsKeepOnCopy = 0
                                    , IsKeepOnChangeTask = 0
                                    , IsClientOnly = 0
                                    , ReportingBitwise = 1
                                    ,AttributesJson =   --isnull((select
                                                        '[{"Key":"'+case when  cp.Parameter3=1 THEN 'ReqDrillm' WHEN cp.Parameter3 =2 THEN 'MeshArea' ELSE null end+'","Value":'+cast(isnull(cp.Parameter1,0) as varchar(25))+'}]'      --  ''
                                                                                      /*(SELECT [Key], [Value]
                                                                                                            from     --cte_attr 
                                                                                                                                    #consattr          AS ca
                                                                                                            WHERE ar.InputId = ca.ConsumableArea
                                                                                                            FOR JSON PATH)*/
                                    --,AdditionalRegex = ''
									,CompulsoryTrap =0 --2021-03-31
									,IntegerIncrease =5  --customise this to consumables potentially, value of zero will inherit global config in the app. value of -1 will hide the middle button.
                        ,datasrc = 'ConsArea'
                     --  from dbo.tbl_DBT_ActReasonInputLink as ar
                        from dbo.view_udf_GetTaskDetails_ForIplod_CACHED_ForApp as ar
                        inner join dbo.tbl_DBT_ConsumablesProjectLink as cp --changed to inner join. don't want any inactive consumables
                                    on ar.InputId = cp.ConsumableArea
                                    and ar.ProjectID = cp.ProjectId
                                    and cp.Active = 1
                        inner join dbo.tbl_SYS_Consumables as c
                                    on cp.ConsumableID = c.ConsumableID
                        inner join (select distinct ConsumableAreaID, ConsumableAreaName, RowNum = row_number() over (partition by ConsumableAreaID order by ConsumableAreaID,ConsumableAreaName ) from dbo.tbl_SYS_ConsumablesArea ) as tmp
                                    on ar.InputId = tmp.ConsumableAreaID
                                    and tmp.RowNum =1
                        where ar.ProjectID = @projectId
                        and ar.SargeableFieldType = 'ConsArea'
                        --change to FieldType
                        and (ar.ExcludeFromApp=0 or ar.ExcludeFromApp is null)
                        and c.ConsumableDescShort <> 'Add 1 here if none used --->'  --these were dummy ones for v2. (this is going to come back to bite us!... Add 1 here if none used --->

union all --put a question to prompt action if the consarea is compulsory (as a work around)
                        select 
                                    OperationID=0  --gettting this up top now (for speedt)
                                    , ProjectID = @projectIdCalled
                                    , InputUniqueId = '' + convert(nvarchar(50), ar.ActReasonID) + '_' +  'ConsArea' + '_' + convert(nvarchar(50), -1) -- CONVERT(NVARCHAR(50), InputID)
                                    , InputMatchId = '' +  'ConsArea' + '_' + convert(nvarchar(50), -1)
                                    -- Mining Specifics.
                                    , ActivityReasonID = ar.ActReasonID
                                    , FieldType = 'ConsAreaChk'
                                    , InputID = convert(nvarchar(50), InputId*10000) 
                                    -- General.
                                    , TaskDetailType ='Q_checkbox'
                                    , TaskDetailTypeId = 102
                                    , TaskDetailTypeImageFileName  = ''
                                    , CalcString =''
                                    , OrderBy = ar.DisplayOrder*100 -- * 1000 --puts inputs belwo parameters (put at the bottom of the list
                                    , OrderByDetail = -1 -- put it at the top of the list
                                    , HelpTextHtml = ar.HelpText
                                    , ForeLabelHtml = 'Please confirm you have inputted ALL consumables used'
                                    , AftLabelHtml = ar.AftLabel
                                    , DefaultValue
                                    ,InitialValidationMsg =''
                                    ,FinalValidationMsg =''

                                    , InputListSelectionFilterCsv = ''
                                    , InputGroup = '>'+ar.ForeLabel --tmp.ConsumableAreaName --'ConsList' --tmp.ConsumableAreaName  --add some stuff for RegEx on the child count
                                                                                                                                                /*InputGroup:    • Prefix :-
                                                                                                                                                                                                                        ~ (tilde) – indicates that the group cannot be replicated (i.e. no +, it is a singleton),
                                                                                                                                                                                                                        + (plus) – indicates that the group starts visually as just the header, and the first “+”
                                                                                                                                                                                                                                    selected populates the group, with subsequent “+”’s triggering new groups as per normal.
                                                                                                                                                                                                                                    The “-“ for the group will remove items from the first group if they are not modified – giving
                                                                                                                                                                                                                                    the group its initial collapsed appearance.
                                                                                                                                                                                                                        >   this opens to new screen with the full list.  chosen items are injected back on the main task
                                                                                                                                                                                                                        Empty – no prefix is actually required.
                                                                                                                                                                                                • Group Label – is the label to display on the UI,
                                                                                                                                                                                                • Group intolerables – can be a standard intolerables regular expression list appended to the group
                                                                                                                                                                                                name. When a group with intolerables is defined, the InputValue of the group is constantly derived
                                                                                                                                                                                                to the count of non-empty/non-default child values.
                                                                                                                                                                                                The Intolerable expressions can therefore be evaluated against this counter, so for example :-
                                                                                                                                                                                                “+Some Group~~~>0~~~Must have one (1) non-default input!~~~0”
                                                                                                                                                                                                would evaluate to be an initially blank group called “Some Group”, which once expanded with
                                                                                                                                                                                                children would require at least one (1) item in the group to be completed, and until that is done, the
                                                                                                                                                                                                message “Must have one (1) non-default input!” will be displayed in the group header.
                                                                                                                                                                                                Note the final bitwise flag should always be zero (0), and is hardcoded into the app as zero (0) since
                                                                                                                                                                                                no comments / photo / auth can be handled by a group header!

                                                                                                                                                */
                                    , IsInputGroupMandatory = 1
                                    , IntolerableValuesRegExp = '~~~![a-zA-Z0-9].*~~~Must have response~~~0' 
                                                                                                                                    --2020-04-23, reverted, it was malfunctioning in device (was showing the answer of yes as invalid)
                                                                                                                        --          '~~~[^ \r\n]{1,}~~~Must have response~~~0' 

                                    , TypeCsvOld --=type-- ',mining,'
                                    , TypeIdsCsv --= null 
                                              /*isnull((
                                               select distinct
                                                      ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                               from /*dbo.udfSplit(TypeCsvOld, ',')  as CSV
                                                   inner join*/
                                                   dbo.tbl_SYS_Type as LookT
                                                       --on CSV.Item = LookT.TypeCode
                                                       where ','+type+',' --they don't ahve leadinga nd traliing commas !
                                                                  like '%,'+ LookT.typecode +',%'
                                               for xml path('')
                                           ) + ','
                                         , ''

                                                         )*/


                                                  /*isnull((
                                                 select distinct
                                                        ',' + convert(nvarchar(50), isnull(@TypeIdMultiplier,1)*cast(TypeID as int))
                                                 from dbo.udfSplit(Type, ',')  as CSV
                                                     inner join dbo.tbl_SYS_Type as LookT
                                                         on CSV.Item = LookT.TypeCode
                                                 for xml path('')
                                             ) + ','
                                           , ''

                                                           ) --CASE WHEN @TypeIdMultiplier <> 1 THEN ','+CAST(ISNULL(@TypeIdMultiplier,1) AS varchar)+','  ELSE ',1,' END
                                              */
                                  --, IsDeleted = 0
                                    , IsEnabled = 1
                                    , DecimalPlaces = 0
                                    , IsHidden = 0
                                    , IsInputCommentRequired = 4
                                    , IsInputPhotoRequired = 16--32  changed to photo never.  may want to get photos for "Extra Ground Support" can work that in down the track.
                                    , IsInputAuthRequired = 128
                                    , IsKeepOnCopy = 0
                                    , IsKeepOnChangeTask = 0
                                    , IsClientOnly = 0
                                    , ReportingBitwise = 1
                                    ,AttributesJson =''
                                    --,AdditionalRegex = ''
									,CompulsoryTrap =1 --2021-03-31
									,IntegerIncrease=-1  --value of zero will inherit global config in the app. value of -1 will hide the middle button.
                 ,datasrc = 'ConsCompulsoryQ'
                --from dbo.tbl_DBT_ActReasonInputLink as ar
                from dbo.view_udf_GetTaskDetails_ForIplod_CACHED_ForApp as ar
                        /*INNER JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cp --changed to inner join. don't want any inactive consumables
                                    ON ar.InputId = cp.ConsumableArea
                                    AND ar.ProjectID = cp.ProjectId
                                    AND cp.Active = 1
                        INNER JOIN dbo.tbl_SYS_Consumables AS c
                                    ON cp.ConsumableID = c.ConsumableID
                        INNER JOIN (SELECT DISTINCT ConsumableAreaID, ConsumableAreaName, RowNum = ROW_NUMBER() OVER (PARTITION BY ConsumableAreaID ORDER BY ConsumableAreaID,ConsumableAreaName ) FROM dbo.tbl_SYS_ConsumablesArea ) AS tmp
                                    ON ar.InputId = tmp.ConsumableAreaID
                                    AND tmp.RowNum =1*/
                        where ar.ProjectID = @projectId
                        and --INpuTtype
                        ar.SargeableFieldType = 'ConsArea'
                        and ar.CompulsoryTrap=1
                        and (ar.ExcludeFromApp=0 or ar.ExcludeFromApp is null)



                        ) as tbl2
--outer apply dbo.FN_Iplod_GetAR_TaskGroupingsAll(tbl2.ProjectID,tbl2.ActivityReasonId)  --ts 2020-09-17, if this is heavy on query, might need to shift it down to the ininital functions
  --2022-09-28 switch out the funciton for the view
  /*left join dbo.vw_Iplod_GetAR_TaskGroupingsAll as vigatga
        on tbl2.ProjectId =vigatga.ProjectID
        and tbl2.ActivityReasonId = vigatga.ActivityReasonId
		*/
--2022-06-08
left JOIN #temperaturehistory AS temps
  ON tbl2.ActivityReasonId = temps.tActivityReasonId
  AND tbl2.FieldType = temps.tInputType
  AND tbl2.InputID = temps.tInputID
--2022-07-04
--left JOIN (select DISTINCT ReadingLabelForPlodPageBreak,SecondLastReadingLabelForPlodPageBreak,tActivityReasonId FROM  #temperaturehistory ) AS tempsPageBrk
 -- ON tbl2.ActivityReasonId = tempsPageBrk.tActivityReasonId
  --AND tbl2.FieldType = temps.tInputType
  --AND tbl2.InputID = temps.tInputID
            --SELECT * FROM dbo.tbl_SYS_Statistic
                        /*
                        -- Test Data.
                        UNION ALL
                        SELECT 
                                    OperationID
                                    , ProjectID
                                    , InputUniqueId = '' + CONVERT(NVARCHAR(50), ActivityReasonID) + '_' +  FieldType + '_' + CONVERT(NVARCHAR(50), InputID)
                                    , InputMatchId = '' +  FieldType + '_' + CONVERT(NVARCHAR(50), InputID)
                                    -- Mining Specifics.
                                    , ActivityReasonID
                                    , FieldType
                                    , InputID
                                    -- General.
                                    , TaskDetailType
                                    , TaskDetailTypeId
                                    , TaskDetailTypeImageFileName
                                    , CalcString
                                    , OrderBy
                                    , HelpTextHtml
                                    , ForeLabelHtml
                                    , AftLabelHtml
                                    , DefaultValue
                                    , InputListSelectionFilterCsv
                                    , InputGroup
                                    , IsInputGroupMandatory
                                    , IntolerableValuesRegExp
                                    , TypeCsvOld
                                    , TypeIdsCsv
                                    , IsDeleted = 0
                                    , IsEnabled
                                    , DecimalPlaces
                                    , IsHidden
                                    , IsInputCommentRequired
                                    , IsInputPhotoRequired
                                    , IsInputAuthRequired
                                    , IsKeepOnCopy
                                    , IsKeepOnChangeTask = CASE 
                                                                                                            WHEN FieldType LIKE 'Q%' THEN 1 
                                                                                                            ELSE 0 
                                                                                                            END
                                    , IsClientOnly
                                    , ReportingBitwise
                        FROM dbo.zTestInputs
                        WHERE ProjectID = @ProjectID
                                    -- testing filter.
                                    AND ActivityReasonID = CASE WHEN @activityReasonId = 0 THEN ActivityReasonID
                                                                                                            ELSE @activityReasonId
                                                                                                            END
*/
                        /*order by 
                                    ActivityReasonID asc, 
                                    OrderBy asc
                                    */


if @DebugMode = 1
begin
select ' #consattr',* from  #consattr
select '#AllwdTypes',* from #AllwdTypes
end

IF OBJECT_ID('tempdb..#AllwdTypes') IS NOT NULL   drop TABLE #AllwdTypes;
IF OBJECT_ID('tempdb..#consattr') IS NOT NULL   drop TABLE #consattr;
IF OBJECT_ID('tempdb..#temperaturehistory') IS not  null   drop TABLE #temperaturehistory;
--drop table #AllwdTypes
--drop table #consattr

            end
end


-- Get the latest system error.
select @Error = @@error where @Error = 0
if (@Error <> 0)
begin
            return @Error
end

-- Finish now.
return 0
GO
PRINT N'Altering [dbo].[SP_API_IPLODSetup_Employees]'
GO
ALTER procedure [dbo].[SP_API_IPLODSetup_Employees]
	@operationId AS int,
	@projectId AS int,
	@appId AS nvarchar(100) = NULL,
	@appVersion AS nvarchar(50) = NULL,
	@appDeploymentMode AS nvarchar(50) = NULL,
	@appCfgRefreshPoint AS int = NULL,
	@fromDate AS datetime = NULL,
	@deviceSerialNo AS NVARCHAR(50) = NULL,
    @employeeId AS INT = NULL,
    @DebugMode INT = 0,
	@isPurge AS int OUTPUT 
AS
/**********************************************************************
Purpose :	Lookup Config - Employees.
Notes   :	UserPermissions :-
			1 = Admin,
			2 = ?
			4 = ?



DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Employees @operationId =0, @projectId =3,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=1, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Employees @operationId =0, @projectId =415,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=1,@debugmode = 1, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Employees @operationId =0, @projectId =19400,@appDeploymentMode='servicesheets',@appCfgRefreshPoint=1, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_Employees @operationId =0, @projectId =19400,@appDeploymentMode='induction',@appCfgRefreshPoint=1, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge


--EXEC dbo.SP_API_IPLODSetup_VERSION3 53
SELECT * FROM dbo.tbl_DBT_Employees

History  :	IRJ	14-Aug-2018	Initial Creation.
			IRJ	22-Aug-2018	Added call to dbo.udfAdminPassword()
			IRJ	13-Sep-2018	Added IsEnabled flag.
			IRJ	22-Oct-2018	Added CanAuthorise flag.
				CA  23-Jan-2019 Added defaultType and allowed type csv from position table
			IRJ	24-Jan-2019	Added @appId, @appVersion, and @appDeploymentMode parameters.
			IRJ	27-Feb-2019	Modified @appDeploymentMode NVARCHAR(50) > INT input param.
							Added @appCfgRefreshPoint input param.
							Added @isPurge OUTPUT param.
							Added IsDeleted output field.
			SH 6-Mar-2019 Add @IsPurge to where clause
						TS 02-April-2019  --- send nothing if @ProjectId = 0
			IRJ	15-May-2019	Added UserPermissions binary (Int64) flag.
			CA 29-May-2019 Added Config for CentralPrestart to be shiftboss only 
			TS 2019-07-22 ... set up defaults for UserPermissions (based on Central warehouse, ie pho or pms)
							... people who are allowed to switch projects should be set onto pho or pms

			TS 2019-07-26 added password switch for test server.
			TS 2019-07-31 ... add purge table etc
			TS 2019-08-05 ... set IsPUrge =1 whenever getting data
			TS 2019-08-07 ... added UTC conversion
			TS 2019-08-23 ... add handling for default types etc (per deployment mode)
			TS 2019-09-16 ... everyone on test server is Usergroup1
			TS 2019-11-04 ... remove usergroup1 for test server and remove the login message?
			TS 2019-11-11 ... add some test users for test server
							...updated minepoint code for admin user (99999 is actually a real one I think)
... set IsEnabled to be 10.  only IsEnabled>=10 will show on login. IsEnabled>0 AND CanAuthorise >0 will show list on authorisation lists in app.
			TS 2019-11-12 ... added handling on types for fitters in Mining_Fitters deployment mode. should have shifted the logic back to deployment mode tables, but couldn't easily see how.
							... admin users always have all allowed types
			ts 2019-11-23 ... added login handling for service sheet deployment 
			ts 2019-11-26 ... remove empclass table so we don't have to send it to local (not used anymore anyway, driven out of the deployment mode configs
							... add fix for password
			ts 2020-01-09 ... expand postiion csv config to not truncate result
			ts 2020-04-10 ... add handling for the typemultiplier
					...iplod induction name change
					... show debugsids config
			ts 2020-05-12 ... ,AttributesJson =''
			ts 2020-06-09 ... add operatorId as the attributes JSON
			ts 2020-07-10 ... ditch the attr json on debugging
			ts 2020-07-29 ... stubb in some prody stats
						ts 2020-07-31 make them numbers
			ts 2020-08-01 ... bring in actual TKMS per active shift
			ts 2020-08-06 ... no need for date filter at the bottom, there is no incremental
							... couple of small things to get it quicker?
							cte on the tkms
			ts 2020-08-07 ... need permission on the BW db
							... added back
		ts 2020-08-07   ... removed teh trend kpis on central (too long)
		ts 2020-08-10 ... get from dedicated OperatorPrody secondary view (to keep things quick)
		ts 2020-08-14 ... added IsMillrat and IsSparkie, but likely not needed? since we send mill rat their own type (and own deployment mode) 
								and sparkies run on fitters tablets anyway.  only need this for DeploymentModes where we are running people on different @types.
					... filtered millrats out though

		ts 2020-08-26 ... added TwiCount trend attribute
		ts 2020-08-28 ... add processing type to admin allowed TypeCsv
						... processign should be ProcessPlant
		ts 2021-01-21 ...  only fitters and supervisors allowed to authorise
		CA 2021-02-08 ... Added IsGeneric Attr
		ts 2021-03-11 ... added the other types for generic users
		ts 2021-08-09 ... admin user needs 9 for Staff
		ts 2021-09-01 ... stores people only get stores people.
						... minor fix for stores.
		ts 2021-09-04 ... union in the extra roster employees (might not work on locals?!)
		ts 2021-09-27	..set @projectId= abs(@projectId)
    ts 2021-12-15 ... is this project on combined (mining OR Fitters) if this needs refining, could introduce a ISComboEmployeeIDCsv
		CA 2022-02-16 ... Added IsEnabled stuff for millRats
    ts 2022-03-25 ...   DECLARE @OrigProj INT = @projectId 
    ts 2022-04-07 ... kill users on expired token
          ts 2022-07-19 ... put dbname on admin user.
    ts 2022-07-26 ... fix kill users logic
    ts 2022-07-27 ... add fitter to the name
    ts 2022-09-06 ... add @AnyoneIsAllowedToAuth (as a work around for the logged in user having to sign stuff, eg for MCR.
    ts 2022-09-21 ... don't do auth for "admin"
    CA 2022-10-12 ... Add plod password field
    ts 2022-10-17 ... fixed the password failing on DOB format of 3/2/2022


test JSON validity:
			DECLARE @isPurge AS INT  --config screen
			EXEC dbo.SP_API_IPLODSetup_Diagnostic_UnitTestCallAllProcs @operationId = 0, @projectId = 236, @isPurge = @isPurge OUTPUT,@appDeploymentMode ='mining_fitters', @appCfgRefreshPoint = 1
			SELECT @isPurge AS isPurge




**********************************************************************/
SET NOCOUNT ON
DECLARE @Error AS int = 0
  DECLARE @OrigProj INT = @projectId
set @projectId= abs(@projectId)

  DECLARE @dbname NVARCHAR(50) = DB_NAME();


	DECLARE @IsCentralOnlyMode int
	SET @IsCentralOnlyMode = IIF(@appDeploymentMode IN ('Stores','CentralPrestarts'),1,0)  --1 indicates use central API address, 0 indicates switch to local API address 
DECLARE @IsLive int
SET @IsLive = (SELECT TOP 1 dbo.FN_IsLiveDB(@ProjectID));


DECLARE @IsTempDeploymentModeToken INT = (SELECT case WHEN  FakeDeploymentMode <> TrueDeploymentMode OR killthisapp = 1  --add kill this app, in case we map fakemode = truemode
                                                  then 1 else 0 end  FROM dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId) )
DECLARE @TempTokenIsOutOfDate INT = case WHEN @IsTempDeploymentModeToken = 0 THEN 0
                                          WHEN    @IsTempDeploymentModeToken =1 THEN (SELECT  KillThisApp FROM dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId) )
                                          ELSE 0 
                                          END   
DECLARE @TrueDeploymentMode NVARCHAR(50) = (select TOP 1 TrueDeploymentMode FROM  dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId))
  SET @appDeploymentMode = case WHEN @IsTempDeploymentModeToken = 1 THEN @TrueDeploymentMode ELSE ISNULL(@appDeploymentMode, 'Mining') END  --2022-04-07


	-- Init.
	SET @appId = ISNULL(@appId, 'au.com.pybar.iplod')
	SET @appVersion = ISNULL(@appVersion, '2019.01.01')
--	SET @appDeploymentMode = ISNULL(@appDeploymentMode, 'Mining')
	SET @appCfgRefreshPoint = ISNULL(@appCfgRefreshPoint, 1)	-- Login Config Button.
	SET @isPurge =  dbo.udfIsPurge('SP_API_IPLODSetup_Employees',@appDeploymentMode,@appCfgRefreshPoint);	-- 0 = false, else true.
		DECLARE @IsLiveDB int = dbo.FN_IsLiveDB(@projectId);

	IF (@projectId > 0 )  --fail the reload for ProjectId = 0 (due to problem in the app)

	BEGIN

	DECLARE @NewestSourceData datetime 
	SET @NewestSourceData = GETDATE();  --if ispurge=1 get everything anyway

		--this is the offset from UTC to compare modified on (local time) to @FromDate on device (UTC)
	DECLARE @UtcOffset numeric =  CONVERT(numeric,dbo.udfUTCVsWebBAROffset()) * -1;

	--reset the fromdate to "local"
	SET @fromDate = DATEADD(HOUR,@UtcOffset,@FromDate);


		-- Get OperationId from ProjectId.
		SELECT @operationId = OperationID   
		FROM dbo.tbl_DBT_Project 
		WHERE ProjectID = @projectID
		SET @operationId = ISNULL(@operationId, 0)

		IF @isPurge = 0 --if not purging, then get most recent data first to decide whether or not to proceed or not
						BEGIN 
							SET @NewestSourceData = (select max(modon) from  (select modOn= MAX(ModifiedOn) FROM dbo.tbl_DBT_Employees 	AS emps		WHERE  (OperationID = @operationId 
																	OR SisterOpID_a = @operationId 
																	OR SisterOpID_b = @operationId --add sister sites
																	OR (emps.OperationID IN (113, 21)   --pho or pms
																			AND @IsCentralOnlyMode =1) --get people from pms or pho when it is a central only mode.
																			AND NOT ( emps.ProjectID =53  AND @IsLive = 1)
																			) 
														UNION ALL														
														SELECT modOn =  max(modify_date )
															FROM sys.objects
															WHERE  name IN( 'SP_API_IPLODSetup_Employees' )


																			) as tbl
														)
	END 
IF (@NewestSourceData > @FromDate OR @isPurge = 1)
	BEGIN
SET @isPurge = 1 ; --sync config table has decided IsPurge = 0, however data has indicated that some data is newer than app.  no incremental loads on this table though, so need to set Purge to 1 in this scenario



DECLARE @DefaultTypeId int = 	ISNULL(	(select DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'EmpDefaultTypeId')  ),1);
DECLARE @AllowedTypeIdCsv nvarchar(50) = ISNULL(	(select DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'EmpAllowedTypeIds')  ),',1,3,4,5,');
DECLARE @TypeIdMultiplier int = (SELECT TOP 1  ISNULL(DeploymentModeConfigValue,1)  FROM  dbo.udf_iPlodDeploymentConfigs(@appDeploymentMode,'TypeIdMultiplier')  );              
declare @showDebugIds int = (SELECT dbo.FN_GetConfigValue(@ProjecTid,'ShowDebugIds'));

--dodgy fix for mining_fitters deployment mode. need to figure out something better back in config tables!
DECLARE @PositionIDFItters nvarchar(500) = ISNULL(dbo.FN_GetConfigValue(@projectId,'PositionIdCsvForFitters'),'0');
DECLARE @PositionIDSparkies nvarchar(500) = ISNULL(dbo.FN_GetConfigValue(@projectId,'PositionIdCsvForSparkies'),'0');
DECLARE @PositionIDMillRats nvarchar(500) = ISNULL(dbo.FN_GetConfigValue(@projectId,'PositionIdCsvForMillRats'),'0');
DECLARE @PositionIDStoremen nvarchar(500) = ISNULL(dbo.FN_GetConfigValue(@projectId,'PositionIdCsvForStoremen'),'0');

--combo mining and fitters on both in device:
DECLARE @MiningAndFittersComboIsOn int = (SELECT CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'MiningAndFittersComboIsOn'), '0') AS INT))

DECLARE @AnyoneIsAllowedToAuth int = (SELECT CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'AnyoneIsAllowedToAuth'), '0') AS INT))


if @DebugMode =1 
begin
SELECT @MiningAndFittersComboIsOn
end


DECLARE @OnlyGenericLogin int = ISNULL(	(select DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'HasOnlyGenericLoginUser')  ),0);

DECLARE @TrendAttributesLive int = IIF(@appDeploymentMode = 'stores',0,1)  --doddgy exclusion of stores, should put this back to a deployment mode config 1 --dbo.FN_IsLocal(@projectId);
--select dbo.fn_islocal(236)

IF @TrendAttributesLive =1 
BEGIN
DECLARE @tkmstrnd table (
TkmsPerShiftLast6Wks decimal NULL
,OperatorId int NULL)
--;WITH tkmsTrnd AS (
INSERT INTO @tkmstrnd
SELECT	TkmsPerShiftLast6Wks =IIF(SUM(denominator)=0,0,SUM(numerator)/SUM(denominator)), OperatorId --=99999
		--TkmsPerShiftLast6Wks =156,OperatorId= 0 		

				FROM [dbo].[View_KPI_SecondaryKPISummaryOperatorPrody_For_iPlod] 
						WHERE metricsort = 201 
						AND @TrendAttributesLive = 1
					AND Projectid = @projectId  --added to speed up hopefully
					--	--don't worry about projectid filter ... if running on central would want their work from whichever projec they were on anyway. on local, they would only get data for @operationId but shuld be fine
						GROUP BY OperatorId

--add TWIs one
DECLARE @twistrnd table (
TwisPerShiftLast6Wks decimal NULL
,OperatorId int NULL)
--;WITH tkmsTrnd AS (
INSERT INTO @twistrnd
SELECT	TwisPerShiftLast6Wks =IIF(SUM(denominator)=0,0,SUM(numerator)/SUM(denominator)), OperatorId --=99999
		--TkmsPerShiftLast6Wks =156,OperatorId= 0 		

				FROM [dbo].[View_KPI_SecondaryKPISummaryOperatorPrody_For_iPlod] 
						WHERE metricsort = 204
						AND @TrendAttributesLive = 1
					AND Projectid = @projectId  --added to speed up hopefully
					--	--don't worry about projectid filter ... if running on central would want their work from whichever projec they were on anyway. on local, they would only get data for @operationId but shuld be fine
						GROUP BY OperatorId


DECLARE @drillmTrnd table (
DrillmPerShiftLast6Wks decimal NULL
,OperatorId int NULL
,EquipTypeCode nvarchar(25) null)
--,drillmTrnd AS (
INSERT INTO @drillmTrnd
SELECT	DrillmPerShiftLast6Wks =IIF(   SUM(denominator)=0,0,SUM(numerator)/SUM(denominator)), OperatorId --=99999
			,EquipTypeCode =LEFT(EquipTypeCode,2)
		--TkmsPerShiftLast6Wks =156,OperatorId= 0 		
				FROM [dbo].[View_KPI_SecondaryKPISummaryOperatorPrody_For_iPlod] 
						WHERE metricsort = 202
						AND @TrendAttributesLive = 1
					AND Projectid = @projectId  --added to speed up hopefully
					--	--don't worry about projectid filter ... if running on central would want their work from whichever projec they were on anyway. on local, they would only get data for @operationId but shuld be fine
						GROUP BY OperatorId
						,LEFT(EquipTypeCode,2) --so uj is reported with UJs  

DECLARE @bogtTrnd table (
BogtPerShiftLast6Wks decimal NULL
,OperatorId int NULL)
--,EquipTypeCode nvarchar(25) null)

INSERT INTO @bogtTrnd
--),bogtTrnd AS (
SELECT	BogtPerShiftLast6Wks =IIF(   SUM(denominator)=0,0,SUM(numerator)/SUM(denominator)), OperatorId --=99999
		--	,EquipTypeCode =LEFT(EquipTypeCode,2)
		--TkmsPerShiftLast6Wks =156,OperatorId= 0 		
				FROM [dbo].[View_KPI_SecondaryKPISummaryOperatorPrody_For_iPlod] 
						WHERE metricsort = 203
						AND @TrendAttributesLive = 1
					AND Projectid = @projectId  --added to speed up hopefully
					--	--don't worry about projectid filter ... if running on central would want their work from whichever projec they were on anyway. on local, they would only get data for @operationId but shuld be fine
						GROUP BY OperatorId
					--	,LEFT(EquipTypeCode,2) --so uj is reported with UJs  

END 

		SELECT 	
			OperationID 
			, ProjectId =   @OrigProj 
			, EmployeeID 
			, EmployeeName = ISNULL(EmployeeName,'z_no name')
			, Firstname = ISNULL(Firstname,'z_no name')
			, LastName = ISNULL(LastName,'z_no name')
			, DisplayName = ISNULL(DisplayName,'z_no name') + CASE WHEN @MiningAndFittersComboIsOn = 1  AND @appDeploymentMode IN ('mining_fitters','induction') THEN ','+ cast(10*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int) as varchar)+','  --this takes precidence over Postiion stuff.
                             
                                                            WHEN @IsLive = 0 THEN ' ('+ CASE WHEN data.IsFitter  + data.IsSparkie >= 1 AND @appDeploymentMode IN('mining_fitters','induction') AND EmployeeId > 0 THEN ','+CAST(3*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int) AS varchar)+','
																														WHEN data.IsFitter  + data.IsSparkie = 0 AND @appDeploymentMode IN('mining_fitters','induction')  AND EmployeeId > 0 THEN ','+CAST(1*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int) AS varchar)+','
																												
                                                          	+')'
                                                             
																														ELSE AllowedTypeIdsCsv END
                                                            + case WHEN  @IsLive = 0 AND data.IsFitter  + data.IsSparkie >= 1 THEN ' .. Fitter' ELSE '' end
																													--	+'attr: '+data.AttributesJson  200-07-10
																	 ELSE '' END
			, CrewCode 
			, MinepointCode 
			, [Password] 
			, Email
			, DefaultTypeId = CASE WHEN @MiningAndFittersComboIsOn = 1  AND @appDeploymentMode IN ('mining_fitters','induction') THEN 10*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int)  --this takes precidence over Postiion stuff.
                              WHEN data.IsFitter + data.IsSparkie >= 1 AND @appDeploymentMode IN ('mining_fitters','induction')THEN 3*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int)

									      	    WHEN data.IsFitter  + data.IsSparkie = 0 AND @appDeploymentMode IN ('mining_fitters','induction') THEN 1*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int)

									          	ELSE DefaultTypeId END
			, AllowedTypeIdsCsv = CASE WHEN @MiningAndFittersComboIsOn = 1  AND @appDeploymentMode IN ('mining_fitters','induction') THEN  ','+CAST(10*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int)  AS varchar)+',' --this takes precidence over Postiion stuff.
                             
                              WHEN data.IsFitter  + data.IsSparkie >= 1 AND @appDeploymentMode IN('mining_fitters','induction') AND EmployeeId > 0 THEN ','+CAST(3*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int) AS varchar)+','
										          WHEN data.IsFitter  + data.IsSparkie = 0 AND @appDeploymentMode IN('mining_fitters','induction')  AND EmployeeId > 0 THEN ','+CAST(1*CAST(ISNULL(@TypeIdMultiplier  , 1)AS int) AS varchar)+','
          										--WHEN 
          									ELSE AllowedTypeIdsCsv END
			, LoginMsg
			, ImageFileName
			, PositionId
			, Position 
			, TravelMethod 
			, iPlodSettingsJson 
			, CanAuthorise = iif(@AnyoneIsAllowedToAuth = 1 AND data.EmployeeID > 0 , 1, CanAuthorise )  --2022-09-21
			, IsDeleted = 0
			, IsEnabled = CASE WHEN IsEnabled = 1 AND @appDeploymentMode <> 'ProcessPlant' AND data.IsMillRat = 1 THEN 0
							WHEN IsEnabled = 1 AND @OnlyGenericLogin =0 and @appDeploymentMode <> 'Stores' then 10 --set IsEnabled to be 10. -- only IsEnabled>=10 will show on login. IsEnabled>0 AND CanAuthorise >0 will show list on authorisation lists in app.
							 WHEN IsEnabled = 1 AND @OnlyGenericLogin =1 AND @appDeploymentMode ='servicesheets' AND data.IsFitter <> 1  THEN 0 --don't get anyone who isn't a fitter on service sheets
							 when IsEnabled = 1 AND  @appDeploymentMode ='Stores' AND data.[IsStoreman] <> 1  THEN 0  --for stores mode, don't send if not storeman
							 when IsEnabled = 1 AND  @appDeploymentMode ='Stores' AND data.[IsStoreman] = 1  THEN 10  --need to set to 10 if is storeman
							 WHEN IsEnabled = 1 AND @appDeploymentMode = 'ProcessPlant' AND data.IsMillRat = 1 THEN 1
							 
																--Manipulate this for keeping list of all fitters in service sheets, but constrain the login down to generics
								ELSE IsEnabled END
			, UserPermissions
			, OrderBy
			,AttributesJson --=''
		FROM (
			-- Main select.
			SELECT 
				OperationID = @operationId
				, ProjectId = @projectId
				, EmployeeID
				, EmployeeName
				, FirstName = FirstNames
				, LastName
				, DisplayName = LastName + ', ' + FirstNames 
				, CrewCode
				, MinePointCode
				, [Password] = CASE 
									--sets all sydney test project operators with password = 101.
									WHEN @ProjectID = 53 OR @IsLiveDB = 0 THEN '101' 
									ELSE COALESCE(dbo.FN_IsNullorEmptyorZero(PlodPassword,Null),MinepointCode) END 
				, Email = ''
				, DefaultTypeId = @DefaultTypeId  /*CASE WHEN @appDeploymentMode = 'CentralPrestarts' THEN 5
									ELSE 1  --ISNULL(cl.DefaultType,1) --INT derive out of PositionCode (need DefaultType field in the position table
									END */
				, AllowedTypeIdsCsv =   @AllowedTypeIdCsv    --  override this with some special handling per user postition?
				, LoginMsg = ''  --'Welcome to Iplod' --ability to deliver standard message to user, eg could be used for weekly safety topic or other.  
										--IF '' then don't display any popup.  used in conjunction with the customised messages from  View_WebbarAPI_OperatorInfo
				, ImageFileName = 'employee.png'   
				, PositionId
				, Position
				, TravelMethod
				-- Settings.
				, iPlodSettingsJson
				, CanAuthorise = CASE WHEN @PositionIDFItters LIKE '%,'+CAST(emps.PositionID AS varchar)+',%' OR emps.Supervisor = 1 THEN 1 ELSE 0 END 
				-- Flags.
				, IsEnabled = [Status] 
				, UserPermissions = --CASE WHEN @IsLiveDB = 0 THEN 1 ELSE 0 END  --everyone on test server is UserAdmin=1 (highest priviledges)  remove this on test server so we are testing same as live
									--+
									 CASE WHEN emps.OperationID IN (113, 21) THEN 2   --people who are on the central operations should be allowed to switch projects
										ELSE 0 END   
									--do we expand all users into this category for @IsCentralOnlyMode =1 ...?
									--Users have a UserPermissions bitwise flag, where :-
											--• 1 = Admin,
											--• 2 = ChangeProjectId,
											--• 4 = ?


				, OrderBy = ROW_NUMBER() OVER (ORDER BY LastName, FirstNames)
				, ModifiedOn=GETDATE()
				, IsFitter = CASE WHEN @PositionIDFItters LIKE '%,'+CAST(emps.PositionID AS varchar)+',%'  THEN 1 ELSE 0 end
                , IsStoreman = CASE WHEN @PositionIDStoremen LIKE '%,'+CAST(emps.PositionID AS varchar)+',%'  THEN 1 ELSE 0 end
				, IsSparkie = CASE WHEN @PositionIDSparkies LIKE '%,'+CAST(emps.PositionID AS varchar)+',%'  THEN 1 ELSE 0 END
				, IsMillRat = CASE WHEN @PositionIDMillRats LIKE '%,'+CAST(emps.PositionID AS varchar)+',%'  THEN 1 ELSE 0 END
				,AttributesJson = '[{"Key":"OperatorId","Value":'+CAST(emps.EmployeeID AS varchar)+'}'  --get the operatorId into the attributes for prestart calculations
											 +IIF(TkmsPerShiftLast6Wks IS NULL,'', ',{"Key":"TKMsPerActiveShift","Value":' + dbo.FN_FormatDecimalAsVarchar(TkmsPerShiftLast6Wks,0)  +'}')
											 +IIF(TwisPerShiftLast6Wks IS NULL,'', ',{"Key":"TWIsPerActiveShift","Value":' + dbo.FN_FormatDecimalAsVarchar(TwisPerShiftLast6Wks,1)  +'}')
											 +IIF(cb.DrillmPerShiftLast6Wks IS NULL,'', ',{"Key":"CBDrillmPerShift","Value":' + dbo.FN_FormatDecimalAsVarchar(cb.DrillmPerShiftLast6Wks,0)  +'}')
											 +IIF(uj.DrillmPerShiftLast6Wks IS NULL,'', ',{"Key":"UJDrillmPerShift","Value":' + dbo.FN_FormatDecimalAsVarchar(UJ.DrillmPerShiftLast6Wks,0)  +'}')
											 +IIF(pd.DrillmPerShiftLast6Wks IS NULL,'', ',{"Key":"PDDrillmPerShift","Value":' + dbo.FN_FormatDecimalAsVarchar(PD.DrillmPerShiftLast6Wks,0)  +'}')
											 +IIF(BogtPerShiftLast6Wks IS NULL,'', ',{"Key":"BogtPerActiveShift","Value":' + dbo.FN_FormatDecimalAsVarchar(BogtPerShiftLast6Wks,0)  +'}')
											 +(',{"Key":"IsGeneric","Value":' +  (SELECT CASE WHEN emps.EmployeeType = 'Generic' THEN '1' ELSE '0' END) +'}')
											 +']'

			from (select [ProjectID]
			,[EmployeeID]
			,[EmployeeName]
			,[PositionID]
			,[FirstNames]
			,[LastName]
			,[EmployeeType]
			,[OperationID]
			,[Supervisor]
			,[SisterOpID_a]
			,[SisterOpID_b]
			,[Status]
			,[CrewCode]
			,[MinePointCode]
      ,PlodPassword
			,[Position]
			,[TravelMethod]
			,[iPlodSettingsJson]
			from 
			dbo.tbl_DBT_Employees
			union all 
			select [ProjectID]
			,[EmployeeID]
			,[EmployeeName]
			,[PositionID]=[ec].[EmpClassID]
			,[FirstNames]
			,[LastName]
			,[EmployeeType]
			,[OperationID]
			,[Supervisor]=0
			,[SisterOpID_a]=0
			,[SisterOpID_b]=0
			,[Status]=oe.[Active]
			,[CrewCode]=[oe].[CrewID]
			,[MinePointCode]
      ,oe.PlodPassword
			,[Position]
			,[TravelMethod]=null
			,[iPlodSettingsJson]=''
			from 
			dbo.[tbl_DBT_Roster_OtherEmployees] as oe
				left join [dbo].[tbl_SYS_EmpClass] as ec
				on oe.[Position] = ec.[EmpClassCode]
			)AS emps --LEFT OUTER JOIN
			--dbo.tbl_SYS_EmpClass AS cl ON emps.PositionID = cl.EmpClassID
			--get the TKMs per active shift one
			LEFT JOIN /*(SELECT TkmsPerShiftLast6Wks =IIF(SUM(denominator)=0,0,SUM(numerator)/SUM(denominator)), OperatorId 
						FROM [dbo].[View_KPI_SecondaryKPISummary_For_iPlod] 
						WHERE metricsort = 201 
						AND Projectid = @projectId  --added to speed up hopefully
						--don't worry about projectid filter ... if running on central would want their work from whichever projec they were on anyway. on local, they would only get data for @operationId but shuld be fine
						GROUP BY OperatorId
						)*/
						@tkmsTrnd AS tkms
							ON emps.EmployeeID = tkms.OperatorId
			LEFT JOIN @twisTrnd AS twis
							ON emps.EmployeeID = twis.OperatorId
			LEFT JOIN 	@BogtTrnd AS bogt
							ON emps.EmployeeID = bogt.OperatorId
			LEFT JOIN @drillmTrnd AS uj 
							ON uj.OperatorId =emps.EmployeeID
							AND uj.EquipTypeCode='uj'

			LEFT JOIN @drillmTrnd AS cb
							ON cb.OperatorId =emps.EmployeeID
							AND cb.EquipTypeCode='cb'

			LEFT JOIN @drillmTrnd AS pd
							ON pd.OperatorId =emps.EmployeeID
							AND pd.EquipTypeCode='pd'

			WHERE  (OperationID = @operationId 
					OR SisterOpID_a = @operationId 
					OR SisterOpID_b = @operationId --add sister sites
					OR (emps.OperationID IN (113, 21)   --pho or pms
							AND @IsCentralOnlyMode =1) --get people from pms or pho when it is a central only mode.
							AND NOT ( emps.ProjectID =53  AND @IsLive = 1)
							) 
							AND emps.Status >0

UNION ALL

			-- Test Users, test server only
			SELECT 
				OperationID = @operationId
				, ProjectId = @OrigProj--@projectId
				, EmployeeID = -2
				, EmployeeName = '_TestUser_01 - no msg; permissions=2'
				, Firstname ='_TestUser'
				, LastName = '_01'
				, DisplayName = '_TestUser - no msg; permissions=2'
				, CrewCode = 6
				, MinepointCode = '-11'
				, [Password]  = dbo.udfAdminPassword('generic')
				, Email = ''
				, DefaultTypeId =  @DefaultTypeId 
				, AllowedTypeIdsCsv = ',1,3,4,5,6,7,8,'
				, LoginMsg = ''
				, ImageFileName = 'employeeadmin.png'
				, PositionId = 0
				, Position = 'Admin'
				, TravelMethod = ''
				, iPlodSettingsJson = ''
				, CanAuthorise = 0
				, IsEnabled = 10
				, UserPermissions = 2
				, OrderBy = 1
				, ModifiedOn = GETDATE()
				, IsFitter = 0
				  , IsStoreman =0
				, IsSparkie= 0
				, IsMillRat= 0
				, AttributesJson = ''
				WHERE @IsLive = 0

UNION ALL

			-- Test Users, test server only
			SELECT 
				OperationID = @operationId
				, ProjectId =@OrigProj-- @projectId
				, EmployeeID = -3
				, EmployeeName = '_TestUser_02 - no msg; permissions=0'
				, Firstname ='_TestUser'
				, LastName = '_02'
				, DisplayName = '_TestUser - no msg; permissions=0'
				, CrewCode = 6
				, MinepointCode = '-111'
				, [Password]  =  dbo.udfAdminPassword('generic')
				, Email = ''
				, DefaultTypeId =  @DefaultTypeId 
				, AllowedTypeIdsCsv = ',1,3,4,5,6,7,8,'
				, LoginMsg = ''
				, ImageFileName = 'employeeadmin.png'
				, PositionId = 0
				, Position = 'Admin'
				, TravelMethod = ''
				, iPlodSettingsJson = ''
				, CanAuthorise = 0
				, IsEnabled = 10
				, UserPermissions = 0
				, OrderBy = 1
				, ModifiedOn = GETDATE()
				, IsFitter = 0
				  , IsStoreman=0
				, IsSparkie = 0
				, IsMillRat= 0
				,AttributesJson =''
				WHERE @IsLive = 0


			UNION ALL

			-- generic user for certain deployments
			SELECT 
				OperationID = @operationId
				, ProjectId = @OrigProj 
				, EmployeeID = -4
				, EmployeeName = 'Login for '+@appDeploymentMode + ' tablet (password= 101)' --'Admin'
				, Firstname = 'Admin'
				, LastName = 'User'
				, DisplayName = 'Login for '+@appDeploymentMode + ' tablet (password= 101)'
				, CrewCode = 6
				, MinepointCode = '-1'
				, [Password]   = dbo.udfAdminPassword('generic')
				, Email = ''
				, DefaultTypeId =  @DefaultTypeId 
				, AllowedTypeIdsCsv = ',1,3,4,5,6,7,8,9,'
				, LoginMsg = ''
				, ImageFileName = 'employeeadmin.png'
				, PositionId = 0
				, Position = 'Admin'
				, TravelMethod = ''
				, iPlodSettingsJson = ''
				, CanAuthorise = 0
				, IsEnabled = 10
				, UserPermissions = 1
				, OrderBy = 99999999
				, ModifiedOn = GETDATE()
				, IsFitter = 1
				  , IsStoreman= 0
				, IsSparkie = 0
				, IsMillRat= 0
				,AttributesJson =''
				WHERE @OnlyGenericLogin =1
			UNION ALL

			-- Admin user.
			SELECT 
				OperationID = @operationId
				, ProjectId = @OrigProj-- @projectId
				, EmployeeID = -1
				, EmployeeName = 'Admin'
				, Firstname = 'Admin'
				, LastName = 'User'
				, DisplayName = 'Admin'  + @dbname
				, CrewCode = 6
				, MinepointCode = '-1'
				, [Password] = dbo.udfAdminPassword('admin')
				, Email = ''
				, DefaultTypeId =  @DefaultTypeId 
				, AllowedTypeIdsCsv = ',1,3,4,5,6,7,8,9,'
				, LoginMsg = ''
				, ImageFileName = 'employeeadmin.png'
				, PositionId = 0
				, Position = 'Admin'
				, TravelMethod = ''
				, iPlodSettingsJson = ''
				, CanAuthorise = 0
				, IsEnabled = 10
				, UserPermissions = 1
				, OrderBy = 99999999
				, ModifiedOn = GETDATE()
				, IsFitter = 0
				  , IsStoreman=1
				, IsSparkie = 0
				, IsMillRat= 1
				,AttributesJson ='[{"Key":"OperatorId","Value":'+CAST(99999 AS varchar)+'}'  --get the operatorId into the attributes for prestart calculations
											+',{"Key":"TKMsPerActiveShift","Value":' +  '155' +'}'
											+',{"Key":"TWIsPerActiveShift","Value":' +  '4.3' +'}'										 +',{"Key":"CBDrillmPerShift","Value":' + '150'  +'}'
											 + ',{"Key":"UJDrillmPerShift","Value":' + '666'  +'}'
											 +  ',{"Key":"PDDrillmPerShift","Value":' + '236'  +'}'
											 + ',{"Key":"BogtPerActiveShift","Value":' + '1232'  +'}'
											+']'
		) AS data
		WHERE (data.EmployeeID = -1 OR (data.IsMillRat  = 1 AND @appDeploymentMode = 'ProcessPlant') OR @appDeploymentMode <> 'ProcessPlant')
		AND not (@IsTempDeploymentModeToken = 1 AND @TempTokenIsOutOfDate = 1)  --2022-04-07
    --WHERE (ModifiedOn > @FromDate 
			--	OR @isPurge = 1)
	END
END

-- Get the latest system error.
SELECT @Error = @@ERROR WHERE @Error = 0
IF (@Error <> 0)
BEGIN
	RETURN @Error
END

-- Finish now.
RETURN 0
GO
PRINT N'Altering [dbo].[View_ShiftSummary_ProdDrillHistory]'
GO
ALTER view [dbo].[View_ShiftSummary_ProdDrillHistory]
as
	/*
	2021-06-03 ts create
	SELECT * FROM dbo.[View_ShiftSummary_ProdDrillHistory] where projectid = 259 and pvtkey like '399_202106030700DS_12956_1%'

	SELECT * FROM syn_DWH_iPlodStagingTable where datastoreid = '399_202106030700DS_12956_1' order by detailid,sequence,inputtype,inputid

	2021-06-04 ts ... added actual reason
	2021-06-09 ts .. changed so it is date first
	2021-07-07 ts ... optimiations: 
							.. {not large change} where exists on actreason in [tbl_DBT_ActReasonInputLink]
							.. {YES! halved to 4 secs} input type on the joins
							.. {another second I think} join all the jaz before union
							.. {not worse}  remove unwanted fields
					.. still pulling huge number of rows on the inital stagined edited hit...
	2021-07-09 ts ... put no locks on the tables.
	2021-07-28 ts ... {I think this made it longer, but less cpu on teh sort. probably should revert this.}   put the Pvt fields derivations further up 
						{YES!! this droppd 4secs of the full ui call} try pulling out the rownums temporarily
						(put this row num sorts up into uigroupgroup proc)
			next thing to try: get the ips hit to be correct row count!
			<<this needs to deploy with alter on groupgroupg proc>>
	2021-08-18 ts ... fix for nulls on text

--test end use:
DECLARE @isPurge AS INT    --started out at 20secs on manage-repo-test 27/7/2021 down to 16secs after shifting the row nums up to gropugropu proc
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =259,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=2,@FromDate='', @isPurge = @isPurge OUTPUT
 SELECT @isPurge AS isPurge


	calls like this in iplod setup proc:

						   select UIGroupGroupDetailId 
						  , UIGroupGroupDetailType 
						  , UIGroupGroupDetailFilterCsv 
						  , UIGroupGroupDetailFilterParentCsv
						  , TextId 
						  , [Text]
						  , Detail  
						  , Group1
						  , Group2
						  , IsEnabled 
						  , OrderBy = TextId
						  , ImageFileName 
						  ,AttributesJson

						FROM
						 [dbo].[View_ShiftSummary_ProdDrillHistory]
						WHERE 259 = ProjectId
						AND date >  DATEADD(DAY, - 7,'2021-07-07')


	*/

	select 
		 UIGroupGroupDetailId = 'ProdDrillHistory_' --+ cast(row_number() over (order by date,shift, pvt.LocationCode,  pvt.EquipmentCode,pvt.PvtKey  ) as varchar(20))
			, UIGroupGroupDetailType = 'ProdDrillHistory_1'
			, UIGroupGroupDetailFilterCsv = ''
			, UIGroupGroupDetailFilterParentCsv = ''
			, TextId =  1--cast(row_number() over (order by date,shift,  pvt.LocationCode,  pvt.EquipmentCode ,pvt.PvtKey ) as varchar(20))
			, [Text] = isnull( pvt.[Production Drilling Reason],'') 
								+' > ' + iif(pvt.[Rings - text] is null,'','Ring:' +isnull(pvt.[Rings - text],''))
								+ ' > Hole:' + isnull(pvt.[Hole ID],'')
								+ ' Diam='+isnull(pvt.[Production Drilling Diameter],'')
								+ dbo.FN_MarkupFullHtml(--' Drillm='+
																isnull(pvt.Drillm,''),1,'black','')
								+ '  ' +  dbo.FN_MarkupFullHtml_v2( isnull(pvt.CommentsCheck,''),0,1,'black','') 
			, Detail = '' 
			, Group1 = cast(Date as varchar(20)) + ' - ' + Shift  + ' - '+ EquipmentCode 
			, Group2 = pvt.EmployeeName+ ' - ' + pvt.LocationCode + ' - ' + pvt.ReasonDescription
			--, Group1 = pvt.LocationCode + ' - '+ EquipmentCode 
			--, Group2 = pvt.EmployeeName+ ' - ' + cast(Date as varchar(20)) + ' - ' + Shift + ' - ' + pvt.ReasonDescription

				----Format time nicely
				--CASE WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 3 THEN 
				-- '0' + LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),1)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2) --+ ' Hrs' 
				-- WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 2 THEN 
				--  '00' +':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
				--  ELSE 
				--   LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
				--   END

				--   + ' - ' + r.ReasonDescription
				--   + ' #' + CAST(s.Sequence AS VARCHAR(10))
			, IsEnabled = 1
			, OrderBy =1
			, ImageFileName = ''
			,AttributesJson=''
			, pvt.ProjectID
			,pvt.PvtKey
			,pvt.Date
			,shift, pvt.LocationCode,  pvt.EquipmentCode
			--SELECT * 
			from 

			(select 
			s.Projectid
			,s.EquipmentCode
			,locationcode
			,s.EmployeeName
			,s.ReasonDescription
			,s.Date
			, s.Shift
			, s.CommentsCheck
			, PvtKey --= s.DataStoreID+ '_' + cast(s.DetailID as varchar) + '_' + cast(s.Sequence as varchar)
			, Pvt_FieldNames /*= --get the ones from teh tables rather than forelabel so this works everywhere!
							case when s.InputType like '%attr%' then s.AttTypeDesc
								when s.InputType like '%stat%' then s.StatisticCode
								else '' end*/
			, Pvt_Value /*= case when s.InputType = 'attrlist' then s.AttributeDescription 
								else cast(isnull(s.InputValue,'') as varchar(255)) + iif(s.InputType like '%stat%' and s.InputID =6,'m','')--join in units maybe?
									end
							+ ' '+ isnull(s.InputComment,'')*/
			from (
							select --UploadDateTime, 
								DetailID, Date, Shift, OperatorID, s.InputType, s.InputID, InputValue--, RevisedValue
								, CommentsCheck, EquipmentID, ActivityReasonID, Material, Location--, Destination
								, CrewID--, Offsider, GroundCond, LoadedFrom, BogFrom, BogTo, ClientDelay, Damage
								, StartTime, EndTime--, s.ProfileID
								, s.ProjectID, DataStoreID--, LocSource, LocDest, ImportStatus, RelatedEquipment
								, Sequence, ConsumableProjectID, InputTimestamp, SupervisorComments--, Reviewed, ParentTask, s.EditedBy, ChangeLog
								, s.Type, InputComment--, RefNo, ReviewedBy, FeedbackAdvice, s.ModifiedOn, LocalStagingID, OrigStagingID, InputPhoto, InputAuth, InputAuthId, IsDeleted
								, TaskHeaderId, StagingId 
							    ,attpe.AttTypeDesc, st.StatisticCode, att.AttributeDescription ,r.ReasonDescription,e.EmployeeName,locationcode,eq.EquipmentCode
								, Pvt_FieldNames = --get the ones from teh tables rather than forelabel so this works everywhere!
													case when s.InputType like '%attr%' then attpe.AttTypeDesc
														when s.InputType like '%stat%' then st.StatisticCode
														else '' end
							, Pvt_Value = case when s.InputType = 'attrlist' then att.AttributeDescription 
											else cast(isnull(s.InputValue,'') as varchar(255)) + iif(s.InputType like '%stat%' and s.InputID =6,'m','')--join in units maybe?
												end
											+ ' '+ isnull(s.InputComment,'')
											, PvtKey = s.DataStoreID+ '_' + cast(s.DetailID as varchar) + '_' + cast(s.Sequence as varchar)
							from --this is fresh from iplod into WRK
							   [dbo].[FN_Iplod_TransformFromWRK_DraftNoLock](0 ,  getdate() -1
													 ,getdate(),  2, 50  --get saved or 99 just in case they haven't been imported through yet.
													 ,1
													 ,0)  as s 
													 left outer join 
																		 dbo.tbl_DBT_Employees as e with (nolock)		on s.OperatorID = e.EmployeeID left outer join 
																		 dbo.tbl_SYS_Equipment as eq with (nolock)	 on s.EquipmentID = eq.EquipmentCodeID 	left join 

																		 dbo.tbl_DBT_Location as loc with (nolock)	 on s.Location = loc.LocationID	left join 
																		 dbo.tbl_SYS_ActivityReasonLink as ar with (nolock)	 on s.ActivityReasonID = ar.ActivityreasonLinkID left join
																		 dbo.tbl_SYS_Reason as r  with (nolock)	on r.ReasonID = ar.ReasonID left join 
																		 dbo.tbl_SYS_Attribute as att  with (nolock)	on s.InputValue = cast(att.AttributeID as varchar(10)) and s.InputType like 'att%' --AND s.ProjectID = att.ProjectID 
																		 left join dbo.tbl_SYS_AttributeType as attpe with (nolock)	 on s.InputID = attpe.AttTypeID  and [s].[InputType] like '%attr%'
																		left join dbo.tbl_SYS_Statistic as st  with (nolock)	on s.InputID = st.StatisticID and [s].[InputType] like '%stat%'
																		--not needed yet? left JOIN dbo.tbl_SYS_Questions AS q ON s.InputID = q.QuestionID
																		left join
																		 [dbo].[tbl_DBT_ActReasonInputLink] as i  with (nolock)	
																				on i.ActReasonLinkID = s.ActivityReasonID and s.InputID = i.InputID
																				  and  i.ProjectID = s.ProjectID --changed to Project1 (was join to = s.ProjectID)
																				  and s.InputType = i.InputType 
																				  and exists (select processid from [dbo].[tbl_SYS_ActivityReasonLink] as arls
																									where i.[ActReasonLinkID] = arls.[ActivityreasonLinkID]
																									and [arls].[ProcessID] =7) --same as below on the where clause. results in less churn in [tbl_DBT_ActReasonInputLink]



																		 where 
																		 ar.ProcessID = 7
																		 and not (s.InputID =7 and s.InputType = 'stat')
																		 and ( s.InputType like '%attr%' or s.InputType like '%stat%' )--add q type in need be
																		-- AND s.InputID = 6 AND s.InputType LIKE '%stat%'
																		-- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
																		 --((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))
																		-- AND s.ProjectID = 313
																		--shift to config call from the proc might be quick enough?) AND date >= GETDATE() - 7
																		 --AND i.ForeLabel IS NOT NULL

							union all 		
							--this is from actual stagingedted.
								select 
								DetailID, Date, Shift, OperatorID, s.InputType, s.InputID, InputValue--, RevisedValue

								, CommentsCheck, EquipmentID, ActivityReasonID, Material, Location--, Destination
								, CrewID--, Offsider, GroundCond, LoadedFrom, BogFrom, BogTo, ClientDelay, Damage
								, StartTime, EndTime--, s.ProfileID

								, s.ProjectID, DataStoreID--, LocSource, LocDest, ImportStatus, RelatedEquipment
								, Sequence, ConsumableProjectID, InputTimestamp, SupervisorComments--, Reviewed, ParentTask, s.EditedBy, ChangeLog
								, s.Type, InputComment--, RefNo, ReviewedBy, FeedbackAdvice, s.ModifiedOn, LocalStagingID, OrigStagingID, InputPhoto, InputAuth, InputAuthId, IsDeleted
								, TaskHeaderId, StagingId 
								,attpe.AttTypeDesc, st.StatisticCode, att.AttributeDescription ,r.ReasonDescription,e.EmployeeName,locationcode,eq.EquipmentCode
								, Pvt_FieldNames = --get the ones from teh tables rather than forelabel so this works everywhere!
													case when s.InputType like '%attr%' then attpe.AttTypeDesc
														when s.InputType like '%stat%' then st.StatisticCode
														else '' end
							, Pvt_Value = case when s.InputType = 'attrlist' then att.AttributeDescription 
											else cast(isnull(s.InputValue,'') as varchar(255)) + iif(s.InputType like '%stat%' and s.InputID =6,'m','')--join in units maybe?
												end
											+ ' '+ isnull(s.InputComment,'')
											, PvtKey = s.DataStoreID+ '_' + cast(s.DetailID as varchar) + '_' + cast(s.Sequence as varchar)
							from dbo.syn_DWH_iPlodStagingTable	as s with (nolock)
																		left outer join 
															 dbo.tbl_DBT_Employees as e with (nolock)	on s.OperatorID = e.EmployeeID left outer join 
															 dbo.tbl_SYS_Equipment as eq with (nolock)	 on s.EquipmentID = eq.EquipmentCodeID 	left join 

															 dbo.tbl_DBT_Location as loc  with (nolock)	on s.Location = loc.LocationID	left join 
															 dbo.tbl_SYS_ActivityReasonLink as ar  with (nolock)	on s.ActivityReasonID = ar.ActivityreasonLinkID left join
															 dbo.tbl_SYS_Reason as r  with (nolock)	on r.ReasonID = ar.ReasonID left join 
															 dbo.tbl_SYS_Attribute as att  with (nolock)	on s.InputValue = cast(att.AttributeID as varchar(10)) and s.InputType like 'att%' --AND s.ProjectID = att.ProjectID 
															 left join dbo.tbl_SYS_AttributeType as attpe  with (nolock)	on s.InputID = attpe.AttTypeID  and [s].[InputType] like '%attr%'
															left join dbo.tbl_SYS_Statistic as st with (nolock)	 on s.InputID = st.StatisticID and [s].[InputType] like '%stat%'
															--not needed yet? left JOIN dbo.tbl_SYS_Questions AS q ON s.InputID = q.QuestionID
															left join
															 [dbo].[tbl_DBT_ActReasonInputLink] as i  with (nolock)	
																	on i.ActReasonLinkID = s.ActivityReasonID and s.InputID = i.InputID
																	  and  i.ProjectID = s.ProjectID --changed to Project1 (was join to = s.ProjectID)
																	  and s.InputType = i.InputType 
																	  and exists (select processid from [dbo].[tbl_SYS_ActivityReasonLink] as arls
																						where i.[ActReasonLinkID] = arls.[ActivityreasonLinkID]
																						and [arls].[ProcessID] =7) --same as below on the where clause. results in less churn in [tbl_DBT_ActReasonInputLink]



															 where 
															 ar.ProcessID = 7
															 and not (s.InputID =7 and s.InputType = 'stat')
															 and ( s.InputType like '%attr%' or s.InputType like '%stat%' )--add q type in need be
															-- AND s.InputID = 6 AND s.InputType LIKE '%stat%'
															-- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
															 --((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))
															-- AND s.ProjectID = 313
															--shift to config call from the proc might be quick enough?) AND date >= GETDATE() - 7
															 --AND i.ForeLabel IS NOT NULL

					)	 as s 
				--	left outer join 
				-- dbo.tbl_DBT_Employees as e	on s.OperatorID = e.EmployeeID left outer join 
				-- dbo.tbl_SYS_Equipment as eq on s.EquipmentID = eq.EquipmentCodeID 	left join 

				-- dbo.tbl_DBT_Location as loc on s.Location = loc.LocationID	left join 
				-- dbo.tbl_SYS_ActivityReasonLink as ar on s.ActivityReasonID = ar.ActivityreasonLinkID left join
				-- dbo.tbl_SYS_Reason as r on r.ReasonID = ar.ReasonID left join 
				-- dbo.tbl_SYS_Attribute as att on s.InputValue = cast(att.AttributeID as varchar(10)) and s.InputType like 'att%' --AND s.ProjectID = att.ProjectID 
				-- left join dbo.tbl_SYS_AttributeType as attpe on s.InputID = attpe.AttTypeID  and [s].[InputType] like '%attr%'
				--left join dbo.tbl_SYS_Statistic as st on s.InputID = st.StatisticID and [s].[InputType] like '%stat%'
				----not needed yet? left JOIN dbo.tbl_SYS_Questions AS q ON s.InputID = q.QuestionID
				--left join
				-- [dbo].[tbl_DBT_ActReasonInputLink] as i 
				--		on i.ActReasonLinkID = s.ActivityReasonID and s.InputID = i.InputID
				--		  and  i.ProjectID = s.ProjectID --changed to Project1 (was join to = s.ProjectID)
				--		  and s.InputType = i.InputType 
				--		  and exists (select processid from [dbo].[tbl_SYS_ActivityReasonLink] as arls
				--							where i.[ActReasonLinkID] = arls.[ActivityreasonLinkID]
				--							and [arls].[ProcessID] =7) --same as below on the where clause. results in less churn in [tbl_DBT_ActReasonInputLink]



				-- where 
				-- ar.ProcessID = 7
				-- and not (s.InputID =7 and s.InputType = 'stat')
				-- and ( s.InputType like '%attr%' or s.InputType like '%stat%' )--add q type in need be
				---- AND s.InputID = 6 AND s.InputType LIKE '%stat%'
				---- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
				-- --((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))
				---- AND s.ProjectID = 313
				----shift to config call from the proc might be quick enough?) AND date >= GETDATE() - 7
				-- --AND i.ForeLabel IS NOT NULL
				 ) as tbl

					pivot
					(
						max(Pvt_Value)
							for Pvt_FieldNames in (
							[Production Drilling Reason],
								--	[GroutType],
									[Drillm],
									[BreakThrough],
									[Rings - text],
									[Hole ID],
									[Production Drilling Diameter]

								)
										) as pvt
GO
PRINT N'Altering [dbo].[View_ShiftSummary_MaintHistory_LiveOnly]'
GO
ALTER view [dbo].[View_ShiftSummary_MaintHistory_LiveOnly]
AS
	/*
	select * from [dbo].[View_ShiftSummary_PrestartHistory_GetLiveToo] where projectid = 313 and date >= '2020-10-15'

	--call from uigropugroup:
	select * from View_ShiftSummary_MaintHistory_GetLiveToo
	where
	Date  > DATEADD(DD,-1*7,GETDATE())  --replace getdate with older date for test server
					AND [Include] = 1 --AND InputType NOT LIKE 'Stat%'  -- Temporarily made it -100 instead of -7
						AND InputType <>'camera'  --don't take photos back down!
						--AND NOT(Comments ='' AND Answer = '')  
						AND ProjectID = 242

						AND comments IS NOT NULL
						AND comments <> ''

	actual ui group group  4 secs on PBWFinalQA (may not have brought any history though)
	DECLARE @isPurge AS INT  
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =242,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=2,@FromDate='', @isPurge = @isPurge OUTPUT
 SELECT @isPurge AS isPurge


	2019-02-20 TS ... added location field for peak
	2019-04-15 TS ... added OperatorID 
	2019-08-15 TS ... added "inputId" for further filtering
	2020-08-21 ts ... change to special handign link table
	2020-08-24 CA ... removed fuel readings by adding AND NOT (InputType = 'attrlist' AND prstinputid = 288) 
	2020-11-03 ts ... join in live data from wrk tables.

	MIDDLE SECTION (FROM WRK TABLES) HARDCODED TO RB


	TODO:
	take the guts out of View_ShiftSummary_PrestartHistory and put it into here in the first set.
	rename this view to be View_ShiftSummary_PrestartHistory
	make new view called View_API_PrestartHistory, it identical in script to the original View_ShiftSummary_PrestartHistory but is a table on local
	union the View_API_PrestartHistory in too
	View_API_PrestartHistory has join to dbo.tbl_DBT_WebbarLocalInstances.HasExternalLocalDb only grabs data if this is =1
	>> otherwise normal local data will be doubled up

		This view is for plod UI Group Group, to roll prestart history and maint history in the one call. Has a flag field for working out what is prestart history.

		2021-01-19 CA create.
		2021-01-20 CA optimise query. Made comments varchar200

		2021-01-21 ts ... various optimsations
						... shift the tg_HasFaults logic to the include so the date filter is prosecuted onto stagingedited first. and the join to tg has to be left
		2021-02-09 ts ... split this onto live only and stagingonly
						... add backstop date filter
		2021-02-10 ts ... fix extra rows on maint
						.. set stagingid, displayorder, prstInputId to be 0. so we can just use distinct to kill out rows that are not of interest. 
		2021-02-10 ts ... add back the 7 day prestart view (is a table on local)
		2021-02-10 ts ... make into Live only view
						... added saved tasks (status 50
		2021-09-16 ts .. specify IsPrestart properly, unsure why this wasn't happening?

		




optimisation TODOs:
		not sure about teh massive row count out of ips, seems to have gone differently on live.
			actually maybe check the file called "mainthistory called from ..." I think it is different query plan
			it is the Text Is not null on the final filter! shift it to "Include" 
		need to try and include feedbackadvice (i think) in an index somewhere as it is forcing a key lookup



	*/
			  SELECT tbl1.Date
                   , tbl1.ProjectID
                   , tbl1.GroupingField
                   , tbl1.Shift
                   , tbl1.Operator
                   , tbl1.Time
                   , tbl1.EquipmentID
                   , tbl1.EquipID
                   , tbl1.DisplayOrder
                   , tbl1.TaskName
                   , tbl1.[Prestart Question]
                   , tbl1.Answer
                   , tbl1.IntolerableValue
                   , tbl1.NotificationText
                   , tbl1.Include
                   , tbl1.Comments
                   , tbl1.RefNo
                   , tbl1.InputType
                   , tbl1.StagingId
                   , tbl1.FeedbackAdvice
                   , tbl1.LocationId
                   , tbl1.OperatorID
                   , tbl1.prstInputId
                   , tbl1.IsPrestartHist 
			  from (

		/**********
		Original View_ShiftSummary_PrestartHistory
		***********/

	--/********
	--New bit for v3 tables
	--THIS IS HARDCODED TO RB IN THE FUNCTION CALL
	--This was to reduce call time, from 10s to 3s.
	--**********/

 SELECT DISTINCT 
			   Date,
			   proj.ProjectID,
			   'NotificationText' AS 'GroupingField',   -- this is not displayed, tells you which field to group by on the page
				 Shift,
				 e.EmployeeName  AS 'Operator',

				------- Displaying Time correctly instead of just an int.
				  CASE WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 3 THEN 
				 '0' + LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),1)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2) --+ ' Hrs' 
				 WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 2 THEN 
				  '00' +':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
				  ELSE 
				   LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
				   END
				  AS 'Time'
				----------- End time stuff
				,EquipmentID
				 ,eq.EquipmentCode AS 'EquipID',

				 i.DisplayOrder,
				   [TaskName] = '',
				 CASE WHEN s.InputType LIKE 'Q%' THEN q.QuestionText ELSE i.ForeLabel END AS 'Prestart Question',
				 CASE WHEN s.inputid = 102 AND s.inputtype = 'attrinput' THEN ':' ELSE s.InputValue END AS 'Answer',
				 q.intolerablevalue,

				 ISNULL(q.category, 'Comments / Hour Meters')  AS NotificationText

				 ,[Include]= CASE --global exlusions
									WHEN (s.inputtype = 'stat' AND s.inputid = 7 AND ISNULL(tg.HasFaults,0) = 1) THEN 0 --don't get duration for prestarts
									WHEN ISNULL(tg.IsTWI,0) = 1 THEN 0 --no twis
										
												--specials for prestart history							
												 WHEN ISNULL(tg.HasFaults,0) = 1 THEN 
																CASE WHEN (s.InputValue = q.intolerablevalue OR s.InputType NOT LIKE 'Q%')  
																			AND NOT(InputValue = '' AND s.InputType NOT LIKE 'Q%')
																			AND NOT(s.inputtype LIKE 'stat%')
																		THEN 1 ELSE 0 
																	END 
										
										--maint history inclusions:
										WHEN s.type  LIKE 'Maint%' AND ar.ActivityID IN (4,5) and not (ISNULL(s.InputComment,'') ='' and isnull(s.CommentsCheck,'') = '') --2021-02-10 don't get ones with no comments. maybe do get ref no ones thou?
										then 1
											
											ELSE 0  
												END 
				 ,CASE WHEN s.inputid = 102 AND s.inputtype = 'attrinput' THEN s.InputValue ELSE ISNULL(s.InputComment,'') + '  '+ISNULL(s.CommentsCheck,'') END AS 'Comments'
				  ,s.RefNo
				 ,s.InputType
				 ,StagingID 
				 ,FeedbackAdvice=isnull(FeedbackAdvice,'')
				 ,LocationId = dbo.FN_IsNullorEmpty(s.Location,0)
				,s.OperatorID
				,prstInputId = s.InputID
				,[IsPrestartHist] = case when  ISNULL(tg.HasFaults,0) = 1 then  1 else 0 end --use same logic as the non-live one. unsure why it was hard coded?
									--1

				--get from live data
				FROM 	dbo.tbl_DBT_Project AS proj WITH (NOLOCK)
					CROSS APPLY [dbo].[FN_Iplod_TransformFromWRK](proj.ProjectID ,  GETDATE() -1
										 ,GETDATE(),  99,  50
										 ,1) AS s  
				LEFT OUTER JOIN 
				 dbo.[tbl_SYS_Questions] AS q WITH (NOLOCK) ON s.inputID = q.QuestionID AND s.InputType LIKE 'Q%' LEFT OUTER JOIN
				 dbo.tbl_DBT_Employees AS e	 WITH (NOLOCK) ON s.OperatorID = e.EmployeeID LEFT OUTER JOIN 
				 dbo.tbl_SYS_Equipment AS eq WITH (NOLOCK) ON s.EquipmentID = eq.EquipmentCodeID 	LEFT JOIN 
				 [dbo].[tbl_DBT_ActReasonInputLink] AS i WITH (NOLOCK) ON i.ActReasonLinkID = s.ActivityReasonID AND s.InputID = i.InputID
						  AND  i.ProjectID =1 --changed to Project1 (was join to = s.ProjectID)
						  AND (s.InputType = i.InputType OR s.InputType LIKE 'stat%' AND i.InputType LIKE 'stat%') 
				  --this will cause historical issues if changing between StatEquip and Stat 
				  --... could be dealt with by scripting all historical Staging data back to StatEquip
						INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','') AS tg
						ON s.ActivityReasonID = tg.ActivityReasonId
						--AND tg.HasFaults  =1
				LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS ar  WITH (NOLOCK)
					ON s.ActivityReasonID = ar.ActivityreasonLinkID
				LEFT OUTER JOIN dbo.tbl_SYS_Reason AS reas  WITH (NOLOCK)
					ON reas.ReasonID = ar.ReasonID
				 WHERE --s.InputType like 'Q%' AND
				 NOT(s.inputtype = 'stat' AND s.inputid = 7)
				 AND NOT (s.InputType = 'attrlist' AND s.inputid = 288) 
				-- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
				 --((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))
				--we already have this filter in the above function: AND NOT EXISTS (SELECT ist.TaskHeaderId FROM dbo.tbl_DWH_iPlodStagingTableEdited AS ist	
											--WHERE ist.TaskHeaderId = s.TaskHeaderId
											--	AND ist.sessionid = 
				--brought the "include" logic down to here, might speed it up?
				AND  (s.InputValue = q.intolerablevalue OR s.InputType NOT LIKE 'Q%') 
				AND NOT(InputValue = '' AND s.InputType NOT LIKE 'Q%') -- THEN 1 ELSE 0 END AS 'Include'

		 


				 ) 
				 as tbl1 
				 where [Include] = 1
GO
PRINT N'Altering [dbo].[View_ShiftSummary_MaintHistory]'
GO
ALTER VIEW [dbo].[View_ShiftSummary_MaintHistory]
AS
            /*
            select * from [dbo].[View_ShiftSummary_PrestartHistory_GetLiveToo] where projectid = 313 and date >= '2020-10-15'

            --call from uigropugroup:
            select * from View_ShiftSummary_MaintHistory_GetLiveToo
            where
            Date  > DATEADD(DD,-1*7,GETDATE())  --replace getdate with older date for test server
                                                            AND [Include] = 1 --AND InputType NOT LIKE 'Stat%'  -- Temporarily made it -100 instead of -7
                                                                        AND InputType <>'camera'  --don't take photos back down!
                                                                        --AND NOT(Comments ='' AND Answer = '')  
                                                                        AND ProjectID = 242

                                                                        AND comments IS NOT NULL
                                                                        AND comments <> ''

            actual ui group group  4 secs on PBWFinalQA (may not have brought any history though)
            DECLARE @isPurge AS INT  
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =242,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=2,@FromDate='', @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge


            2019-02-20 TS ... added location field for peak
            2019-04-15 TS ... added OperatorID 
            2019-08-15 TS ... added "inputId" for further filtering
            2020-08-21 ts ... change to special handign link table
            2020-08-24 CA ... removed fuel readings by adding AND NOT (InputType = 'attrlist' AND prstinputid = 288) 
            2020-11-03 ts ... join in live data from wrk tables.

            MIDDLE SECTION (FROM WRK TABLES) HARDCODED TO RB


            TODO:
            take the guts out of View_ShiftSummary_PrestartHistory and put it into here in the first set.
            rename this view to be View_ShiftSummary_PrestartHistory
            make new view called View_API_PrestartHistory, it identical in script to the original View_ShiftSummary_PrestartHistory but is a table on local
            union the View_API_PrestartHistory in too
            View_API_PrestartHistory has join to dbo.tbl_DBT_WebbarLocalInstances.HasExternalLocalDb only grabs data if this is =1
            >> otherwise normal local data will be doubled up

                        This view is for plod UI Group Group, to roll prestart history and maint history in the one call. Has a flag field for working out what is prestart history.

                        2021-01-19 CA create.
                        2021-01-20 CA optimise query. Made comments varchar200

                        2021-01-21 ts ... various optimsations
                                                                        ... shift the tg_HasFaults logic to the include so the date filter is prosecuted onto stagingedited first. and the join to tg has to be left
                        2021-02-09 ts ... split this onto live only and stagingonly
                                                                        ... add backstop date filter
                        2021-02-10 ts ... fix extra rows on maint
                                                                        .. set stagingid, displayorder, prstInputId to be 0. so we can just use distinct to kill out rows that are not of interest. 
                        2021-02-10 ts ... add back the 7 day prestart view (is a table on local)
						2021-09-16 ts ... join into attr in case of lists.
										... add s.Project to the inputs join



optimisation TODOs:
                        not sure about teh massive row count out of ips, seems to have gone differently on live.
                                    actually maybe check the file called "mainthistory called from ..." I think it is different query plan
                                    it is the Text Is not null on the final filter! shift it to "Include" 
                        need to try and include feedbackadvice (i think) in an index somewhere as it is forcing a key lookup



            */
                                      SELECT * FROM (

                        /**********
                        Original View_ShiftSummary_PrestartHistory
                        ***********/


                                       SELECT DISTINCT 
                                       Date,
                                       s.ProjectID,
                                       'NotificationText' AS 'GroupingField',   -- this is not displayed, tells you which field to group by on the page
                                                Shift,
                                                e.EmployeeName  AS 'Operator',

                                                ------- Displaying Time correctly instead of just an int.
                                                  CASE WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 3 THEN 
                                                 '0' + LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),1)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2) --+ ' Hrs' 
                                                 WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 2 THEN 
                                                  '00' +':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
                                                  ELSE 
                                                   LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
                                                   END
                                                  AS 'Time'
                                                ----------- End time stuff
                                                ,EquipmentID
                                                ,eq.EquipmentCode AS 'EquipID',
                                                DisplayOrder = 0--2021-02-10
                                                ,
                                                [TaskName] = reas.ReasonDescription,
                                                [Prestart Question] = CASE WHEN ISNULL(tg.HasFaults,0) = 1 THEN                -- Formerly Prestart Question        
                                                                                                                                     CASE WHEN s.InputType LIKE 'Q%' THEN q.QuestionText ELSE i.ForeLabel END
                                                                                                                        ELSE ''
                                                                                                                        END,
                                                [Answer] = CASE WHEN ISNULL(tg.HasFaults,0) = 1 THEN  --Formerly Answer
                                                                                                                        CASE WHEN s.inputid = 102 AND s.inputtype = 'attrinput' THEN ':' 
																														when s.inputtype = 'attrList' then [attr].[AttributeDescription]
																																else s.InputValue END
                                                                                                         
																										 
																										 else NULL 
                                                                                                            END , 
                                                 [Intolerablevalue] = CASE WHEN ISNULL(tg.HasFaults,0) = 1 
                                                                                                                                    THEN q.IntolerableValue
                                                                                                                        ELSE NULL
                                                                                                            END,

                                                [NotificationText] = ISNULL(q.category, IIF(s.ActivityReasonID = 1696,'Record Machine Fault','Comments / Hour Meters'))   --2020-11-03 
                                                 ,[Include] = CASE --global exlusions
                                                                                                            WHEN (s.inputtype = 'stat' AND s.inputid = 7 AND ISNULL(tg.HasFaults,0) = 1) THEN 0 --don't get duration for prestarts
                                                                                                            WHEN ISNULL(tg.IsTWI,0) = 1 THEN 0 --no twis

                                                                                                                                                --specials for prestart history                                                                          
                                                                                                                                                WHEN ISNULL(tg.HasFaults,0) = 1 THEN 
                                                                                                                                                                                                CASE WHEN (s.InputValue = q.intolerablevalue OR s.InputType NOT LIKE 'Q%')  
                                                                                                                                                                                                                                    AND NOT(InputValue = '' AND s.InputType NOT LIKE 'Q%')
                                                                                                                                                                                                                                    AND NOT(s.inputtype LIKE 'stat%')
                                                                                                                                                                                                                        THEN 1 ELSE 0 
                                                                                                                                                                                                            END 

                                                                                                                        --maint history inclusions:
                                                                                                                        WHEN s.type  LIKE 'Maint%' AND ar.ActivityID IN (4,5) and not (ISNULL(s.InputComment,'') ='' and isnull(s.CommentsCheck,'') = '') --2021-02-10 don't get ones with no comments. maybe do get ref no ones thou?
                                                                                                                        then 1

                                                                                                                                    ELSE 0  
                                                                                                                                                END 

                                                                                                --from teh filter 2021-01-21
                                                                                                --(tg.IsTWI = 0 OR tg.istwi IS NULL) AND 
                                                                                                 --NOT (s.inputtype = 'stat' AND s.inputid = 7 AND ISNULL(tg.HasFaults,0) = 1)
                                                                                                --AND (ISNULL(tg.HasFaults,0) <> 0 OR s.type  LIKE 'Maint%')
                                                                                                -- AND (ar.ActivityID IN (4,5) OR ISNULL(tg.HasFaults,0) = 1)


                                                ,[Comments] = CASE WHEN ISNULL(tg.HasFaults,0) = 1 THEN
                                                                                                CASE WHEN s.inputid = 102 AND s.inputtype = 'attrinput' 
                                                                                                            THEN CAST(s.InputValue  AS VARCHAR(200))
                                                                                                            ELSE CAST(ISNULL(s.InputComment,'') + '  '+ISNULL(s.CommentsCheck,'') AS VARCHAR(200)) 
                                                                                                END 
                                                                                                ELSE CAST(ISNULL(s.InputComment,'') + '  '+ISNULL(s.CommentsCheck,'') AS VARCHAR(200))
                                                                                                END 
                                                 ,s.RefNo
                                                ,s.InputType
                                                ,StagingID = 0  --2021-02-10
                                                ,FeedbackAdvice
                                                ,LocationId = dbo.FN_IsNullorEmpty(s.Location,0)
                                                ,s.OperatorID
                                                ,prstInputId =0--2021-02-10 s.InputID
                                                ,[IsPrestartHist] = CASE WHEN ISNULL(tg.HasFaults,0) = 1 THEN 1 ELSE 0 END

                                                FROM [dbo].[syn_DWH_iPlodStagingTable] AS s WITH (NOLOCK) LEFT OUTER JOIN 
                                                 dbo.[tbl_SYS_Questions] AS q WITH (NOLOCK) ON s.inputID = q.QuestionID AND s.InputType LIKE 'Q%' LEFT OUTER JOIN
                                                dbo.tbl_DBT_Employees AS e WITH (NOLOCK)            ON s.OperatorID = e.EmployeeID LEFT OUTER JOIN 
                                                 dbo.tbl_SYS_Equipment AS eq WITH (NOLOCK) ON s.EquipmentID = eq.EquipmentCodeID    LEFT JOIN 
                                                 [dbo].[tbl_DBT_ActReasonInputLink] AS i WITH (NOLOCK) ON i.ActReasonLinkID = s.ActivityReasonID AND s.InputID = i.InputID
                                                                          AND  i.ProjectID in( 1, s.[ProjectID])   --changed to Project1 (was join to = s.ProjectID)
																					--put s.ProjectId ino the join ... maybe slow on pubar?  need to sort this projcet one shit out!

                                                                          AND (s.InputType = i.InputType) -- OR s.InputType LIKE 'stat%' AND i.InputType LIKE 'stat%') 
                                                  --this will cause historical issues if changing between StatEquip and Stat 
                                                  --... could be dealt with by scripting all historical Staging data back to StatEquip
                                                                        --2020-11-02 INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','AR_Prestarts') AS tg
                                                                        LEFT OUTER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','') AS tg  -- This didnt appear to work (long query)
                                                                                    ON s.ActivityReasonID = tg.ActivityReasonId
                                                                        -- CROSS APPLY dbo.FN_Iplod_GetAR_TaskGroupingsAll(s.ProjectID,s.activityreasonid) AS tg  -- This didnt appear to work (long query)
                                                                        --INNER join  FN_Iplod_GetAR_TaskGroupingsAll(s.ProjectID,0) AS tg
                                                                        -- ON s.ActivityReasonID = tg.ActivityReasonId
                                                LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS ar  WITH (NOLOCK)
                                                            ON s.ActivityReasonID = ar.ActivityreasonLinkID
                                                LEFT OUTER JOIN dbo.tbl_SYS_Reason AS reas  WITH (NOLOCK)
                                                            ON reas.ReasonID = ar.ReasonID
												left join [dbo].[view_GetAttributes_Cached] as attr  --2021-09-16 join in to get attrlists
													on s.[InputID] = attr.[AttributeTypeID]
													and s.[InputType] = 'AttrList'
													and s.[InputValue] = cast(attr.[AttributeID] as varchar)

                                                WHERE --s.InputType like 'Q%' AND
                                                --shfit this up to include
                                                --(tg.IsTWI = 0 OR tg.istwi IS NULL) AND 
                                                 --NOT (s.inputtype = 'stat' AND s.inputid = 7 AND ISNULL(tg.HasFaults,0) = 1)
                                                --AND (ISNULL(tg.HasFaults,0) <> 0 OR s.type  LIKE 'Maint%')
                                                -- AND (ar.ActivityID IN (4,5) OR ISNULL(tg.HasFaults,0) = 1)
                                                -- AND NOT ((tg.HasFaults = 0 OR tg.HasFaults IS NULL) AND s.type NOT LIKE 'Maint%' AND s.InputType NOT LIKE 'part%')
                                                  NOT (s.InputType = 'attrlist' AND s.inputid = 288) 
                                                -- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
                                                --((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))
                                                --and date > dateadd(day,-60,getdate())  --desperate measure to get the filter to bind so we don't pull millions  of rows into the query plan
                                                  AND s.inputtype NOT LIKE 'Part%'
            /********
            New bit for v3 tables
            THIS IS HARDCODED TO RB IN THE FUNCTION CALL
            This was to reduce call time, from 10s to 3s.
            **********/


            --          UNION ALL
--SELECT DISTINCT 
            --                         Date,
            --                         proj.ProjectID,
            --                         'NotificationText' AS 'GroupingField',   -- this is not displayed, tells you which field to group by on the page
            --                                  Shift,
            --                                  e.EmployeeName  AS 'Operator',

            --                                  ------- Displaying Time correctly instead of just an int.
            --                                    CASE WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 3 THEN 
            --                                  '0' + LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),1)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2) --+ ' Hrs' 
            --                                  WHEN LEN(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR)) = 2 THEN 
            --                                    '00' +':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
            --                                    ELSE 
            --                                     LEFT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)+':' +RIGHT(CAST(CONVERT(FLOAT,StartTime) AS VARCHAR),2)-- + ' Hrs' 
            --                                     END
            --                                    AS 'Time'
            --                                  ----------- End time stuff
            --                                  ,EquipmentID
            --                                  ,eq.EquipmentCode AS 'EquipID',

            --                                  i.DisplayOrder,
            --                                     [TaskName] = '',
            --                                  CASE WHEN s.InputType LIKE 'Q%' THEN q.QuestionText ELSE i.ForeLabel END AS 'Prestart Question',
            --                                  CASE WHEN s.inputid = 102 AND s.inputtype = 'attrinput' THEN ':' ELSE s.InputValue END AS 'Answer',
            --                                  q.intolerablevalue,

            --                                  ISNULL(q.category, 'Comments / Hour Meters')  AS NotificationText

            --                                  ,[Include]=1--CASE WHEN (s.InputValue = q.intolerablevalue OR s.InputType NOT LIKE 'Q%')  AND NOT(InputValue = '' AND s.InputType NOT LIKE 'Q%') THEN 1 ELSE 0 END AS 'Include'
            --                                  ,CASE WHEN s.inputid = 102 AND s.inputtype = 'attrinput' THEN s.InputValue ELSE ISNULL(s.InputComment,'') + '  '+ISNULL(s.CommentsCheck,'') END AS 'Comments'
            --                                    ,s.RefNo
            --                                  ,s.InputType
            --                                  ,StagingID 
            --                                  ,ISNULL(FeedbackAdvice,'')
            --                                  ,LocationId = dbo.FN_IsNullorEmpty(s.Location,0)
            --                                  ,s.OperatorID
            --                                  ,prstInputId = s.InputID
            --                                  ,[IsPrestartHist] =  1

            --                                  --get from live data
            --                                  FROM dbo.tbl_DBT_Project AS proj WITH (NOLOCK)
            --                                              CROSS APPLY [dbo].[FN_Iplod_TransformFromWRK](proj.ProjectID ,  GETDATE() -1
            --                                                                                                          ,GETDATE(),  99,  0
            --                                                                                                          ,1) AS s  
            --                                  LEFT OUTER JOIN 
            --                                  dbo.[tbl_SYS_Questions] AS q WITH (NOLOCK) ON s.inputID = q.QuestionID AND s.InputType LIKE 'Q%' LEFT OUTER JOIN
            --                                  dbo.tbl_DBT_Employees AS e  WITH (NOLOCK) ON s.OperatorID = e.EmployeeID LEFT OUTER JOIN 
            --                                  dbo.tbl_SYS_Equipment AS eq WITH (NOLOCK) ON s.EquipmentID = eq.EquipmentCodeID    LEFT JOIN 
            --                                  [dbo].[tbl_DBT_ActReasonInputLink] AS i WITH (NOLOCK) ON i.ActReasonLinkID = s.ActivityReasonID AND s.InputID = i.InputID
            --                                                            AND  i.ProjectID =1 --changed to Project1 (was join to = s.ProjectID)
            --                                                            AND (s.InputType = i.InputType OR s.InputType LIKE 'stat%' AND i.InputType LIKE 'stat%') 
            --                                    --this will cause historical issues if changing between StatEquip and Stat 
            --                                    --... could be dealt with by scripting all historical Staging data back to StatEquip
            --                                                          INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','') AS tg
            --                                                          ON s.ActivityReasonID = tg.ActivityReasonId
            --                                                          AND tg.HasFaults  =1

            --                                  WHERE --s.InputType like 'Q%' AND
            --                                  NOT(s.inputtype = 'stat' AND s.inputid = 7)
            --                                  AND NOT (s.InputType = 'attrlist' AND s.inputid = 288) 
            --                                  -- AND s.ActivityReasonID  IN (SELECT ID FROM [dbo].[FN_SplitString]
            --                                  --((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_Prestarts' AND Active = 1 )))
            --                                  --we already have this filter in the above function: AND NOT EXISTS (SELECT ist.TaskHeaderId FROM dbo.tbl_DWH_iPlodStagingTableEdited AS ist   
            --                                                                                                                      --WHERE ist.TaskHeaderId = s.TaskHeaderId
            --                                                                                                                      --          AND ist.sessionid = 
            --                                  --brought the "include" logic down to here, might speed it up?
            --                                  AND  (s.InputValue = q.intolerablevalue OR s.InputType NOT LIKE 'Q%') 
            --                                  AND NOT(InputValue = '' AND s.InputType NOT LIKE 'Q%') -- THEN 1 ELSE 0 END AS 'Include'


                                    UNION ALL 

            --                                  /********
            --                                  Get Prestart History from central
            --                                  **********/

                                                SELECT preh.Date,
                       preh.ProjectID,
                       preh.GroupingField,
                       preh.Shift,
                       preh.Operator,
                       preh.Time,
                       preh.EquipmentID,
                       preh.EquipID,
                       preh.DisplayOrder,
                                                                [TaskName] = '',
                       preh.[Prestart Question],
                       preh.Answer,
                       preh.intolerablevalue,
                       preh.NotificationText,

                       preh.Include,
                       preh.Comments,
                                                                RefNo = '',
                       preh.InputType,
                       preh.StagingID,
                       preh.FeedbackAdvice,
                       preh.LocationId,
                       preh.OperatorID,
                       preh.prstInputId
                                                               ,[IsPrestartHist] = 1

                                                                FROM View_API_PrestartHistory_OneWeek AS preh
                                                LEFT OUTER JOIN dbo.tbl_DBT_Project AS proj
                                                            ON preh.projectid = proj.ProjectID
                                                LEFT OUTER JOIN dbo.tbl_DBT_WebbarLocalInstances AS wli 
                                                            ON 
                                                            (proj.OperationID = wli.PrimaryOperationID
                                                            OR wli.OtherOperationIDsCsv LIKE '%' + CAST(proj.OperationID AS VARCHAR(20)) + '%')

                                                WHERE wli.HasExternalLocalDb = 1                                                                               


                                                ) AS tbl1 WHERE [Include] = 1
GO
PRINT N'Altering [dbo].[SP_API_IPLODSetup_UIGroupGroupDetails]'
GO
ALTER procedure [dbo].[SP_API_IPLODSetup_UIGroupGroupDetails]
	@operationId AS int,
	@projectId AS int,
	@appId AS nvarchar(100) = NULL,
	@appVersion AS nvarchar(50) = NULL,
	@appDeploymentMode AS nvarchar(50) = NULL,
	@appCfgRefreshPoint AS int = NULL,
	@fromDate AS datetime = NULL,
	@uiGroupGroupDetailsId AS int = 0,
	@deviceSerialNo AS NVARCHAR(50) = NULL,
    @employeeId AS INT = NULL,
	@isPurge AS int OUTPUT ,
	 @IsLocationsActive int=1, @IsTruckingActive int=1, @IsattributesActive int=1, @IsPrestartHistoryActive int=1, @IsPrestartLiveHistoryActive int=1, @IsHazardHistoryActive int=1, 
					@IsEquipmentActive int=1, @IsWorkOrdersActive int=1, @IsMaterialsActive int=1, @IsRaiseboreActive int=1, @IsTabletSerialsActive int=1
					,@IsProdDrillHistoryActive int = 1, @IsEquipStatusActive int = 1, @IsPastWorkOrdersActive int =1
          , @IsiPlodFaqsActive INT =1
						--addnew

					,@DebugMode INT = 0

AS
/**********************************************************************
Purpose :	Lookup Config - UIGroupGroupDetails.
Notes   :	-


DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails @operationId = 0, @projectId = 399,  @isPurge = @isPurge OUTPUT, @appCfgRefreshPoint =3
, @appDeploymentMode = 'mining_fitters', @appVersion = 'v2022.05.16 (302)'  --  ,@DebugMode = 1
SELECT @isPurge AS isPurge


DECLARE @isPurge AS INT
EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails @operationId = 0, @projectId = 291, @uiGroupGroupDetailsId = 247, @isPurge = @isPurge OUTPUT
SELECT @isPurge AS isPurge



DECLARE @isPurge AS INT    --should be about 6-10 secs on local
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =399,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=2,@FromDate='', @isPurge = @isPurge OUTPUT
 SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT    --should be about 6-10 secs on local
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =3,@appDeploymentMode='stores',@appCfgRefreshPoint=2,@FromDate='', @isPurge = @isPurge OUTPUT
 SELECT @isPurge AS isPurge

DECLARE @isPurge AS INT
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =236,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=2,@FromDate='', @isPurge = @isPurge OUTPUT
 SELECT @isPurge AS isPurge

 DECLARE @isPurge AS INT    --should be about 6-10 secs on local
  EXEC dbo.SP_API_IPLODSetup_UIGroupGroupDetails   @operationId =0, @projectId =399,@appDeploymentMode='mining_fitters',@appCfgRefreshPoint=1,@FromDate='', @isPurge = @isPurge OUTPUT
  ,@DebugMode=1
 SELECT @isPurge AS isPurge

 --testing:
 @projectId =236,@appDeploymentMode='stores' = 3282, 12 secs  7 sec 3282
  @projectId =236,@appDeploymentMode='mining_fitters' = 3805, 11 secs  >> same
  @projectId =236,@appDeploymentMode='processplant' = 3805, 11 secs  >> 13 3484


GRANT EXECUTE ON [dbo].[SP_API_IPLODSetup_UIGroupGroupDetails] TO [Public]

History  :	IRJ	27-Feb-2019	Initial Creation.
			IRJ	27-Feb-2019	Modified @appDeploymentMode NVARCHAR(50) > INT input param.
							Added @appCfgRefreshPoint input param.
							Added @isPurge OUTPUT param.
							Added IsDeleted output field.
			TS	28-Feb-2019	Added some test data.
			IRJ	04-Mar-2019	Added reference to dbo.zTestUIGroupGroupDetail test data.
			CA 2019-05-17 Added Prestart DataSet
			TS 2019-05-17 changed comments,  InputMatchId (concat FieldType and InputId) (instead of matching on FieldType)
			CA 2019-05-17 Added _1 to all parameter ones. 
			TS 2019-07-31 ... added purge stuff
			TS 2019-08-05 ... set IsPUrge =1 whenever getting data
			TS 2019-08-07 ... added UTC conversion
			TS 2019-08-22 ... shifted OrderBy calc up to top so we can incporpoate the Group1 and Group2 settings
			TS 2019-09-23 ... added the attributes ones
							... remove zz table
			TS 2019-09-23 ... modified the List type for Attributes
			ts 2019-12-20 ... fleshed out the location listings
			ts 2020-01-03 ... expanded location listing to include those with no ticks (just active) ... maybe should have it so that locations require at least one tick? but need a tickbox for all occasions before we do this (ie = workshop)
							... should strip out the loading bays and destinations from the normal list of active locations?

			ts 2020-02-23 ... older set of prestart histories for test server
			ts 2020-02-23 ... duplicate all prestart faults (because of fault in the selector on current version. (didn't work)
			ts 200-02-24 ... add EquipId to the Group2 in prestarts.  can revert this once bug is fixed in iplod (say v144 and above)
			ts 2020-02-24 ... add object updated
			ts 2020-02-25 ... made test data  older for prestart history ... 150 days, revert the additional EquipType ...
			sh 2020-03-26 ... added stores
			ts 2020-04-05 ... added query logs
					-09 /... added top 25 onto this call for logs
					-15 ... added more to the api logs
					-15 ... LoadedAt should be LoadedFrom
					-15 ... added LoadedBy
					-16 ... only send stores posting history to stores
			ts 2020-04-20 ... older history for stores on test server
			ts 2020-05-12 ... AttributesJson
			ts 2020-05-25 ... combine source adn dest into haul route
						... stub in -1 for missing haul route
			ts 2020-05-27	... add distance Atr
							... add Mateiarl SG
							... fix teh JSON format
							... aded distances object to the get latest
			ts 2020-05-31 ... add Attributes JSON to the text value if debug mode is on


		ts 2020-05-31 ... FOR JSON PATH not supported on standard 2012 locals. have replace with a dodgy build of a json string until we can get the locals upgraded

		ts 2020-06-04 ...  added failed configs
		ts 2020-06-15 ... fixed failed configs
		ts 200-06-17 ... with no locks on the last modified sniffs
		ts 2020-06-17 ... don't send a bunch of these for AND @appDeploymentMode <> 'stores' (just to keep the data send low
		ts 2020-07-05 ... filters on equip list
		CA 2020-07-07 ... Added config for locations to ignore level if deploymenymode is RB.
		ts 2020-07-22 ... added related equipment for jumbo who bored the cut
		ts 2020-07-29 ... added feedback advice to prestarts
		ts 2020-08-05 ... smaller prestart history to keep the speeds ok
		ts 2020-08-07 ... fix missing haul route
		ts 2020-08-10 .. remove the drill on related equipment
		ts 2020-08-10 ... pull the v3 ogs dataset. it does tcurrently work ebcause I made the duration fields INT. also it is not really that useful
		ts 2020-08-17 ... add hazard history 
		ts 2020-08-19 ... don't send much history for TWIs on test server (to keep it running quicky)
		ts 2020-08-20 ... smaller history for stores on live
		ts 2020-08-24 ... locaiton active filter on haul routes. plus isnullorempty on the Distnaces.IsDeleted (flag not handled in the front end yet
		ts 2020-08-31 ... add ITs to loaded by field
		ts 2020-09-13 ... get RefNo (Work Orders)
		ts 2020-09-24 ... add test data for @test project
						... might need to trash the normal data when there is z data on @IsTestProject?
		ts 2020-10-01 ... only get history and work order stuff from the cached test data.
		CA 2020-10-19... Added RB dataset
		ts 2020-10-21 ... add serial numbers
						... pulled the sniff on @LastModiffied ... getting too unwieldy to find all the data
		CA 2020-11-05 ... Swapped prestart history to prestartHistory_GetFromLive for RB 


		TS 2020-11-12 ... config the datasets to save query time
		ts 2020-12-07 ... amend the haul routes to register unticked haul routes
		CA 2021-01-19 ... Updated Prestart History call to also do Maint History
		CA 2021-01-20 ... Optimisations to prestart hist

		ts 2021-01-21 ... various optimisations, incld switch the attribtues call to view
						.. into source control
		ts 2021-02-04 ... add Sysmaterial atribute

		ts 2021-02-09 ... try again on maint history.

		ts 2021-02-10 ... put the live histroy back in (subject to turning on in dpeloyment mode configs)
						...add teh IsActive flags to the call so as to over-ride the configs when debugging
						... split out separtae sections to make it easier to troubleshoot query plans
		ts 2021-02-15 ... remove the Loading Bay ticks from active locations, on config.  
						... ISNULL!!!
		CA 2021-02-15 ... Added Pit + OreBody config for Group1 Locn for peak on default Attr 3
		CA 2021-02-16 ... cast the DefaultAttr 3 join as varchar because of dataType errors on join
		ts 2021-02-23 ... added the location flag fields for filter calc
						... don't put it in JSON, put it in filter field. the JSON stuff won't be hydrated into fields yet
						... put AllActive in so that blank Param fields work just the first one in fact)
		ts 2021-03-04 ... add Levels into attrs for filtering
		ts 2021-03-17 ... change ELSE on teh z table
		ts 2021-04-19 ... filter calc for work orders
		CA 2021-04-26 ... added 14 day prestart history
		CA 2021-05-10 ... Added Surfce location tick
		ts 2021-06-03 ... added two new lists, ProdDrillingHistory + EquipStatus
		ts 2021-06-04 ... stubb in zz location
		ts 2021-06-08 ... add the new list for Past Work Oders
		ts 2021-08-06 ... fix datatype on teh wo list
		ts 2021-07-23 ... bake teh arithabour in, fuck it
		ts 2021-07-27 ... add param filtering for materials
		ts 2021-07-28 ... {yep, better}  try putting proddrill rownum here
		<<this needs to deploy with alter on proddriling history view>>
		ts 2021-09-07 ... get all failed posting history, however old they are
							... set @projectId= abs(@projectId)
		CA 2021-09-14 ... Added AssosciateNumeral to Attrs as AttrJSON
		ts 2021-09-16 ... order by history (down the bottom) do TextId for History ones
						... add some debugging
    ts 2021-11-13 .. hack to get the BRK failover to work
    ts 2021-11-13 ... kill out prestart history for brk as a temporarly desparate measure (in teh failover)
                    ... also get from caechd attributes
                    ... don't do this for BRK while in failover REMOVE!!
	CA 2021-12-15 ... Added Sign Register Group
	CA 2022-01-05 ... Removed Cached attrs
	CA 2022-01-14 ... Added LocationInGroup. Have a decently fast method now. Get Tom to validate before live. 
	CA 2022-03-23 ... Fixed sign register being missing. Good work version history.
  ts 2022-03-25 ...   DECLARE @OrigProj INT = @projectId
  ts 2022-04-07 ... added fake mode
  ts 2022-04-27 ... add the FAQs
  2022-08-03 CA ... Added SignRegister locns stuff
  2022-08-04 CA ... Added stope sign register
  2022-08-24 CA ... Added MCR hazard uiGroupGroup
  2022-10-14 TS ... DONT' DO NVARCHAR (BECUASE IT IS NOT HANDLED IN ALL THE SUB QUERIES)



IF ADDING NEW DATASET, UPDATE THE MaxModified query set for that object. NAH, killed ths out

if optimising, maybe check the order by trickery for history (it has stringpad on every line)

*******************

HOW TO ADD NEW LIST:
*******************
1. add new input type in tbl_SYS_InputTypeOptions, eg: ( 'ProdDrill History (readonly)', '*ProdDrillHistory', 28, 'datatypedisplayed,calcfunction,tolerancelower,tolerancelowertext,toleranceupper,toleranceuppertext', 'questionid,loadedfrom,loadedto,questiontype', 'inputid,forelabel', getdate(), 137, 1, NULL )


2. add into the mapping table,  dbo.tbl_SYS_iplodInputTypeMappings, eg: ( N'*MaintHistory', N'*MaintHistory', getdate(), 1, N'copied from prestarthistroy ts', 0, N'', N'', N'', 250, N'', 1 )
3. make the new view, similiar to this maybe: 
4. add new bits in the below, search fro "addnew" + variable on the call
5. add the deploymentmode config to turn it on/off: eg:
									INSERT INTO dbo.tbl_SYS_iplodDeploymentModeConfigs(DeploymentModeConfigName, DeploymentModeName, DeploymentModeConfigValue, Active, Comments, EditedDate, EditedBy)
									VALUES

									( N'IsActiveGrpGrpComponent_EquipStatus', N'_Default', N'0', 1, 'whether or not to call this component in the ui group group proc, because it is a beast to run on central, so turn off things not needed', GETDATE(), 137 ), 
									( N'IsActiveGrpGrpComponent_EquipStatus', N'Mining_Fitters', N'1', 1, 'whether or not to call this component in the ui group group proc, because it is a beast to run on central, so turn off things not needed',GETDATE(), 137 )




**********************************************************************/
SET NOCOUNT on

--2021-06-23
SET  ARITHABORT ON;
  DECLARE @OrigProj INT = @projectId

set @projectId= abs(@projectId)



DECLARE @Error AS int = 0


DECLARE @IsTempDeploymentModeToken INT = (SELECT case WHEN  FakeDeploymentMode <> TrueDeploymentMode OR killthisapp = 1  --add kill this app, in case we map fakemode = truemode
                                                  then 1 else 0 end  FROM dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId) )
DECLARE @TempTokenIsOutOfDate INT = case WHEN @IsTempDeploymentModeToken = 0 THEN 0
                                          WHEN    @IsTempDeploymentModeToken =1 THEN (SELECT  KillThisApp FROM dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId) )
                                          ELSE 0 
                                          END   
DECLARE @TrueDeploymentMode NVARCHAR(50) = (select TOP 1 TrueDeploymentMode FROM  dbo.tvf_DeploymentModeMapping (@appDeploymentMode, @ProjectId))
  SET @appDeploymentMode = case WHEN @IsTempDeploymentModeToken = 1 THEN @TrueDeploymentMode ELSE ISNULL(@appDeploymentMode, 'Mining') END  --2022-04-07

	-- init.
	SET @uiGroupGroupDetailsId = ISNULL(@uiGroupGroupDetailsId, 0)
	SET @appId = ISNULL(@appId, 'au.com.pybar.iplod')
	SET @appVersion = ISNULL(@appVersion, '2019.01.01')
	--SET @appDeploymentMode = ISNULL(@appDeploymentMode, 'Mining')
	SET @appCfgRefreshPoint = ISNULL(@appCfgRefreshPoint, 1)	-- Login Config Button.
	SET @isPurge  =  dbo.udfIsPurge('SP_API_IPLODSetup_UIGroupGroupDetails',@appDeploymentMode,@appCfgRefreshPoint);	-- 0 = false, else true.


	DECLARE @NewestSourceData datetime 
	SET @NewestSourceData = GETDATE();  --if ispurge=1 get everything anyway

		--this is the offset from UTC to compare modified on (local time) to @FromDate on device (UTC)
	DECLARE @UtcOffset numeric =  CONVERT(numeric,dbo.udfUTCVsWebBAROffset()) * -1;

	--For hiding the level group option when pit is used for location grouping. Mainly for RB.
	DECLARE @LocationLevelIgnore INT = CASE WHEN @appDeploymentMode = 'Raisebore' THEN 1 ELSE 0 END 

	--reset the fromdate to "local"
	SET @fromDate = DATEADD(HOUR,@UtcOffset,@FromDate);
	DECLARE @Today DATE = CONVERT(DATE,GETDATE())

		-- Get OperationId from ProjectId.
		SELECT @operationId = OperationID   
		FROM dbo.tbl_DBT_Project 
		WHERE ProjectID = @projectID
		SET @operationId = ISNULL(@operationId, 0)

declare @warehouse nvarchar(25) = (select top 1  warehouse from  dbo.FN_GetWarehouses(@operationId))

DECLARE @AllowLocal INT = (SELECT TOP 1 allowlocal FROM tbl_DBT_Project tdp where tdp.ProjectID = @projectId)

DECLARE @IsInFailOverToCentralKillThisProc int = iif((@AllowLocal=0 and @projectId  =291  --add oter prjoects that are in faiover here. OR OPTIMISE THE DAMN QUERY TO RUN ON CETNRAL!
                                                                        ), 1, 0)

DECLARE @IsSignRegisterActive INT = (SELECT isnull(dbo.FN_GetConfigValue(@ProjecTid,'IsSignRegisterActive'),0));
--Stope only one (Mcr)
DECLARE @IsSignRegisterStopesActive INT = (SELECT isnull(dbo.FN_GetConfigValue(@ProjecTid,'IsSignRegisterStopesActive'),0));

DECLARE @SignRegisterSrc varchar(50) = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ViewSrc'), 'UniqueSigns' ) AS varchar(50) )


		IF @isPurge =20-- 0 --if not purging, then get most recent data first to decide whether or not to proceed or not
						BEGIN 
							SET @NewestSourceData =  (SELECT MAX(ModOn) 
															FROM 
																		(SELECT modOn= MAX(ModifiedOn) FROM dbo.tbl_DBT_Materials WITH (NOLOCK) WHERE ProjectID = @projectId 
																		UNION ALL 
																		SELECT modOn= MAX(ModifiedOn) FROM dbo.tbl_DBT_Location WITH (NOLOCK) WHERE ProjectID = @projectId 
																		union ALL 
																		SELECT modOn= MAX(ModifiedOn) FROM dbo.tbl_DBT_Distances WITH (NOLOCK) WHERE ProjectID = @projectId 
																					UNION ALL														
																		SELECT modOn =  max(modify_date )
																			FROM sys.objects
																			WHERE  name IN( 'SP_API_IPLODSetup_UIGroupGroupDetails' , 'FN_GetAttributes','View_ShiftSummary_PrestartHistory','View_API_PostingSummary','View_API_v3LogInfo')
																		UNION ALL 
																		SELECT ModOn = MAX([PostedDate] ) 
																		FROM dbo.tbl_API_Posting WITH (NOLOCK)
																		WHERE @appDeploymentMode = 'Stores'
																		UNION ALL 
																		SELECT ModOn = MAX([CreatedDate] ) 
																		FROM dbo.tbl_API_Posting WITH (NOLOCK)
																		WHERE @appDeploymentMode = 'Stores'

																		) AS tbl


														);
	END 

IF @IsInFailOverToCentralKillThisProc = 1 
BEGIN
set @isPurge =0 --so we do'nt trash them out!

end


IF (@NewestSourceData > @FromDate OR @isPurge = 1 OR @isPurge = 0) --jump into this anyway ... getting too hard to find all teh last modified. will need to think again if it takes too long to update.
     -- AND @IsInFailOverToCentralKillThisProc < >1  --2021-11-13

	BEGIN

SET @isPurge = 1 ; --sync config table has decided IsPurge = 0, however data has indicated that some data is newer than app.  no incremental loads on this table though, so need to set Purge to 1 in this scenario

DECLARE @IsLiveDb int =  dbo.FN_IsLiveDB(@ProjectId);
DECLARE @IsTestProject int =  dbo.FN_IsTestProject(137,@ProjectId);
DECLARE @DaysOfHistoryForPrestarts int = (SELECT CASE WHEN @IsLiveDb =0 THEN 28 ELSE 
						(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] 
												(@appDeploymentMode,'PrestartHistoryDays')  
												)
								,7)) END);  -- if live db set to 7; get older ones 90  -- if live db set to 7; get older ones 90
DECLARE @DaysOfHistoryForStores int = (SELECT CASE WHEN @IsLiveDb =0 THEN 25 ELSE 5 END);  -- if live db set to 7; get older ones 90
DECLARE @DaysOfHistoryForHazards int = (SELECT CASE WHEN @IsLiveDb =0 THEN 2 ELSE 28 END);  -- if live db set to 7; get older ones 90
DECLARE @DaysOfHistoryForProdDrill int = 7-- (SELECT CASE WHEN @IsLiveDb =0 THEN 7 ELSE 7 END);  -- if live db set to 7; get older ones 90

declare @showDebugIds int = (SELECT dbo.FN_GetConfigValue(@ProjecTid,'ShowDebugIds'));

declare @LoadingBaysAreNotActualLocations int = (SELECT isnull(dbo.FN_GetConfigValue(@ProjecTid,'LoadingBaysAreNotActualLocations'),0));

-- Location Group1 Pit + Orebody 
declare @LocationGroup1PitOrebody int = (SELECT isnull(dbo.FN_GetConfigValue(@ProjectID,'LocationGroup1PitOrebody'),0));


/***
Some configs for decidding which datat sets to get
**/

--DECLARE @IsLocationsActive int, @IsTruckingActive int, @IsattributesActive int, @IsPrestartHistoryActive Int, @IsPrestartLiveHistoryActive Int, @IsHazardHistoryActive int, 
--					@IsEquipmentActive int, @IsWorkOrdersActive int, @IsMaterialsActive int, @IsRaiseboreActive int, @IsTabletSerialsActive int;

--DECLARE @ForceAll int = 0;
--if calling with 0, turn each one off
set @IsLocationsActive = IIF(@IsLocationsActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_Locations')  ),1)))
		SET @IsTruckingActive = IIF(@IsTruckingActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_Trucking')  ),1)))
		SET @IsattributesActive = IIF(@IsattributesActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_Attributes')  ),1)))
		SET @IsPrestartHistoryActive =case WHEN @AllowLocal = 0 AND @IsInFailOverToCentralKillThisProc = 1 THEN 0 ELSE  --2021-11-13
                                          IIF(@IsPrestartHistoryActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_PrestartHistory')  ),1)))


			                                      end
      SET @IsPrestartLiveHistoryActive =-- case WHEN @AllowLocal = 0 AND @IsInFailOverToCentralKillThisProc = 1  THEN 0 ELSE  --2021-11-13
                                    IIF(@IsPrestartLiveHistoryActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_PrestartLiveHistory')  ),0)))
                                           --   end

	set @IsHazardHistoryActive =case WHEN @AllowLocal = 0 AND @IsInFailOverToCentralKillThisProc = 1  THEN 0 ELSE  --2021-11-13
                                            IIF(@IsHazardHistoryActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_HazardHistory')  ),1)))
		                                                    end
    SET @IsEquipmentActive = IIF(@IsEquipmentActive = 0,0,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_Equipments')  ),1)))
		SET @IsWorkOrdersActive = IIF(@IsWorkOrdersActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_WorkOrders')  ),1)))
		SET @IsMaterialsActive = IIF(@IsMaterialsActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_Materials')  ),1)))
		SET @IsRaiseboreActive = IIF(@IsRaiseboreActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_Raisebore')  ),1)))
		SET @IsTabletSerialsActive = IIF(@IsTabletSerialsActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_TabletSerials')  ),1)))
		SET @IsProdDrillHistoryActive =   case WHEN @AllowLocal = 0 AND @IsInFailOverToCentralKillThisProc = 1  THEN 0 ELSE  --2021-11-13
                                           IIF(@IsProdDrillHistoryActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_ProdDrill')  ),1)))
	                                               end
  	SET @IsEquipStatusActive =  case WHEN @AllowLocal = 0 AND @IsInFailOverToCentralKillThisProc = 1  THEN 0 ELSE  --2021-11-13
                                  IIF(@IsEquipStatusActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_EquipStatus')  ),1)))
		                                          end
    SET @IsPastWorkOrdersActive = case WHEN @AllowLocal = 0 AND @IsInFailOverToCentralKillThisProc = 1  THEN 0 ELSE  --2021-11-13
                                    IIF(@IsPastWorkOrdersActive = 0,0 ,(SELECT ISNULL((select TOP 1 DeploymentModeConfigValue from [dbo].[udf_iPlodDeploymentConfigs] (@appDeploymentMode,'IsActiveGrpGrpComponent_PastWorkOrders')  ),1)))
                                            END


--addnew



	--	SELECT @IsLocationsActive , @IsTruckingActive , @IsattributesActive , @IsPrestartHistoryActive , @IsHazardHistoryActive , 
		--			@IsEquipmentActive , @IsWorkOrdersActive , @IsMaterialsActive , @IsRaiseboreActive , @IsTabletSerialsActive ;




declare @GroupGroup table  (	OperationId  int NULL
		, ProjectID  int NULL
		, UIGroupGroupDetailId   varchar(MAX) null
		, UIGroupGroupDetailType   varchar(MAX) null
		, UIGroupGroupDetailFilterCsv   varchar(MAX) null
		, UIGroupGroupDetailFilterParentCsv   varchar(MAX) null
		, TextId   varchar(MAX) null
		, [Text]   varchar(MAX) null
		, Detail  varchar(MAX) null
		, Group1    varchar(MAX) null
		, Group2   varchar(MAX) null
		-- Flags.
		, IsDeleted  int NULL
		, IsEnabled  int NULL
		, OrderBy  int NULL
		, ImageFileName  varchar(MAX) null
		,AttributesJson  varchar(MAX) null)

	--FROM (
 IF 	 @IsLocationsActive  = 1
BEGIN

-- Need to insert locations twice (LocationInGroup and Location). This seemed easiest. 
DECLARE @LocnTemp TABLE  (	OperationId  INT NULL
		, ProjectID  INT NULL
		, UIGroupGroupDetailId   VARCHAR(MAX) NULL
		, UIGroupGroupDetailType   VARCHAR(MAX) NULL
		, UIGroupGroupDetailFilterCsv   VARCHAR(MAX) NULL
		, UIGroupGroupDetailFilterParentCsv   VARCHAR(MAX) NULL
		, TextId   VARCHAR(MAX) NULL
		, [Text]   VARCHAR(MAX) NULL
		, Detail  VARCHAR(MAX) NULL
		, Group1    VARCHAR(MAX) NULL
		, Group2   VARCHAR(MAX) NULL
		-- Flags.
		--, IsDeleted  int NULL
		, IsEnabled  INT NULL
		, OrderBy  INT NULL
		, ImageFileName  VARCHAR(MAX) NULL
		,AttributesJson  VARCHAR(MAX) NULL)

INSERT INTO @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)
	-- Grab output to re insert

	-- This is how to re-use a list twice in a lightweight manner. Grab the inserted into output table. Re use that. 

	--OUTPUT Inserted.OperationId,Inserted.ProjectID,Inserted.UIGroupGroupDetailId,Inserted.UIGroupGroupDetailType, 
	--		Inserted.UIGroupGroupDetailFilterCsv, Inserted.UIGroupGroupDetailFilterParentCsv, Inserted.TextId,Inserted.Text, Inserted.Detail, 
	--		Inserted.Group1, Inserted.Group2,  Inserted.IsEnabled, Inserted.OrderBy, Inserted.ImageFileName, Inserted.AttributesJson
	--		INTO @LocnTemp

		SELECT OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = 'Location' + '_' + CAST(LocationId AS NVARCHAR)
				, UIGroupGroupDetailType = 'Location_1'  --bascially matches the InputMatchId (concat FieldType and InputId) from input definitions
				, UIGroupGroupDetailFilterCsv =							+',AllActive'  --this is in so that a blank in the first Param1 field will show all locations
																		+ IIF( l.Production = 1 , ',Production' ,'')
																		+ IIF(  l.Development = 1 , ',Development' ,'')
																		+ IIF(  l.BogTruckSource = 1 , ',BogTruckSource' ,'')
																		+ IIF(  l.Cabolting = 1 , ',Cabolting' ,'')
																		+ IIF(  l.LocnTruck = 1 , ',LocnTruck' ,'')
																		+ IIF(  l.RaiseBore = 1 , ',RaiseBore' ,'')
																		+ IIF(  l.ServiceCrew = 1 , ',ServiceCrew' ,'')
																		+ IIF(  l.DiamondDrill = 1 , ',DiamondDrill' ,'')
																		+ IIF(  l.BackfillTo = 1 , ',BackfillTo' ,'')
																		+ IIF(  l.RefugeChamber = 1 , ',RefugeChamber' ,'')
																		 + IIF(  l.EscapeWay = 1 , ',EscapeWay' ,'')
																		  + IIF(  l.Surface = 1 , ',Surface' ,'')
																		 +','


				, UIGroupGroupDetailFilterParentCsv = ''  
				, TextId =  CONVERT (NVARCHAR(50), LocationId)
				, [Text] = l.LocationCode
				, Detail = ''
				, Group1 = CASE WHEN l.PitID = 0 THEN '' 
								WHEN @LocationGroup1PitOrebody = 1 THEN 
									IIF((att.AttributeDescription IS NULL OR att.AttributeDescription = ''),p.PitDescription,p.PitDescription + ' - ' + att.AttributeDescription)
								ELSE p.PitDescription END
				, Group2 = CASE WHEN @LocationLevelIgnore = 1 THEN NULL ELSE l.LocLevel END 
				, IsEnabled = 1
				, OrderBy = ROW_NUMBER() OVER (PARTITION BY l.LocationID ORDER BY l.LocationCode )
				, ImageFileName = ''
				,AttributesJson='[{"Key":"LocLevelId","Value":'+CAST(l.LevelID AS VARCHAR)+'}]'

			FROM dbo.tbl_DBT_Location AS l WITH (NOLOCK)
				LEFT JOIN tbl_DBT_Pit AS p WITH (NOLOCK) ON l.PitID = p.PitID
				LEFT OUTER JOIN dbo.tbl_SYS_Attribute AS att 
					ON CAST(l.DefaultAttributeID_3 AS VARCHAR(10)) = CAST(att.AttributeID AS VARCHAR(10))
					AND @LocationGroup1PitOrebody = 1
			WHERE l.ProjectId = @ProjectId 
				AND l.Active = 1
				AND NOT (ISNULL(@LoadingBaysAreNotActualLocations,0) = 1 AND dbo.FN_IsNullorEmpty(LocnTruck,0)  =1)  --2021-02-15 ts

--				-- Re Insert for LocationInGroup
--INSERT INTO @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)
--			SELECT OperationId, 
--			ProjectID,
--			UIGroupGroupDetailId = REPLACE(UIGroupGroupDetailId,'Location_','LocationInGroup_'),
--			 UIGroupGroupDetailType = REPLACE(UIGroupGroupDetailType,'Location_','LocationInGroup_'),
--			UIGroupGroupDetailFilterCsv, 
--			UIGroupGroupDetailFilterParentCsv, 
--			TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson 
--			FROM @LocnTemp
--			-- MCR only need Charging for now for the firing task. Maybe we should have more LocnInGroups for each tick? Or query the main task somehow for param1,2,3,
--			WHERE (UIGroupGroupDetailFilterCsv  LIKE '%Production%' OR UIGroupGroupDetailFilterCsv  LIKE '%Development%')






				--AND @appDeploymentMode <> 'stores'

				--AND @IsTestProject =0
				/*AND (ISNULL(l.Development, 0) + ISNULL(l.Production, 0)
					+ISNULL(l.[Cabolting], 0) + ISNULL(l.[ServiceCrew], 0)			
					+ISNULL(l.[RaiseBore], 0) + ISNULL(l.[DiamondDrill], 0)			
					+ISNULL(l.[BogTruckSource], 0) + ISNULL(l.[ServiceCrew], 0)			
					+ISNULL(l.[EscapeWay], 0) + ISNULL(l.[RefugeChamber], 0)			
					+ISNULL(l.[Surface], 0) + ISNULL(l.[Stockpile], 0)	
						) > 0  --put in filter here for locns allowed to be used for Lcoation Field type
						*/
		--UNION ALL  --add the dummy one for unknown location
		--have commented this out. updated the method to treat all Locations taht start with "NotOnList" to require a comment.
  --      		SELECT OperationID =  @operationId
		--		,ProjectId = @projectId
		--		,UIGroupGroupDetailId = 'Location' + '_' +'-1' --CAST(LocationId AS NVARCHAR)
		--		, UIGroupGroupDetailType = 'Location_1'  --bascially matches the InputMatchId (concat FieldType and InputId) from input definitions
		--		, UIGroupGroupDetailFilterCsv =							+',AllActive'  --this is in so that a blank in the first Param1 field will show all locations
		--																+ iif( 1 = 1 , ',Production' ,'')
		--																+ iif(  1 = 1 , ',Development' ,'')
		--																+ iif( 1 = 1 , ',BogTruckSource' ,'')
		--																+ iif(  1 = 1 , ',Cabolting' ,'')
		--																+ iif( 1 = 1 , ',LocnTruck' ,'')
		--																+ iif(  1 = 1 , ',RaiseBore' ,'')
		--																+ iif(  1 = 1 , ',ServiceCrew' ,'')
		--																+ iif(  1 = 1 , ',DiamondDrill' ,'')
		--																+ iif( 1 = 1 , ',BackfillTo' ,'')
		--																+ iif(  1 = 1 , ',RefugeChamber' ,'')
		--																 + iif(  1 = 1 , ',EscapeWay' ,'')
		--																  + iif( 1 = 1 , ',Surface' ,'')


		--																 +','


		--		, UIGroupGroupDetailFilterParentCsv = ''  
		--		, TextId = '-1'
		--		, [Text] = '... Select this and write actual location ... '
		--		, Detail = ''
		--		, Group1 = 'zz_Missing Location'
		--		, Group2 = 'zz_Missing Location' 
		--		, IsEnabled = 1
		--		, OrderBy =99999999-- ROW_NUMBER() OVER (PARTITION BY l.LocationID ORDER BY l.LocationCode )
		--		, ImageFileName = ''
		--		,AttributesJson=''--'[{"Key":"LocLevelId","Value":'+CAST(l.LevelID AS varchar)+'}]'
		--		WHERE CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ShowzzDummyLocnInIplod'), 0) AS int) = 1

		--		locationcode like 'NotOnList%' then bitwise=8
		--		'NotOnList - Rehab Location'
		--		,'NotOnList - Other Location'
		--		,'NotOnList - Rehab Location'
		--		, 'zz_Unknown'


END

 IF 	 @IsTruckingActive =1
BEGIN
		--COMBINED INTO HAUL ROUTE, give it another FieldType
INSERT INTO @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

		SELECT OperationID =  @operationId
				,ProjectId = @projectId
				,	UIGroupGroupDetailId = 'HaulRoute' + '_' + CAST(d.DistanceID AS NVARCHAR)
				, UIGroupGroupDetailType = 'HaulRoute_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
				, UIGroupGroupDetailFilterCsv = ',LocLevelId=' +CAST(ls.LevelID AS VARCHAR)+',' --should fitler based on locations!
				, UIGroupGroupDetailFilterParentCsv = ''
				, TextId = CONVERT(NVARCHAR(50), d.DistanceID)
				, [Text] = ls.LocationCode + ' --> ' +l.LocationCode
				, Detail = ''
				, Group1 = CASE WHEN ls.PitID = 0 THEN '' 
								ELSE ls.PitDescription END
				, Group2 = ls.LocLevel
				, IsEnabled = 1
				, OrderBy = ROW_NUMBER() OVER (PARTITION BY l.LocationID ORDER BY l.LocationCode )
				, ImageFileName = ''
				,AttributesJson='[{"Key":"Distance","Value":'+CAST(d.Distance AS VARCHAR)+'}'
									+',{"Key":"LocLevelId","Value":'+CAST(ls.LevelID AS VARCHAR)+'}'  ---use this in calc
								+']'
					--put ths back!  (SELECT  [Key]='Distance',[Value]= ISNULL(dd.Distance,0) FROM dbo.tbl_DBT_Distances AS dd WHERE d.DistanceID = dd.DistanceID   FOR JSON PATH)

		FROM dbo.tbl_DBT_Location AS l WITH (NOLOCK)
				INNER JOIN dbo.tbl_DBT_Distances AS d
					ON l.LocationID = d.DestID 

				INNER JOIN (SELECT locationid, locationcode,s.DistanceID, ls.LocLevel,ls.PitID,p.PitDescription , ls.LevelID
									FROM dbo.tbl_DBT_Distances AS s WITH (NOLOCK)
									INNER JOIN dbo.tbl_DBT_Location AS ls WITH (NOLOCK) ON s.SourceID = ls.LocationID 
									LEFT JOIN  tbl_DBT_Pit AS p WITH (NOLOCK) ON ls.PitID = p.PitID
									WHERE ls.ProjectID = @projectId
									AND dbo.FN_IsNullorEmpty(s.IsDeleted,0) = 0
									AND ls.Active = 1 --- the source needs to be active too
									AND ls.LocnTruck  =1 --source needs tick
									) AS ls 
									ON d.DistanceID =ls.DistanceID
			WHERE l.ProjectId = @PRojectId 
				AND l.Active = 1 
				AND dbo.FN_IsNullorEmpty(d.IsDeleted,0)=0 --don't need the locn truck tick ... only get if they have setup a distance
				--AND (ISNULL(l.LocnTruck, 0)) > 0  --put in filter here for locns allowed to be used for loaded from Field type
				--AND @appDeploymentMode <> 'stores'
				AND @IsTruckingActive =1
				AND l.DestTruck = 1 --dest needs tick
				--AND @IsTestProject =0

		UNION ALL 
		SELECT	TOP 1  OperationID =  @operationId
				,ProjectId = @projectId
				,
				UIGroupGroupDetailId = 'HaulRoute' + '_' +'-1'-- CAST(-1 AS NVARCHAR)
				, UIGroupGroupDetailType = 'HaulRoute_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
				, UIGroupGroupDetailFilterCsv = '' --should fitler based on locations!
				, UIGroupGroupDetailFilterParentCsv = ''
				, TextId = '-1'
				, [Text] = '... Select this and write comment ... '
				, Detail = ''
				, Group1 = CASE WHEN l.PitID = '0' THEN '' 
								ELSE 'Missing Haul Route' END --just to give it a grouping if the others have one
				, Group2 =  CASE WHEN l.PitID <> '0' THEN '' 
								ELSE 'Missing Haul Route' END --and the reverse so it isn't duplicated
				, IsEnabled = 1
				, OrderBy = 99999999
				, ImageFileName = ''
				,AttributesJson=''

			FROM dbo.tbl_DBT_Location AS l
			WHERE Active >0
			AND ProjectID = @projectId
			--AND @appDeploymentMode <> 'stores'
			AND @IsTruckingActive =1
			--AND @IsTestProject =0


		--loadedFrom Field Type (COMBINE INTO HAUL ROUTE???)
		UNION ALL 
		SELECT OperationID =  @operationId
				,ProjectId = @projectId
				,	UIGroupGroupDetailId = 'LoadedFrom' + '_' + CAST(l.LocationId AS NVARCHAR)
				, UIGroupGroupDetailType = 'LoadedFrom_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
				, UIGroupGroupDetailFilterCsv = CASE WHEN Development = 1 THEN ',1,2,' 
													WHEN ServiceCrew = 1 THEN ',3,' 
													ELSE NULL END  --do better than this
				, UIGroupGroupDetailFilterParentCsv = ''
				, TextId = CONVERT(NVARCHAR(50), LocationId)
				, [Text] = l.LocationCode
				, Detail = ''
				, Group1 =  CASE WHEN l.PitID = 0 THEN '' 
								ELSE p.PitDescription END
				, Group2 = l.LocLevel
				, IsEnabled = 1
				, OrderBy = ROW_NUMBER() OVER (PARTITION BY l.LocationID ORDER BY l.LocationCode )
				, ImageFileName = ''
				,AttributesJson=''

			FROM dbo.tbl_DBT_Location AS l WITH (NOLOCK) 
				LEFT JOIN tbl_DBT_Pit AS p WITH (NOLOCK) ON l.PitID = p.PitID
			WHERE l.ProjectId = @PRojectId 
				AND l.Active = 1
				AND (ISNULL(l.LocnTruck, 0)) > 0  --put in filter here for locns allowed to be used for loaded from Field type
				--AND @appDeploymentMode <> 'stores'
				--AND @IsTruckingActive=1
				--AND @IsTestProject =0

union all 

		--destination Field Type (COMBINE INTO HAUL ROUTE???)

		SELECT	 OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = 'Destination' + '_' + CAST(l.LocationId AS NVARCHAR)
				, UIGroupGroupDetailType = 'Destination_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
				, UIGroupGroupDetailFilterCsv = CASE WHEN Development = 1 THEN ',1,2,' 
													WHEN ServiceCrew = 1 THEN ',3,' 
													ELSE NULL END  --do better than this
				, UIGroupGroupDetailFilterParentCsv = ''
				, TextId = CONVERT(NVARCHAR(50), LocationId)
				, [Text] = l.LocationCode
				, Detail = ''
				, Group1 = CASE WHEN l.PitID = 0 THEN '' 
								ELSE p.PitDescription END
				, Group2 = l.LocLevel
				, IsEnabled = 1
				, OrderBy = ROW_NUMBER() OVER (PARTITION BY l.LocationID ORDER BY l.LocationCode )
				, ImageFileName = ''
				,AttributesJson=''

			FROM dbo.tbl_DBT_Location AS l WITH (NOLOCK) 
				LEFT JOIN tbl_DBT_Pit AS p WITH (NOLOCK) ON l.PitID = p.PitID
			WHERE l.ProjectId = @PRojectId 
				AND l.Active = 1
				AND (ISNULL(l.DestTruck, 0) + ISNULL(l.[BackfillTo], 0)) > 0  --put in filter here for locns allowed to be used for destination Field type
				--AND @appDeploymentMode <> 'stores'

				--AND @IsTestProject =0

	end
 if  @IsEquipmentActive=1
BEGIN

insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

--set for LoadedBy param on trucking.  need this thing to work on device:UIGroupGroupDetailFilterCsv so we can reuse this field for othe rthings (eg Jumbo that drilled the cut) though that has always been fraught!
			SELECT	 OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = 'RelatedEquipment' + '_' + CAST(EquipmentID AS NVARCHAR)
							, UIGroupGroupDetailType = 'RelatedEquipment_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
							, UIGroupGroupDetailFilterCsv = 'tbc' /*CASE WHEN Development = 1 THEN ',1,2,' 
																WHEN ServiceCrew = 1 THEN ',3,' 
																ELSE NULL END  --do better than this*/
							, UIGroupGroupDetailFilterParentCsv = ''
							, TextId = CONVERT(NVARCHAR(50), EquipmentID)
							, [Text] = EquipmentCode
							, Detail = ''
							, Group1 = ''
							, Group2 = IIF(EquipTypeID = 57,'',EquipTypeCode) --if bogger don't require them to tap the drill (will just slow things down) hide the non-normal things away though
							, IsEnabled = 1
							, OrderBy = ROW_NUMBER() OVER (PARTITION BY EquipmentID ORDER BY EquipTypeCode,EquipmentCode )
							, ImageFileName = ''
							,AttributesJson=''
						FROM dbo.View_webbarAPI_EquipmentDetails_Maint
						WHERE EquipTypeID IN (57,19,27,107) AND Active = 1
						AND ProjectID = @ProjectId 
						--AND @appDeploymentMode <> 'stores'

			--AND @IsTestProject =0
end

 if  @IsEquipmentActive=1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

--set for jumbo who bored the cut on charge tasks.  need this thing to work on device:UIGroupGroupDetailFilterCsv so we can reuse this field for othe rthings (eg Jumbo that drilled the cut) though that has always been fraught!
			SELECT	 OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = 'RelatedEquipmentUJ' + '_' + CAST(EquipmentID AS NVARCHAR)
							, UIGroupGroupDetailType = 'RelatedEquipmentUJ_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
							, UIGroupGroupDetailFilterCsv = 'tbc' /*CASE WHEN Development = 1 THEN ',1,2,' 
																WHEN ServiceCrew = 1 THEN ',3,' 
																ELSE NULL END  --do better than this*/
							, UIGroupGroupDetailFilterParentCsv = ''
							, TextId = CONVERT(NVARCHAR(50), EquipmentID)
							, [Text] = EquipmentCode
							, Detail = ''
							, Group1 = ''
							, Group2 =''-- EquipTypeCode don't worry about this such a small list
							, IsEnabled = 1
							, OrderBy = ROW_NUMBER() OVER (PARTITION BY EquipmentID ORDER BY EquipTypeCode,EquipmentCode )
							, ImageFileName = ''
							,AttributesJson=''
						FROM dbo.View_webbarAPI_EquipmentDetails_Maint
						WHERE EquipTypeID IN (100,126,130) AND Active = 1
						AND ProjectID = @ProjectId
						--AND @appDeploymentMode <> 'stores'

						--AND @IsTestProject =0

end

 if  @IsMaterialsActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

		--Material Field Type 
						SELECT	 OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = 'Material' + '_' + CAST(m.MaterialOpID AS NVARCHAR)
								, UIGroupGroupDetailType = 'Material_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
								, UIGroupGroupDetailFilterCsv = 			+',AllActive'  --this is in so that a blank in the first Param1 field will show all locations

																		+ iif(  m.DevDrilling = 1 , ',DevDrilling' ,'')
																		+ iif(  m.DevGroundSupport = 1 , ',DevGroundSupport' ,'')
																		+ iif(  m.ProdDrilling = 1 , ',ProdDrilling' ,'')
																		+ iif(  m.Trucking = 1 , ',Trucking' ,'')
																		+ iif(  m.BoggingTasks = 1 , ',BoggingTasks' ,'')
																		+ iif(  m.ChargeUp = 1 , ',ChargeUp' ,'')
																		+ iif(  m.RaiseBore = 1 , ',RaiseBore' ,'')
																		+ iif(  m.ServiceCrew = 1 , ',ServiceCrew' ,'')
																		+ iif(  m.DiamondDrill = 1 , ',DiamondDrill' ,'')
																		+ iif(  m.Cabolting = 1 , ',Cabolting' ,'')
																		+ iif(  m.Shotcrete = 1 , ',Shotcrete' ,'')
																		 + iif(  m.AGI = 1 , ',AGI' ,'')
																		  + iif(  m.DiamondDrill = 1 , ',DiamondDrill' ,'')
																		 +','



							, UIGroupGroupDetailFilterParentCsv = ''
								, TextId = CONVERT(NVARCHAR,m.MaterialOpID)
								, [Text] = m.MaterialDescOp
								, Detail = ''
								, Group1 = ''
								, Group2 = ''
								, IsEnabled = 1
								, OrderBy = ROW_NUMBER() OVER (PARTITION BY m.MaterialOpID ORDER BY m.MaterialDescOp )
								, ImageFileName = ''
								,AttributesJson= '[{"Key":"SG","Value":'+CAST(m.SG AS varchar)+'}'	
																						+',{"Key":"MatSysId","Value":'+CAST(m.MaterialID as varchar)+'}'
																						   +']'
												--(SELECT [Key]='SG',[Value]=ISNULL(dd.SG,0) FROM dbo.tbl_DBT_Materials  AS dd WHERE m.MaterialOpID = dd.MaterialOpID  FOR JSON PATH)
							FROM dbo.tbl_DBT_Materials AS m WITH (NOLOCK)
							WHERE ProjectId = @ProjectId 
								AND m.Active = 1 
								--AND @appDeploymentMode <> 'stores'

				--AND @IsTestProject =0
		end

 if @IsWorkOrdersActive=1
begin--work orders, got this from [dbo].[SP_ShiftSummaryMaint_RefNoList] 
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

							 SELECT OperationID =  @operationId
				,ProjectId = @projectId
				, UIGroupGroupDetailId = 'RefNo' + '_' + WorkOrder
									, UIGroupGroupDetailType = 'RefNo_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
									, UIGroupGroupDetailFilterCsv = ','+RTRIM(EquipCode)+','
									, UIGroupGroupDetailFilterParentCsv = ''
									, TextId = WorkOrder
									, [Text] = WorkOrder + ' - ' + WorkOrderName
									, Detail = ''
									, Group1 = EquipCode
									, Group2 = ''
									, IsEnabled = 1
									, OrderBy = 1
									, ImageFileName = ''
									,AttributesJson=''

									--,CASE WHEN (LEFT(WorkOrder,6) = EquipCode) THEN 1	ELSE 0 END AS 'IsAdHocWO'
									FROM [dbo].[View_WebbarAPI_WorkOrder]  

								  WHERE 
								  --left this filter same for the time being
								  (ACTUALENDDATE >= DATEADD(DAY,-2,@Today) OR CAST(ACTUALENDDATE AS int) = 0 
											OR STATUSCDE = 'In Progress' OR STATUSCDE = 'Approved' OR STATUSCDE = 'Provisional' OR STATUSCDE = 'Released')  
											AND STATUSCDE <> 'Cancelled'
									AND (ProjectID = @ProjectID 
												OR (ProjectID = 0 AND OperationID = @OperationID))
												AND @IsTestProject =0
												AND @IsWorkOrdersActive =1
					UNION ALL 
						--get dummy one for missing
						 SELECT  OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = 'RefNo' + '_' + 'zz_UnknownWO'
							, UIGroupGroupDetailType = 'RefNo_1'  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
							, UIGroupGroupDetailFilterCsv = ',ALLEQUIP,'  --indicates that all equipment have access to this one.
							, UIGroupGroupDetailFilterParentCsv = ''
							, TextId = 'zz_UnknownWO'
							, [Text] = '_Unknown Work Order'
							, Detail = ''
							, Group1 = '_Unknown Work Order'
							, Group2 = ''
							, IsEnabled = 1
							, OrderBy = 1
							, ImageFileName = ''
							,AttributesJson=''
						--	where 
end



 if  @IsattributesActive=1
begin
--Attribute Lists
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

						SELECT	 OperationID =  @operationId
				,ProjectId = @projectId
				,UIGroupGroupDetailId = CASE WHEN AttTypeDesc = 'POReceiptCancelRemainder' THEN AttributeDescription 
												ELSE   AttributeDescription + '_' + CAST(AttributeID AS NVARCHAR)+ '_' + CAST(AttributeTypeID AS NVARCHAR) + '_' + AttTypeDesc --some things have different attributetypeesc for same attributeTypeid! then there was a config to decide which one to use. probably need to shift this back to attributes function if bringing this config back. it was for refuge chamber location lists in iplodsetup proc for original v2
												END
								, UIGroupGroupDetailType = CASE WHEN AttTypeDesc = 'POReceiptCancelRemainder' THEN AttTypeDesc   --this is how this one is referenced into the IntolerableList, specific for Stores POs
																ELSE 'AttrList' + '_' + CAST(AttributeTypeID AS NVARCHAR)  --I think this is how the normal attribute lists are mapped into iplod inputs. just reference it into the Intolerable in its entirety (with _ID) normal ones appear to have teh _ID stripped out on device to find the correct list?
														END
														--AttrTypeDesc + CASE WHEN AttrTypeDesc = 'POReceiptCancelRemainder' THEN ''ELSE '_' + CAST(AttributeTypeID AS nvarchar) 
																--			END  --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
								, UIGroupGroupDetailFilterCsv = ''
								, UIGroupGroupDetailFilterParentCsv = ''
								, TextId = CASE WHEN AttTypeDesc = 'POReceiptCancelRemainder' THEN  AttributeDescription  --special for the PO 
												 ELSE  CONVERT(NVARCHAR,AttributeID) END  --could put the AttributeDescription into this for other for intolerable lists use cases when they happen too?
								, [Text] =CASE WHEN AttributeDescription = 'POCancelNo' THEN 'Do NOT Cancel'  
											  WHEN AttributeDescription = 'POCancelYes' THEN 'Cancel Remainder'
											 ELSE AttributeDescription  --depending on new use cases for intolerable lists, could/should make new field for AttributeDescription Label.
											 END
								, Detail = ''
								, Group1 = ''
								, Group2 = ''
								, IsEnabled = 1
								, OrderBy = ROW_NUMBER() OVER (PARTITION BY AttributeDescription ORDER BY AttributeDescription )
								, ImageFileName = ''
								,AttributesJson= '[{"Key":"AssociatedNumeral","Value":'+CAST(ISNULL(AssociatedNumeral,0) AS varchar)+'}]'
						 FROM  --FN_GetAttributes( @projectId, '', '', 0, 0,0,'Attr') 
						 [dbo].[view_GetAttributes] vgac --2021-01-21
				--	view_GetAttributes_Cached vgac  --2021-11-13 -- 2022-01-05
          	 WHERE projectid in(0, @projectId) 
						 AND AttributeDescription IS NOT NULL  --no use putting into a list if it is null!

		-- AND @IsTestProject =0
	end
/*UNION ALL 


--Intolerable GenericList in iplod 
		SELECT	UIGroupGroupDetailId =  AttributeDescription + CASE WHEN AttrTypeDesc <> 'POReceiptCancelRemainder' THEN  '_' + CAST(AttributeTypeID AS nvarchar)  --just in case for future to avoid duplicates
																	 ELSE '' END
				, UIGroupGroupDetailType = AttrTypeDesc   --bascially matches the  InputMatchId (concat FieldType and InputId)  from input definitions
				, UIGroupGroupDetailFilterCsv = ''
				, UIGroupGroupDetailFilterParentCsv = ''
				, TextId = CASE WHEN AttrTypeDesc = 'POReceiptCancelRemainder' THEN  AttributeDescription  --special for the PO 
								 ELSE  CONVERT(nvarchar,AttributeID) END  --could put the AttributeDescription into this for other use cases when they happen too?
				, [Text] = CASE WHEN AttributeDescription = 'POCancelNo' THEN 'Do NOT Cancel'
							  WHEN AttributeDescription = 'POCancelYes' THEN 'Cancel Remainder'
							 ELSE AttributeDescription  --depending on new use cases, could/should make new field for AttributeDescription Label
							 END
				, Detail = ''
				, Group1 = ''
				, Group2 = ''
				, IsEnabled = 1
				, OrderBy = ROW_NUMBER() OVER (PARTITION BY AttributeDescription ORDER BY AttributeDescription )
				, ImageFileName = ''
		 from  FN_GetAttributes( @projectId, '', '', 0, 0,0,'Attr') 
		 WHERE AttrTypeDesc LIKE 'IV_%'   --add more to the list with this prefix
			OR AttrTypeDesc = 'POReceiptCancelRemainder'  --special one for POs
*/


 if  @IsPrestartHistoryActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

					--********************************************
					-- Prestart  +Maint History
					--*******************************************
					SELECT  OperationID =  @operationId
				,ProjectId = @projectId
				,* FROM (
											 SELECT 
													 UIGroupGroupDetailId = 'PrestartHistoryIps_' + CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, operator, equipid, [prestart question],taskname ) AS VARCHAR(20))
													, UIGroupGroupDetailType = CASE WHEN IsPrestartHist = 1 THEN 'PrestartHistory_1' ELSE 'MaintHistory_1' END 
													, UIGroupGroupDetailFilterCsv = ''
													, UIGroupGroupDetailFilterParentCsv = ''
													, TextId = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, operator, equipid, [prestart question],taskname ) AS VARCHAR(20))
													, [Text] = CASE WHEN IsPrestartHist = 1 THEN 
																CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
																 +' - '+ Shift +' - '+  Operator  
																 + iif([InputType] = 'AttrList', ': '+[Answer], '')
																 + ' - Comments: ' + Comments 
																 + '; FeedbackAdvice: ' + ISNULL(FeedbackAdvice,'')

														else 
																	[Time] + ' - ' + Operator  + ' - Comments: ' + Comments + ' - '
																	 + RefNo

																	-- ISNULL([Time],'') + ' - ' + ISNULL(Operator,'')  + ' - Comments: ' + ISNULL(Comments,'') + ' - ' + ISNULL(RefNo,'')
															END


													, Detail = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, operator, equipid, [prestart question],taskname ) AS VARCHAR(20))
													, Group1 = CASE WHEN IsPrestartHist = 1 THEN
																LEFT(EquipID,6) + ' - Faults last '+ CAST(@DaysOfHistoryForPrestarts AS VARCHAR) + ' days'
																ELSE 
																LEFT(EquipID,6) + ' - Downtime last '+ CAST(@DaysOfHistoryForPrestarts AS VARCHAR) + ' days'
																END 

													, Group2 = CASE WHEN IsPrestartHist = 1 THEN
																	isnull([Prestart Question] ,'General')
																ELSE CAST(DATEPART(dd,Date) AS VARCHAR) + '/' + CAST(DATEPART(mm,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
																	 +' - '+ Shift +' - '+ isnull(TaskName,'')
																END 



													, IsEnabled = 1
													, OrderBy = 1--order by done at top select
													, ImageFileName = ''
													,AttributesJson=''
													FROM [dbo].[View_ShiftSummary_MaintHistory] 
															/*INNER JOIN (SELECT jn = 1   --remove!!
																	UNION ALL
																	SELECT jn=1 
																	) AS b ON 1 = jn*/

											WHERE Date  > DATEADD(DD,-1*@DaysOfHistoryForPrestarts,@Today)  AND [Include] = 1 --AND InputType NOT LIKE 'Stat%'  -- Temporarily made it -100 instead of -7
											AND InputType <>'camera'  --don't take photos back down!
											--AND NOT(Comments ='' AND Answer = '')  
											AND ProjectID = @projectId

											--AND comments IS NOT NULL
											--AND comments <> ''
											--AND @appDeploymentMode <> 'stores'
											) AS tbl1 
					WHERE --text IS NOT NULL   --2021-01-21 can't put this here, it kills the query plan. need to shift it further backup stream (into the include)

					 @IsTestProject =0
					--***************************************
					--End Prestart Hist
					--****************************************
					end

 if  @IsPrestartLiveHistoryActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

					--********************************************
					-- Prestart LIVE (from wrk) History
					--*******************************************
					SELECT  OperationID =  @operationId
				,ProjectId = @projectId
				,* FROM (
											 SELECT 
													 UIGroupGroupDetailId = 'PrestartHistoryLive_' + CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, operator, equipid, [prestart question],taskname ) AS VARCHAR(20))
													, UIGroupGroupDetailType = CASE WHEN IsPrestartHist = 1 THEN 'PrestartHistory_1' ELSE 'MaintHistory_1' END 
													, UIGroupGroupDetailFilterCsv = ''
													, UIGroupGroupDetailFilterParentCsv = ''
													, TextId = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, operator, equipid, [prestart question],taskname ) AS VARCHAR(20))
													, [Text] = CASE WHEN IsPrestartHist = 1 THEN 
																CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
																 +' - '+ Shift +' - '+  Operator  + ' - Comments: ' + Comments 
																 + '; FeedbackAdvice: ' + ISNULL(FeedbackAdvice,'')
															ELSE 
																	[Time] + ' - ' + Operator  + ' - Comments: ' + Comments + ' - '
																	 + RefNo

																	-- ISNULL([Time],'') + ' - ' + ISNULL(Operator,'')  + ' - Comments: ' + ISNULL(Comments,'') + ' - ' + ISNULL(RefNo,'')
															END


													, Detail = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, operator, equipid, [prestart question],taskname ) AS VARCHAR(20))
													, Group1 = CASE WHEN IsPrestartHist = 1 THEN
																LEFT(EquipID,6) + ' - Faults last '+ CAST(@DaysOfHistoryForPrestarts AS VARCHAR) + ' days'
																ELSE 
																LEFT(EquipID,6) + ' - Downtime last '+ CAST(@DaysOfHistoryForPrestarts AS VARCHAR) + ' days'
																END 

													, Group2 = CASE WHEN IsPrestartHist = 1 THEN
																	[Prestart Question] 
																ELSE CAST(DATEPART(DD,Date) AS VARCHAR) + '/' + CAST(DATEPART(mm,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
																	 +' - '+ Shift +' - '+ isnull(TaskName,'')
																END 



													, IsEnabled = 1
													, OrderBy = 1--order by done at top select
													, ImageFileName = ''
													,AttributesJson=''
													FROM [dbo].[View_ShiftSummary_MaintHistory_LiveOnly] 
															/*INNER JOIN (SELECT jn = 1   --remove!!
																	UNION ALL
																	SELECT jn=1 
																	) AS b ON 1 = jn*/

											WHERE Date  > DATEADD(DD,-1*@DaysOfHistoryForPrestarts,@Today)  AND [Include] = 1 --AND InputType NOT LIKE 'Stat%'  -- Temporarily made it -100 instead of -7
											AND InputType <>'camera'  --don't take photos back down!
											--AND NOT(Comments ='' AND Answer = '')  
											AND ProjectID = @projectId

											--AND comments IS NOT NULL
											--AND comments <> ''
											--AND @appDeploymentMode <> 'stores'
											) AS tbl1 
					WHERE --text IS NOT NULL   --2021-01-21 can't put this here, it kills the query plan. need to shift it further backup stream (into the include)

					 @IsTestProject =0
					--***************************************
					--End Prestart Hist
					--****************************************
end


 if  @IsHazardHistoryActive=1
BEGIN

IF @projectid <> 399
  BEGIN 
      insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)
      
      			 SELECT 
      			  OperationID =  @operationId
      				,ProjectId = @projectId
      				,UIGroupGroupDetailId = 'HazardHistory_' + CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, [Location], [Other Info], [Answer] ) AS VARCHAR(20))
      					, UIGroupGroupDetailType = 'HazardHistory_1'
      					, UIGroupGroupDetailFilterCsv = ''
      					, UIGroupGroupDetailFilterParentCsv = ''
      					, TextId = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, [Location], [Other Info], [Answer] ) AS VARCHAR(20))
      					, [Text] = CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
      								 +' - '+ Shift +' - '+  Operator  + ' - Comments: ' + ISNULL(Comments ,'')
      								 + ' - Other Info: '+ISNULL([Other Info],'')
      								 + '; FeedbackAdvice: ' + ISNULL(FeedbackAdvice,'')
      					, Detail = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, [Location], [Other Info], [Answer] ) AS VARCHAR(20))
      					, Group1 = ISNULL([Location],'zz_No Location') +' (Last'+ CAST(@DaysOfHistoryForPrestarts AS VARCHAR) + ' days)'
      					, Group2 = Answer
      
      
      
      					, IsEnabled = 1
      					, OrderBy = 1--order by done at top select
      					, ImageFileName = ''
      					,AttributesJson=''    
      
      			FROM [dbo].[View_ShiftSummary_TWIHazards] 
      			WHERE Date  > DATEADD(DD,-1*@DaysOfHistoryForPrestarts,@Today)
      			AND ProjectID = @projectId
      			AND @IsTestProject =0
      END
 

ELSE IF @projectid = 399
  BEGIN 
      insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)
      
      			 SELECT 
      			  OperationID =  @operationId
      				,ProjectId = @projectId
      				,UIGroupGroupDetailId = 'HazardHistory_' + CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, [Location], [CORRECTIVE ACTIONS], [RECOMMENDATION:] ) AS VARCHAR(20))
      					, UIGroupGroupDetailType = 'HazardHistory_1'
      					, UIGroupGroupDetailFilterCsv = ''
      					, UIGroupGroupDetailFilterParentCsv = ''
      					, TextId = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, [Location], [CORRECTIVE ACTIONS], [RECOMMENDATION:] ) AS VARCHAR(20))
      					, [Text] = CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
      								 +' - '+ Shift +' - '+  Operator  + ' - Recommendation: ' + ISNULL([RECOMMENDATION:] ,'')
      								 + ' - Action Taken: '+ISNULL([CORRECTIVE ACTIONS],'')
      								 + '; FeedbackAdvice: ' + ISNULL(FeedbackAdvice,'')
      					, Detail = CAST(ROW_NUMBER() OVER (ORDER BY date, shift, projectid, [Location], [CORRECTIVE ACTIONS], [RECOMMENDATION:] ) AS VARCHAR(20))
      					, Group1 = ISNULL([Location],'zz_No Location') +' (Last'+ CAST(@DaysOfHistoryForPrestarts AS VARCHAR) + ' days)'
      					, Group2 = [HAZARD LEVEL] + ': ' + DESCRIPTION  --Answer
      
      
      
      					, IsEnabled = 1
      					, OrderBy = 1--order by done at top select
      					, ImageFileName = ''
      					,AttributesJson=''    
      
      			FROM [dbo].[View_ShiftSummary_TWIHazards_MCR] 
      			WHERE Date  > DATEADD(DD,-1*@DaysOfHistoryForPrestarts,@Today)
      			AND ProjectID = @projectId
      			AND @IsTestProject =0
      END
  END 

--stores
 if  @appDeploymentMode = 'stores' 
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

				SELECT 
				 OperationID =  @operationId
				,ProjectId = @projectId
				, UIGroupGroupDetailId = 'StoresHistory_' + CAST(ROW_NUMBER() OVER (ORDER BY Group1,Group2,Warehouse,CreatedDate,[Text] ) AS VARCHAR(20))
						, UIGroupGroupDetailType = 'StoresHistory_1'
						, UIGroupGroupDetailFilterCsv = ''
						, UIGroupGroupDetailFilterParentCsv = ''
						, TextId = CAST(ROW_NUMBER() OVER (ORDER BY Group1,Group2,Warehouse,CreatedDate,[Text] ) AS VARCHAR(20))
						, [Text]
						, Detail = '' 
						, Group1
						, Group2
						, IsEnabled = 1
						, OrderBy = 1--order by done at top select
						, ImageFileName = ''
						,AttributesJson=''
				FROM
				 View_API_PostingSummary
				 WHERE Warehouse IN (SELECT Warehouse FROM dbo.FN_GetProjectWarehouses(@ProjectID)) 
				 AND (CreatedDate > DATEADD(DD,-1*@DaysOfHistoryForStores,@Today)
						or [StatusId] <>99)  --2021-09-07
				 -- only send to stores
				 AND @IsTestProject =0
 end
 -- Raisebore
 if   @IsRaiseboreActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

					SELECT 
					 OperationID =  @operationId
				,ProjectId = @projectId
				, UIGroupGroupDetailId 
							, UIGroupGroupDetailType 
							, UIGroupGroupDetailFilterCsv 
							, UIGroupGroupDetailFilterParentCsv
							, TextId 
							, [Text]
							, Detail  
							, Group1
							, Group2
							, IsEnabled 
							, OrderBy 
							, ImageFileName 
							,AttributesJson
					FROM
					 View_ShiftSummary_RaiseboreHistory
					 --WHERE-- @appDeploymentMode = 'Raisebore' 
 end


  -- device serial numbers
 if  @IsTabletSerialsActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

SELECT 

 OperationID =  @operationId
				,ProjectId = @projectId
				, UIGroupGroupDetailId 
		, UIGroupGroupDetailType 
		, UIGroupGroupDetailFilterCsv 
		, UIGroupGroupDetailFilterParentCsv
		, TextId 
		, [Text]
		, Detail  
		, Group1
		, Group2
		, IsEnabled 
		, OrderBy 
		, ImageFileName 
		,AttributesJson

FROM
View_ShiftSummaryInsights_TabletSerialNumbers
WHERE @operationId = Operationid
end
--addnew
 if  @IsProdDrillHistoryActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

SELECT 

 OperationID =  @operationId
				,ProjectId = @projectId
				, UIGroupGroupDetailId = UIGroupGroupDetailId+cast(row_number() over (order by date,shift, LocationCode,  EquipmentCode,PvtKey  ) as varchar(20))  --2021-07-28
		, UIGroupGroupDetailType 
		, UIGroupGroupDetailFilterCsv 
		, UIGroupGroupDetailFilterParentCsv
		, TextId =cast(row_number() over (order by date,shift, LocationCode,  EquipmentCode,PvtKey  ) as varchar(20))
		, [Text]
		, Detail  
		, Group1
		, Group2
		, IsEnabled 
		, OrderBy = TextId
		, ImageFileName 
		,AttributesJson

FROM
 [dbo].[View_ShiftSummary_ProdDrillHistory]
WHERE @projectId = ProjectId
AND date >  DATEADD(DAY, - @DaysOfHistoryForProdDrill,@Today)
end


--addnew
 if  @IsPastWorkOrdersActive =1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

SELECT 

 OperationID =  @operationId
				,ProjectId = @projectId
				, UIGroupGroupDetailId 
		, UIGroupGroupDetailType 
		, UIGroupGroupDetailFilterCsv 
		, UIGroupGroupDetailFilterParentCsv
		, TextId 
		, [Text]
		, Detail  
		, Group1
		, Group2
		, IsEnabled 
		, OrderBy --= TextId
		, ImageFileName 
		,AttributesJson

 FROM dbo.[View_API_WorkOrdersHaveBeenWarehouseIssued] 
 where warehouse = @warehouse and posteddate > dateadd(day,-7,getdate())
end


if  @IsSignRegisterActive = 1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

					--********************************************
					-- Sign Register Status
					--*******************************************
					SELECT  OperationID =  @operationId
				,ProjectId = @projectId
				,* FROM (
											 SELECT 
													 UIGroupGroupDetailId = 'SignRegister_' + CAST(ROW_NUMBER() OVER (ORDER BY a.date, a.shift, a.projectid, a.[Sign Number],a.LocationID,a.SignChangeIncrement ) AS VARCHAR(20))
													, UIGroupGroupDetailType = 'SignRegister_1'  
													, UIGroupGroupDetailFilterCsv = ''
													, UIGroupGroupDetailFilterParentCsv = ''
													, TextId = CAST(ROW_NUMBER() OVER (ORDER BY a.date, a.shift, a.projectid, a.[Sign Number],a.LocationID,a.SignChangeIncrement ) AS VARCHAR(20))
													, [Text] = CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
																 +' - '+ Shift 

																 +' - Sign Number: '+  signnum.AttributeDescription 
																 + ' - Status: ' + reas.ReasonDescription
																 + ' - Reason: ' + a.Reason
																 + '; Approved by: ' + ISNULL([Authorised by],'') +
																	+ '; Installed by: ' + ISNULL(e.EmployeeName,'')
													, Detail = CAST(ROW_NUMBER() OVER (ORDER BY a.date, a.shift, a.projectid, a.[Sign Number],a.LocationID,a.SignChangeIncrement ) AS VARCHAR(20))
													, Group1 = l.LocationCode

													, Group2 = CASE WHEN SignChangeIncrement = 1 THEN 'Current Signs'
																ELSE 'Old Signs'
																END 



													, IsEnabled = 1
													, OrderBy = 1--order by done at top select
													, ImageFileName = ''
													,AttributesJson=''
													  FROM View_ShiftSummary_SignRegister AS a 
															  LEFT OUTER JOIN dbo.tbl_DBT_Location AS l 
															  ON a.LocationID = l.LocationID
															  LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS ar
															  ON a.Task = ar.ActivityreasonLinkID
															  LEFT OUTER JOIN dbo.tbl_SYS_Reason AS reas
															  ON ar.ReasonID = reas.ReasonID
															  LEFT OUTER JOIN dbo.tbl_DBT_Employees AS e
															  ON a.[Installed by] = e.EmployeeID
															  LEFT OUTER JOIN dbo.tbl_SYS_Attribute AS signnum
															  ON a.[Sign Number] = signnum.AttributeID


													WHERE 
													--SignChangeIncrement = 1 -- current signs only
													a.ProjectID = @projectId
                            AND ViewSrc = @SignRegisterSrc
											) AS tbl1 



					/*************
					 -- End Sign Register
					 **************/


end

if  @IsSignRegisterStopesActive = 1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

					--********************************************
					-- Sign Register Status stopes
					--*******************************************
					SELECT  OperationID =  @operationId
				,ProjectId = @projectId
				,* FROM (
											 SELECT 
													 UIGroupGroupDetailId = 'SignRegisterStopes_' + CAST(ROW_NUMBER() OVER (ORDER BY a.date, a.shift, a.projectid, a.[Sign Number],a.LocationID,a.SignChangeIncrement ) AS VARCHAR(20))
													, UIGroupGroupDetailType = 'SignRegisterStopes_1'  
													, UIGroupGroupDetailFilterCsv = ''
													, UIGroupGroupDetailFilterParentCsv = ''
													, TextId = CAST(ROW_NUMBER() OVER (ORDER BY a.date, a.shift, a.projectid, a.[Sign Number],a.LocationID,a.SignChangeIncrement ) AS VARCHAR(20))
													, [Text] = CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
																 +' - '+ Shift 

																 +' - Sign Number: '+  signnum.AttributeDescription 
																 + ' - Status: ' + reas.ReasonDescription
																 + ' - Reason: ' + a.Reason
																 + '; Approved by: ' + ISNULL([Authorised by],'') +
																	+ '; Installed by: ' + ISNULL(e.EmployeeName,'')
													, Detail = CAST(ROW_NUMBER() OVER (ORDER BY a.date, a.shift, a.projectid, a.[Sign Number],a.LocationID,a.SignChangeIncrement ) AS VARCHAR(20))
													, Group1 = l.LocationCode

													, Group2 = CASE WHEN SignChangeIncrement = 1 THEN 'Current Signs'
																ELSE 'Old Signs'
																END 



													, IsEnabled = 1
													, OrderBy = 1--order by done at top select
													, ImageFileName = ''
													,AttributesJson=''
													  FROM View_ShiftSummary_SignRegister_UniqueLocns_StopeSigns AS a 
															  LEFT OUTER JOIN dbo.tbl_DBT_Location AS l 
															  ON a.LocationID = l.LocationID
															  LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS ar
															  ON a.Task = ar.ActivityreasonLinkID
															  LEFT OUTER JOIN dbo.tbl_SYS_Reason AS reas
															  ON ar.ReasonID = reas.ReasonID
															  LEFT OUTER JOIN dbo.tbl_DBT_Employees AS e
															  ON a.[Installed by] = e.EmployeeID
															  LEFT OUTER JOIN dbo.tbl_SYS_Attribute AS signnum
															  ON a.[Sign Number] = signnum.AttributeID


													WHERE 
													--SignChangeIncrement = 1 -- current signs only
													a.ProjectID = @projectId
                            AND ViewSrc = @SignRegisterSrc
											) AS tbl1 



					/*************
					 -- End Sign Register stopes
					 **************/


end


--dbo.View_ShiftSummaryInsights_iPlodFAQs
if  @IsiPlodFaqsActive = 1
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

					--********************************************
					-- iPlodFAQs
					--*******************************************

											 SELECT 
                       OperationID =  @operationId
				                  ,ProjectId = @projectId
													 ,UIGroupGroupDetailId 
													, UIGroupGroupDetailType 
													, UIGroupGroupDetailFilterCsv 
													, UIGroupGroupDetailFilterParentCsv 
													, TextId 
													, [Text] 
													, Detail 
													, Group1 

													, Group2 



													, IsEnabled = 1
													, OrderBy = 1--order by done at top select
													, ImageFileName = ''
													,AttributesJson=''

													FROM  View_ShiftSummaryInsights_iPlodFAQs


													--WHERE 
												--	a.ProjectID = @projectId





					/*************
					 -- iPlodFAQs
					 **************/


end



















-- if  @IsEquipStatusActive =1
--BEGIN
--insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)

--SELECT 

-- OperationID =  @operationId
--				,ProjectId = @projectId
--				, UIGroupGroupDetailId 
--		, UIGroupGroupDetailType 
--		, UIGroupGroupDetailFilterCsv 
--		, UIGroupGroupDetailFilterParentCsv
--		, TextId 
--		, [Text]
--		, Detail  
--		, Group1
--		, Group2
--		, IsEnabled 
--		, OrderBy 
--		, ImageFileName 
--		,AttributesJson

--FROM
--View_ShiftSummaryInsights_TabletSerialNumbers
--WHERE @operationId = Operationid
--end


/*
 UNION ALL

--AppSessionLogs_

SELECT  TOP 50
 UIGroupGroupDetailId = 'AppSessionLogs_' + CAST([LogSessionInfoId] AS VARCHAR)--CAST(ROW_NUMBER() OVER (ORDER BY Group1,Group2,Warehouse,CreatedDate,[Text] ) AS VARCHAR(20))
		, UIGroupGroupDetailType = 'AppSessionLogs_1'
		, UIGroupGroupDetailFilterCsv = ''
		, UIGroupGroupDetailFilterParentCsv = ''
		, TextId = CAST([LogSessionInfoId] AS VARCHAR) --CAST(ROW_NUMBER() OVER (ORDER BY [LogSessionInfoId],Date,[Text] ) AS VARCHAR(20))
		, [Text] = 'lengthOfDataOut:' + dbo.FN_FormatDecimalAsVarchar([lengthOfDataOut],0)
						+'; TimeInDB:' +  ISNULL(TimeInDB,'not logged')  -- dbo.FN_FormatDecimalAsVarchar(TimeInDB,0)
						+'; TimeInsertToSQLLite:' +  ISNULL(TimeInsertToSQLLite,'Not logged')
						+'; brokenrulecount:' + dbo.FN_FormatDecimalAsVarchar(brokenrulecount,0)
						+'; ObjQuery>'+ dbo.FN_FormatDecimalAsVarchar(@QuerySecs,0) +'secs: ' --dbo.FN_FormatDecimalAsVarchar(brokenrulecount,0)
												+ CASE WHEN ISNULL(DeviceConfigsMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'DeviceConfigsMs:' + dbo.FN_FormatDecimalAsVarchar(DeviceConfigsMs,0)+'; ' ELSE '' END
												+ CASE WHEN ISNULL(EmployeesMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'EmployeesMs:' + dbo.FN_FormatDecimalAsVarchar(EmployeesMs,0)+'; ' ELSE '' END 
												+ CASE WHEN ISNULL(WorkTypesMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'WorkTypesMs:' + dbo.FN_FormatDecimalAsVarchar(WorkTypesMs,0)+'; ' ELSE '' END 
												+ CASE WHEN ISNULL(EquipmentsMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'EquipmentsMs:' + dbo.FN_FormatDecimalAsVarchar(EquipmentsMs,0)+'; ' ELSE '' END 
												+ CASE WHEN ISNULL(EquipmentActivitiesMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'EquipmentActivitiesMs:' + dbo.FN_FormatDecimalAsVarchar(EquipmentActivitiesMs,0)+'; ' ELSE '' END 
												+ CASE WHEN ISNULL(EquipmentMetersMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'EquipmentMetersMs:' + dbo.FN_FormatDecimalAsVarchar(EquipmentMetersMs,0)+'; ' ELSE '' END
												+ CASE WHEN ISNULL(InputsMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'InputsMs:' + dbo.FN_FormatDecimalAsVarchar(InputsMs,0)+'; ' ELSE '' END
												+ CASE WHEN ISNULL(InventoriesOnHandMs,@QuerySecs*1001) > @QuerySecs*1000 THEN  'InventoriesOnHandMs:' + dbo.FN_FormatDecimalAsVarchar(InventoriesOnHandMs,0)+'; ' ELSE '' END
												+ CASE WHEN ISNULL(StoresHeadersMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'StoresHeadersMs:' + dbo.FN_FormatDecimalAsVarchar(StoresHeadersMs,0)+'; ' ELSE '' END
												+ CASE WHEN ISNULL(DocumentsMs,@QuerySecs*1001)> @QuerySecs*1000 THEN  'DocumentsMs:' + dbo.FN_FormatDecimalAsVarchar(DocumentsMs,0)+'; ' ELSE '' END
													+ CASE WHEN ISNULL(UserMessagesMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'UserMessagesMs:' + dbo.FN_FormatDecimalAsVarchar(UserMessagesMs,0)+'; ' ELSE '' END
													+ CASE WHEN ISNULL(GenericLookupsMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'GenericLookupsMs:' + dbo.FN_FormatDecimalAsVarchar(GenericLookupsMs,0)+'; ' ELSE '' END
													+ CASE WHEN ISNULL(VendorDeliveryNotesMs,@QuerySecs*1001) > @QuerySecs*1000 THEN 'VendorDeliveryNotesMs:' + dbo.FN_FormatDecimalAsVarchar(VendorDeliveryNotesMs,0)+'; ' ELSE '' END
						+'; FailedCalls:'
												+ CASE WHEN ISNULL(DeviceConfigsMs,-1) =-1 THEN 'DeviceConfigsMs:' + '= FAILED!; ' ELSE '' END
												+ CASE WHEN ISNULL(EmployeesMs,-1) = -1 THEN 'EmployeesMs:' +  '= FAILED!; ' ELSE '' END 
												+ CASE WHEN ISNULL(WorkTypesMs,-1) = -1 THEN 'WorkTypesMs:' + '= FAILED!; ' ELSE '' END 
												+ CASE WHEN ISNULL(EquipmentsMs,-1) = -1 THEN 'EquipmentsMs:' + '= FAILED!; ' ELSE '' END 
												+ CASE WHEN ISNULL(EquipmentActivitiesMs,-1) = -1 THEN 'EquipmentActivitiesMs:' + '= FAILED!; ' ELSE '' END 
												+ CASE WHEN ISNULL(EquipmentMetersMs,-1) = -1 THEN 'EquipmentMetersMs:' + '= FAILED!; ' ELSE '' END
												+ CASE WHEN ISNULL(InputsMs,-1) = -1 THEN 'InputsMs:' + '= FAILED!; ' ELSE '' END
												+ CASE WHEN ISNULL(InventoriesOnHandMs,-1) = -1 THEN  'InventoriesOnHandMs:' + '= FAILED!; ' ELSE '' END
												+ CASE WHEN ISNULL(StoresHeadersMs,-1) = -1 THEN 'StoresHeadersMs:' + '= FAILED!; ' ELSE '' END
												+ CASE WHEN ISNULL(DocumentsMs,-1) = -1 THEN  'DocumentsMs:' + '= FAILED!; ' ELSE '' END
													+ CASE WHEN ISNULL(UserMessagesMs,-1) = -1 THEN 'UserMessagesMs:' + '= FAILED!; ' ELSE '' END
													+ CASE WHEN ISNULL(GenericLookupsMs,-1) = -1 THEN 'GenericLookupsMs:' + '= FAILED!; ' ELSE '' END
													+ CASE WHEN ISNULL(VendorDeliveryNotesMs,-1) = -1 THEN 'VendorDeliveryNotesMs:' + '= FAILED!; ' ELSE '' END					
					+ CASE WHEN ISNULL(brokenrulecount,0) >0 THEN '; BrokenRules:'+ BrokenRuleData ELSE '' END
						--+'; MaxObj.QueryTime:' + dbo.FN_FormatDecimalAsVarchar(MAX(DeviceConfigsMs,)/1000,0)
		, Detail = '' 
		, Group1 = 'DateOfCall:'+ CAST(DateCreated AS VARCHAR)+ '; DeviceName. ='+ deviceName + '; SerialNo. ='+ DeviceSerialNo 
		, Group2 = 'TimeOfCall:' + CAST(FORMAT(DateTimeCreated,'hh:mm tt') AS VARCHAR) + '; CallType:' + CallType
		, IsEnabled = 1
		, OrderBy = 1--order by done at top select
		, ImageFileName = ''
		,AttributesJson=''
FROM
[View_API_v3LogInfo]
 ORDER BY datetimecreated DESC
 */
 /*
       ,[DeviceConfigsCnt]
      ,[DeviceConfigsMs]
      ,[EmployeesCnt]
      ,[EmployeesMs]
      ,[WorkTypesCnt]
      ,[WorkTypesMs]
      ,[EquipmentsCnt]
      ,[EquipmentsMs]
      ,[EquipmentActivitiesCnt]
      ,[EquipmentActivitiesMs]
      ,[EquipmentMetersCnt]
      ,[EquipmentMetersMs]
      ,[InputsCnt]
      ,[InputsMs]
      ,[InventoriesOnHandCnt]
      ,[InventoriesOnHandMs]
      ,[StoresHeadersCnt]
      ,[StoresHeadersMs]
      ,[DocumentsCnt]
      ,[DocumentsMs]
      ,[GenericLookupsCnt]
      ,[GenericLookupsMs]
      ,[UserMessagesCnt]
      ,[UserMessagesMs]
      ,[VendorDeliveryNotesCnt]
      ,[VendorDeliveryNotesMs]
 [LogSessionInfoId]
      ,[CallType]
      ,[REquestTimeDeviceToAPI]
      ,[TimeInApi_IN]
      ,[TimeInDB]
      ,[TimeinAPI_OUT]
      ,[TimeTravelBacktoDevice]
      ,[TimeInsertToSQLLite]
      ,[Datecreated]
      ,[brokenrulecount]
      ,[lengthOfDataOut]
      ,[DeviceSerialNo]
      ,[LeftData]
      ,[2500_DataOut]
      ,[Data]

	  */
	/*	SELECT 
      'Prestart History' AS 'TitleField'
      ,LEFT(EquipID,6) + ' - Faults last 7 days' AS 'GroupingField1'


	  ,[Prestart Question] AS 'GroupingField2'
	  ,''   AS 'LineDesc'
	  ,Comments AS 'Param1'                    -- Operator comments          
      ,FeedbackAdvice AS 'Param2'    -- These are the maint Comments


	  --,CAST(Date as Varchar) 
	  -- C.A. 26/07/18 Pulled the date apart and put it the right way around here
	  ,CAST(DATEPART(d,Date) AS VARCHAR) + '/' + CAST(DATEPART(m,Date) AS VARCHAR) + '/' + CAST(DATEPART(YY,Date) AS VARCHAR)
	   +' - '+ Shift +' - '+  Operator + ' - Comments: 'AS 'Param1Desc'


	  ,'Maint Comments: ' AS 'Param2Desc'
	  , ProjectID

FROM [dbo].[View_ShiftSummary_PrestartHistory] 
WHERE Date  > DATEADD(DD,-7,GETDATE())  AND [Include] = 1 AND InputType NOT LIKE 'Stat%' 
AND NOT(Comments ='' OR Answer = '')
*/

--******************************************





if @IsTestProject = 1 
BEGIN
insert into @GroupGroup(OperationId, ProjectID, UIGroupGroupDetailId, UIGroupGroupDetailType, UIGroupGroupDetailFilterCsv, UIGroupGroupDetailFilterParentCsv, TextId, Text, Detail, Group1, Group2,  IsEnabled, OrderBy, ImageFileName, AttributesJson)


						SELECT 
							OperationID
							, ProjectID
							, UIGroupGroupDetailId
							, UIGroupGroupDetailType
							, UIGroupGroupDetailFilterCsv
							, UIGroupGroupDetailFilterParentCsv
							, TextId
							, [Text]
							, Detail
							, Group1
							, Group2
							--, IsDeleted
							, IsEnabled
							, OrderBy
							, ImageFileName
							,AttributesJson

						FROM dbo.zTestUIGroupGroupDetail AS Look WITH (NOLOCK)
						WHERE ProjectId = @ProjectId AND @isPurge = 1 AND @IsTestProject =1
						AND @appDeploymentMode =Deploymentmode
						AND (Look.UIGroupGroupDetailType LIKE '%history%' OR Look.UIGroupGroupDetailType LIKE 'refno%')
						ORDER BY group1
	end


	SELECT OperationId
         , ProjectID = @OrigProj
         , UIGroupGroupDetailId
         , UIGroupGroupDetailType
         , UIGroupGroupDetailFilterCsv
         , UIGroupGroupDetailFilterParentCsv
         , TextId
         , Text= [Text] + CASE WHEN @showDebugIds = 1 THEN ', AttrJson:'+ISNULL(AttributesJson,'') ELSE '' END
         , Detail
         , Group1
         , Group2
         , IsDeleted =0
         , IsEnabled
         , OrderBy= case when UIGroupGroupDetailType like '%history%' then --if history type views, then order by textId (which has date and shift incorporated) so dates go in correct order
										 row_number() OVER (PARTITION BY UIGroupGroupDetailType ORDER BY  ISNULL(tbl.Group1,''),ISNULL(tbl.Group2,''),[dbo].[FN_StringPad]([TextID],5,'0' ) )  --pad the textid or back to where we started!
						else row_number() OVER (PARTITION BY UIGroupGroupDetailType ORDER BY  ISNULL(tbl.Group1,''),ISNULL(tbl.Group2,''),[Text] )
						end
         , ImageFileName
         , AttributesJson

		 from  @groupgroup
		 as tbl



		 if @DebugMode = 1
		 begin
		 --put whatever you want to test in here:
					SELECT * FROM (
					select OperationId
					 , ProjectID
					 , UIGroupGroupDetailId
					 , UIGroupGroupDetailType
					 , UIGroupGroupDetailFilterCsv
					 , UIGroupGroupDetailFilterParentCsv
					 , TextId
					 , Text= [Text] + CASE WHEN @showDebugIds = 1 THEN ', AttrJson:'+ISNULL(AttributesJson,'') ELSE '' END
					 , Detail
					 , Group1
					 , Group2
					 , IsDeleted =0
					 , IsEnabled
					 , OrderBy= case when UIGroupGroupDetailType like '%history%' then --if history type views, then order by textId (which has date and shift incorporated) so dates go in correct order
													 row_number() OVER (PARTITION BY UIGroupGroupDetailType ORDER BY  ISNULL(tbl.Group1,''),ISNULL(tbl.Group2,''),[dbo].[FN_StringPad]([TextID],5,'0' ))
									else row_number() OVER (PARTITION BY UIGroupGroupDetailType ORDER BY  ISNULL(tbl.Group1,''),ISNULL(tbl.Group2,''),[Text] )
									end
					 , ImageFileName
					 , AttributesJson
					 ,orderbytextid =  row_number() OVER (PARTITION BY UIGroupGroupDetailType ORDER BY  ISNULL(tbl.Group1,''),ISNULL(tbl.Group2,''),[TextID] )
					 ,orderbytext = row_number() OVER (PARTITION BY UIGroupGroupDetailType ORDER BY  ISNULL(tbl.Group1,''),ISNULL(tbl.Group2,''),[Text] )
					 from  @groupgroup as tbl
				where [UIGroupGroupDetailType] like '%history%'
				) as tbl2
				order by UIGroupGroupDetailType,OrderBy
		 end

	END
-- Get the latest system error.
SELECT @Error = @@ERROR WHERE @Error = 0
IF (@Error <> 0)
BEGIN
	RETURN @Error
END

-- Finish now.
RETURN 0
GO
PRINT N'Refreshing [dbo].[View_API_InventoryOnHand]'
GO
EXEC sp_refreshview N'[dbo].[View_API_InventoryOnHand]'
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_DataSummary]'
GO
ALTER PROCEDURE [dbo].[SP_ShiftSummary_DataSummary] @ProjectID INT, @Type VARCHAR(25) = 'Mining'  -- =TypeAlias from page URL  ... could be mining1 or mining2 or maintenance
    ,  @Date DATE, @Shift VARCHAR(2), @Mode NVARCHAR(35) = '',@SupervisorId INT = 0, @CrewId INT= 0, @UserId INT= 0, @ActivityReasonCsv NVARCHAR (50) =''

    AS
    BEGIN
        /*
             select * from tbl_DWH_iplodstaging

				  EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = '194', @UserId = '137', @CrewId = '46', @SupervisorId = '12881', @Mode = 'DataV', @Type = 'Mining', @Date = '2021-10-17', @Shift = 'DS'
				   EXEC [dbo].[SP_ShiftSummary_DataSummary_20210810] @ProjectID = '399', @UserId = '137', @CrewId = '46', @SupervisorId = '12881', @Mode = 'DataV', @Type = 'Mining2', @Date = '2021-08-04', @Shift = 'NS'

				  EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = '259', @UserId = '137', @CrewId = '46', @SupervisorId = '12881', @Mode = 'DataV', @Type = 'Mining1', @Date = '2021-05-04', @Shift = 'NS'


				  EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = '399', @UserId = '137', @CrewId = '46', @SupervisorId = '12881', @Mode = 'DataV', @Type = 'Mining1', @Date = '2021-08-04', @Shift = 'NS'
				   EXEC [dbo].[SP_ShiftSummary_DataSummary_20210810] @ProjectID = '399', @UserId = '137', @CrewId = '46', @SupervisorId = '12881', @Mode = 'DataV', @Type = 'Mining1', @Date = '2021-08-04', @Shift = 'NS'

			 perfect day:
			 EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = 53, @Type = 'PerfectDay', @Date = '2019-10-15', @Shift = 'NS'

             EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = 194, @Type = 'Mining', @Date = '2019-07-04', @Shift = 'NS'

             EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = 259, @Type = 'Mining1', @Date = '2021-01-31', @Shift = 'DS'  --manage-repo-test (without query plan on) : 0-1 secs 289 rows


		EXEC [dbo].[SP_ShiftSummary_DataSummary] @ProjectID = '399', @UserId = '137', @CrewId = '48', @SupervisorId = '12982'  --manage-mcr-cloud (with query plan on): 7 secs 284
		, @Mode = 'DataV', @Type = 'Mining2', @Date = '2021-07-25', @Shift = 'NS'

        TS 2018-09-18 ... chanbges to maint section
        IP 2018-10-04 add handler to PartsList, the InputType is as it is, not changed to ConsArea
        TS 2018-10-11 ... further changes to maint section ... only showing parts list inputs
        CA 2018-12-20 ... Added Shiftboss Type to mining shift summary for non shiftboss tasks (ProcessID <> 25)
        AD 2019-01-31 ... add handler for @type = mining1 / mining 2 etc
        TS 2019-02-02 ... add pitId to all sets
                            further filtering for types
        TS 2019-02-12 ... removed this for 24hr summary (should take the whole section out on type alias config
                        ... prepared the overtime bit for ActReason = 1489
        IAN 2019-05-16 ... added check 24hr type to the maint
        AD 2019-06-24 ... add case when inputValue = stat calc and has >2 decimal places Round value
             TS 2019-07-11 ... add commenst about delay task duration
                                        ... rounded all statcalcs to 1 decimal. were still getting weird multiple decimals on the summary row on front end for some reason.
             TS 2019-07-14  ... revert the comments about delay task duration ...this isn't a good idea because it will get saved to the data for any line edited. not for lines not edited.
             TS 2019-07-22  ... reduced rounding to zero decimals
             TS 2019-07-23 ... task alias
             CA 2019-07-24 ...Fix VIV bogging special handling
             IP 2019-07-24 ... add dummy ShowButtonDayworks field
             AD 2019-08-18 ... Shift changeLog field to changeLog table
             AD 2019-08-19 ... use the existing table change log, fix duplicate change 
             IP 2019-08-21 ... change changelog query to fix changelog pivot issue
             TS 2019-09-03 ... add RefNo for maint (not editable, they can change it up top in the timeline only)
                                 ... added ItemId on desc parts list
             TS 2019-09-12 ... add config for the post parts, will need to source this out of a view when we get cracking with it. the intent is to use config @PartsUsedEquipTypeIdfilter to turn it on for LV fitter only at PEA.
             CA 2019-09-13 ... Added Config for show dayworks button
             CA 2019-09-24 ... Added exception for record ground noise and record scaling as a new config. 
			 CA 2019-10-01 ...Made AdHoc stocktakes appear on Maint - ARID 1602
			 AD 2019-10-13 ... show Question data on summary
			 CA 2019-10-22 ...Made Special handling for Charge Up Shutdown checks to be red
			 ts reverted ca's addition of type = 'elect'  ... the iplod data wont have this on it anyway

			 TS 2019-11-23 ... only show question inputs for normal shareable controls (in mining set)
							... add act reason multi proect (in mining set)
							...add whole new dataset for Perfect Day
			ts 2019-11-26 ... added the else on perfect day set
			IP 2019-11-04 ... capitalize first letter on YNRadio answer to make it uniform related to front end (#1266) 
			TS 2019-12-17 ... remove Perfect day
							... put scalar pit id check onto inital variable instead of in line of the WHERE
							... put the change log on join dataset down below
			TS 2019-12-18 ... fix the max partition thing for last local stagingid
			IP 2020-01-07 ... fix Changelog not retrieved correctly on ConsArea 
			IP 2020-01-15 ... added SHareable filter to match fields returned with SP_ShiftSummary_DataSummary_ParamsInputsSetups
						  ... added query to get AttrList Value
			CA 2020-01-23 ...Fix for Peak bogging
			IP 2020-02-24 ... change query to use FN_GetAttribute
			CA 2020-02-27 ... Commented out Attr join...it was breaking the TWI hazards. search for date to find

			IAN 2020-02-27 ... Added AllowChangeTask params
				           ... Added fields for Edit/Change task

			FM 2020-02-27 ... added @Mode, @SupervisorId, @CrewId, @UserId params no changes on query (1568)
			IP 2020-03-05 ... change the changelog join
			AD 2020-03-10 ... remove OR i.InputGroup <> '', the handler is on PHP right now
			IP 2020-03-30 ... added query to get AttrList Value
			ts 2020-04-17 ... type alias get from new function
						removed:ts 2020-04-20 TEMPORAY SWITCH ONLY ON CENTRAL< REVERT AFTER FIX PARTS LIST
			ts 2020-04-22 ... added is null handling for maint parts list
			CA 2020-04-30 ...Added @ProjectId to select for shiftsummary sepecific config value. Was bringing TWI's into all projects. Date stamped on the line. 
			CA 2020-05-04 ... Added colour handling for TWIs. 
						  ... Removed excludefromweb! Discussed with TS
						  ... All to get TWIs on shift summary working
			CA 2020-05-05 ...Commented out the Q inputType line. Search for this date to find it.
			CA 2020-06-10 ...Hide No further action required on shift summary
			CA 2020-06-11 ...Fix TWI join
						  ...Set No Count on
			ts 2020-08-27 ... pit fileter should also look at desitaiont pitid! for CRF task that has no location field.
			ts 2020-11-23 ... safeguard the join to attributes INT
			ts 2020-11-25 ... added actreasonCsv call for debugging
			ts 2020-11-30 ... add INputComment 
			ip 2020-12-01 ... add AllowFormEdit flag (#A2332)
			ts 2020-12-17 ... modified the filter to utilise the reproting bitwise flag
							... also permission the Edit Form button
		ts 2020-12-18		.... "fix" TypeID to support pea
							... bogging Process split by processid instead of actreason list
			IP 2021-01-05 ... Added InputPhoto for displaying photos on data summary

			ts 2021-03-01 ... try removing the old complicated filters ... handle everything with reportin bitwise instead mainly to get the ground support form to come back)
			CA 2021-03-05 ... Fixed handling for showing TWIs and Ground noise. Ground noise poorly done, hardcoded. Needs a config or sometihng. Search for 1643. 
			ts 2021-03-10 ... remove dayworks join for speed
			CA 2021-03-24 ... Removed IsNull on reportingbitwise in where and in join. Sargable!
			ts 2021-06-01 ... fix teh OR =camera. not sure who or why. probably is a good idea though as camera input types will just be a hyperlink, no need not to show them
			ts 2021-06-03 ... shutdowns no working ofr mining1
	ts 2021-06-09 .. put taskalias of electronic forms into groupheader so we don't get too many fields
	ip 2021-06-15 ... added ApiButtonsJson for sending AMT API 
			ts 2021-07-26 ... merge to MCR
							.. various optimisations {didn't do anything I don't think}  add s.LoadedFrom>0 (reverted, likely worse becuase these fields not in indexes?
											{likely shaved a second off it}   add proj/date/shift on s in the stat7 EXISTS
											{meh, better a bit}  added [IPSECL_SSDataSummary_ReportingBitWise_v2] for the stat7 join
											{don't think it helped. maybe marginally worse REVERTED}  add projectid to location table and other DBT tables
											{yeah don't think it changes much}   remove s.date/proj/shift from teh stat7 join
											{I think marginally worse, reverted}   add reporting bitwise to teh inputs join WHERE
											{}  just do reportingbiws> 0 on the inputs join
			ts 2021-08-10 ... optimisations
								{not (much) worse} join on explicit fields instead of @variables
								{} change to cached attributes
								{same time, but doesn't parse the whole table.} this inner join was parsing the whole table: MaxLocalStaging try inline
								{}  put this index in (didn't actually change much)idxTMP_ips_DataSummary
								{} shift the bitwise to the join. reverted becuase it did't change much and mucked up the logic
								{} add this on teh bitwise filters 	and stat7.ReportingBitwise >= @ReportingBitwiseValue 
			ts 2021-08-12 ... remove the camer fitler inside the actreason join
							... remove the whole filter actaully, was flicking it back to other ProjectId (taht did have the rpeortin bitwise)
							{fail} join actinput without sub query, but can't put the rownum into the ON clause
							{nah, very bad}  swap actinput table with iplodtaskdtails outer apply.
							{also very bad.}  join instead of apply
							{put the i table up as cte}  ... appears to have halved it (1sec instead of 2) not sure the query plan is any different though.
			ts 2021-08-13 ... join to attributes table should have AttrTypeId too.
							... added  with (nolock) but not on ips due to data integrity.
							... don't get shareable.
							try putting hard coded projectid?
							put it in a # table instead
			ts 2021-02-18 ... don't get attributes from cached table, well syn. can flick the syn over when we have teh cache build schduled properly
			ts 2021-08-24 ... config the create defect
			CA 2021-09-15 ... StatCalc exception for roudning Drillm (stat 2). Changelog previously mentions broken rounding, so quick fix done. 
			CA 2021-10-13 ... Fixed TWI grab
			CA 2022-11-17 ... Added isnull on process field

... this is not fully resolved. need to figure out how to sort the TWIs stuff, and whether or not to show a task at all (use ReportingBitWise on Stat7 to turn on a task)





        */

		SET NOCOUNT ON

        DECLARE @TrkGrouping as Varchar (20)
        SET @TrkGrouping = (SELECT isnull(ShiftSummary_TrkGrouping,'Location')  FROM dbo.tbl_DBT_Project WHERE Projectid = @ProjectID);

		DECLARE @IsDbAdmin int = dbo.FN_IsWebbarFullAdmin(@userId)

        DECLARE @InclMiningARIDs as varchar(100)
        SET @InclMiningARIDs = isnull((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_IncludeInShiftSummaryMining' AND Active = 1 ),0)

        DECLARE @TypeAliasMethod int
        SET @TypeAliasMethod = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@Type,1,'TypeAliasMethod','DataV')); --  methods are    0 --> no Type Alias used, just mining and maint

        DECLARE @Is24HrSummary INT
        SET @Is24HrSummary = CASE WHEN @Type like '%24' THEN 1 ELSE 0 END                                                                                                                                                                                                                                          --  1 --> PitId (aka work area)

        DECLARE @MaintOverTimeActive int
        SET @MaintOverTimeActive = dbo.FN_GetConfigValue(@ProjectId,'OverTimeMaint')

             DECLARE @PartsUsedEquipTypeIdfilter nvarchar(50) = ISNULL(dbo.FN_GetConfigValue(@ProjectId,'PostPartsUsedEquipTypeIds'),0);
             DECLARE @IsPartsPostActive int
             SET @IsPartsPostActive = CASE WHEN @PartsUsedEquipTypeIdfilter=0 THEN 0 ELSE 1 END

             DECLARE @Dayworks INT 
             SET @Dayworks = (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias(@ProjectID,@type,1,'Show_DayworksButton'))

			 DECLARE @DayWorksInputsCsv NVARCHAR(500) = dbo.FN_GetConfigValue(@ProjectID, 'DayworksInputCsv'); -- stat 156 = chargeableequiphours

DECLARE @TypeAliasPitId int = [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type);

DECLARE @ShowTWIHazards INT = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ShiftbossTWIReview'), 0) AS INT)

	DECLARE @AllowChangeTask INT = 1

   DECLARE @TypeId INT =IIF(@type LIKE 'mining',1,0) --not sure on the history of this fukker .. it is killing PEA type aliases. I think it is probably for the iplod type conversion to ids dbo.FN_ConvertType_TypeCode_To_TypeID(@Type);

   DECLARE @ReportingBitwiseValue INT = (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectID,@Type,@TypeId,'DataSummaryReportingBitwiseFlag',@Mode));
   -- DECLARE @ReportingBitwiseValue INT = (SELECT TOP 1 ReportingBitwiseValue FROM [dbo].[tvf_ReportingBitWise](@ProjectID) WHERE ModeCode = @Mode)


	DECLARE @AllowedToEditForms nvarchar(255) = IIF(@IsDbAdmin=1 ,1,ISNULL((select PermissionConfigValue from [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'ShiftSummary','_AllMiningTypes','_AllModes','AllowedToEditForms')),0)
														)

        declare @PutAliasIntoHeaderForElecForms int = 1
		declare @AllowPostDefectsForPrestarts int = 0

/*************
Get TWI data that has a 'Further Action Required' not equal to No. 
Then we join this to the main dataset to pull in both 'Further Action Required' and also 'Hazard'
**************/

	SELECT DISTINCT 
				s.DetailID,
				s.DataStoreID,
				s.Sequence 
			INTO #TWIJoin
	FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
		LEFT OUTER JOIN dbo.tbl_DBT_Location AS l 
			ON l.LocationID = s.Location
	INNER join  [dbo].[FN_Iplod_GetAR_TaskGroupings]('reportingsplits','')  AS prs  -- 2020-04-20
					ON s.ActivityReasonID = prs.ActivityReasonID
					AND prs.HasHazards = 1
			AND s.InputID IN (93)
		   AND s.InputValue <> '238' 
		   AND date = @Date 
		   AND @Shift = s.Shift 
		   AND @ProjectID = s.ProjectID
			 AND (s.Type = 'mining'
						OR s.Type = 'Shiftboss' OR s.Type = '') -- 2018-12-20

					  AND (@TypeAliasMethod = 0   --no type alias used
						OR --[dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) 
						@TypeAliasPitId= l.PitID) 
		   AND @ShowTWIHazards = 1
		   UNION ALL 
		   SELECT 1,'1',1
		   WHERE @ShowTWIHazards = 0;


--delete if exists, got into a spot of bother at HRA one time where a temp table had not been released.
IF OBJECT_ID(N'tempdb..#inputs') IS NOT NULL
BEGIN
DROP TABLE #inputs
END





        --SELECT @TrkGrouping
        ------------------------------------------------------------------------------------------------------------------------------------
        -- Mining
        ------------------------------------------------------------------------------------------------------------------------------------
        IF @Type LIKE 'Mining%'
            BEGIN
             -- ;with inputs as (
			  select   -- Changed from Inner Join to bring in TWI stuff
								InputType
								,InputID
								,InputGroup
								,DisplayOrder
								,AftLabel
								,ForeLabel
								,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )  --get from @project first, then Proj1
								,ActReasonLinkID
								--,ExcludeFromWeb
								--, Shareable
								,ReportingBitwise
							into #inputs
							from
								[dbo].[tbl_DBT_ActReasonInputLink] as i with (nolock)
								WHERE ProjectID IN(1,2, @ProjectId)
									--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
									--AND Shareable <> ''
									-- AND @ReportingBitwiseValue & ISNULL(ReportingBitwise, 0) = @ReportingBitwiseValue -- Turned off because we changed to left outer and filter in the where.
								--can't put this because it can flick onto the other project:	and ReportingBitwise>= @ReportingBitwiseValue				-- or InputType = 'Camera'  --2021-08-10
									--and ((@ReportingBitwiseValue & ReportingBitwise = @ReportingBitwiseValue) OR InputType = 'Camera' )  --added back in, try to optimise query.
--)

CREATE NONCLUSTERED INDEX #inputsxxx
ON [dbo].#inputs ([InputType],[InputID],[RowNum],[ActReasonLinkID])
INCLUDE ([InputGroup],[DisplayOrder],[AftLabel],[ForeLabel],[ReportingBitwise])



			  SELECT
                     s.ProjectID
                     ,s.Date
                     ,s.Shift
                     ,s.OperatorID AS  'OperatorID'
                     --'ProcessID'
                     ,s.StagingID
                     ,s.DataStoreID
                     ,e.EmployeeName +  IIF(@IsDbAdmin =1 ,' '+CAST(s.OperatorID AS VARCHAR) ,'' )+ ' (' + eq.EquipmentCode +  IIF(@IsDbAdmin =1 ,' '+CAST(eq.EquipmentCodeID AS VARCHAR) ,'' )+ ')' AS 'Operator'
                     --'Process'
                     --,CASE WHEN aretc.ProcessID = 13 THEN -13 ELSE aretc.ProcessID END AS ProcessID
                     --s.OperatorID AS 'OperatorID'
                     ,CASE WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'SourceCode' THEN ISNULL(l.SourceID, '')--6
                           WHEN  aretc.ProcessID IN (5,6) AND @TrkGrouping = 'Location' THEN ISNULL(s.Location, '')
							WHEN aretc.ProcessID =5--2020-12-18i.ActReasonLinkID IN (1505,1506,1507,1508) 
											AND @TrkGrouping = 'Process' THEN ISNULL(i.ActReasonLinkID, '')
							 when @PutAliasIntoHeaderForElecForms = 1 and aretc. IsElecForm = 1 then  ISNULL(i.ActReasonLinkID, '')
						   WHEN aretc.ProcessID = 13 THEN -13 ELSE ISNULL(aretc.ProcessID, '') END as ProcessID
                     --,aretc.ProcessDescription AS 'Process'
                     --,'OperatorName' AS 'Process'  -- for swapping to operator view
                     ,CASE WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'SourceCode' THEN ISNULL(l.SourceCode, '')
                           WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'Location' THEN ISNULL(l.LocationCode, '')
						    WHEN aretc.ProcessID =5--2020-12-18i.ActReasonLinkID IN (1505,1506,1507,1508) 
									AND @TrkGrouping = 'Process' THEN ISNULL(aretc.taskname, '') --dbo.FN_IsNullorEmpty(aretc.taskname,aretc.ReasonDescription)
                                       --THEN 'Trucking and Bogging' ELSE aretc.ProcessDescription END as Process  --for swapping to truck and bog view
                            when @PutAliasIntoHeaderForElecForms = 1 and aretc. IsElecForm = 1 then ISNULL(aretc.ProcessDescription, '') + ' - '+ISNULL(aretc.taskname, '')
						   else ISNULL(aretc.ProcessDescription, '') END as Process
                     -- colour source http://www.colors.commutercreative.com/grid/
                     ,CASE
                          WHEN aretc.ProcessID IN (5, 6)
                              THEN 'Tan'
						  WHEN aretc.ActivityID = 2 AND aretc.[ActivityReasonId] = 1603 THEN 'crimson' -- 2019-10-23
						  WHEN aretc.ActivityID = 2 
							AND (aretc.[ActivityReasonId] IN (SELECT ActReasonID FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WHERE AR_GroupingName = 'AR_TWIs')
										OR aretc.[ActivityReasonId] = 1643
										 OR aretc.ProcessID = 16 --saftey stuff
										 ) 
							  THEN 'Coral'
                          ELSE 'SteelBlue'
                                       END AS 'ProcessColour'

                     --,aretc.ActivityDescription as 'Activity'
                     ,'TaskDescription'=CASE
                                       --   WHEN aretc.ProcessID IN (5,6) THEN l.LocationCode
                          WHEN aretc.ActivityID <> 1 THEN ActivityDescription + ' - ' +eq.EquipmentCode+' - ' +ReasonDescription
                          ELSE  aretc.taskname --dbo.FN_IsNullorEmpty(aretc.ReasonAlias,aretc.ReasonDescription)
                                       END 
									   + IIF(@IsDbAdmin =1 ,' '+CAST(aretc.[ActivityReasonId] AS VARCHAR) ,'' )

                     --add equipmentID into this CASE to get equipment into taskdescription in case want to see summary against different equipment
                     ,CommentsCheck = s.CommentsCheck --+ IIF(ISNULL(delayhrs.delayhrs,0)>0,' (incl. ' + CAST(delayhrs.delayhrs AS varchar) +'hrs of delays)','')
                     ,RTRIM(eq.EquipmentCode) AS 'EquipID'
                     ,m.MaterialDescOp AS 'Material'
                     ,l.LocationCode AS 'Location'
                     -- ,CASE WHEN aretc.ProcessID IN (5,6) AND ActivityReasonID = 113 THEN aretc.ReasonDescription
                     -- WHEN aretc.ProcessID IN (5,6) and ActivityReasonID <> 113  THEN 'Load and Haul' ELSE l.LocationCode END AS Location
                     ,s.LocSource
                     ,s.LocDest
                     ,d.LocationCode AS 'Destination'
                     ,s.InputID
                     ,s.InputType

                     --  , case when s.InputType = 'Stat' and s.InputID = 7 then s.inputvalue  else s.InputValue end as 'InputValue'
                     --this is trying to get rid of many decimals on screen for statcalcs (giving conversion error, even though it should only be doing it for stats)... ,InputValue = CASE WHEN s.InputType = 'StatCalc' THEN CAST(s.InputValue  as float) ELSE s.InputValue END--CASE WHEN s.INputType = 'AttrList' THEN isnull(att.AttributeDescription,0) ELSE s.InputValue END AS 'InputValue'

                     -- WHEN Inputvalue has >2 decimal places THEN ROUND
                     ,InputValue = CASE
											
										-- Should have done better than specifically not rounding this calc, but see statcalc comment in changelog about dec places running errant on summary, so did a quick fix here.
										WHEN s.InputType = 'StatCalc' AND s.InputID = 2
										THEN CAST(CAST(s.InputValue AS FLOAT) AS VARCHAR(MAX))
										
										--  WHEN s.INputType like 'Stat%' AND s.INputId = 7 THEN dbo.FN_GetDuration(STartTime, EndTime) - ISNULL(delayhrs.delayhrs,0)
										WHEN s.InputType = 'StatCalc' --AND i.InputID IN (18,37) --AND (((abs(CAST(s.InputValue  as FLOAT))*100) - CONVERT(INT,(abs(CAST(s.InputValue  as FLOAT))*100))) <> 0)
										THEN
											CAST(ROUND (CAST(s.InputValue AS FLOAT), 0) AS VARCHAR(MAX))
										WHEN (s.InputType = 'Q' AND qt.AnswerType = 'YNradio')
										THEN
											UPPER(LEFT(s.InputValue, 1)) + LOWER(SUBSTRING(s.InputValue, 2, LEN(s.InputValue)))
									    WHEN (s.InputType = 'AttrList') --2020-02-27
									    THEN --2020-02-27
											(SELECT TOP 1 AttributeDescription FROM [dbo].[view_GetAttributes]--2021-08-18[dbo].[view_GetAttributes_Cached]--2021-08-10 [dbo].[FN_GetAttributes](@ProjectID, '', '', 0, s.InputID, 0, 'Attr') 
														WHERE CAST(AttributeID AS NVARCHAR(50)) = CAST(s.InputValue AS NVARCHAR(50))
														AND [AttributeTypeID] = s.[InputID]) --2020-02-27
										ELSE
											s.InputValue
									END

                     --,s.InputValue
                     --,RefNo
                     ,s.ConsumableProjectID
                     ,CASE
                          WHEN ISNULL(s.ConsumableProjectID, 0) <> 0 THEN (SELECT
                                                                               ConsumableID
                                                                           FROM tbl_DBT_ConsumablesProjectLink
                                                                           WHERE ConsumableProjectID = s.ConsumableProjectID)
                          ELSE 0
                                       END AS 'ConsumableID'
                     ,os.EmployeeName AS 'Offsider'
                     ,GroundCond = [GroundCondDesc]
                     ,la.LocationCode AS 'LoadedFrom'
                     ,bf.BogFromDesc AS 'BogFrom'
                     ,bt.BogToDesc AS 'LoadedTo'
                     ,re.EquipmentCode AS 'RelatedEquipment'
                     ,ISNULL(s.ClientDelay, 0) AS 'ClientDelay'
                     --,ISNULL(s.Damage, 0) AS 'DamageCheck'
                     ,s.DetailID
                     --,REPLICATE('0', 4 - LEN(s.StartTime)) + s.StartTime AS 'StartTime'
                     --,REPLICATE('0', 4 - LEN(s.EndTime)) + s.EndTime AS 'EndTime'
                     ,lp.Profile AS 'Profile'
                     ,ISNULL(s.Sequence, 0) AS 'Sequence'
                     ,s.ActivityReasonID AS 'ActivityReasonLinkID'
                     ,ForeLabel=COALESCE(i.ForeLabel,[st].[StatisticCode],[qt].[QuestionText],'Take Photo')  --assume the missing one will be take photo because of the join. fix properly if needed.
                     ,cons.ConsumableDescShort
                     ,i.AftLabel
                     -- ,case when i.AftLabel = 'hrs' then ''
                     -- when s.inputtype like 'stat%' and s.inputid = 6 then '1'
                     --  else i.AftLabel end as 'AftLabel'   -- need to add a case when <> stat 7  remove aft label
                     --,ISNULL(i.ReviewTrap, 0) AS 'ReviewTrap'
                     ,st.StatisticTypeID
                     ,s.Reviewed AS 'Reviewed'
                     ,SupervisorComments = s.SupervisorComments
                                 ,LastLocalStagingID =--2021-08-10, try here MaxLocalStaging --MAX(s.LocalStagingID) OVER (PARTITION BY s.DataStoreID, s.DetailID ORDER BY s.DataStoreID, s.DetailID)
														(SELECT MaxLocalStaging FROM (SELECT MaxLocalStaging= MAX(LocalStagingID), DetailId, DataStoreID  --, [md].[ProjectID], [md].[Shift], [md].[Date]
																					FROM [dbo].[syn_DWH_iPlodStagingTable] AS md
																					WHERE md.date = @date-- s.date
																					AND md.ProjectID = @ProjectID -- s.[ProjectID]
																					AND md.shift = @shift --s.shift
																					--and md.[DetailID] = s.[DetailID]
																					--and md.[DataStoreID] = s.[DataStoreID]
																					GROUP BY DetailId, DataStoreID --, [md].[ProjectID], [md].[Shift], [md].[Date]

																					) LastStagingId
																				WHERE s.DetailID = LastStagingId.DetailID
																				AND s.DataStoreID = LastStagingId.DataStoreID)

                                 ,s.LocalStagingID
                                 -- ,ChangeLog = chnglg.ChangeLog 
                     ,l.pitid
                     ,Method = CASE
                          WHEN (st.StatisticTypeID = 9 OR s.InputType LIKE 'Attr%' OR s.Inputtype = 'ConsArea' OR s.InputType = 'Q') THEN 'Group' -- exclude attributes from grand total
                          WHEN st.StatisticTypeID = 10 THEN 'SUM'
                          ELSE 'SUM'
                      END
                     ,i.InputGroup
                     ,ShowButtonDayworks = @Dayworks * CASE WHEN (@DayWorksInputsCsv LIKE '%,' + s.InputType + '_' + CAST(s.InputID AS VARCHAR) + ',%') THEN 1 ELSE 0 END  --2021-03-10 mayeb this needs to show on all lines for a task, even if only some of them are dayworks lines?!  -- ISNULL(dw.IsDayWorksTask,  0)
                     ,i.DisplayOrder
                     -- ,aretc.ReasonAlias
					 ,l.LocationID
					 ,eq.EquipmentCodeID
					 ,s.StartTime
					 ,s.EndTime
					 ,AllowChangeTask = @AllowChangeTask
					 ,ChangeLog = STUFF(
							(SELECT CASE 
								WHEN ISNULL(l.NewValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								WHEN ISNULL(l.ExistingValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								WHEN ISNULL(l.ExistingValue, '') = '' AND ISNULL(l.NewValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								ELSE '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								END
								FROM dbo.[tbl_DWH_iPlodStagingEditedChangeLog] AS l
								LEFT JOIN dbo.tbl_SYS_User AS u
									ON l.UserID = u.UserID
								WHERE l.ProjectID = s.ProjectID
									AND l.UpdateType = 'Edit_DataSummary'
									AND l.DataStoreID = s.DataStoreID
									AND l.DetailIDCsv LIKE '%,' + CAST(s.DetailID AS VARCHAR(5)) + ',%'							
									AND (l.SequenceIDCsv IS NULL OR ( l.SequenceIDCsv IS NOT NULL AND l.SequenceIDCsv LIKE '%,' + CAST(s.Sequence AS VARCHAR(5)) + ',%'))
								ORDER BY l.RowID ASC
							FOR XML PATH (''))
							,1,1,'')
					,s.InputComment
					,s.InputPhoto
					,AllowFormEdit = @AllowedToEditForms
					,ReportingBitwise=i.ReportingBitwise
					,ApiButtonsJson = IIF(@AllowPostDefectsForPrestarts=1 , '[
																			{
																				"ButtonLabel":"Create Defect",
																				"ButtonColour":"#000",
																				"ButtonConfirmationText":"Are you sure you want to create Defect?",
																				"ApiTaskName":"Defects",
																				"ApiPayloadString":"EXEC SP_Integration_AMT_EquipDefect @ProjectID = ' + CAST(@ProjectID AS NVARCHAR(25)) + ', @Date = ''' + CAST(s.Date AS NVARCHAR) + ''' , @Shift = ''' + CAST(s.Shift AS NVARCHAR) + ''', @DataStoreID = ''' + CAST(s.DataStoreID AS NVARCHAR) + ''', @DetailID = ''' + CAST(s.DetailID AS NVARCHAR) + ''', @TaskHeaderID = ''' + CAST(s.TaskHeaderId AS NVARCHAR) + '''",
																				"ButtonSuccessText":"Defect has been created.",
																				"ButtonFailText":"Failed creating Defect."
																			}
																			]'
										 ,'')
                FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
				--left join --outer apply (no good0
				--	this is no good. maybe we should cache this dataset?
				--[dbo].[udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) as i
				--		on s.[ActivityReasonID] =i.[ActReasonID]
				--		and [i].[InputID] = [s].[InputID]
				--		and [i].[InputType] = [s].[InputType]
                    LEFT OUTER JOIN 
					#inputs AS i
					 --(SELECT   -- Changed from Inner Join to bring in TWI stuff
						--		InputType
						--		,InputID
						--		,InputGroup
						--		,DisplayOrder
						--		,AftLabel
						--		,ForeLabel
						--		,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )  --get from @project first, then Proj1
						--		,ActReasonLinkID
						--		,ExcludeFromWeb
						--		, Shareable
						--		,ReportingBitwise
						--		from
						--		[dbo].[tbl_DBT_ActReasonInputLink] as i
						--		WHERE ProjectID IN(1,2, @ProjectID)
						--			--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
						--			--AND Shareable <> ''
						--			-- AND @ReportingBitwiseValue & ISNULL(ReportingBitwise, 0) = @ReportingBitwiseValue -- Turned off because we changed to left outer and filter in the where.

						--		--can't put this because it can flick onto the other project:	and ReportingBitwise>= @ReportingBitwiseValue				-- or InputType = 'Camera'  --2021-08-10
						--			--and ((@ReportingBitwiseValue & ReportingBitwise = @ReportingBitwiseValue) OR InputType = 'Camera' )  --added back in, try to optimise query.

						--		)AS i
                                 --  on i.projectid in  (1,2, s.[ProjectID])
									ON	i.ActReasonLinkID = s.ActivityReasonID
                                       AND s.InputID = i.InputID
                                       --AND s.ProjectID = i.ProjectID
                                       AND s.InputType = i.InputType
									  AND i.RowNum =1
									  --can't do this: and ROW_NUMBER() OVER (PARTITION BY i.InputType,i.INputId,ActReasonLinkId ORDER BY i.InputType,i.INputId,ActReasonLinkId,ProjectID DEsc ) =1 --get from @project first, then Proj1=
									   --	AND ((@ReportingBitwiseValue & i.ReportingBitwise = @ReportingBitwiseValue) OR s.InputType = 'Camera' ) --having on here requores inner join --if adding to this, it is replicated on the join to this table too.
	--2021-07-26 join in this instaed to get "IsElectForms"
	INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupingsAll(@ProjectID,0) AS aretc
                                                                   ON s.ActivityReasonID = aretc.ActivityReasonId
                         --INNER JOIN (SELECT
                         --                     ar.ActivityreasonLinkID
                         --                      ,ar.ProcessID
                         --                      ,p.ProcessDescription
                         --                      ,r.ReasonDescription
                         --                      ,ar.ActivityID
                         --                      ,a.ActivityComments
                         --                      ,a.ActivityDescription
                         --                                                   ,ar.ReasonAlias
                         --                 FROM dbo.tbl_SYS_ActivityReasonLink AS ar
                         --                          INNER JOIN dbo.tbl_SYS_Process AS p
                         --                                     ON ar.ProcessID = p.ProcessID
                         --                          INNER JOIN dbo.tbl_SYS_Reason AS r
                         --                                     ON ar.ReasonID = r.ReasonID
                         --                          INNER JOIN dbo.tbl_SYS_Activity AS a
                         --                                     ON ar.ActivityID = a.ActivityID) AS aretc
                         --                ON s.ActivityReasonID = aretc.ActivityreasonLinkID


						--INNER JOIN  (SELECT MaxLocalStaging= MAX(LocalStagingID), DetailId, DataStoreID, date, shift , Projectid    
						--				FROM [dbo].[syn_DWH_iPlodStagingTable] 
						--				--WHERE date = @Date
						--				--AND ProjectID = @ProjectID
						--				--AND shift = @Shift
						--				GROUP BY DetailId, DataStoreID  , date, shift, Projectid 

						--				) AS LastStagingId
						--			ON s.DetailID = LastStagingId.DetailID
						--			AND s.DataStoreID = LastStagingId.DataStoreID
						--			and [LastStagingId].[Date] = [s].[Date]
						--			and [LastStagingId].[Shift] = [s].[Shift]
						--			and [LastStagingId].[ProjectID] = [s].[ProjectID]




						 LEFT OUTER JOIN dbo.tbl_SYS_Equipment AS eq WITH (NOLOCK)
                                         ON s.EquipmentID = eq.EquipmentCodeID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS l WITH (NOLOCK)
                                         ON s.Location = l.LocationID
										-- and  l.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Employees AS e WITH (NOLOCK)
                                         ON s.OperatorID = e.EmployeeID
										--do'nt do this. people change projects. and  e.[ProjectID] = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cons WITH (NOLOCK)
                                         ON s.ConsumableProjectID = cons.ConsumableProjectID
                                             AND s.InputType IN ('Cons', 'ConsArea')
											 --and   cons.[ProjectID] = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Materials AS m WITH (NOLOCK)
                                         ON s.Material = m.MaterialOpID
										 --and  m.[ProjectID] = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS d WITH (NOLOCK)
                                         ON s.Destination = d.LocationID
										-- and  s.Destination >0
										-- and  d.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS la WITH (NOLOCK)
                                         ON s.LoadedFrom = la.LocationID
										-- and s.LoadedFrom > 0
										-- and  la.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_SYS_BogFrom AS bf WITH (NOLOCK)
                                         ON s.BogFrom = bf.BogFromID
                         LEFT OUTER JOIN dbo.tbl_SYS_BogTo AS bt WITH (NOLOCK)
                                         ON s.BogTo = bt.BogToID
                         LEFT OUTER JOIN dbo.tbl_SYS_Equipment AS re WITH (NOLOCK)
                                         ON s.RelatedEquipment = re.EquipmentCodeID
                         LEFT OUTER JOIN dbo.tbl_DBT_LocationProfiles AS lp WITH (NOLOCK)
                                         ON s.ProfileID = lp.ProfileID
										-- and  lp.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Employees AS os WITH (NOLOCK)
                                         ON s.Offsider = os.EmployeeID
                         LEFT JOIN dbo.tbl_DBT_GroundCond AS gc WITH (NOLOCK)
                                   ON s.GroundCond = gc.GroundCondID
                                       AND gc.ProjectID = s.ProjectID  --need to keep this one?
                         LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st WITH (NOLOCK)
                                         ON st.StatisticID = s.InputID
                                             AND s.InputType IN ('Stat', 'StatCalc')
						 LEFT JOIN dbo.tbl_SYS_Questions AS qt WITH (NOLOCK)
										ON s.InputType = 'Q'
											AND qt.QuestionID = s.InputID
											--2021-07-26 overkill. no need to include on the join. likely fuck the query plan? AND qt.QuestionID = i.InputID
                         LEFT JOIN tbl_DBT_Pit AS pit WITH (NOLOCK)
                                   ON l.PitID = pit.PitID

						--2021-03-10 remove this join for speed. it ought to have caused duplicates anywya!!  might need to bring some flavour of it back if need a 1 in showdayworks on all rows of applicable task LEFT JOIN (
						--	SELECT DISTINCT
						--		ActReasonLinkID
						--		,InputType
						--		,InputID
						--		,IsDayWorksTask = 1
						--	FROM dbo.tbl_DBT_ActReasonInputLink
						--	WHERE ProjectID = @ProjectID
						--		AND (@DayWorksInputsCsv LIKE '%,' + InputType + '_' + CAST(InputID AS VARCHAR) + ',%')
						--) AS dw
						--	ON s.ActivityReasonID = dw.ActReasonLinkID




						-- add change log as a join down here instead (for performance)
						/*
						LEFT JOIN ( 
							SELECT DISTINCT
								l2.LocalStagingID      
								,ChangeLog = STUFF(
									(SELECT CASE 
										WHEN ISNULL(l.NewValue, '') = '' 
										THEN '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
										WHEN ISNULL(l.ExistingValue, '') = '' 
										THEN '|' + l.FieldChanged + ' changed to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
										WHEN ISNULL(l.ExistingValue, '') = '' AND ISNULL(l.NewValue, '') = '' 
										THEN '|' + l.FieldChanged + ' changed by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
										ELSE '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
										END
										FROM dbo.[tbl_DWH_iPlodStagingEditedChangeLog] AS l
											LEFT JOIN dbo.tbl_SYS_User AS u
													ON l.UserID = u.UserID
										WHERE l.ProjectID = @ProjectID
													AND l.UpdateType = 'Edit_DataSummary'
													AND l.LocalStagingID = l2.localstagingid
										ORDER BY l.RowID ASC
									FOR XML PATH (''))
									,1,1,'') 
							FROM dbo.[tbl_DWH_iPlodStagingEditedChangeLog] AS l2


						) AS chnglg
							ON chnglg.LocalStagingID = (SELECT MAX(LocalStagingID) FROM  dbo.syn_DWH_iPlodStagingTable AS s2 WHERE s.DataStoreID = s2.DataStoreID AND s.DetailID = s2.DetailID)
						*/


                           --join for getting child task durations:
                                 /*LEFT join   (SELECT DataStoreId, ParentTask, delayhrs=SUM(CAST(inputvalue AS decimal)) FROM  dbo.syn_DWH_iPlodStagingTable AS ipsdel
                                                            WHERE ipsdel.ParentTask > 0
                                                            AND Date = @Date
                                                       AND Shift = @Shift
                                                     AND ProjectID = @ProjectID
                                                       AND ipsdel.INputType LIKE 'stat%'
                                                       AND ipsdel.INputID = 7
                                                       AND Type = 'mining' 
                                                       GROUP BY datastoreid, ParentTask) AS delayhrs
                                                       ON delayhrs.DataStoreID = s.DataStoreID
                                                       AND delayhrs.ParentTask = s.DetailID*/

                     --LEFT OUTER JOIN dbo.tbl_SYS_Attribute as att
                     --       ON s.InputType = 'AttrList' AND s.InputID = att.AttributeTypeID AND  CAST(CAST(s.InputValue AS DECIMAL) AS INT) = att.AttributeID
                WHERE 
				--2020-04-04 Removed the Exclude from web filter for hazards. Discussed with TS and we dont need anymore
				--(ISNULL(i.ExcludeFromWeb, 0) <> 1 )  --removed to assist performance. will have better soln next time need viv type bogging handling--OR s.ActivityReasonID IN (112,297,131,1505,1506,1507,1508))  --bogging tasks for VIV special handling

				 (@ActivityReasonCsv LIKE '%,' + CAST(s.ActivityReasonID  AS VARCHAR) + ',%' OR @ActivityReasonCsv = '')
		--2020-12-17  kill this whole bit, see how it goes!
		--AND ( i.Shareable IS NOT NULL /*OR s.InputType = 'Q'*/ )-- CHRIS 16/9 turned this on and reviewtrapoff. Updateshift inputlink set sharable = long where reviewtrap = 1 and shared is null
  --                AND (i.Shareable <> ''  /*OR s.InputType = 'Q'*/)
                  -- AND i.ReviewTrap = 1  -- changed from shareable to review trap seeing as we are not doing the detail section on shift summary any more
                  -- AND s.InputType NOT LIKE 'Q%'
                  --AND NOT (s.InputType LIKE 'Stat%' AND s.InputID = 7 and processid not in (9,13))  -- excluded duration from this section, can be reviewed better in the timeline and after import

				  --only get tasks that have the tick
				AND  (EXISTS (SELECT inputid FROM [dbo].[tbl_DBT_ActReasonInputLink] AS stat7 WITH (NOLOCK)
								WHERE stat7.ProjectID = s.[ProjectID]
									--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
									--AND Shareable <> ''
									AND stat7.ReportingBitwise >= @ReportingBitwiseValue --2021-08-10
									AND @ReportingBitwiseValue & stat7.ReportingBitwise = @ReportingBitwiseValue
									AND s.ActivityReasonID = stat7.ActReasonLinkID
									AND stat7.inputtype LIKE 'stat%'
									AND stat7.InputID=7
									--these are already incorporated into the s.WHERE clause I believeand s.[Date] = @Date  --2021-07-26
									--and s.[ProjectID] = @ProjectID
									--and s.[Shift] = @Shift
									)

							OR EXISTS (SELECT * FROM #TWIJoin AS twi
									WHERE s.DataStoreID = twi.DataStoreID 
									AND s.Sequence = twi.Sequence 
									AND s.DetailID = twi.DetailID 
									AND s.InputID IN (78,93)
									AND s.[InputType] LIKE '%attr%')  --2021-07-26, added to keep running quickly
						)

				  --should try and remove this ... ?
				  --2021-03-01 ts tried removing it
      --            AND 
      --               (
						--(
						--	(
						--	--	s.InputType = 'Q'  --2020-05-05
						--	--	OR
						--		( s.InputType <> 'Q' AND 
						--			((aretc.ActivityID <>2 OR  s.ActivityReasonID IN (SELECT ActReasonID FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WHERE AR_GroupingName = 'AR_ShiftSummary' AND @ProjectID = ProjectID)) --2020-04-30
						--			OR EXISTS
						--			(SELECT * FROM #TWIJoin AS twi WHERE s.DataStoreID = twi.DataStoreID AND s.Sequence = twi.Sequence AND s.DetailID = twi.DetailID AND s.InputID IN (78,93)
						--			)

						--			)

						--		)
						--	)

						--	AND aretc.ProcessID <> 13  --added exclusion for delays/downtime ...
						--	--AND aretc.ActivityID = 1   -- PRDT will bring in tramming relocation etc
						--	aND S.ActivityReasonID <> 344
						--) -- Chris added to keep Iplod feedback out
      --                     AND aretc.processID <> 25 -- 2018-12-20
      --              OR  S.ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@InclMiningARIDs))   -- specific inclusions
      --              )



                  -- case when inputtype like 'stat%' and inputid = 7
                  -- then input value = cast decimal to hrs mins
                  -- end as inputvalue

					  -- AND ( (s.InputType = 'Q' AND qt.AnswerType IS NOT NULL AND qt.AnswerType = 'YNradio' AND qt.Active = 1)
							--OR
							--s.InputType <> 'Q'
						 --)


				--replace a bunch of the above with this:

						--2021-08-10 put on the join ?	didnt' change much and broke the logic of the TWIs I thikn.
						AND ((@ReportingBitwiseValue & i.ReportingBitwise
												= @ReportingBitwiseValue

									) OR s.InputType = 'Camera' )  --if adding to this, it is replicated on the join to this table too.



                  -- the filter
                  AND s.Date = @Date
                  AND s.Shift = @Shift
                  AND s.ProjectID = @ProjectID
                  AND (s.Type = 'mining'
                    OR s.Type = 'Shiftboss' OR s.Type = '') -- 2018-12-20

                  AND (@TypeAliasMethod = 0   --no type alias used
                    OR --[dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) 
					@TypeAliasPitId= l.PitID
					OR @TypeAliasPitId= d.PitID 
					OR l.PitID IS NULL)  --or filter based on Pitid  2019-12-17.  or pit associated to destinationId, for CRF where there is no location parameter field!
						--2021-06-03 or get from both mines if there is no valid location
                  AND @Is24HrSummary = 0 --don't show this section for 24hr summary for now (should put on config instead)


				  --and s.DataStoreID = '291_202011300730DS_11499_1'


                ORDER BY ProcessID, s.DetailID, ActivityReasonLinkID, i.InputGroup, Sequence, Method DESC, cons.DisplayOrder, i.ForeLabel;
            END


            ------------------------------------------------------------------------------------------------------------------------------------
            -- Maintenance. not in this proc anymore
            ------------------------------------------------------------------------------------------------------------------------------------


		DROP TABLE #TWIJoin
		DROP TABLE #inputs

    END
GO
PRINT N'Refreshing [dbo].[tbl_DWH_ProdDataStorage_V2]'
GO
EXEC sp_refreshview N'[dbo].[tbl_DWH_ProdDataStorage_V2]'
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_AutoCreateTask]'
GO
ALTER procedure [dbo].[SP_ShiftSummary_AutoCreateTask] 
       @Date DATE = NULL
       ,@Shift VARCHAR(2) = NULL
       ,@Type VARCHAR(20) = NULL
       ,@Mode VARCHAR(20) = NULL
       ,@ProjectID INT = 0
       ,@SupervisorId INT = 0
       ,@UserID INT = 0
       ,@DebugMode INT = 0
       ,@CrewId int = 0
	   ,@actreasonid INT = NULL  -- Default to stope grades

AS

begin

       /*
              Usage:

			  Manage-Repo-TEST ARID
              EXEC [dbo].[SP_ShiftSummary_AutoCreateTask] @Date = '2021-06-07', @Shift = 'DS',
			  @Type = 'Geology3', @CrewID = 3,
			  @ProjectId = 399, @UserId = 137, @SupervisorId = 123, @actreasonid = 1796
              , @DebugMode = 1


			  MCR LIVE ARID
			   EXEC [dbo].[SP_ShiftSummary_AutoCreateTask] @Date = '2021-06-07', @Shift = 'DS',
			  @Type = 'Geology3', @CrewID = 3,
			  @ProjectId = 399, @UserId = 137, @SupervisorId = 123, @actreasonid = 1797
              , @DebugMode = 1

              Purpose: For Geo Stope Grade inserting for now. 

			  2021-08-31 CA create
			  2021-09-02 CA Fixed NewID()
			  2021-09-21 CA changed true type to type. Want this task as geo so it doesnt appear on mining timeline.
        2022-09-17 ts ... don't get from task details function, get from teh cache view.
        2022-10-07 ts ... swtihc to the new cache

       */


       SET NOCOUNT ON;

       DECLARE @TrueType NVARCHAR(35) = (SELECT TOP 1 b.TypeCode FROM dbo.tbl_SYS_TypeConfigs AS a INNER JOIN dbo.tbl_SYS_Type AS b ON a.TypeId = b.TypeID AND a.TypeAlias = @Type);



IF OBJECT_ID(N'tempdb..#ForInsert') IS NOT NULL
BEGIN
DROP TABLE #ForInsert
end
IF OBJECT_ID(N'tempdb..#ForInsert') IS NOT NULL
BEGIN
DROP TABLE #activelocations
end



	   -- This is stope grade task. Check ID might be different on different DB's
IF @actreasonid = 1797
BEGIN 
	/******
	Find all Stope Trucking locations for the date and shift
	*******/
	SELECT DISTINCT LocationID = tbl1.Location,tbl1.Material,tbl1.OperatorID, tbl1.StartTime, tbl1.EndTime, NewDataStoreID = NEWID()
	INTO #ActiveLocations
	FROM
	(SELECT ips.*, 
	rownum = ROW_NUMBER() OVER (PARTITION BY ips.Location,ips.Date,ips.Shift ORDER BY ips.Location,ips.StartTime)
		FROM 
		dbo.tbl_DWH_iPlodStagingTableEdited AS ips
	LEFT OUTER JOIN dbo.tbl_DBT_Location AS src
		ON ips.Location = src.LocationID
	LEFT OUTER JOIN dbo.tbl_DBT_LocationSources AS srcid
		ON src.SourceID = srcid.SourceID
	WHERE ips.ProjectID = @ProjectID
	AND date = @Date
	AND Shift = @Shift
	AND ActivityReasonID = 116 
	AND srcid.SourceMasterID = 1  -- this is production
	) tbl1
	WHERE rownum = 1

/**********
check the tasks don't already exist (dont want to insert multuiples)
delete existing ones out of aa
*************/

DELETE aa FROM dbo.tbl_DWH_iPlodStagingTableEdited AS ips
INNER JOIN #ActiveLocations AS aa
ON ips.Location = aa.LocationID
AND ips.ActivityReasonID = 1797
AND ips.Date = @Date
AND shift = @Shift
AND ips.ProjectID = @ProjectID


END 





/************
Build the insert
**************/

	  SELECT *  into #Forinsert FROM (
	  SELECT     UploadDateTime =getdate()
                , DetailID = 1 
                , Date = @date
                , Shift = @shift
                , OperatorID = aa.OperatorID
                , InputType 
                , InputID 
                , InputValue = '0'
                , RevisedValue = null
                , CommentsCheck = null
                , EquipmentID = 2490
                , ActivityReasonID = @actreasonid
                , Material 
                , Location = aa.LocationID
                , Destination =null
                , CrewID =@crewid
                , Offsider  =null
                , GroundCond =null
                , LoadedFrom =null
                , BogFrom =null
                , BogTo =null
                , ClientDelay =null
                , Damage =null
                , StartTime 
                , EndTime
                , ProfileID  =null
                , ProjectID =@ProjectID
                , DataStoreID = aa.NewDataStoreID
                , LocSource =null
                , LocDest =null
                , ImportStatus = 0
                , RelatedEquipment  =null
                , Sequence = null
                , ConsumableProjectID = 0
                , InputTimestamp  = GETDATE()
                , SupervisorComments  =null
                , Reviewed  =null
                , ParentTask =null
                , EditedBy = @UserID
                , ChangeLog = 'Inserted by auto exec'
                , Type = @Type--@TrueType
                , InputComment = ''
                , RefNo = null
                , ReviewedBy  =null
                , FeedbackAdvice=null
                , ModifiedOn =getdate()
                , LocalStagingID = null
                , OrigStagingID = 0
                , InputPhoto = ''
                , InputAuth = ''
                , IsDeleted = 0
                , InputAuthId =0
                , TaskHeaderId= 0 

				FROM 
              -- [dbo].[udf_GetTaskDetails_ForIplod](@projectid , 'mining', 0, @actreasonid) as td 
               --dbo.view_udf_GetTaskDetails_ForIplod_CACHED AS td
               dbo.view_udf_GetTaskDetails_ForIplod_CACHED_ForWeb  as td
			   CROSS JOIN #ActiveLocations AS aa
        WHERE td.InputType <> 'Parameter'  -- Function is brining param lines?
              AND td.OnlyForApp <>1 and td.ProjectID = @ProjectID
              AND td.ActReasonID = @actreasonid
              and td.ExcludeFromWeb = 0
			  --Stat 7
			  UNION ALL 
			  select     UploadDateTime =getdate()
                , DetailID = 1 
                , Date = @date
                , Shift = @shift
                , OperatorID = aa.OperatorID
                , InputType = 'Stat'
                , InputID = 7
                , InputValue = '1'
                , RevisedValue = null
                , CommentsCheck = null
                , EquipmentID = 2490
                , ActivityReasonID = @actreasonid
                , Material 
                , Location = aa.LocationID
                , Destination =null
                , CrewID =@crewid
                , Offsider  =null
                , GroundCond =null
                , LoadedFrom =null
                , BogFrom =null
                , BogTo =null
                , ClientDelay =null
                , Damage =null
                , StartTime 
                , EndTime
                , ProfileID  =null
                , ProjectID =@ProjectID
                , DataStoreID = aa.NewDataStoreID
                , LocSource =null
                , LocDest =null
                , ImportStatus = 0
                , RelatedEquipment  =null
                , Sequence = null
                , ConsumableProjectID = 0
                , InputTimestamp  =GETDATE()
                , SupervisorComments  =null
                , Reviewed  =null
                , ParentTask =null
                , EditedBy = @UserID
                , ChangeLog = 'Inserted by auto exec'
                , Type = @TrueType
                , InputComment = ''
                , RefNo = null
                , ReviewedBy  =null
                , FeedbackAdvice=null
                , ModifiedOn =getdate()
                , LocalStagingID = null
                , OrigStagingID = 0
                , InputPhoto = ''
                , InputAuth = ''
                , IsDeleted = 0
                , InputAuthId =0
                , TaskHeaderId= 0 
				 FROM #ActiveLocations AS aa
				 )  AS tmp






       IF(@DebugMode = 1)
       BEGIN
					SELECT '#ActiveLocations',* FROM #ActiveLocations
                           SELECT '#ForInsert',* FROM #ForInsert
       END
if @DebugMode = 0
begin
                                                           BEGIN TRY

                                                           BEGIN TRANSACTION;

       INSERT INTO dbo.tbl_DWH_iPlodStagingTableEdited(UploadDateTime, DetailID, Date, Shift, OperatorID, InputType, InputID, InputValue, RevisedValue, CommentsCheck, EquipmentID, ActivityReasonID, Material, Location, Destination, CrewID, Offsider, GroundCond, LoadedFrom, BogFrom, BogTo, ClientDelay, Damage, StartTime, EndTime, ProfileID, ProjectID, DataStoreID, LocSource, LocDest, ImportStatus, RelatedEquipment, Sequence, ConsumableProjectID, InputTimestamp, SupervisorComments, Reviewed, ParentTask, EditedBy, ChangeLog, Type, InputComment, RefNo, ReviewedBy, FeedbackAdvice, ModifiedOn, LocalStagingID, OrigStagingID, InputPhoto, InputAuth, IsDeleted, InputAuthId, TaskHeaderId)
                           select *
                                  from #ForInsert

       --whack the link into the changelog table
       --how to insert change log for linking Dt event to child tasks:
       INSERT INTO dbo.tbl_DWH_iPlodStagingEditedChangeLog(DataStoreID, DetailID, ProjectID, LocalStagingID, UpdateType, UpdateString, UpdateDateTime, UserID, FieldChanged, ChangePurpose, ExistingValue, NewValue, UniqueLocalStagingID, DetailIDCsv, SequenceIDCsv)
                                                              select
                                                              DataStoreID
                                                         , DetailID 
                                                         , ProjectID = @ProjectID
                                                         , 0
                                                         , UpdateType='StopeGradesAutoCreate'
                                                         , UpdateString =''
                                                         , UpdateDateTime = getdate()
                                                         , UserID = @UserId
                                                         , FieldChanged='All'
                                                         , ChangePurpose ='CreateTask'
                                                         , ExistingValue=''
                                                         , NewValue = ''
                                                         , UniqueLocalStagingID= 0
                                                         , DetailIDCsv = ''
                                                         , SequenceIDCsv =''
                                                       from #ForInsert

                                                        -- return success
                                                              --SELECT 1 AS 'Result',   'Data successfully updated' AS 'Message';
                                                              COMMIT TRANSACTION;

                                                       END TRY
                                                       BEGIN CATCH

                                                              -- something went wrong, rollback  
                                                              ROLLBACK;
                                                              -- PRINT ERROR_MESSAGE();

                                                              SELECT 0 AS 'Result',
                                                                        ERROR_MESSAGE() AS 'Message';

                                                       END CATCH;


end
       --ELSE 
       --BEGIN
       --     DECLARE @message VARCHAR(MAX) = 'This will only work if you have not already done manual updates of daily service tasks';
       --     THROW 51000, @message, 1;
       --END
              IF OBJECT_ID(N'tempdb..#mainttasks') IS NOT NULL
              BEGIN
              DROP TABLE #ActiveLocations	
              END
              IF OBJECT_ID(N'tempdb..#ForInsert') IS NOT NULL
              BEGIN
              DROP TABLE #ForInsert
              end

END
GO
PRINT N'Altering [dbo].[tbl_DBT_Reporting_Layout]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_Layout] DROP
COLUMN [RptDetailCode]
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_AssignGrades]'
GO
ALTER PROCEDURE [dbo].[SP_ShiftSummary_AssignGrades]
	 @ProjectID INT,
	 @Date DATE = NULL,
    @StartDate DATE = NULL,
	@EndDate DATE = NULL,
    @Shift VARCHAR(2),
    @Type VARCHAR(50) = 'Mining',
	@UserId INT = 0,
	@Mode NVARCHAR(35) = '',
	@SupervisorId INT = 0,
	@CrewId INT= 0,
	@DebugMode INT = 0,
	@ReApplyCutNumber INT = 1
	--@ColumnLabelsJSON nvarchar(MAX) = '' OUTPUT 

AS

SET @StartDate =isnull(@StartDate, DATEADD(day,-60,@Date))
SET @EndDate = isnull(@EndDate,@Date)

/***
	2021-09-09 CA Create
	2021-10-20 CA tried delete ones that did not need changing. Not change to query time.
					tried creating an index. no change
	2021-12-02 CA Added forecast grade 
  2022-07-29 ts ... various optimisation 
                ... {took seconds off! down to 52 secs} join on project to the recalc instead of @Project
  2022-07-29 ts ... put some debug timing in. and the Startdate should obey @paramter first (only go backwards if not supplied)
  2022-08-01 ts ... {}   try not exists on the reon

	EXECUTE  [dbo].[SP_ShiftSummary_AssignGrades]    @ProjectID = 399  ,@Date = '2021-10-20'  ,@Shift = 'DS' 
  ,@Type = 'Mining'  ,@UserId = 250,@DebugMode = 1

EXEC [dbo].[SP_ShiftSummary_Executables] @ProjectID = 399 ,@Date = '2022-06-08' ,@Shift = 'NS' ,@UserId = 137 ,@Mode= 'GeologyCuts' ,@CrewId = 999 ,@SupervisorId = 100000 ,@ExecutionString= 'AssignGrades' ,@Type = 'Geology3' ,@ResultsMsg = @OutputVariableForRelatedParam OUTPUT ,@ResultsStatus = @OutputVariableForRelatedParam OUTPUT ,@IsPageRefresh = @OutputVariableForRelatedParam OUTPUT ,@IsFromModeBtn = 1

-- Make a statcalc for ounce and grade, it can calculate itself inside the task.
-- Dont recalc manually updated haul grades. 
-- Lift out thing out of recalc proc. Used for TKM updates and recon updates. 

Attr 11 is Actual Grage
Attr 402 is forecast grade
***/


BEGIN 
/*
Some test ID's

SELECT * FROM View_ShiftSummary_Cuts_GradesandOunces
WHERE UniqueCutNumber = 207732

SELECT * FROM dbo.tbl_DWH_iPlodStagingTableEdited
WHERE InputValue = '207732' AND inputid = 107

SELECT * FROM dbo.tbl_DWH_iPlodStagingTableEdited 
WHERE DataStoreID = '399_202106281900NS_13003_1' AND DetailID = 12

*/ 

-- Table name is misleading. Not for ounce calc anymore, just straight grades.
DECLARE @StartTime DATETIME
DECLARE @afterPickup#DataStoresForOunceCalc datetime
DECLARE @afterPickup#DataToUpdate datetime
DECLARE @afterPickup#ForecastDataToUpdatedatetime datetime
DECLARE @allDone datetime

SET @StartTime = getdate()

SELECT DISTINCT ips.DataStoreID, ips.DetailID, ips.Sequence,cutno.[Actual Grade],cutno.[Forecast Grade],ips.LocalStagingID,ips.ProjectID
INTO #DataStoresForOunceCalc
FROM dbo.tbl_DWH_iPlodStagingTableEdited AS ips
	INNER JOIN View_ShiftSummary_Cuts_GradesandOunces AS cutno
		ON CAST(cutno.UniqueCutNumber AS VARCHAR(20)) = ips.InputValue
		AND ips.InputID = 107
		AND ips.InputType LIKE '%att%'  -- Could this be = attrlist as all the associated tasks should be list?
		AND cutno.UniqueCutNumber <> 0
		AND (cutno.[Forecast Grade] > 0 OR cutno.[Actual Grade] > 0)
		AND cutno.ProjectID = ips.ProjectID

	--find out if it has been recon'd
	/*LEFT JOIN --(SELECT DISTINCT cl.LocalStagingID,cl.DataStoreID, cl.detailid, cl.ProjectID 2022-07-29
		 dbo.View_ProjSetup_ReconciliationHistory AS cl
		--	WHERE cl.ProjectID = @ProjectID
			--) AS cl
			on cl.DataStoreID = ips.DataStoreID
			AND cl.LocalStagingID = ips.LocalStagingID
			AND cl.ProjectID = ips.ProjectID
      */

	WHERE 
	-- This where exists is to filter tasks to only those that have grade
	EXISTS (SELECT * FROM dbo.tbl_DBT_ActReasonInputLink AS act 
					WHERE act.ActReasonLinkID = ips.ActivityReasonID
					AND act.InputType LIKE '%att%'
					AND act.InputID IN (11,402)
          AND act.ProjectID = ips.ProjectID
					-- AND act.ExcludeFromWeb <> 0
					)
	AND ips.ProjectID = @ProjectID AND Date BETWEEN @StartDate AND @EndDate
	--AND cl.LocalStagingID IS NULL -- It has to be null to have no manual changes?
  and not exists(SELECT cl.LocalStagingID   FROM View_ProjSetup_ReconciliationHistory as cl 
                      where cl.LocalStagingID = ips.StagingID
                          AND cl.ProjectID= ips.ProjectID
                      )
-- Create Index for the above select 
		CREATE NONCLUSTERED INDEX idx#DataStoresForOunceCalc --does this need to be unique?
		ON #DataStoresForOunceCalc (DataStoreID,DetailID,Sequence)
		INCLUDE ([Actual Grade])


SET @afterPickup#DataStoresForOunceCalc =getdate()


-- Actual grade data prepare

		SELECT ds.[Actual Grade],[Tonnes] = ipstn.InputValue,[Original Grade] = ipsgr.InputValue, 
					ipsgr.StagingID,ipsgr.DetailID,ipsgr.DataStoreID, ipsgr.LocalStagingID, ipsgr.ProjectID
		INTO #DataToUpdate
			FROM dbo.tbl_DWH_iPlodStagingTableEdited AS ipsgr
			INNER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS ipstn
				ON ipsgr.DataStoreID = ipstn.DataStoreID
				AND ipstn.DetailID = ipsgr.DetailID
				AND ISNULL(ipstn.Sequence,0) = ISNULL(ipsgr.Sequence,0)
				AND ipstn.InputType LIKE '%stat%'
				AND ipstn.InputId = 18
			INNER JOIN #DataStoresForOunceCalc AS ds
				ON ipsgr.DataStoreID = ds.DataStoreID
				AND ds.DetailID = ipsgr.DetailID
				AND ISNULL(ds.Sequence,0) = ISNULL(ipsgr.Sequence,0)
			WHERE ipsgr.InputID IN (11)
				AND ipsgr.InputType LIKE '%att%'

SET  @afterPickup#DataToUpdate =getdate()

		-- Create Index for the above select 
				CREATE NONCLUSTERED INDEX idx#DataToUpdate --does this need to be unique?
				ON #DataToUpdate (DataStoreID,DetailID,ProjectID)
				INCLUDE (LocalStagingID,[Actual Grade])



		-- Delete data that is unchanged (ie actual equals original)
		DELETE FROM #DataToUpdate
		WHERE [Actual Grade] = [Original Grade]

-- Forecast grade data prepare (attr 402)

		SELECT ds.[Forecast Grade],[Tonnes] = ipstn.InputValue,[Original Grade] = ipsgr.InputValue, 
					ipsgr.StagingID,ipsgr.DetailID,ipsgr.DataStoreID, ipsgr.LocalStagingID, ipsgr.ProjectID
		INTO #ForecastDataToUpdate
			FROM dbo.tbl_DWH_iPlodStagingTableEdited AS ipsgr
			INNER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS ipstn
				ON ipsgr.DataStoreID = ipstn.DataStoreID
				AND ipstn.DetailID = ipsgr.DetailID
				AND ISNULL(ipstn.Sequence,0) = ISNULL(ipsgr.Sequence,0)
				AND ipstn.InputType LIKE '%stat%'
				AND ipstn.InputId = 18
			INNER JOIN #DataStoresForOunceCalc AS ds
				ON ipsgr.DataStoreID = ds.DataStoreID
				AND ds.DetailID = ipsgr.DetailID
				AND ISNULL(ds.Sequence,0) = ISNULL(ipsgr.Sequence,0)
			WHERE ipsgr.InputID IN (402)
				AND ipsgr.InputType LIKE '%att%'


set @afterPickup#ForecastDataToUpdatedatetime =getdate()


		-- Create Index for the above select 
				CREATE NONCLUSTERED INDEX idx#ForecastDataToUpdate --does this need to be unique?
				ON #ForecastDataToUpdate (DataStoreID,DetailID,ProjectID)
				INCLUDE (LocalStagingID,[Forecast Grade])

		-- Delete data that is unchanged (ie actual equals original)
		DELETE FROM #ForecastDataToUpdate
		WHERE [Forecast Grade] = [Original Grade]



IF @DebugMode = 2
BEGIN 
-- Not updated with forecast grade here

SELECT TOP 10 * 
INTO #testdatatoUdate
FROM #DataToUpdate


UPDATE ipse SET ipse.InputValue = ISNULL(CAST(a.[Actual Grade] AS VARCHAR(20)),'0')
FROM #testdatatoUdate AS a 
INNER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS ipse
	ON a.DataStoreID = ipse.DataStoreID
	AND a.LocalStagingID = ipse.LocalStagingID
	AND a.DetailID = ipse.DetailID
	--AND a.Sequence = ipse.Sequence
	AND a.ProjectID = ipse.ProjectID

	DROP TABLE #testdatatoUdate


END 


IF @DebugMode = 0 
BEGIN 

-- Actual Grade update

		UPDATE ipse SET ipse.InputValue = ISNULL(CAST(a.[Actual Grade] AS VARCHAR(20)),'0')
		FROM #DataToUpdate AS a 
		INNER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS ipse
			ON a.DataStoreID = ipse.DataStoreID
			AND a.LocalStagingID = ipse.LocalStagingID
			AND a.DetailID = ipse.DetailID
			--AND a.Sequence = ipse.Sequence
			AND a.ProjectID = ipse.ProjectID

	INSERT INTO dbo.tbl_DWH_iPlodStagingEditedChangeLog
		(
		    DataStoreID,
		    DetailID,
		    ProjectID,
		    LocalStagingID,
		    UpdateType,
		    UpdateString,
		    UpdateDateTime,
		    UserID,
		    FieldChanged,
		    ChangePurpose,
		    ExistingValue,
		    NewValue,
		    UniqueLocalStagingID,
		    DetailIDCsv,
		    SequenceIDCsv
		)
		SELECT 
		   DataStoreID,        -- DataStoreID - varchar(50)
		    DetailID,         -- DetailID - int
		    ProjectID,         -- ProjectID - int
		    LocalStagingID,         -- LocalStagingID - int
		    'Auto Update of Haul Grade from Primary Cut',        -- UpdateType - varchar(50)
		    CAST(ISNULL([Actual Grade],0) AS VARCHAR(20)) + ' as grade for LocalStagingID' + CAST(ISNULL(LocalStagingID,0) AS VARCHAR(20)),        -- UpdateString - text
		    GETDATE(), -- UpdateDateTime - datetime
		    0,         -- UserID - int
		    'InputValue',        -- FieldChanged - varchar(200)
		    'Assign Grade to Haul',        -- ChangePurpose - varchar(1000)
		     CAST(ISNULL([Original Grade],0) AS VARCHAR(20)),        -- ExistingValue - varchar(200)
		    CAST(ISNULL([Actual Grade],0) AS VARCHAR(20)),        -- NewValue - varchar(200)
		    LocalStagingID,         -- UniqueLocalStagingID - int
		    'Unkown',        -- DetailIDCsv - varchar(100)
		    'Unkown'         -- SequenceIDCsv - varchar(100)

			FROM #DataToUpdate


-- Forecast Grade update

		UPDATE ipse SET ipse.InputValue = ISNULL(CAST(a.[Forecast Grade] AS VARCHAR(20)),'0')
		FROM #ForecastDataToUpdate AS a 
		INNER JOIN dbo.tbl_DWH_iPlodStagingTableEdited AS ipse
			ON a.DataStoreID = ipse.DataStoreID
			AND a.LocalStagingID = ipse.LocalStagingID
			AND a.DetailID = ipse.DetailID
			--AND a.Sequence = ipse.Sequence
			AND a.ProjectID = ipse.ProjectID

	INSERT INTO dbo.tbl_DWH_iPlodStagingEditedChangeLog
		(
		    DataStoreID,
		    DetailID,
		    ProjectID,
		    LocalStagingID,
		    UpdateType,
		    UpdateString,
		    UpdateDateTime,
		    UserID,
		    FieldChanged,
		    ChangePurpose,
		    ExistingValue,
		    NewValue,
		    UniqueLocalStagingID,
		    DetailIDCsv,
		    SequenceIDCsv
		)
		SELECT 
		   DataStoreID,        -- DataStoreID - varchar(50)
		    DetailID,         -- DetailID - int
		    ProjectID,         -- ProjectID - int
		    LocalStagingID,         -- LocalStagingID - int
		    'Auto Update of Haul Grade from Primary Cut',        -- UpdateType - varchar(50)
		    CAST(ISNULL([Forecast Grade],0) AS VARCHAR(20)) + ' as grade for LocalStagingID' + CAST(ISNULL(LocalStagingID,0) AS VARCHAR(20)),        -- UpdateString - text
		    GETDATE(), -- UpdateDateTime - datetime
		    0,         -- UserID - int
		    'InputValue',        -- FieldChanged - varchar(200)
		    'Assign Grade to Haul',        -- ChangePurpose - varchar(1000)
		     CAST(ISNULL([Original Grade],0) AS VARCHAR(20)),        -- ExistingValue - varchar(200)
		    CAST(ISNULL([Forecast Grade],0) AS VARCHAR(20)),        -- NewValue - varchar(200)
		    LocalStagingID,         -- UniqueLocalStagingID - int
		    'Unkown',        -- DetailIDCsv - varchar(100)
		    'Unkown'         -- SequenceIDCsv - varchar(100)

			FROM #ForecastDataToUpdate









END 


set @allDone =getdate()

IF @DebugMode = 1
BEGIN

SELECT '@StartTime'=@StartTime

, '@afterPickup#DataStoresForOunceCalc'=@afterPickup#DataStoresForOunceCalc
, '@afterPickup#ForecastDataToUpdatedatetime'=@afterPickup#ForecastDataToUpdatedatetime
, '@afterPickup#DataToUpdate'=@afterPickup#DataToUpdate

SELECT '@StartTime'=@StartTime

, '@Diff1'=datediff(second,@StartTime,@afterPickup#DataStoresForOunceCalc)
, '@Diff2'=datediff(second,@afterPickup#DataStoresForOunceCalc,@afterPickup#ForecastDataToUpdatedatetime)
, '@Diff3'=datediff(second,@afterPickup#DataToUpdate,@afterPickup#ForecastDataToUpdatedatetime)
,'totalTime'=datediff(second,@StartTime,@afterPickup#DataToUpdate)


	SELECT 'DataToUpdate',* FROM #DataToUpdate
	SELECT 'DataStoresForOunceCalc',* FROM #DataStoresForOunceCalc

	SELECT 'ForecastDataToUpdate',* FROM #ForecastDataToUpdate



END 






DROP TABLE #DataToUpdate
DROP TABLE #DataStoresForOunceCalc
DROP TABLE #ForecastDataToUpdate


END
GO
PRINT N'Altering [dbo].[SP_Input_CB_Diameter]'
GO
-- Stored Procedure

ALTER PROCEDURE [dbo].[SP_Input_CB_Diameter] @AttrTypeID91 FLOAT, @RecordResult VARCHAR(MAX) = NULL OUTPUT
AS
BEGIN
/*
	Change Log: 
	2019-10-29 (AD) ... add @RecordResult Output

*/
	SET NOCOUNT ON;

	DECLARE @ReturnTable INT;
	IF(@RecordResult IS NULL) SET @ReturnTable = 1

	SELECT @RecordResult = CAST(CONVERT(FLOAT,attributedescription) AS VARCHAR) 

	FROM dbo.tbl_SYS_Attribute 
	WHERE AttributeTypeID = 91 AND AttributeID = @AttrTypeID91


	IF(@ReturnTable = 1) SELECT  @RecordResult  AS 'Result'

END
GO
PRINT N'Refreshing [dbo].[view_webbarWeighing_Context]'
GO
EXEC sp_refreshview N'[dbo].[view_webbarWeighing_Context]'
GO
PRINT N'Altering [dbo].[SP_ItemPosting_Validation]'
GO
ALTER PROCEDURE [dbo].[SP_ItemPosting_Validation] @projectID int, @Date nvarchar(10), @Type nvarchar(15) = ''--, @Shift nvarchar(2)
AS
BEGIN
SET NOCOUNT ON
/*
EXEC [dbo].[SP_ItemPosting_Validation] @ProjectID = 194, @Date = '2019-06-04', @Type = ''

(TS) 20180821 ... added fuel union select
(TS) 20180926 ... excluded explosives delivery and stocktaking
TS - 2018-10-29 added isnull on the ReasonID filter (because Magman dataset had null for this)

TS 2018-20-21 added some updates to this to manage the transition to cons input type for emulsion (revert out after a few days)
TS 2019-09-09 ... added DECLARE @ExcludedReasons nvarchar(100) = dbo.FN_GetConfigValueSys('ItemPostingReasonIdExclusions');

			... removed teh dodgy fixing on the staging data (hopefully don't need it anymore)
			... added handling for PEAK explosives
TS 2019-09-10 ... dual warehouse config and exclustion for PEAK
ts 2020-05-26 ... added emulsion on the second warehouse for peak
*/
DECLARE @ExcludedReasons nvarchar(100) = dbo.FN_GetConfigValueSys('ItemPostingReasonIdExclusions');
DECLARE @IsDualWarehouse int = dbo.FN_GetConfigValue(@ProjectID,'DualWarehouseForExpl');

/*UPDATE [dbo].[tbl_DWH_iPlodStagingTableEdited]    set inputtype = 'Cons', inputid =  CASE WHEN ProjectID = 288 THEN 6474
                         ELSE 0 END
  WHERE inputtype ='stat' AND InputID IN (141) AND ProjectID = 288


update dbo.tbl_DWH_ProdDataStorage  set ConsumableID =35 , ConsumableProjID = 6474
   WHERE StatisticID = 141 AND ProjectID = 288 AND ISNULL(ConsumableProjID,0) <> 6474
   */

SELECT 
	CASE WHEN [Shift] = 'NS' THEN 'Night Shift' ELSE 'Day Shift' END as 'GroupHeader'
	--[Date]
     -- ,[ReasonID]
 	  ,isnull(Location, 'No Location Selected') as 'Column1'
      ,[ReasonDescription] as 'Column2'
	  ,isnull(Operator, 'No Operator Recorded') as 'Column3'     
     -- ,[LocationID]
    --  ,[LocationCode]
    --  ,[ProfileName]
	  --,ca.[ConsumableAreaName] as 
	  ,'Row1' =CASE WHEN @projectID = 259 AND ca.ConsumableAreaID =  42  THEN 'PEB - New Cobar' WHEN  @projectID = 259 AND ca.ConsumableAreaID =  41 THEN 'PEA - Peak' 
					 WHEN  @IsDualWarehouse = 1 AND @ProjectID = 259 AND a.a_PitID=5 AND a.ConsumableID= 35 THEN  'PEB - New Cobar' WHEN  @IsDualWarehouse = 1 AND @ProjectID = 259 AND a.a_PitID<>5 AND a.ConsumableID= 35 THEN 'PEA - Peak' --dodgy fix for emulsion at pea ( there are two tanks)
						ELSE ca.[ConsumableAreaName] END
      --,[ConsumableID]
      ,[ConsumableDescShort] + ' (' +cast(MinepointITEM as varchar)+')'  as 'Row2'
     -- ,[ConsumableProjID]
     -- ,[MinepointITEM]
     -- ,[ClientChargeable]
     -- ,[ProjectID]
     -- ,[DetailID]
     -- ,[SubProjectSuffix]
     -- ,[ProjectMask]
     -- ,[Warehouse]
      ,[Qty]
     -- ,[SubProject]
    --  ,[ITEMNAME]
     -- ,[ITEMGROUPID]
     -- ,[DisplayOrder]
	 ,DisplayOrder
	 ,ConsAreaID
  FROM  [dbo].[FN_GetItems_WebbarPrimaryConsumption](@ProjectID , @Date, @Date,'')   as a
  LEFT JOIN (SELECT  [ConsumableAreaID], [ConsumableAreaName], ROW_NUMBER() OVER(PARTITION BY [ConsumableAreaID] ORDER BY [ConsumableAreaName]) as RowNum
					FROM dbo.tbl_SYS_ConsumablesArea) as ca on a.ConsAreaID  = ca.ConsumableAreaID
					AND RowNum = 1

  where projectid = @ProjectID and date = @Date  --don't need this
  				AND NOT (@IsDualWarehouse = 0 AND @ProjectID = 259 AND a.ConsAreaID = 42)
  --AND isnull(ReasonID,0) NOT IN (459,458)  --explosives stocktake and delivery
 AND ISNULL (ReasonID, 0) NOT IN (SELECT ID FROM dbo.FN_SplitString(@ExcludedReasons))

  UNION ALL
  SELECT
  GroupHeader = 'Fuel Used'
	  ,isnull(Operator, 'No Operator Recorded') as 'Column1'
	  ,[ReasonDescription] as 'Column2'
      ,isnull(Location, 'No Location Selected') as 'Column3'

	  ,Row1 = EquipmentCode
	  ,Row2 = [ConsumableDescShort] + ' (' +cast(MinepointITEM as varchar)+')' 
	  ,Qty
	 ,DisplayOrder
	 ,ConsAreaID
 FROM  [dbo].[FN_GetItems_Fuel](@ProjectID , @Date, @Date,'')   as a
  LEFT JOIN (SELECT  [ConsumableAreaID], [ConsumableAreaName], ROW_NUMBER() OVER(PARTITION BY [ConsumableAreaID] ORDER BY [ConsumableAreaName]) as RowNum
					FROM dbo.tbl_SYS_ConsumablesArea) as ca on a.ConsAreaID  = ca.ConsumableAreaID
					AND RowNum = 1

  where projectid = @ProjectID and date = @Date  --don't need this

  ORDER BY ConsAreaID, DisplayOrder
  option (optimize for (@ProjectID UNKNOWN))






END
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Roster_Insert]'
GO
-- Stored Procedure

ALTER PROCEDURE [dbo].[SP_ProjSetup_Roster_Insert] 

@ProjectID INT, @UserID INT 
,@InsertType NVARCHAR(50) = ''
,@Date DATE = '' 
,@RosterPattern VARCHAR(10) = ''
,@DayNumber INT =0
,@Editvalue VARCHAR(50) = ''
,@LegendCode NVARCHAR(20) = ''
,@OperatorID INT = 0
,@Comments NVARCHAR(500) = ''
,@TaskType VARCHAR(20) = ''

-- Add other employees params
,@EmployeeID INT = '' 
,@EmployeeName VARCHAR(100) = ''
,@FirstNames VARCHAR(50) = ''
,@LastName VARCHAR(50) = ''
,@MinePointCode VARCHAR(10) = ''
,@Position VARCHAR(25) = ''
,@PositionID INT = 0
,@StartDate DATE = ''
,@EndDate DATE = ''
,@INXGuid VARCHAR(25) = ''
,@DOB DATE = ''
,@EmployeeType VARCHAR(50) = ''
,@Company VARCHAR(50) = ''
,@EditedBy VARCHAR(25) = ''
,@Department VARCHAR(50) = ''

,@DefaultWorkHrs INT = ''
,@Tour VARCHAR(20)  = ''

,@UpdateEmployeeQueryString NVARCHAR(MAX) = ''
,@Purpose NVARCHAR(MAX) = ''
,@CrewCode INT = ''
,@Supervisor INT = 0
,@Fitter INT = 0
,@EmailPersonal VARCHAR(50) = ''
,@PhonePersonal INT = 0
,@NOK_Name VARCHAR(50) = ''
,@NOK_Phone INT = 0
,@EditType NVARCHAR(20) = ''
,@NewCellSelected VARCHAR(50) = ''

--Change Crew
,@TourStartDateDefault INT = 0  -- Can use this to automatically work out what start date should be based on planned crew emps.
,@TourStartDate DATE = ''
,@LeaveReminder INT = 0  -- This doesn't do anything. Just a reminder for the user. Might do something later.
,@NewRoom VARCHAR(20) = ''

--RB Ones
,@RBRig INT = 0
,@RBSite varchar(50) = '' 

,@DebugMode int = 0

/*
	2019-02-10 (CA)...First Create
	2019-04-16 (CA)...Added 'OperatorNotes' insert. For generic operator notes. Not cell specfic. 
	2019-06-19 (CA)...Added OtherEmployee insert
				   ...Added 'PHO Visitor' Insert
	2019-07-06 (CA)...Changed other employee to insert into dbt employees. Not finished
	2019-07-10 (CA)...Finished the change.
	2019-07-16 (CA)...Fixed comapny and positionID to have defaults
	2019-07-31 (CA)...Added defaultWorkHrs and Tour to the insert
				   ...Added 'UpdateEmployee' insert type for editing employee
	2019-09-12 (IAN)...Change the Guid to INXGuid to match with data returned by [SP_ProjSetup_Roster_EmployeePopup]
					...Added CrewCode, Supervisor and Fitter to match with data returned by [SP_ProjSetup_Roster_EmployeePopup]
					...Change Postition to Position
					...Change MinepointCode to MinePointCode in tbl_DBT_Roster_OtherEmployees
	2019-10-17 (CA) ...Added Raisebore employee to insert. Updated insert call
	2019-10-22 (IAN) ...Changed @InsertType for dynamic list
	2019-10-23 (IAN) ...Change the @InsertType length
	2019-12-05 (CA)  ...Added EmailPersonal, PhonePersonal, NOK_Name, NOK_Phone fields
	2019-11-18 (IAN) ... Added @EditType
	2019-11-19 (IAN) ... Changed variable to match with the [SP_ProjSetup_Roster_CellEdit] param
	2019-11-20 (IAN) ... Added handler to update the employee table when edit type is Crew and the date is the same as today date
	2020-01-20 (IAN) ... change crew or start date now only keep one latest change active
	2020-01-24 (IAN) ... only allowed 1 change for crew or start date
	2020-02-18 (CA)... Changed Start Date and Crew update slightly. 
					...Added legendCode filter on some updates
	2020-04-22 (CA) ...Added abs employeeID
	2020-09-24 CA ... Added a catch for blank minepoint code insert into emps
	2020-09-025 CA ... added other employees active and projID filter
	2020-10-16 CA ... Using OperationID instead of ProjectId to update employees - DGM has people on 350. 
	2020-10-20 CA ... Added new fields for Change Crew
	2020-10-26 IP ... Added CrewCode numeric check and Result message on ChangeCrew
	2021-07-06 CA ... Fix position Insert. Made comments length 500
  2022-10-03 CA ... Added RBRig hackery
  2022-10-07 CA ... Changed RBSite to list

				  exec SP_ProjSetup_Roster_Insert @InsertType = 'PHO Visitor', @EmployeeID = 4549, @EmployeeName = 'Christopher Allen', @FirstNames = 'Christopher',
@LastName = 'Allen', @MinepointCode = 05675, @ProjectID = 336, @StartDate = '2019-07-01', @EndDate = '2019-07-08', @UserID = 250, @Comments = 'test'

 exec SP_ProjSetup_Roster_Insert @InsertType = 'OtherEmployee' , 
 @FirstNames = 'Lord', @LastName = 'Farquad', @MinepointCode = 999543, @ProjectID = 336, @StartDate = '2019-07-01', 
 @EndDate = '2019-07-08', @UserID = 250,@Comments = 'testo', @position = 'Awesome', @positionID = 2, @EmployeeType = 'someone', @company = 'castle'
*/

AS
BEGIN

  -- SET NOCOUNT ON added to prevent extra result sets from
  -- interfering with SELECT statements.
  SET NOCOUNT ON;

	  DECLARE @OperationID INT
	  SET @OperationID =  (SELECT OperationID FROM dbo.tbl_DBT_Project WHERE ProjectID = @ProjectID)

  DECLARE @UserName VARCHAR(50)
  SET @UserName = (SELECT UserName FROM dbo.tbl_SYS_User WHERE UserID = @UserId)

  SET @OperatorID = ABS(@OperatorID)
  SET @EmployeeID = ABS(@EmployeeID)
  SET @MinePointCode = CASE WHEN @MinePointCode IS NULL OR @MinePointCode = '' THEN '101' ELSE @MinePointCode END 

  -- added CrewCode checking, if its numeric, no need to query to tbl_SYS_Crew
  DECLARE @CrewID INT = CASE WHEN ISNUMERIC(@CrewCode) = 1 THEN @CrewCode ELSE (SELECT TOP 1 CrewID FROM dbo.tbl_SYS_Crew WHERE @CrewCode = CrewCode) END
 
IF @InsertType = 'RosterDefaults'
	BEGIN
   --find previous entries and set acive = 0
   Update [dbo].[tbl_DBT_Roster_ProjectPattern] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
	  WHERE ProjectID = @ProjectID AND RosterPattern = @RosterPattern AND OperatorID = 0 AND DayNumber = @DayNumber

    INSERT INTO [dbo].[tbl_DBT_Roster_ProjectPattern]
	(  [ProjectID]
      ,[RosterPattern]
      ,[OperatorID]
      ,[DayNumber]
      ,[LegendID]
      ,[UserID]
      ,[ModifiedOn]
      ,[Active]
	  )
	  VALUES ( @ProjectID
				,@RosterPattern
				,@OperatorId
				,@DayNumber
				,@EditValue
				,@UserID
				,GETDATE()
				,1
				)
	END

ELSE IF @InsertType = 'OperatorCellEdit'
	BEGIN
   --find previous entries and set acive = 0
   Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
	  WHERE ProjectID = @ProjectID AND OperatorID = @OperatorID AND Date = @Date AND LegendCode = @EditType

    INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
	(  [OperatorID]
      ,[Date]
      ,[LegendCode]
      ,[EditValue]
      ,[ProjectID]
      ,[Comments]
      ,[UserID]
      ,[ModifiedOn]
      ,[Active]
	  )
	  VALUES ( 
				@OperatorID
				,@Date
				,@EditType
				,@NewCellSelected
				,@ProjectID	
				,@Comments			
				,@UserID
				,GETDATE()
				,1
				)
	END	

ELSE IF @InsertType = 'OperatorRosterEdit'
		BEGIN
   --find previous entries and set acive = 0
   Update [dbo].[tbl_DBT_Roster_ProjectPattern] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
	  WHERE ProjectID = @ProjectID AND RosterPattern = @RosterPattern AND OperatorID = @OperatorID AND DayNumber = @DayNumber

    INSERT INTO [dbo].[tbl_DBT_Roster_ProjectPattern]
	(  [ProjectID]
      ,[RosterPattern]
      ,[OperatorID]
      ,[DayNumber]
      ,[LegendID]
      ,[UserID]
      ,[ModifiedOn]
      ,[Active]
	  )
	  VALUES ( @ProjectID
				,@RosterPattern
				,@OperatorId
				,@DayNumber
				,@NewCellSelected
				,@UserID
				,GETDATE()
				,1
				)
	END 

ELSE IF @InsertType = 'OperatorCellNotes'
	BEGIN
   --find previous entries and set acive = 0
	 -- Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
	  -- WHERE ProjectID = @ProjectID AND OperatorID = @OperatorID AND Date = @Date AND LegendCode = @LegendCode
	  --2020-02-17 replaced the above with the below
	IF @EditType = 'Crew' OR @EditType = 'StartDate'
		BEGIN
			-- for crew, remove all previous changed crew
			Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
				WHERE ProjectID = @ProjectID AND OperatorID = @OperatorID AND LegendCode = @EditType
		END
	ELSE
		BEGIN
			UPDATE [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
				WHERE ProjectID = @ProjectID AND OperatorID = @OperatorID AND Date = @Date AND LegendCode = @EditType
		END


    INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
	(  [OperatorID]
      ,[Date]
      ,[LegendCode]
      ,[EditValue]
      ,[ProjectID]
      ,[Comments]
      ,[UserID]
      ,[ModifiedOn]
      ,[Active]
	  )
	  VALUES ( 
				@OperatorID
				,@Date
				,@EditType
				,@EditValue
				,@ProjectID	
				,@Comments			
				,@UserID
				,GETDATE()
				,1
				)
    --2020-02-17 new stuff 
		-- update when the edit type = Crew and date is today
	IF @Date = CONVERT(varchar, GETDATE(), 23) AND @EditType = 'Crew'
	BEGIN
		UPDATE [dbo].[tbl_DBT_Employees] SET CrewCode = @Editvalue WHERE EmployeeID = @OperatorID AND ProjectID = @ProjectID AND OperationID = @OperationID;
	END
 --2020-02-17 end new stuff 
	END	

 ELSE IF @InsertType = 'OperatorNotes'
	BEGIN
   --find previous entries and set acive = 0
   Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
	  WHERE ProjectID = @ProjectID AND OperatorID = @OperatorID AND (Date IS NULL OR Date = '')  AND LegendCode = @LegendCode

    INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
	(  [OperatorID]
      ,[Date]
      ,[LegendCode]
      ,[EditValue]
      ,[ProjectID]
      ,[Comments]
      ,[UserID]
      ,[ModifiedOn]
      ,[Active]
	  )
	  VALUES ( 
				@OperatorID
				,NULL
				,@LegendCode
				,@EditValue
				,@ProjectID	
				,@Comments			
				,@UserID
				,GETDATE()
				,1
				)
	END	 

-- ELSE IF @InsertType IN ('PHO Visitor','Raisebore')
ELSE IF @InsertType = 'tbl_DBT_Roster_OtherEmployees'
	BEGIN
   --For PHO visitors.

    INSERT INTO [dbo].[tbl_DBT_Roster_OtherEmployees]
	(  [EmployeeID]
      ,[EmployeeName]
      ,[FirstNames]
      ,[LastName]
      ,[MinePointCode]
      ,[ProjectID]
      ,[OperationID]
      ,[Position]
      ,[CrewID]
      ,[RosterPattern]
      ,[StartDate]
      ,[EndDate]
      ,[Guid]
      ,[DOB]
      ,[Active]
      ,[Userid]
      ,[Comments]
      ,[ModifiedOn]
	  ,[EmployeeType]
	  )
	  VALUES ( 
				@EmployeeID
				,@EmployeeName
				,@FirstNames
				,@LastName
				,@MinePointCode
				,@ProjectID
				,@OperationID
				,NULL
				,NULL
				,NULL
				,@StartDate
				,@EndDate
				,NULL
				,NULL
				,1
				,@UserID
				,@Comments
				,GETDATE()
				,'Pybar Employee'
				)
	END	 


-- ELSE IF @InsertType IN ('Other Visitor','Vacant Position','Contractor','Non-Pybar, Non-subcontractor')   --'OtherEmployee'
ELSE IF @InsertType = 'tbl_DBT_Employees'
	BEGIN
   --For other employees, not PHO visitors.
   -- Insert into dbt_employees. 
   -- @DOB not inserted. Doesn't exist on Employees. Can add later.

 INSERT INTO dbo.tbl_DBT_Employees
 (
     EmployeeName
    ,FirstNames
    ,LastName
    ,PayrollSiteCode
    ,PositionID
    ,Position
    ,CrewCode
    ,Status
    ,Stage
    ,OperationID
    ,ProjectID
    ,ShiftCode
    ,DevDrilling
    ,BoggingTasks
    ,ProdDrilling
    ,Charging
    ,ServiceCrew
    ,Trucking
    ,Supervisor
    ,Fitter
    ,Cabolting
    ,Shotcrete
    ,DiamondDrill
    ,Raisebore
    ,FUse
    ,MinePointID
    ,MinePointCode
    ,Comments
    ,ImportProtect
    ,HideFromCheck
    ,ApprovedPointOfHire
    ,TravelMethod
    ,ModifiedOn
    ,SisterOpID_a
    ,SisterOpID_b
    ,iPlodMessage
    ,iPlodSettingsJson
	,StartDate
	,EndDate
	,Company
	,INXGuid
	,EditedBy
	,EmployeeType
	,DefaultWorkHrs
	,Tour
	,EmailPersonal
   ,PhonePersonal
   ,NOK_Name
   ,NOK_Phone
 )
 VALUES
 (   @FirstNames + ' ' + @LastName       -- EmployeeName - nvarchar(50)
    ,@FirstNames        -- FirstNames - varchar(100)
    ,@LastName      -- LastName - varchar(50)
    ,''			   -- PayrollSiteCode - nvarchar(50)
    ,@PositionID         -- PositionID - int
    ,@Position     -- Position - nvarchar(50)
    ,@CrewCode        -- CrewCode - int
    ,1      -- Status - bit
    ,1        -- Stage - int
    ,@OperationID         -- OperationID - int
    ,@ProjectID         -- ProjectID - int
    ,''        -- ShiftCode - varchar(50)
    ,0         -- DevDrilling - int
    ,0         -- BoggingTasks - int
    ,0         -- ProdDrilling - int
    ,0         -- Charging - int
    ,0         -- ServiceCrew - int
    ,0         -- Trucking - int
    ,@Supervisor         -- Supervisor - int
    ,@Fitter         -- Fitter - int
    ,0         -- Cabolting - int
    ,0         -- Shotcrete - int
    ,0         -- DiamondDrill - int
    ,0         -- Raisebore - int
    ,0         -- FUse - int
    ,0         -- MinePointID - int
    ,@MinepointCode        -- MinePointCode - varchar(250)
    ,@Comments        -- Comments - text
    ,1         -- ImportProtect - int
    ,0         -- HideFromCheck - int
    ,''        -- ApprovedPointOfHire - varchar(35)
    ,''        -- TravelMethod - varchar(35)
    ,GETDATE() -- ModifiedOn - datetime
    ,@OperationID        -- SisterOpID_a - int
    ,0         -- SisterOpID_b - int
    ,''      -- iPlodMessage - nvarchar(max)
    ,''      -- iPlodSettingsJson - nvarchar(max)
	,@StartDate
	,@EndDate
	,@Company
	,@INXGuid
	,@UserID
	,@EmployeeType
	,@DefaultWorkHrs
	,@Tour
	,@EmailPersonal 
	,@PhonePersonal 
	,@NOK_Name 
	,@NOK_Phone 
     )


	END	 

ELSE IF @InsertType = 'UpdateEmployee'
	BEGIN

		BEGIN TRY

        BEGIN TRANSACTION;
			IF @UpdateEmployeeQueryString <> ''
				BEGIN

          /*****
          RB Insert here for RBRIg and RBSite
          Could have been in the edit notes button, which would put it straight in the Operator Notes insert. I think this is better for the user. 
          This is terrible sql that should have never been commited. Really @UpdateEmployeeQueryString needs to die a death 
          and the page should be re
          *****/
          -- Find the start of @RBRIG
          -- Becuase we do it all in @UpdateEmployeeQueryString we have to pull pieces out.
         IF CHARINDEX('RBRig',@UpdateEmployeeQueryString) > 0
            BEGIN

             Declare @RBRigEmployeeIDStartPos INT = CHARINDEX('EmployeeID=',@UpdateEmployeeQueryString)
             DECLARE @RBRigEmployeeIDEndPos INT =  len(@UpdateEmployeeQueryString)
             Declare @RBREmployeeIDVar varchar(50) = SUBSTRING(@UpdateEmployeeQueryString,@RBRigEmployeeIDStartPos + 11,@RBRigEmployeeIDEndPos - @RBRigEmployeeIDStartPos - 1)

            -- This bit is to set @RBRIg for inserting correctly. 
            -- Find the first = after @RBRIG
            DECLARE @RBRigStartPosApos int = CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,CHARINDEX('RBRig',@UpdateEmployeeQueryString))
            --CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,CHARINDEX('@RBRig',@UpdateEmployeeQueryString))
           
            -- Find the second , after @RBRIG
            declare @RBRIGEndPosAPos int = CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,@RBRigStartPosApos + 2)
            -- CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,@RBRigStartPosApos + 1)
            
            set @RBRig = SUBSTRING(@UpdateEmployeeQueryString,@RBRigStartPosApos + 1, @RBRIGEndPosApos - @RBRigStartPosApos -1)

            -- This bit is for removing @RBRIG from the employees update
            declare @RBRigStartPosVar int = CHARINDEX('RBRig',@UpdateEmployeeQueryString)
            DECLARE @RBRigEndPosVar int = CHARINDEX(',',@UpdateEmployeeQueryString,@RBRigStartPosVar)

            declare @RBRigSubString varchar(50) = SUBSTRING(@UpdateEmployeeQueryString,@RBRigStartPosVar,  @RBRigEndPosVar - @RBRigStartPosVar +1 )
            
              SET @UpdateEmployeeQueryString = REPLACE(@UpdateEmployeeQueryString,@RBRigSubString,'')
                set @Purpose = @Purpose + '; This Update had RBRig as well but was removed from query string for seperate insert.'

               if @DebugMode = 1
               begin   
                 print 'RBRigEmployeeIDStartPos ' + cast(@RBRigEmployeeIDStartPos as varchar(20))
                 print 'RBRigEmployeeIDEndPos ' + cast(@RBRigEmployeeIDEndPos as varchar(20))
                 PRINT 'RBREmployeeIDVar ' + @RBREmployeeIDVar

                 PRINT 'RBRigStartPosApos = ' + cast(@RBRigStartPosApos as varchar(20))
                 PRINT 'RBRigEndPosApos = ' + cast(@RBRigEndPosApos as varchar(20))
                 PRINT 'RBRig = ' + cast(@RBRig as varchar(20))
                 PRINT 'RBRigStartPosVar = ' + cast(@RBRigStartPosVar as varchar(20))
                 PRINT 'RBRigEndPosVar = ' + cast(@RBRigEndPosVar as varchar(20))
                 PRINT 'RBRigSubString = ' + @RBRigSubString
                 PRINT 'UpdateEmployeeQueryString with @RBRSubStringRemoved - ' + @UpdateEmployeeQueryString
      
                END 
            END

          IF @RBRig <> 0 AND @RBRig is not NULL 
            BEGIN
             --find previous entries and set acive = 0
              Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
            	  WHERE ProjectID = @ProjectID AND OperatorID = cast(@RBREmployeeIDVar AS int) AND (Date IS NULL OR Date = '')  AND LegendCode = 'RBRig'
            
                INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
            	(  [OperatorID]
                  ,[Date]
                  ,[LegendCode]
                  ,[EditValue]
                  ,[ProjectID]
                  ,[Comments]
                  ,[UserID]
                  ,[ModifiedOn]
                  ,[Active]
            	  )
            	  VALUES ( 
            				cast(@RBREmployeeIDVar AS int)
            				,NULL
            				,'RBRig'
            				,cast(@RBRig as varchar(20))
            				,@ProjectID	
            				,'Tricked in here from update employee'			
            				,@UserID
            				,GETDATE()
            				,1
            				)
            	END	 

      

            /********
            RBSite now
            *********/

          IF CHARINDEX('RBSite',@UpdateEmployeeQueryString) > 0
            BEGIN

             Declare @RBSiteEmployeeIDStartPos INT = CHARINDEX('EmployeeID=',@UpdateEmployeeQueryString)
             DECLARE @RBSiteEmployeeIDEndPos INT =  len(@UpdateEmployeeQueryString)
             Declare @RBSiteEmployeeIDVar varchar(50) = SUBSTRING(@UpdateEmployeeQueryString,@RBSiteEmployeeIDStartPos + 11,@RBSiteEmployeeIDEndPos - @RBSiteEmployeeIDStartPos - 1)

            -- This bit is to set @RBSite for inserting correctly. 
            -- Find the first = after @RBSite
            DECLARE @RBSiteStartPosApos int = CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,CHARINDEX('@RBSite',@UpdateEmployeeQueryString))
            --CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,CHARINDEX('@RBSite',@UpdateEmployeeQueryString))
           -- CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,CHARINDEX('RBRig',@UpdateEmployeeQueryString))
            -- Find the second , after @RBSite
            declare @RBSiteEndPosAPos int = CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,@RBSiteStartPosApos + 2)
            -- CHARINDEX(CHAR(39),@UpdateEmployeeQueryString,@RBSiteStartPosApos + 1)
            
            set @RBSite = SUBSTRING(@UpdateEmployeeQueryString,@RBSiteStartPosApos + 1 , @RBSiteEndPosApos - @RBSiteStartPosApos -1)

            -- This bit is for removing @RBSite from the employees update
            declare @RBSiteStartPosVar int = CHARINDEX('RBSite',@UpdateEmployeeQueryString)
            DECLARE @RBSiteEndPosVar int = CHARINDEX(',',@UpdateEmployeeQueryString,@RBSiteStartPosVar)

            declare @RBSiteSubString varchar(50) = SUBSTRING(@UpdateEmployeeQueryString,@RBSiteStartPosVar,  @RBSiteEndPosVar - @RBSiteStartPosVar +1 )
            
              SET @UpdateEmployeeQueryString = REPLACE(@UpdateEmployeeQueryString,@RBSiteSubString,'')
              set @Purpose = @Purpose + '; This Update had RBSite as well but was removed from query string for seperate insert.'



               if @DebugMode = 1
               begin   
                 print 'RBSiteEmployeeIDStartPos ' + cast(@RBSiteEmployeeIDStartPos as varchar(20))
                 print 'RBSiteEmployeeIDEndPos ' + cast(@RBSiteEmployeeIDEndPos as varchar(20))
                 PRINT 'RBSiteEmployeeIDVar ' + @RBSiteEmployeeIDVar

                 PRINT 'RBSiteStartPosApos = ' + cast(@RBSiteStartPosApos as varchar(20))
                 PRINT 'RBSiteEndPosApos = ' + cast(@RBSiteEndPosApos as varchar(20))
                 PRINT 'RBSite = ' + cast(@RBSite as varchar(20))
                 PRINT 'RBSiteStartPosVar = ' + cast(@RBSiteStartPosVar as varchar(20))
                 PRINT 'RBSiteEndPosVar = ' + cast(@RBSiteEndPosVar as varchar(20))
                 PRINT 'RBSiteSubString = ' + @RBSiteSubString
                 PRINT 'UpdateEmployeeQueryString with @RBRSubStringRemoved - ' + @UpdateEmployeeQueryString
      
                END 
            END

          IF @RBSite <> '' AND @RBSite is not NULL 
            BEGIN
             --find previous entries and set acive = 0
              Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
            	  WHERE ProjectID = @ProjectID AND OperatorID = cast(@RBSiteEmployeeIDVar AS int) AND (Date IS NULL OR Date = '')  AND LegendCode = 'RBSite'
            
                INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
            	(  [OperatorID]
                  ,[Date]
                  ,[LegendCode]
                  ,[EditValue]
                  ,[ProjectID]
                  ,[Comments]
                  ,[UserID]
                  ,[ModifiedOn]
                  ,[Active]
            	  )
            	  VALUES ( 
            				cast(@RBSiteEmployeeIDVar AS int)
            				,NULL
            				,'RBSite'
            				,cast(@RBSite as int)
            				,@ProjectID	
            				,'Tricked in here from update employee'			
            				,@UserID
            				,GETDATE()
            				,1
            				)
            	END	 

           




					----********-----
					--This is to fix a bug in the php. The page's update string is always UPDATE dbo.tbl_DBT_Employees
					--So it will never update OtherEmployees table
					--This case fixes that, instead of doing it in the page.
					--Lookup both tables, work out which table the employee is in, then use that table
					--Not sure the rownum is actually needed if it only exists in one table anyway....especially if it is in both tables...
					----*******-----
					

					DECLARE @Table NVARCHAR(50) = 
					(SELECT TOP 1 [Table] FROM (
						SELECT tbl1.EmployeeID,
							   tbl1.ProjectID,
							   tbl1.ModifiedOn,
							   tbl1.Status,
							   [Table]
							FROM  (
								SELECT EmployeeID, 
										ProjectID, 
										ModifiedOn, 
										Status,
										[Table] = 'tbl_DBT_Employees'
								FROM dbo.tbl_DBT_Employees
								WHERE --ProjectID = @ProjectID
									 OperationID = @OperationID
										AND Status = 1
										AND EmployeeID = @EmployeeID
							UNION ALL 
								SELECT EmployeeID, 
										ProjectID, 
										ModifiedOn, 
										Status = Active,
										[Table] = 'tbl_DBT_Roster_OtherEmployees'
								FROM dbo.tbl_DBT_Roster_OtherEmployees
								WHERE --ProjectID = @ProjectID
									 OperationID = @OperationID
										AND Active = 1
										AND EmployeeID = @EmployeeID
						) AS tbl1
						) AS tbl2 
						)
					---****----
					--End dodgy stuff
					---****----

					SET @UpdateEmployeeQueryString = REPLACE(@UpdateEmployeeQueryString,'tbl_DBT_Employees',@Table)

					SET @UpdateEmployeeQueryString = CASE WHEN @Table = 'tbl_DBT_Roster_OtherEmployees' 
														THEN REPLACE(@UpdateEmployeeQueryString,'Tour','RosterPattern')
														ELSE @UpdateEmployeeQueryString
													END 

					SET @UpdateEmployeeQueryString = CASE WHEN @Table = 'tbl_DBT_Roster_OtherEmployees' 
														THEN REPLACE(@UpdateEmployeeQueryString,'EditedBy','Userid')
														ELSE @UpdateEmployeeQueryString
													END 

					SET @UpdateEmployeeQueryString = CASE WHEN @Table = 'tbl_DBT_Roster_OtherEmployees' 
														THEN @UpdateEmployeeQueryString + ' and ProjectID ='+ CAST(@ProjectID AS VARCHAR(5)) +' and Active = 1'
														ELSE @UpdateEmployeeQueryString
													END 


	/**************
	There is a second bug in the page for position.
	Position is a list, so it wants to insert an ID into dbt_employees. 
	This should be the varchar field instead. 
	So need to swap the ID to the varchar
	*************/
			
			SET @UpdateEmployeeQueryString = REPLACE(@UpdateEmployeeQueryString,'SET Position','Set PositionID')

      if @DebugMode = 0
      begin
			EXEC (@UpdateEmployeeQueryString);
      


			-- After inserting the correct positionID, go and update position as well.
				DECLARE	@CorrectPosition VARCHAR(200) = 
									(SELECT TOP 1 b.EmpClassDescription FROM dbo.tbl_DBT_Employees AS a
										LEFT OUTER JOIN dbo.tbl_SYS_EmpClass AS b
											ON a.PositionID = b.EmpClassID
												WHERE a.EmployeeID = @EmployeeID
												AND a.ProjectID = @ProjectID
												-- AND @Position = a.PositionID -- Page doesnt send this in.
												) 

				UPDATE dbo.tbl_DBT_Employees SET Position = @CorrectPosition
							WHERE EmployeeID = @EmployeeID
									AND ProjectID = @ProjectID
									--AND @Position = PositionID -- Page doesnt send this in.
			
					-- history
					 INSERT INTO [tbl_DBT_EmployeeChangeHistory]
					(
						ChangeDate,
						ChangedBy,
						ProjectID,
						EmployeeID,
						TableChanged,
						ChangeType,
						ChangeString,
						DeletedJson,
						ChangePurpose
					)
					SELECT GETDATE(),
						   @UserID,
						   @ProjectID,
						   @EmployeeID,
						   'tbl_DBT_Employees',
						   'Edit Employees',
						   @UpdateEmployeeQueryString,
						   N'',
						   @Purpose; -- empty for now
				END 
		-- return success
        SELECT 1 AS 'Result', 'Data successfully saved' AS 'Message'
      
        END

		COMMIT TRANSACTION;

		END TRY 
		BEGIN CATCH

        -- something went wrong, rollback  
        ROLLBACK;
        -- PRINT ERROR_MESSAGE();

		SELECT 0 AS 'Result', ERROR_MESSAGE() AS 'Message';

		END CATCH

	END	 

ELSE IF @InsertType = 'ChangeCrew'
	BEGIN 
	BEGIN TRY

        BEGIN TRANSACTION;
		-- for crew, startdate and tour, remove all previous changed crew
			Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
				WHERE ProjectID = @ProjectID AND OperatorID = @EmployeeID AND LegendCode = 'Crew'
			Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
				WHERE ProjectID = @ProjectID AND OperatorID = @EmployeeID AND LegendCode = 'Tour'
			Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
				WHERE ProjectID = @ProjectID AND OperatorID = @EmployeeID AND LegendCode = 'StartDate'
			Update [dbo].[tbl_DBT_Roster_CalEdits] SET ModifiedOn = GETDATE(), ACTIVE = 0, UserID = @UserID
				WHERE ProjectID = @ProjectID AND OperatorID = @EmployeeID AND LegendCode = 'NewRoom'
	
			-- This is the crew insert
			IF @CrewCode IS NOT NULL AND @CrewCode <> ''
			BEGIN 
			  INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
			(  [OperatorID]
			  ,[Date]
			  ,[LegendCode]
			  ,[EditValue]
			  ,[ProjectID]
			  ,[Comments]
			  ,[UserID]
			  ,[ModifiedOn]
			  ,[Active]
			  )
			  VALUES ( 
						@OperatorID
						,@StartDate
						,'Crew'
						,@CrewID 
						,@ProjectID	
						,@Comments			
						,@UserID
						,GETDATE()
						,1
						)
			END 

			-- This is the Tour Start Date insert
			IF @TourStartDate IS NOT NULL AND @TourStartDate <> ''
			BEGIN 
			INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
			(  [OperatorID]
			  ,[Date]
			  ,[LegendCode]
			  ,[EditValue]
			  ,[ProjectID]
			  ,[Comments]
			  ,[UserID]
			  ,[ModifiedOn]
			  ,[Active]
			  )
			  VALUES ( 
						@OperatorID
						,@StartDate
						,'StartDate'
						,@TourStartDate
						,@ProjectID	
						,@Comments			
						,@UserID
						,GETDATE()
						,1
						)
			END 

			-- This is the Tour insert
			IF @Tour IS NOT NULL AND @Tour <> ''
			BEGIN 
			INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
			(  [OperatorID]
			  ,[Date]
			  ,[LegendCode]
			  ,[EditValue]
			  ,[ProjectID]
			  ,[Comments]
			  ,[UserID]
			  ,[ModifiedOn]
			  ,[Active]
			  )
			  VALUES ( 
						@OperatorID
						,@StartDate
						,'Tour'
						,@Tour
						,@ProjectID	
						,@Comments			
						,@UserID
						,GETDATE()
						,1
						)
			END 

			-- This is the Room insert
			IF @NewRoom IS NOT NULL AND @NewRoom <> ''
			BEGIN 
			INSERT INTO [dbo].[tbl_DBT_Roster_CalEdits]
			(  [OperatorID]
			  ,[Date]
			  ,[LegendCode]
			  ,[EditValue]
			  ,[ProjectID]
			  ,[Comments]
			  ,[UserID]
			  ,[ModifiedOn]
			  ,[Active]
			  )
			  VALUES ( 
						@OperatorID
						,@StartDate
						,'Room'
						,@NewRoom
						,@ProjectID	
						,@Comments			
						,@UserID
						,GETDATE()
						,1
						)
			END 
			-- return success
			SELECT 1 AS 'Result', 'Data successfully saved' AS 'Message'

			COMMIT TRANSACTION;

		END TRY 
		BEGIN CATCH

			-- something went wrong, rollback  
			ROLLBACK;
			-- PRINT ERROR_MESSAGE();

			SELECT 0 AS 'Result', ERROR_MESSAGE() AS 'Message';

		END CATCH
	END 


END
GO
PRINT N'Altering [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs] ALTER COLUMN [GoodIsBold] [int] NULL
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_Layout_FieldConfigs] ALTER COLUMN [BadIsBold] [int] NULL
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Reporting_Data_MiningKPIdataSets]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_Reporting_Data_MiningKPIdataSets]
  @ProjectID INT,
  @UserID INT = 0,
  @DateFrom DATE = '',
  @DateTo DATE = '',
  @OperatorIDs VARCHAR(255) = NULL,
  @ActivityIDs VARCHAR(255) = NULL,
  @ProcessIDs VARCHAR(255) = NULL,
  @EquipmentIDs VARCHAR(255) = NULL,
  @TaskIDs VARCHAR(255) = NULL,
  @Shift VARCHAR(2) = NULL,
  @LocationIDs VARCHAR(255) = NULL,
  @EquipTypeIDs VARCHAR(255) = NULL,
  @ReportTypeID INT = 0,
  @InputType NVARCHAR(25) = 'Stat'  --don't think we are using this for this page?will call from front end with @InputType = 'Attr' and @ReportTypeID = Inputid
  ,
  @MaterialIds VARCHAR(255) = NULL,
  @DestIDs VARCHAR(255) = NULL,
  @BogFromIDs VARCHAR(255) = NULL,
  @BogToIDs VARCHAR(255) = NULL,
  @DebugMode INT = 0
AS
BEGIN

  SET NOCOUNT ON;
  /*
  This is for Mining Kpis at different levels of detail

	EXEC [dbo].[SP_ProjSetup_Reporting_Data_MiningKPIdataSets] @ProjectID = '3', @UserID = '250', @DateFrom = '2021-12-01', @DateTo = '2021-12-12',
													@OperatorIDs = '', @ActivityIDs = '', @ProcessIDs = '', @EquipmentIDs = '', @TaskIDs = '', @Shift = '', @LocationIDs = '',
													@DestIDs = '', @BogFromIDs = '', @BogToIDs = '', @EquipTypeIDs = '', @ReportTypeID = '999', @MaterialIDs = ''
													,@debugmode = 1

    CA 2022-02-01 ... Create
	   2022-02-02 ... Added Graphs loop
	   2022-02-07 ... Made graph loop into a combo chart
     2022-03-19 ts ... swapped the "Graphs" to come first before looping the KPICODE. allows different type of loops within the same report.
     2022-05-24 ts ... put flag to kill the graph configs (they are treated as data for the graph on older version of the php!
     2022-06-28 ts ... get data out of the WithIds snapshot

  */
  -------------------------------------------------------------------------- DATE VARIABLES --------------------------------------------------------------------------

DECLARE @graphsHaveConfigTable int = 0

DECLARE @RptDate DATE                    
SET @RptDate = @DateTo; --switch to @Yesterday to affect all graphs
  

-- If it is a daily report, set startdate  = end date
SET @DateFrom = CASE WHEN @ReportTypeID = 1 THEN @DateTo ELSE @DateFrom END 

DECLARE @wkStINT INT
SET @wkStINT =  (SELECT  TOP 1   [WeekStart]  FROM [dbo].[tbl_DBT_ProjectKPIs] WHERE ProjectID = @ProjectID)

DECLARE @WeekStart DATE       
SET @WeekStart = (SELECT  [dbo].[FN_GetWeekStartDate](@RptDate,@wkStINT));  

DECLARE @WeekEnd DATE       
SET @WeekEnd = DATEADD(day, 6, @WeekStart);  

--print @WeekEnd;
--print @WeekStart;


DECLARE @28Ago DATE
SET @28Ago = DATEADD(day, - 28, @RptDate);

DECLARE @MthStart DATE
SET @MthStart = DATEADD(mm, DATEDIFF(mm, 0, @RptDate), 0);

DECLARE @MthEnd DATE
SET @MthEnd =  DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,@RptDate)+1,0));

DECLARE @MTDBudCode INT
SET @MTDBudCode = 14;
DECLARE @WTDBudCode INT	
SET @WTDBudCode = 3	;
Declare @Bud14Name varchar(50);
		SELECT @Bud14Name = B.BudgetName from tbl_DBT_BudgetCode as B Where BudgetCodeID = 14;
Declare @Bud03Name varchar(50);
		SELECT @Bud03Name = B.BudgetName from tbl_DBT_BudgetCode as B Where BudgetCodeID = 03;

--find max min dates required:
declare @MinDate date = iif(@28Ago < @MthStart, @28Ago, @MthStart);
declare @MaxDate date = @MthEnd;



-------------------------------------------------------------------------- DATA SOURCE --------------------------------------------------------------------------

DECLARE  @AllowedReportTypeIdCsv NVARCHAR(MAX)  =  (SELECT top 1 PermissionConfigValue 
                                                  FROM [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'Reporting','_AllTypes','_AllModes','ReportingAllowedTypes')
                                                  )
DECLARE @IsAdmin int = dbo.FN_IsWebbarFullAdmin(@UserId )

-- Make sure debug is off for normal users
SET @DebugMode = CASE WHEN @IsAdmin = 0 THEN 0 else @DebugMode END 

--flag for only stat 7. Copied from other SP. Dont think we need it?
DECLARE @OnlyWantStat7 INT = 0  

/*******
This sequence is to build KPIs
Template for which KPIs to display for the project
********/

			SELECT 
			kp.KPICODE,
			kp.KPIDescription--MetricCode --2021-06-05 swithced this from MetricCode to get the desc from project mapping atbe instead of sys table
			,MetricID
			,kp.KPI_SubtotalID
			,kp.KPISort
			,kp.RptGroupID
			INTO #KPIDefns
			FROM dbo.tbl_DBT_ProjectKPIs AS kp
			WHERE 
				kp.ProjectID = @ProjectID
				AND kp.Status = 1

			/*
			LEFT JOIN #Kpis AS kpi
			ON kpi.MetricId = kp.MetricID
			AND kpi.SubtotalID = dbo.FN_IsNullorEmptyorZero(kp.KPI_SubtotalID, kpi.SubtotalID) --if project KPI not mapped to subtotal, then join whatever (might bring dupes?)
			--AND kp.ProjectID = @ProjectID
			--AND kp.Status = 1
			*/


/************
Element List Template
***************/
	SELECT 
			kp.KPICODE,
			kp.KPIDescription--MetricCode --2021-06-05 swithced this from MetricCode to get the desc from project mapping atbe instead of sys table
			,MetricID
			,kp.KPI_SubtotalID
			,kp.KPISort
			,kp.RptGroupID
			INTO #ReportingElements
			FROM dbo.tbl_DBT_ProjectKPIs AS kp
			WHERE 
				kp.ProjectID = @ProjectID
				AND kp.Status = 1
				AND kp.RptGroupID <> 3



/*****
Grab all data we could possibly need.
Some graphs are MTD etc. 
So grab MTD based on End Date. Regardless of date range selected.
Then make a flag field call is in range. 
*******/
  SELECT  *,
		 [InDateRange] = CASE WHEN s.Date BETWEEN @DateFrom AND @DateTo THEN 1 ELSE 0 END -- Daily report only works when datefrom = dateTo with this logic
		 ,[FutureDate] = CASE WHEN s.date > @DateTo THEN 1 ELSE 0 END -- These are targets to EOM generally. We want these on MTD graphs for targets etc.
	INTO
            #Unfiltered
                --2022-06-28 FROM [dbo].syn_STO_ReportingSnapshot_Combined_All AS s
               FROM vw_ReportingSnapshotLatest_KpisStatsOnly_AllWithIDs AS s
               WHERE s.ProjectID = @ProjectID
                 AND s.Date BETWEEN @MthStart AND @MthEnd  --@DateTo -- Use futureDate -- Start of month to daily report date (not to end of month)
                 --AND s.Type IN ('mining','shiftboss','dtevents')
                  AND (s.StatisticId = 7 OR @OnlyWantStat7 =0)

/******
Filter according to current page selections
*******/

SELECT * INTO 
      #dataset
      FROM #unfiltered

  WHERE (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityReasonId AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(Material AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestinationId AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )

 /*********************
build required datasets for different components, based the #dataset.
*******************************/




/**********************
Inner join KPIs to filter to only kpi rows.	
This dataset will be good in other queries!
*******/
SELECT 
			a.*,kpi.RptGroupID
INTO #KPIDataset
FROM #dataset AS a
INNER JOIN #KPIDefns AS kpi ON kpi.KPICODE = a.MetricCode

SELECT DISTINCT a.Date, b.MetricCode, b.Units, b.Site, b.BudgetCode
INTO #DateTemplate
FROM #KPIDataset AS a
	CROSS JOIN 
	(SELECT DISTINCT MetricCode, Units, Site, BudgetCode FROM #kpidataset) AS b

SELECT da.Date,
									da.BudgetCode,
								   da.MetricCode,
								  -- MetricValue= SUM(MetricValue),
								   MetricValue = ISNULL(SUM(MetricValue),0),
								   da.Units,
								   da.Site 
INTO #KpiDataSetDateGroup
FROM #DateTemplate AS da 
	LEFT OUTER join
	#KPIDataset AS kpi 
		ON kpi.Date = da.Date
		AND kpi.BudgetCode = da.BudgetCode
		AND kpi.MetricCode = da.MetricCode
		AND kpi.Site = da.Site
		AND kpi.Units = da.Units


GROUP BY da.Date,
         da.BudgetCode,
         da.MetricCode,
         da.Units,
         da.Site



 /*********************
This sequence is the KPI Table specific sequence
*******************************/

		/*****
		High level KPI aggregation.
		This is where we drop a bunch of detail (eg location) so we can aggregate the values
		The next few after this are a very high level summary as a result
		Finishes with a pivot.
		******/
		SELECT 
			   BudgetCode = CASE WHEN InDateRange = 0 AND BudgetCode = 'Actual' THEN 'MTD Actual'
								WHEN InDateRange = 0 AND BudgetCode = 'Target' THEN 'MTD Target'
								else BudgetCode
								END 
								,
			 --  StatisticCode,
			 --  StatisticId,
			 --  ReasonDescription,
			 --  ReasonId,
			--   Material,
			 --  EquipmentCode,
			 --  EquipTypeCode,
			   MetricCode,
			 --  MetricSubtotalCode,  -- This one may be the first one to include for more detail. Kind of includes reason
			   MetricValue = SUM(MetricValue),
			  -- MTDMetricValue = CASE WHEN InDateRange = 0 THEN  SUM(MetricValue) ELSE 0 END,
			   Units,
			   Site,
			   RptGroupID
			   
			 --  DestinationCode,
			--   BogFrom,
			--   BogTo,
			--   PvtJn_TaskId,
			--   PvtJn_InputGroupId
   
		INTO #HighLevelKPIReporting
		FROM #KPIDataset
		WHERE FutureDate = 0
		GROUP BY BudgetCode,
				 MetricCode,
			  --   MetricSubtotalCode,
				 Units,
				 Site,
				 InDateRange
				 ,RptGroupID


		SELECT 
				MetricCode,
				[Actual],
				[Target],
				[MTD Actual],
				[MTD Target],
				units
				,RptGroupID
			INTO #PivotHighLevelKPIReporting
			FROM 
			(SELECT BudgetCode,
					MetricCode,
					MetricValue,
					--MTDMetricValue,
				   Units,
					Site,
					RptGroupID
			FROM #HighLevelKPIReporting)
			AS piv
			PIVOT
			(SUM(MetricValue)
				FOR BudgetCode
				IN ([Actual],[Target],[MTD Actual],[MTD Target])
			) AS piv1

			 
		SELECT [Metric] = MetricCode + ' (' + Units + ')',
			   Actual,
			   Target,
			   [Variance] = Actual - Target,
			   [Comments] = rp.RptCommentsText,
			   [MTD Actual] = [MTD Actual] + [Actual], -- Add MTD actual and Actual together as they are different lines (different budget codes before the piv).
			   [MTD Target] = [MTD Target] + [Target],
			   [MTD Variance] = [MTD Actual] + [Actual] - [MTD Target] - [Target]
			   
			   --Units
		INTO  #FinalPivotHighLevelKPIReporting
		FROM #PivotHighLevelKPIReporting AS kp
			LEFT OUTER JOIN
			(SELECT
				r.rptGroupId
				,r.RptCommentsText
				,rd.RptDetailCode
			FROM dbo.tbl_STO_RptComments AS r
				INNER JOIN dbo.tbl_SYS_RptDetail AS rd
					ON r.RptDetailID = rd.RptDetailID
			WHERE r.RptCommentDate = @DateTo
				AND r.DataDateID = 1
				AND r.ProjectID = @ProjectID
				and rd.RptDetailCode = 'REASVAR') 
			AS rp
				ON kp.RptGroupID = rp.RptGroupID


		SELECT 
			   Metric = dbo.FN_MarkupHtml(Metric,1,'#000000'),
               Actual = dbo.FN_FormatDecimalAsVarchar(Actual,1),
               Target = dbo.FN_FormatDecimalAsVarchar(Target,1),
               Variance = CASE WHEN Variance >= 0 THEN 
							dbo.FN_MarkupFullHtml_v2(dbo.FN_FormatDecimalAsVarchar(Variance,1),1,0,'#000000','#87ff99') -- green
							WHEN Variance < 0 THEN 
							dbo.FN_MarkupFullHtml_v2(dbo.FN_FormatDecimalAsVarchar(Variance,1),1,0,'#000000','#ff8585') -- red
							END,
			         	Comments ,
               [MTD Actual] = dbo.FN_FormatDecimalAsVarchar([MTD Actual],1),
               [MTD Target] = dbo.FN_FormatDecimalAsVarchar([MTD Target],1),
               [MTD Variance] =  CASE WHEN [MTD Variance] >= 0 THEN 
							dbo.FN_MarkupFullHtml_v2(dbo.FN_FormatDecimalAsVarchar([MTD Variance],1),1,0,'#000000','#87ff99') -- green
							WHEN [MTD Variance] < 0 THEN 
							dbo.FN_MarkupFullHtml_v2(dbo.FN_FormatDecimalAsVarchar([MTD Variance],1),1,0,'#000000','#ff8585') -- red
							END
               
		INTO #FormattedHighLevelKPIReporting
		FROM #FinalPivotHighLevelKPIReporting



		
/*************
Call the reporting components 
*******************/

 SELECT ComponentID = 'Component_KPISummary';

/* actually this isn't used fro the table
SELECT * FROM (
 SELECT
	ConfigName = 'yAxisMinValue'
	,ConfigValue = 100
UNION ALL
 SELECT
	ConfigName = 'yAxisMaxValue'
	,ConfigValue = 200	
) AS tbl WHERE @graphsHaveConfigTable = 1 --kill for now, the front end doesn't handle it yet
*/
if @ReportTypeID = 1
begin
 SELECT * FROM #FormattedHighLevelKPIReporting
end
if @ReportTypeID = 3--hack for monthly demo
begin
 SELECT Metric
       ,Actual
       ,Target
       ,Variance
      --this breaks it ,Budget = Target*0.8
       ,Comments
      -- ,[MTD Actual]
       --,[MTD Target]
       --,[MTD Variance]
       
       FROM #FormattedHighLevelKPIReporting
end


 /*********************
Graph Loop
This generates all graphs.
*******************************/

DECLARE @KPICode VARCHAR(50)


-- Update this first select when we have a CSV or a Table for graphs to grab
DECLARE Graph_Cursor CURSOR 
	FOR 
		-- This select is the data that is looped through, one row at a time
		SELECT KPICODE
			 FROM #ReportingElements

OPEN Graph_Cursor
-- This graphs the next row into a varible. All columns into different variables.
FETCH NEXT FROM Graph_Cursor INTO @KPICode

WHILE @@FETCH_STATUS = 0
	BEGIN 

		SELECT ComponentID = 'Component_Graphs_' + @KPICode;

IF @graphsHaveConfigTable = 1 --kill for now, the front end doesn't handle it yet
                    begin
                    
                     SELECT
                    	ConfigName = 'yAxisMinValue'
                    	,ConfigValue = 100
                    UNION ALL
                     SELECT
                    	ConfigName = 'yAxisMaxValue'
                    	,ConfigValue = 200	
                    end

		SELECT xAxis = CAST(FORMAT(xAxis,'dd-MM-yy') AS VARCHAR(20)),
				[Actual] =   CASE WHEN b.xAxis > @DateTo THEN NULL ELSE  NULLIF(b.Actual,0) END,
               [Actual MTD] =  CASE WHEN b.xAxis > @DateTo THEN NULL ELSE  NULLIF(b.[Actual MTD],0) END,
               [Target] = b.Target,
			   [Target MTD] = b.[Target MTD]
			   FROM (
		SELECT 
		xAxis,
		[Actual] = CAST(SUM(a.[Actual]) AS FLOAT),
		[Actual MTD] = CAST(SUM(a.[Actual MTD]) AS FLOAT),
		[Target] = CAST(SUM(a.[Target])	AS FLOAT),
		[Target MTD] = CAST(SUM(a.[Target MTD])	AS FLOAT)
		
		FROM 
		( SELECT 
				xAxis =	Date,
			  [Actual MTD] = CASE WHEN BudgetCode = 'Actual' THEN [Cumulative Value] ELSE 0 END ,
				[Target MTD] =  CASE WHEN BudgetCode = 'Target' THEN [Cumulative Value] ELSE 0 END,
				[Actual] = CASE WHEN BudgetCode = 'Actual' THEN [Value] ELSE 0 END ,
				[Target] =  CASE WHEN BudgetCode = 'Target' THEN [Value] ELSE 0 END
			--   [Cumulative Value],
			--   Units,
			--   Site 
			FROM 
					(SELECT			a.Date,
									a.BudgetCode,
								   a.MetricCode,
								  -- MetricValue= SUM(MetricValue),
								   [Cumulative Value] = SUM(a.MetricValue) OVER (PARTITION BY a.BudgetCode ORDER BY a.BudgetCode, a.date
																				ROWS UNBOUNDED PRECEDING),
									[Value] = SUM(a.MetricValue),
								  -- [Cumulative Target] = '',
								   a.Units,
								   a.Site
			  
		
					FROM #KpiDataSetDateGroup AS a 
					WHERE a.metriccode = @KPICode
					-- Dont get future Actuals (if theyt exist). But get future targets. 
					--AND NOT (FutureDate = 1 AND BudgetCode = 'Actual') 
		
					GROUP BY a.Date,
							 a.BudgetCode,
							 a.MetricCode,
							 a.Units,
							 a.Site,
							 a.MetricValue
				) AS tbl1


		) AS a 
	--	WHERE a.[Daily mAdv] > 0
		GROUP BY a.xAxis
		) AS b
-- Grab the next row in the cursor
FETCH NEXT FROM Graph_Cursor INTO @KPICode
-- This end if for While @@Fetch_Status = 0 (ie while its grabbing rows)
END 

CLOSE Graph_Cursor
DEALLOCATE Graph_Cursor

/**********************
Downtime Table
**********************/



 

IF @DebugMode = 1
BEGIN 
		SELECT [TableName] = '#FinalPivotHighLevelKPIReporting',* FROM #FinalPivotHighLevelKPIReporting
		SELECT [TableName] = '#PivotHighLevelKPIReporting',* FROM #PivotHighLevelKPIReporting
		SELECT [TableName] = '#HighLevelKPIReporting',* FROM #HighLevelKPIReporting
		SELECT [TableName] = '#KpiDefns',* FROM #KPIDefns
		SELECT [TableName] = '#DataSet',* FROM #dataset
		SELECT [TableName] = '#KPIDataSet',* FROM #KPIdataset
		SELECT [TableName] = '#DateTemplate',* FROM #DateTemplate
		SELECT [TableName] = '#KpiDataSetDateGroup',* FROM #KpiDataSetDateGroup
	--	SELECT [TableName] = '#Unfiltered',* FROM #Unfiltered


END 

DROP TABLE #FormattedHighLevelKPIReporting
DROP TABLE #FinalPivotHighLevelKPIReporting
DROP TABLE #HighLevelKPIReporting
DROP TABLE #PivotHighLevelKPIReporting
DROP TABLE #KPIDefns
DROP TABLE #dataset
DROP TABLE #KPIDataset
DROP TABLE #Unfiltered
DROP TABLE #KpiDataSetDateGroup
DROP TABLE #ReportingElements
DROP TABLE #DateTemplate
END
GO
PRINT N'Altering [dbo].[tbl_DBT_Reporting_ReportTypes]'
GO
ALTER TABLE [dbo].[tbl_DBT_Reporting_ReportTypes] DROP
COLUMN [DataDateId],
COLUMN [EtlJobCode_1]
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Reporting_Selections]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_Reporting_Selections]
  @ProjectID INT,
  @UserID INT = 0,
  @DateFrom DATE = '',
  @DateTo DATE = '',
  @OperatorIDs VARCHAR(255) = NULL,
  @ActivityIDs VARCHAR(255) = NULL,
  @ProcessIDs VARCHAR(255) = NULL,
  @EquipmentIDs VARCHAR(255) = NULL,
  @TaskIDs VARCHAR(255) = NULL,
  @Shift VARCHAR(2) = NULL,
  @LocationIDs VARCHAR(255) = NULL,
  @EquipTypeIDs VARCHAR(255) = NULL,
  @ReportTypeID INT = 0,
  @InputType NVARCHAR(25) = 'Stat'  --don't think we are using this for this page?will call from front end with @InputType = 'Attr' and @ReportTypeID = Inputid
  ,
  @MaterialIds VARCHAR(255) = NULL,
  @DestIDs VARCHAR(255) = NULL,
  @BogFromIDs VARCHAR(255) = NULL,
  @BogToIDs VARCHAR(255) = NULL,
  @KPIIDs VARCHAR(255) = NULL,
  @CrewIDs VARCHAR(255) = NULL,
  @WorkAreaIDs VARCHAR(255) = NULL,  --this is pitId!
  @CutNumberIDs VARCHAR(255) = NULL
  ,@debugID INT = 0
AS
BEGIN

  SET NOCOUNT ON;
  /*

            EXEC [dbo].[SP_ProjSetup_Reporting_Selections] @ProjectID = '259', @UserID = 137, @DateFrom = '2019-11-06', @DateTo = '2019-11-06', @OperatorIDs = '', @EquipmentIDs = '', @TaskIDs = '', @Shift = '', @LocationIDs = '', @DestIDs = '', @BogFromIDs = '', @BogToIDs = '', @EquipTypeIDs = '', @MaterialIDs = '', @KPIIDs = '', @CrewIDs = '', @WorkAreaIDs = '',@CutNumberIDs = '',  @ReportTypeID = '18', @MaterialIds = ''
            EXEC [dbo].[SP_ProjSetup_Reporting_Selections] @ProjectID = '259', @UserID = 137, @DateFrom = '2019-11-06', @DateTo = '2019-11-06', @OperatorIDs = '', @EquipmentIDs = '', @TaskIDs = '', @Shift = '', @LocationIDs = '', @DestIDs = '', @BogFromIDs = ',2,', @BogToIDs = '', @EquipTypeIDs = '', @MaterialIDs = '', @KPIIDs = '', @CrewIDs = '', @WorkAreaIDs = '',@CutNumberIDs = '',  @ReportTypeID = '18', @MaterialIds = ''

            2021-10-12 IP ... copy from recon
    2021-10-16 ts ... don't filter on inputid, just lookign for all source data (actuals) maybe want to include targets in this down the track?
    2021-10-19 ts ... config @typeAlias and @Mode agasint each report type
    2021-10-19 ip ... added Activity and Process
                      added Type filter
    2021-11-05 ts ... handling for training report.  also shifted report type block up to the top.
	2021-11-05 ip ... added Operator and Shift selection
  2021-11-08 ts ... filter report types to usergroup.
                ... activity needs desc.
                    also process
  2022-01-31 ts ... pull from kpi snapshot for reporting
  2022-01-23 ip ... added flag on ReportTypes query to indicate that this report type only need datefrom
  2022-03-02 CA ... Added Becs Testing
  2022-03-15 IP ... Added KPI and Crew selection
  2022-03-23 CA ... Add graph display for CRC
  2022-05-11 CA ... Added truck weights
  2022-05-24 ts ... fix the wrong MaterialID
                ... add debugging
  2022-06-06 ts ... pull report tyes from table
  2022-06-15 IP ... added WorkArea and CutNumber
  2022-06-28 ts .. pull from teh ids snapshot?
  2022-07-03 ts ... add permissions from the grouping
                ... NEED TO CHECK ON EXSITIN DEPLOYMENTS WHEN PUTTING THIS LIVE!!!!!  (UPDATE tbl_DBT_Reporting_ReportTypes.PermissionsGrouping to suit
                INSERT INTO dbo.tbl_SYS_UserGroupPermissions (UserGroupId, PermissionConfigName, PermissionConfigValue, PageCode, TypeAlias, TypeMode, ProjectId, OperationId, Active, Comments, ModifiedOn, ChangedBy, DoNotAllowOnLocal) VALUES
                  (69, 'ReportingAllowedReportGroupingCsv', ',Physicals,', N'Reporting', N'_AllTypes', '_AllModes', 1, 1, 1, '', CONVERT(DATETIME, '2021-11-08 14:24:44.133', 121), 137, 0)
  2022-07-05 CA ... Made PItID a hard select instead of data based. 
  2022-08-16 ts ... bring pitId and CutNumber from the snapshot table
                ... bring pitid from teh snapwhot


this is purely for driving the filter set.
maybe in the future, we put the base dataset in here too, and some components are allowed to filter this within php for rendering?

  */
  ----------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------
  /* --get the dataset:
   DECLARE @DataSet table (
   EquipmentID int
   , LocationID int
   , ActivityReasonID int
   , CurrentValue float  --maybe this has to be decimal?
   )
  IF @TableSource = 'tbl_DWH_ProdDataStorage'
   BEGIN
  INSERT INTO @DataSet ( 
  EquipmentID 
   , LocationID 
   , ActivityReasonID 
   , CurrentValue   
  )
  SELECT 
            EquipmentId
            ,LocationID
            , ActivityReasonID
            , CurrentValue = Value
            FROM 
            [dbo].tbl_DWH_ProdDataStorage
   WHERE StatisticID = @ReportTypeID 
            AND BudgetCodeID = 1
            AND @ProjectID = 1
            AND Date BETWEEN @DateFrom AND @DateTo
   END 
   --copy the above for insert to @DataSet for @TableSource = 'tbl_DWH_iPlodStagingTableEdited'











   --added teh CurrentValue to be returned by this SP
   SELECT 'CurrentValue' AS 'DATASET'
   SELECT SUM(CurrentValue) 
   FROM @DataSet
   */


  --TO DO:

  /*
  remove the hack on inputtype


  */


  --hack until the front end calls @inputType
  SET @InputType = IIF(@ReportTypeID IN (11, 402, 107), 'Attr', @InputType)

  -------------------------------------------------------------------------- DATA SOURCE --------------------------------------------------------------------------

DECLARE  @AllowedReportTypeIdCsv NVARCHAR(MAX)  =  (SELECT TOP 1 PermissionConfigValue 
                                                  FROM [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'Reporting','_AllTypes','_AllModes','ReportingAllowedTypes')
                                                  )
DECLARE  @AllowedReportGroupCsv NVARCHAR(MAX)  =  (SELECT TOP 1 PermissionConfigValue 
                                                  FROM [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'Reporting','_AllTypes','_AllModes','ReportingAllowedReportGroupingCsv')
                                                  )

DECLARE @IsAdmin INT = dbo.FN_IsWebbarFullAdmin(@UserId )


--report types drive everything:
SELECT 'ReportTypes' AS 'DATASET'

 SELECT tbl.ReportTypeID
       ,tbl.ReportTypeLabel
       ,tbl.TypeAlias
	   ,tbl.HideDateTo
       ,tbl.Type
       ,tbl.Mode
       
       FROM ( SELECT * FROM dbo.tbl_DBT_Reporting_ReportTypes AS tdrrt
       WHERE tdrrt.Status  > 0 
 /*SELECT ReportTypeID = 1,
         ReportTypeLabel ='DailyReport'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 1
         ,Type = 'Mining'
         ,Mode = 'Reporting'
UNION ALL 
  SELECT ReportTypeID = 2,
         ReportTypeLabel ='WeeklyReport'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 0
         ,Type = 'Mining'
         ,Mode = 'Reporting'
         UNION ALL 
  SELECT ReportTypeID = 3,
         ReportTypeLabel ='MonthlyReport'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 0
         ,Type = 'Mining'
         ,Mode = 'Reporting'
         UNION ALL 
  SELECT ReportTypeID = 99,
         ReportTypeLabel ='PeriodReport'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 0
         ,Type = 'Mining'
         ,Mode = 'Reporting'

         UNION ALL 
  SELECT ReportTypeID = 60,
         ReportTypeLabel ='TrainingReport'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 0
         ,Type = 'Mining'
         ,Mode = 'Reporting'
		 UNION ALL 
  SELECT ReportTypeID = 200,
         ReportTypeLabel ='PreCompGraphDisp'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 1
         ,Type = 'Mining'
         ,Mode = 'Reporting'
      UNION ALL 
  SELECT ReportTypeID = 250,
         ReportTypeLabel ='TruckWeightGraphDisp'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 1
         ,Type = 'Mining'
         ,Mode = 'Reporting'
		   UNION ALL 
  SELECT ReportTypeID = 500,
         ReportTypeLabel ='Becs Testing'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 0
         ,Type = 'Mining'
         ,Mode = 'Reporting'				
         UNION ALL 
  SELECT ReportTypeID = 999,
         ReportTypeLabel ='Testing'
         ,TypeAlias = 'Reporting_Mining'
		 ,HideDateTo = 0
         ,Type = 'Mining'
         ,Mode = 'Reporting'*/
         
) AS tbl
WHERE			--(	tbl.ReportTypeID IN (SELECT ID FROM dbo.FN_SplitString(@AllowedReportTypeIdCsv) WHERE StringVal <> '')
					(	tbl.PermissionsGrouping IN (SELECT StringVal FROM dbo.FN_SplitString(@AllowedReportGroupCsv) WHERE StringVal <> '')
          OR 

					@IsAdmin =1  --admin get all options all the time.
				)



--flag for 
DECLARE @OnlyWantStat7 INT = 1  --currently all reports are quite generic, so fine to hard code to stat 7.    
                                  -- if we run reports like just trucking, then maybe configure harder.

--use tv instead of # table.
DECLARE @DataSet TABLE (
 EquipmentID INT NULL,
                              EquipmentCode NVARCHAR(255) NULL,
                             TaskName  NVARCHAR(255) NULL,
                              ActivityReasonLinkID INT NULL,
                              InputID INT NULL,
                              LocationID INT NULL,
                              LocationCode  NVARCHAR(255) NULL,
                              EquipTypeID INT NULL,
                              EquipTypeCode  NVARCHAR(255) NULL,
                              MaterialID INT NULL
                              ,
                             MaterialOpID INT NULL,
                              MaterialDescOp  NVARCHAR(255) NULL,
                              [DestID] INT NULL,
                              [DestCode]  NVARCHAR(255) NULL,
                              ProcessID INT NULL,
                              [BogFromID] INT NULL,
                              [BogToID] INT NULL,
                              ActivityID INT NULL,
                              ActivityCode  NVARCHAR(255) NULL
                              ,
                              ProcessCode  NVARCHAR(255) NULL
                              ,
            				  Shift NVARCHAR(3) NULL,
            				  OperatorID INT NULL, 
            				  OperatorName NVARCHAR(255) NULL,
							  PitID INT NULL, 
							  PitDescription NVARCHAR(255) NULL,
							  CutNumberID INT NULL, 
							  CutNumberDesc NVARCHAR(255) NULL
)


   IF @ReportTypeID IN (99,60,500,200)
            BEGIN
            INSERT INTO @DataSet (EquipmentID, EquipmentCode, TaskName, ActivityReasonLinkID, InputID, LocationID, LocationCode, EquipTypeID, EquipTypeCode, MaterialID, MaterialOpID, MaterialDescOp, DestID, DestCode, ProcessID, BogFromID, BogToID, ActivityID, ActivityCode, ProcessCode, Shift, OperatorID, OperatorName, PitID, PitDescription, CutNumberID, CutNumberDesc)

              SELECT DISTINCT s.EquipmentID,
                              eq.EquipmentCode,
                              act.ActivityComments + ' - ' + r.ReasonDescription AS 'TaskName',
                              arl.ActivityreasonLinkID AS 'ActivityReasonLinkID',
                              s.InputID,
                              l.LocationID,
                              l.LocationCode,
                              eq.EquipTypeID,
                              ret.EquipTypeCode,
                              MaterialID = s.Material --ts 2021-01-12 materials are filtered on MatopId
                              ,
                              M.MaterialOpID,
                              M.MaterialDescOp,
                              [DestID] = dest.LocationID,
                              [DestCode] = dest.LocationCode,
                              arl.ProcessID,
                              [BogFromID] = CASE
                                                         WHEN arl.ProcessID = 5
                                                           AND s.InputType LIKE '%Bog%' THEN LEFT(InputType, 1)
                                                         ELSE NULL END,
                              [BogToID] = CASE
                                                       WHEN arl.ProcessID = 5
                                                         AND s.InputType LIKE '%Bog%' THEN SUBSTRING(InputType, 3, 1)
                                                       ELSE NULL END,
                              act.ActivityID,
                              ActivityCode =act.ActivityComments + ' ('+ act.ActivityDescription + ')'
                              ,
                              ProcessCode = tdp.ProcessDescription
                              ,
            				  s.Shift,
            				  s.OperatorID,
            				  OperatorName = emp.EmployeeName,
							  pit.PitID,
							  pit.PitDescription,
							  CutNumberID = s.CutNumberId,
							  CutNumberDesc = attr.AttributeDescription
               -- INTO @DataSet
                FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
                INNER JOIN dbo.tbl_SYS_Equipment AS eq
                  ON s.EquipmentID = eq.EquipmentCodeID
                LEFT JOIN dbo.tbl_SYS_ActivityReasonLink AS arl
                  ON s.ActivityReasonID = arl.ActivityreasonLinkID
                INNER JOIN dbo.tbl_SYS_Reason AS r
                  ON arl.ReasonID = r.ReasonID
                INNER JOIN dbo.tbl_SYS_Activity AS act
                  ON arl.ActivityID = act.ActivityID
                INNER JOIN dbo.tbl_DBT_Location AS l
                  ON s.Location = l.LocationID
                INNER JOIN tbl_SYS_ResEquipTypes AS ret
                  ON eq.EquipTypeID = ret.EquipTypeID
                LEFT JOIN tbl_DBT_Materials AS M
                  ON s.Material = M.MaterialOpID
                 AND s.ProjectID = M.ProjectID
                 AND M.Active = 1
                LEFT JOIN dbo.tbl_DBT_Location AS dest
                  ON s.Destination = dest.LocationID
                LEFT JOIN tbl_SYS_Process tdp
                  ON arl.ProcessID = tdp.ProcessID
            	LEFT JOIN dbo.tbl_DBT_Employees AS emp
            	  ON s.OperatorID = emp.EmployeeID
            	LEFT JOIN dbo.tbl_DBT_Pit AS pit
            	  ON l.PitID = pit.PitID
				LEFT JOIN  [dbo].[view_GetAttributes_Cached] AS attr
				  on s.CutNumberId = attr.AttProjID
               WHERE s.ProjectID = @ProjectID
                 AND s.Date BETWEEN @DateFrom AND @DateTo
                 AND s.Type IN ('mining','shiftboss','dtevents')
                 AND (s.InputID = 7 OR @OnlyWantStat7 =0)
            --     AND (
            --        NULLIF(@ReportTypeID, '') IS NULL
            --        OR (
            --           NULLIF(@ReportTypeID, '') IS NOT NULL
            --           AND InputID = @ReportTypeID
            --        )
            --     )
            --     AND s.InputType LIKE '%' + @InputType + '%'  --2020-12-23
            
            END


IF @ReportTypeID NOT IN (999,60)
BEGIN --get from teh snapshot instead to keep it running quickly
   INSERT INTO @DataSet (EquipmentID, EquipmentCode, TaskName, ActivityReasonLinkID, InputID, LocationID, LocationCode, EquipTypeID, EquipTypeCode, MaterialID, MaterialOpID, MaterialDescOp, DestID, DestCode, ProcessID, BogFromID, BogToID, ActivityID, ActivityCode, ProcessCode, Shift, OperatorID, OperatorName, PitID, PitDescription, CutNumberID, CutNumberDesc)

  SELECT DISTINCT s.EquipmentID,
                              EquipmentCode,
                              ActivityDesc + ' - ' + ReasonDescription AS 'TaskName',
                              ActivityreasonLinkID = ACtivityReasonId  ,
                              InputID = StatisticId,
                              LocationID,
                              LocationCode,
                              EquipTypeID,
                              EquipTypeCode,
                              MaterialID = MaterialID --ts 2021-01-12 materials are filtered on MatopId
                              ,
                             MaterialOpID= MaterialID,
                              MaterialDescOp = Material,
                              [DestID] = DestinationId,
                              [DestCode] = DestinationCode,
                              ProcessID
                              ,[BogFromID] 
                              ,[BogToID] 
                                                       
                              ,ActivityID,
                              ActivityCode =ActivityDesc
                              ,
                              ProcessCode = ProcessDesc
                              ,
            				  s.Shift,
            				  s.OperatorID,
            				  OperatorName = EmployeeName
							  ,s.PitID --= 0
							  ,PitDescription = s.WorkArea
							  ,CutNumberID --= 0
							  ,CutNumberDesc = CutNumberLabel
              --  INTO @DataSet
              --  FROM [dbo].syn_STO_ReportingSnapshot_Combined_All AS s
               FROM [dbo].vw_ReportingSnapshotLatest_KpisStatsOnly_AllWithIDs  AS s
               WHERE s.ProjectID = @ProjectID
                 AND s.Date BETWEEN @DateFrom AND @DateTo
                 --AND s.Type IN ('mining','shiftboss','dtevents')
                 AND (s.StatisticId = 7 OR @OnlyWantStat7 =0)

END

IF @debugID = 1
begin
SELECT * FROM @DataSet
end


  -------------------------------------------------------------------------- DATA SOURCE --------------------------------------------------------------------------

  SELECT 'Shifts' AS 'DATASET'

  SELECT DISTINCT Shift
    FROM @DataSet
   WHERE (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )

   ORDER BY Shift

   SELECT 'Operators' AS 'DATASET'

  SELECT DISTINCT OperatorID,
		OperatorName

    FROM @DataSet
   WHERE (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )

   ORDER BY OperatorName

  SELECT 'Activities' AS 'DATASET'

  SELECT DISTINCT ActivityID,
                  ActivityCode --=activ
    FROM @DataSet
   WHERE (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )

   ORDER BY ActivityCode

  SELECT 'Processes' AS 'DATASET'

  SELECT DISTINCT ProcessID,
                  ProcessCode
    FROM @DataSet
   WHERE (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )

   ORDER BY ProcessCode

  SELECT 'Equipments' AS 'DATASET'

  SELECT DISTINCT EquipmentID,
                  EquipmentCode
    FROM @DataSet
   WHERE (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )



   ORDER BY EquipmentCode

  ----------------------------------------------------------------------------------------------------------
  SELECT 'TaskNames' AS 'DATASET'

  SELECT DISTINCT TaskName,
                  ActivityreasonLinkID
    FROM @DataSet
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )

   ORDER BY TaskName

  ----------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------
  SELECT 'Location' AS 'DATASET'

  SELECT DISTINCT LocationID,
                  LocationCode
    FROM @DataSet
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
          NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )
   ORDER BY LocationCode

  ----------------------------------------------------------------------------------------------------------
  SELECT 'Destination' AS 'DATASET'

  SELECT DISTINCT DestID,
                  DestCode
    FROM @DataSet
   WHERE DestID IS NOT NULL
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )
   ORDER BY DestCode

  ----------------------------------------------------------------------------------------------------------
  SELECT 'EquipTypes' AS 'DATASET';

SELECT DISTINCT EquipTypeID,
                  EquipTypeCode
    FROM @DataSet
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )
   ORDER BY EquipTypeCode




  SELECT 'Materials' AS 'DATASET'

  SELECT DISTINCT MaterialID,
                  MaterialOpID,
                  MaterialDescOp
    FROM @DataSet
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )
     AND MaterialID IS NOT NULL
   ORDER BY MaterialDescOp

  SELECT 'BogFrom' AS 'DATASET'

  SELECT DISTINCT dd.BogFromID,
                  bf.BogFromDesc
    FROM @DataSet dd
    LEFT JOIN dbo.tbl_SYS_BogFrom AS bf
      ON dd.BogFromID = bf.BogFromID
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )
     AND dd.BogFromID IS NOT NULL
     AND bf.Active = 1
   ORDER BY bf.BogFromDesc


  SELECT 'BogTo' AS 'DATASET'

  SELECT DISTINCT btt.BogToID,
                  bt.BogToDesc
   FROM @DataSet btt
    LEFT JOIN dbo.tbl_SYS_BogTo AS bt
      ON btt.BogToID = bt.BogToID
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )
     AND btt.BogToID IS NOT NULL
     AND bt.Active = 1
   ORDER BY bt.BogToDesc

   SELECT 'KPIs' AS 'DATASET'

   SELECT DISTINCT 
      KPIId
	  ,KPICode 
   FROM dbo.tbl_SYS_KPI_Definitions

   SELECT 'Crews' AS 'DATASET'

   DECLARE @AllowedCrews VARCHAR(40)
   SET @AllowedCrews = [dbo].[FN_GetConfigValue](@ProjectID , 'CrewList')

   SELECT CrewID
		  ,CrewDesc 
   FROM tbl_SYS_Crew 
   WHERE CrewID IN  (SELECT ID FROM [dbo].[FN_SplitString](@AllowedCrews))
   ORDER BY CrewDesc

   SELECT 'WorkAreas' AS 'DATASET'

  SELECT DISTINCT 
    Pitid
    ,PitDescription
    from dbo.tbl_DBT_Pit AS tdp
    where tdp.ProjectID=@ProjectID
    and tdp.Active >0
   /*KPIId
	  ,KPICode 
   FROM dbo.tbl_SYS_KPI_Definitions
   */


   SELECT 'CutNumbers' AS 'DATASET'

   SELECT DISTINCT cn.CutNumberID,
                  cn.CutNumberDesc
   FROM @DataSet cn
   WHERE (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
          NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
          AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@Shift, '') IS NULL
        OR (
           NULLIF(@Shift, '') IS NOT NULL
           AND @Shift = Shift
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
  
END
GO
PRINT N'Altering [dbo].[vw_ProjSetup_NonFlywayDriftStatus]'
GO
ALTER   view [dbo].[vw_ProjSetup_NonFlywayDriftStatus]
as 
/*
select * from [dbo].[vw_ProjSetup_NonFlywayDriftStatus]
2022-10-24 ... ts ... create to check drift.
                  ... don't let teh drift be dealt with, if the object has been modified since it was last dealt with!
                  


exec[dbo].[SP_Utility_ResetDrift]@ObjectName='vw_ProjSetup_NonFlywayDriftStatus',@UserID=137,@ConflictComments='merge back to source contorl'
*/

--check on drift:
with cte as (SELECT -- a.databasename
 b.name
,b.type
,b.modify_date
, b.create_date 
,b.object_id
, VersionBuildDateTime = ver.modify_date
,DbVersion =  isnull((select top 1 ManageVersion from   dbo.tvf_ServerDetails (0 )),'missing')
,DriftIsMergedToSC = case when StashDateTime>ver.modify_date and b.modify_date < tsdsr.StashDateTime then 1 else 0 end
,StashDateTime
--,StashComments = Comments
FROM sys.objects as b with (nolock)
/*left JOIN tbl_SYS_ManageSqlStatsAtTimeOfBuild AS a
  ON a.BuildStatDesc = b.name 
      AND a.BuildMeasureType = 'DbObjectModifiedOn'
      and a.databasename = DB_NAME()*/
inner join sys.objects as ver with (nolock)
    on ver.name = 'tvf_ServerDetails'
    and b.modify_date > ver.modify_date
left join (select StashDateTime=max(StashDateTime),ObjectName from  dbo.tbl_STO_DriftSchema_Records group by ObjectName)as tsdsr
--dbo.tbl_STO_DriftSchema_Records  as tsdsr
  on b.name   = tsdsr.ObjectName

WHERE b.type in('P','FN','sn','v')
--and a.databasename = DB_NAME()
--AND (a.BuildStatDateValue < b.modify_date OR a.BuildStatDateValue is null)

)

select * from cte

/*
tbl.DbVersion
,tbl.VersionBuildDateTime
,DriftedObjects =STUFF((SELECT ',' + name
            FROM cte
            FOR XML PATH('')) ,1,1,'') 
 from cte as tbl
*/
GO
PRINT N'Altering [dbo].[SP_ProjSetup_MenuLinks]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_MenuLinks] @ProjectID INT, @UserGroup INT, @UserId INT = 0
AS
BEGIN
  /*
	 EXEC [dbo].[SP_ProjSetup_MenuLinks] @ProjectID = '3', @UserGroup = '9', @UserID = 705
	  EXEC [dbo].[SP_ProjSetup_MenuLinks] @ProjectID = '291', @UserGroup = '3' 
	Change log
	(TS) added min user groupIDs to button labels 20180709
	(TS)  added ordering 20180808, alter on the active filter
	(TS) 20181003 ... added PageID NOT IN (96,98) to allow maintenance pages to be added through pages DE, and still retain their colour

	TS 2018-12-23 added dodgy fix on the inputs for fuel
	TS 2019-02-02 commented out dodgy fix. 
			added special handling for PEAK (to put the dual buttons on)  to put in properly, should add colour and method mapping to the typeconfig table. also add projectId/OperationID?
	IP 2019-02-15 change @IsLocal to use the function instead (FN_IsLocal)
	ts 2020-04-14 fix for peak. use this to nominate dbt_webbarConfigs=TypeAliasCsv
	CA 2020-04-29 Increased typealias length
	TS 2020-09-07 handle modes active config
	CA 2020-09-15 Added DT trial handling
	ts 2020-09-15 comment out the errant call on sys pages table
	ts 2020-09-21 replace the special @OpCode (for the intranet link)
	ts 2020-11-05 ... config permissions of pages that are normally only for admin users (replace the DBT table with teh new permissions method
	ts 2021-04-21 ... type modes acitve maint
	ts 2021-05-21 ... get diagnsotic shift summary alias (testing)
	ts 2021-05-31 ... show pageIds
					... don't whack mode on if mode is already on
  ts 2021-9-29 ... over-ride on webbar input for local webbars.
  ts 2021-09-30 ... also don't publish "edit review data" page on locals
  ts 2021-11-08 ... update for support of pms central. only want the reporting page there for now. can add other linux pages as needed be on TWO spots below.
  ian 2022-01-27 ... added param userId 
  ian 2022-02-02 ... added select pageId
  ian 2022-03-18 ... added SidebarMenuShade, SidebarMenuTextColour, SideBarMenuSelectedPageShade, SideBarMenuSelectedPageTextColour
  CA 2022-05-04 ... Added MenuLinksExclusion based on userGroupConfig
  ts 2022-05-15 ... add isnull on the excl so all pages don't drop off the face of teh earth
  ian 2022-06-06 ... added SidebarMenuGroupColour and SidebarMenuGroupShade
  ts 2022-07-15 ... kill the transition
  CA 2022-09-29 ... Made the colours actually readable
  ts 2022-10-07 ... commit chris' change
  ts 2022-10-07 ... call on the cache builder
  ts 2022-10-24 .. add drift objects!
	*/
  -- SET NOCOUNT ON added to prevent extra result sets from
  -- interfering with SELECT statements.
  SET NOCOUNT ON;
  --remove!!! 
  /*  --nice place to put some transition scripts that need to run while something beds in!
  IF @ProjectID IN (231,219,291,236,259)
   BeGIN
    UPDATE 
    dbo.tbl_DWH_iPlodStagingTableEdited 
    SET InputType = 'Stat', InputID = 132
    WHERE inputtype = 'cons' AND InputID = 0
    AND Projectid = @ProjectID
  END*/


  DECLARE @DBAdminUserGroup INT
  SET @DBAdminUserGroup = (SELECT
      Configvalue
    FROM tbl_SYS_webbarConfigs
    WHERE configname = 'UserGroup_DB_Admin');
  DECLARE @OpCode AS VARCHAR(3)
  SET @OpCode = (SELECT
      OperationCode
    FROM dbo.tbl_DBT_Project AS p
    INNER JOIN dbo.tbl_DBT_Operation AS o
      ON p.OperationID = o.OperationID
      AND p.ProjectID = @ProjectID)


  DECLARE @isLOCAL INT  --not used yet down below, just putting here for reference in case we want it
  SET @isLOCAL = [dbo].[FN_IsLocal](@ProjectID)

  DECLARE @TypeAliasSupported NVARCHAR(512) = dbo.FN_GetConfigValue(@Projectid, 'TypeAliasCsv');
  DECLARE @TypeModesActiveMining INT = (SELECT TOP 1
      CAST(ConfigValue AS INT)
    FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectID, 'mining', 1, 'TypeModesActive', ''));
  DECLARE @TypeModesActiveMaint INT = (SELECT TOP 1
      CAST(ConfigValue AS INT)
    FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectID, 'maint', 3, 'TypeModesActive', ''));


  DECLARE @IsPDSStillATable INT = CASE
    WHEN OBJECT_ID('dbo.tbl_DWH_ProdDataStorage', 'U') IS NOT NULL THEN 1
    ELSE 0
  END
  --select @IsPDSStillATable  --if it isn't a table, then we don't want webar input page on locals!

  -- ELSE 
  --BEGIN

  DECLARE @IsPmsCentralTransition INT = 0-- IIF(USER_NAME() = 'ManageWebApp' AND DB_NAME() = 'pbw', 1, 0)   --this indicates that it is teh linux server that services the PBW database.
  DECLARE @IsPBWOldSchoolIIS INT = IIF(USER_NAME() <> 'ManageWebApp' AND DB_NAME() = 'pbw', 1, 0)

  IF @IsPmsCentralTransition = 0
  BEGIN

    -- all pages that don't need to be added to DBT_PagesDE, currently only available on [CENTRAL]
 SELECT * FROM (
 SELECT
      CASE
        WHEN @UserGroup = @DBAdminUserGroup THEN [PageDescription] + ' (' + CAST(MinUserGroup AS VARCHAR) + ', ID=' + CAST(s.pageid AS VARCHAR) + ')'
        ELSE [PageDescription]
      END AS 'ButtonLabel'
     ,[Link] = REPLACE([PageName], '{OpCode}', @OpCode) +
      CASE
        WHEN @TypeModesActiveMining = 1 AND
          s.PageCode LIKE 'shiftsummarymining%' AND
          s.PageCode <> 'shiftsummarymining24' AND
          s.PageName NOT LIKE '%?mode%' --2021-05-31
        THEN '?mode=DataV'
        WHEN @TypeModesActiveMaint = 1 AND
          s.PageCode LIKE 'shiftsummarymaint%' AND
          s.PageName NOT LIKE '%?mode%' --2021-05-31
        THEN '?mode=DataV'
        ELSE ''
      END  --as 'Link'
     ,MenuList
     ,ButtonColour =
      CASE
        WHEN MinUserGroup > @UserGroup AND
          s.PageID NOT IN (96, 98) THEN '#252524'
        ELSE ISNULL(ButtonColour, '#337ab7')
      END  --adding yellow colour for pages on normal users that shouldn't be there
     ,MinUserGroup = @UserGroup  --maybe the page is 
      --,isnull(AllowedOnLocal,0) 
     ,@isLOCAL AS IsLocal
     ,s.PageID
     ,ISNULL(tsupl.UserPageLinkID, 0) AS isFavourite
     ,SideBarMenuShade = '#939598'
     ,SidebarMenuTextColour = 'black'
     ,SideBarMenuSelectedPageShade = '#8E44AD'
     ,SideBarMenuSelectedPageTextColour = 'white'
     ,SidebarMenuGroupColour = 'white'--'#939598'
     ,SidebarMenuGroupShade = '#276eb1'
     ,s.Active
    FROM [dbo].[tbl_SYS_PagesDataEntry] AS s
    LEFT JOIN [dbo].tbl_sys_UserPageLink tsupl
      ON s.PageID = tsupl.PageId
        AND tsupl.UserId = @UserId
    OUTER APPLY [dbo].[FN_ProjSetup_UserPermissions](@Projectid, @UserGroup * -1, s.PageCode, '_AllTypes', '_AllModes', 'GlobalPagePermissions') perm
    OUTER APPLY [dbo].[FN_ProjSetup_UserPermissions](@Projectid, @UserID, 'Reporting', '_AllTypes', '_AllModes', 'MenuLinksExclusions') menuexcl

    WHERE Active >= 1
    AND MenuList IS NOT NULL --AND MenuList <> 'Data Entry'
    AND (ISNULL(MinUserGroup, @DBAdminUserGroup) <= @UserGroup   --null ones are only available for admin users 
    OR EXISTS (SELECT
        PageID
      FROM tbl_DBT_PagesDE AS d
      WHERE ProjectID = @ProjectID
      AND Include = 1
      AND s.PageID = d.PageID)
    OR ISNULL(CAST(perm.PermissionConfigValue AS INT), 0) > 0  --global access permissions, greater than 0 is allowed to view, other permissionValues may dictate further locks inside the app
    )   --allows us to add pages to discreet projects...
    AND

    ((@isLOCAL = 1
    AND AllowedOnLocal = 1)
    OR @isLOCAL = 0)
    --trash this piece of hackery ... ((@isLOCAL = 1 AND AllowedOnLocal = 1 ) 
    --OR (@isLOCAL = 0 and @ProjectID <> 377)
    --OR @ProjectID = 377 AND (AllowedOnLocal = 1 OR s.PageID IN (99,116)))

    AND Active >= 1
    --handling for supported shift summary type aliases:
    AND ((LEFT(ISNULL(s.PageCode, 'x'), 12) = 'shiftsummary'
    AND ISNULL(@TypeAliasSupported, ',mining,maint,') LIKE '%,' + SUBSTRING(s.PageCode, 13, 25) + ',%')
    OR LEFT(ISNULL(s.PageCode, 'x'), 12) <> 'shiftsummary'
    OR s.MenuList = 'Diagnostic'  --get shfit plan testing page into diagnostic
    )

    --handling for supported shift plan aliases:
    AND ((LEFT(ISNULL(s.PageCode, 'x'), 11) = 'shiftplanv2'
    AND ISNULL(@TypeAliasSupported, ',mining,maint,') LIKE '%,' + SUBSTRING(s.PageCode, 12, 25) + ',%')
    OR LEFT(ISNULL(s.PageCode, 'x'), 11) <> 'shiftplanv2'
    OR s.MenuList = 'Diagnostic'  --get shfit plan testing page into diagnostic
    )

    AND NOT (@IsPDSStillATable = 0
    AND @isLOCAL = 1
    AND s.PageID IN (90, 94))  --2021-09-29 don't show webbar input page on local webbars in Pybar that have ProdDataStorage as a syn and view

    --specific EXCLUSIONS (ie these pages are not supported by the old IIS jobby. strip out once no more IIS anywhere.
    --ts 2021-11-08
    AND NOT (@IsPBWOldSchoolIIS = 1
    AND s.PageName = '../projectsetup.php/reporting'
    )


    AND ISNULL(menuexcl.PermissionConfigValue, '') NOT LIKE '%' + CAST(s.PageID AS VARCHAR(20)) + '%'

union all --2022-10-24 add drift "detection" clear this out using [SP_Utility_ResetDrift]
   SELECT
       ButtonLabel = name
     ,[Link] = 'exec[dbo].[SP_Utility_ResetDrift]@ObjectName='+char(39)+name+char(39)+',@UserID='+cast(@userId as varchar(25))+',@ConflictComments='+char(39)
     ,MenuList = '!!!DRIFTED OBJECTS!!!'
     ,ButtonColour = 'red' 
     ,MinUserGroup = @UserGroup  --maybe the page is 
      --,isnull(AllowedOnLocal,0) 
     ,@isLOCAL AS IsLocal
     ,PageID = object_id
     , isFavourite = 0
     ,SideBarMenuShade = '#939598'
     ,SidebarMenuTextColour = 'black'
     ,SideBarMenuSelectedPageShade = '#8E44AD'
     ,SideBarMenuSelectedPageTextColour = 'white'
     ,SidebarMenuGroupColour = 'white'--'#939598'
     ,SidebarMenuGroupShade = '#276eb1'
     ,ACtive = -1
     from dbo.[vw_ProjSetup_NonFlywayDriftStatus]
     where @UserGroup =88
     and DriftIsMergedToSC = 0
) as tbl
    ORDER BY ACtive, MenuList, tbl.ButtonLabel   --PageDescription

  --END
  -- SELECT * FROM dbo.tbl_SYS_PagesDataEntry WHERE PageDescription LIKE '%shift%'
  /*
  UNION ALL 


  -- swap this one back in after webbar2 is live ... could either edit teh old links in SYS_PagesDE (for old PageIDs) or add the new versions into DBT_PagesDE for each project
  --put the AND MenuList <> 'Data Entry' back in top select
  SELECT 
  [Button]  as 'ButtonLabel'
  ,b.[PageName] as 'Link'
  ,'Data Entry' as MenuList
  ,ButtonColour = isnull(ButtonColour,'#337ab7')
  ,MinUserGroup as MinUserGroup
  ,CASE WHEN b.PageID <35 THEN 0 ELSE 1 END as IsLocal  --remove old app pages from local
  FROM [dbo].[tbl_DBT_PagesDE] as a
  INNER JOIN [dbo].[tbl_SYS_PagesDataEntry]   as b on a.PageID = b.PageID
  WHERE ProjectID = @ProjectID
	AND isnull(MinUserGroup,@DBAdminUserGroup) <= @UserGroup   --null ones are only available for admin users 
	AND b.Active = 1  and a.Include = 1
*/


  END

  IF @IsPmsCentralTransition = 1
  BEGIN

    --copy from above initially, just hack for now.
    SELECT
      CASE
        WHEN @UserGroup = @DBAdminUserGroup THEN [PageDescription] + ' (' + CAST(MinUserGroup AS VARCHAR) + ', ID=' + CAST(s.pageid AS VARCHAR) + ')'
        ELSE [PageDescription]
      END AS 'ButtonLabel'
     ,[Link] = REPLACE([PageName], '{OpCode}', @OpCode) +
      CASE
        WHEN @TypeModesActiveMining = 1 AND
          s.PageCode LIKE 'shiftsummarymining%' AND
          s.PageCode <> 'shiftsummarymining24' AND
          s.PageName NOT LIKE '%?mode%' --2021-05-31
        THEN '?mode=DataV'
        WHEN @TypeModesActiveMaint = 1 AND
          s.PageCode LIKE 'shiftsummarymaint%' AND
          s.PageName NOT LIKE '%?mode%' --2021-05-31
        THEN '?mode=DataV'
        ELSE ''
      END  --as 'Link'
     ,MenuList
     ,ButtonColour =
      CASE
        WHEN MinUserGroup > @UserGroup AND
          PageID NOT IN (96, 98) THEN '#252524'
        ELSE ISNULL(ButtonColour, '#337ab7')
      END  --adding yellow colour for pages on normal users that shouldn't be there
     ,MinUserGroup = @UserGroup  --maybe the page is 
      --,isnull(AllowedOnLocal,0) 
     ,@isLOCAL AS IsLocal
     ,s.PageID
     ,SideBarMenuShade = '#939598'
     ,SidebarMenuTextColour = '#276EB1'
     ,SideBarMenuSelectedPageShade = '#276EB1'
     ,SideBarMenuSelectedPageTextColour = '#939598'
    FROM [dbo].[tbl_SYS_PagesDataEntry] AS s
    OUTER APPLY [dbo].[FN_ProjSetup_UserPermissions](@Projectid, @UserGroup * -1, s.PageCode, '_AllTypes', '_AllModes', 'GlobalPagePermissions') perm
    WHERE Active >= 1
    AND MenuList IS NOT NULL --AND MenuList <> 'Data Entry'
    AND (ISNULL(MinUserGroup, @DBAdminUserGroup) <= @UserGroup   --null ones are only available for admin users 
    OR EXISTS (SELECT
        PageID
      FROM tbl_DBT_PagesDE AS d
      WHERE ProjectID = @ProjectID
      AND Include = 1
      AND s.PageID = d.PageID)
    OR ISNULL(CAST(perm.PermissionConfigValue AS INT), 0) > 0  --global access permissions, greater than 0 is allowed to view, other permissionValues may dictate further locks inside the app


    )   --allows us to add pages to discreet projects...
    AND

    ((@isLOCAL = 1
    AND AllowedOnLocal = 1)
    OR @isLOCAL = 0)
    --trash this piece of hackery ... ((@isLOCAL = 1 AND AllowedOnLocal = 1 ) 
    --OR (@isLOCAL = 0 and @ProjectID <> 377)
    --OR @ProjectID = 377 AND (AllowedOnLocal = 1 OR s.PageID IN (99,116)))

    AND Active >= 1
    --handling for supported shift summary type aliases:
    AND ((LEFT(ISNULL(s.PageCode, 'x'), 12) = 'shiftsummary'
    AND ISNULL(@TypeAliasSupported, ',mining,maint,') LIKE '%,' + SUBSTRING(s.PageCode, 13, 25) + ',%')
    OR LEFT(ISNULL(s.PageCode, 'x'), 12) <> 'shiftsummary'
    OR s.MenuList = 'Diagnostic'  --get shfit plan testing page into diagnostic
    )

    --handling for supported shift plan aliases:
    AND ((LEFT(ISNULL(s.PageCode, 'x'), 11) = 'shiftplanv2'
    AND ISNULL(@TypeAliasSupported, ',mining,maint,') LIKE '%,' + SUBSTRING(s.PageCode, 12, 25) + ',%')
    OR LEFT(ISNULL(s.PageCode, 'x'), 11) <> 'shiftplanv2'
    OR s.MenuList = 'Diagnostic'  --get shfit plan testing page into diagnostic
    )

    AND NOT (@IsPDSStillATable = 0
    AND @isLOCAL = 1
    AND s.PageID IN (90, 94))  --2021-09-29 don't show webbar input page on local webbars in Pybar that have ProdDataStorage as a syn and view

    --specific INCLUSIONS intially
    -- ts 2021-11-08
    AND (s.PageName = '../projectsetup.php/reporting'
    OR @UserGroup = 88)

    --swithc to EXCLUSIONS after cutover:


    ORDER BY ACtive, MenuList, PageDescription

  END

--do some cache builds
  exec [dbo].SP_ProjSetup_BuildCacheTablesWithMergeOtherCaches @ProjectID = @projectid
                                                             , @CacheRefreshCallPoint = 'MenuLinks';



END
GO
PRINT N'Altering [dbo].[SP_Utility_ResetDrift]'
GO
ALTER   procedure [dbo].[SP_Utility_ResetDrift]
    -- Add the parameters for the stored procedure here
@ObjectName varchar(max) = null
, @DbVersion varchar(max) = null
, @ProjectID int = 0
, @UserID int = 0
, @DebugMode int = 0
, @ConflictComments varchar(max) = null
as
begin
    /*
        exec [dbo].[SP_Utility_ResetDrift] @ObjectName = 'SP_ProjSetup_BuildDynamicView_ReportingAttributes' @DbVersion = '1.0'

        2022-10-24 ian ... initial work
        2022-10-24 ts ... db version should be known, not passed in.
    */

    set nocount on;

    declare @CurrentSchema nvarchar(max);
    select @CurrentSchema = m.definition
    from sys.objects o
             join sys.sql_modules m
                  on m.object_id = o.object_id
    where o.object_id = object_id(@ObjectName)


--get from tvfserverdetails function for now, swap to flyway with go live with that
set @DbVersion = isnull((select top 1 ManageVersion from   dbo.tvf_ServerDetails (@ProjectId )),'missing')

    


    if @Debugmode = 1
        begin
            print 'currentSchema len:' + cast(len(@CurrentSchema) as varchar(25))
        end

    if (@CurrentSchema <> '')
        begin
            begin try
                insert into tbl_STO_DriftSchema_Records (
                    ProjectID, ObjectName, CurrentSchema, DbVersion, StashDateTime, UserID,Comments
                )
                values (
                           @ProjectID, @ObjectName, @CurrentSchema, @DbVersion, getdate(), @UserID,@ConflictComments
                       )
            end try
            begin catch
                print error_message();
            end catch
        end
    else
        begin
            print 'no schema found'
        end
end
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Reporting_Lists]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_Reporting_Lists] @ProjectID INT
, @UserID INT = 0
, @DateFrom DATE = ''
, @DateTo DATE = ''
, @ReportTypeID INT = 0
, @ListName VARCHAR(50) = 'AllowedStats'
-- ,@FilterCode VARCHAR(50) = ''
AS
BEGIN
  -- SET NOCOUNT ON added to prevent extra result sets from
  -- interfering with SELECT statements.
  SET NOCOUNT ON;

  /*

 EXEC [dbo].[SP_ProjSetup_Reporting_Lists] @ProjectID = '401', @UserID = '137', @ListName = 'PageSettings'

	Changelog:
	2019-11-05 (IP) ... move allowe stat to SP_ProjSetup_Reconciliation_Selections
	2020-03-03 (ts) ... remove hard coded date selection on the PAge settings dataset
	2021-06-28 (IP) ... Added @StatisticID and @InputType param
					... Added config section
	2022-03-01 (IP) ... added outstanding dates message section
	2022-03-08 {IP) ... added @JobCode param to outstanding dates qry
  2022-05-17 ts   ... add daily incremental rebuild
  2022-05-23 ts ... dates 
  2022-05-25 ip ... format the DefaultStartDate to 'dd-MM-yyyy'
  2022-06-07 ip ... added dummy RunOnReportLoadIfOutOfDate as flag to indicate that this job will be run on reporting update snapshot

*/
  DECLARE @IsDBAmin INT = dbo.FN_IsWebbarFullAdmin(@UserId);
  DECLARE @Yesterday DATE = dateadd(day,-1,getdate())
    DECLARE @startofThisMonth DATE = (SELECT
                                        DATEADD(M, DATEDIFF(M, 0, @Yesterday), 0));

  /*	    
IF @ListName = 'TableSource'
  BEGIN
SELECT TableSource = 'tbl_DWH_ProdDataStorage'
--swap with this:
--SELECT TableSource = 'tbl_DWH_iPlodStagingTableEdited'
  END;
*/
  /*todo: delete? don think these are used:
  IF @ListName = 'DateValues'  --are these used???
  BEGIN
    SELECT
      MinDateAllowed =
      CASE
        WHEN @IsDBAmin = 1 THEN DATEADD(DAY, -100, GETDATE())
        ELSE DATEADD(D, 1, ArchivePriorTo)
      END
     ,DefaultStartDate = DATEADD(M, -1, @Date)
     ,DefaultEndDate = DATEADD(D, -1, @Date)
    FROM dbo.tbl_DBT_ProjectArchiveDate
    WHERE ProjectID = @ProjectID;
  END;*/

  IF @ListName = 'PageSettings'
  BEGIN
    SELECT
      MinDateAllowed =
      CASE
        WHEN @IsDBAmin = 1 THEN DATEADD(DAY, -100, GETDATE())
        ELSE DATEADD(D, 1, ArchivePriorTo)
      END
     ,DefaultStartDate = case WHEN @ReportTypeID =1 THEN  FORMAT(@startofThisMonth, 'dd-MM-yyyy') --start of current month
                                --flesh out others here, or back in the table?
                                ELSE FORMAT(@Yesterday, 'dd-MM-yyyy') end
     ,DefaultEndDate =--case WHEN @ReportTypeID =1 THEN dateadd(day,-1,getdate())--daily
                             FORMAT(@Yesterday, 'dd-MM-yyyy')
     ,IsReadOnly = 0
     FROM dbo.tbl_DBT_Project AS p
     left JOIN (select ArchivePriorTo=max(b.ArchivePriorTo),b.ProjectID  FROM dbo.tbl_DBT_ProjectArchiveDate AS b group BY projectid) as b
        ON b.ProjectID=p.ProjectID
      
  
    WHERE p.ProjectID = @ProjectID;
  END;

  IF @ListName = 'HasOutstandingDates'
  BEGIN
    SELECT TOP 1 Date FROM [dbo].[tvf_Etl_KpiSnapShotOutstandingDates](@ProjectID, NULL, NULL)
  END;

  IF @ListName = 'ExecuteableButtons'
  BEGIN
	SELECT 
		[ID] = 1
		,[ButtonCode] = 'ETL_KPISNAPSHOT_FULLREBUILDMTHBYMTH'
		,[ButtonLabel] = 'ETL: KPI Snapshot Rebuild month by month (dbAdmin)'
		,[ButtonColour] = 'Orange'
		,[ExecString] = 'ETL_KPISNAPSHOT_FULLREBUILDMTHBYMTH'
		,[IsTestOnly] = 0
		,[IsAdminOnly] = 1
		,[IsAllowedInReadOnly] = 1
		,[RunOnReportLoadIfOutOfDate] = 1
    UNION ALL 
    SELECT 
		[ID] = 1
		,[ButtonCode] = 'ETL_KPISNAPSHOT_INCREMENTALDAILY'
		,[ButtonLabel] = 'ETL: KPI Snapshot Incremental (only recently edited dates)'
		,[ButtonColour] = 'Blue'
		,[ExecString] = 'ETL_KPISNAPSHOT_INCREMENTALDAILY'
		,[IsTestOnly] = 0
		,[IsAdminOnly] = 0
		,[IsAllowedInReadOnly] = 1
		,[RunOnReportLoadIfOutOfDate] = 1
    UNION ALL 
    SELECT 
		[ID] = 1
		,[ButtonCode] = 'ETL_KPISECONDARYSNAPSHOT_INCREMENTALDAILY'
		,[ButtonLabel] = 'ETL: KPI SECONDARY Snapshot Incremental (only recently edited dates) ... beta'
		,[ButtonColour] = 'Red'
		,[ExecString] = 'ETL_KPISECONDARYSNAPSHOT_INCREMENTALDAILY'
		,[IsTestOnly] = 0
		,[IsAdminOnly] = 1
		,[IsAllowedInReadOnly] = 1
		,[RunOnReportLoadIfOutOfDate] = 0
    UNION ALL 
    SELECT 
		[ID] = 1
		,[ButtonCode] = 'ETL_KPISECONDARYSNAPSHOT_FULLREBUILDDAILY'
		,[ButtonLabel] = 'ETL: KPI SECONDARY Snapshot, full rebuild (daily) ... beta'
		,[ButtonColour] = 'Red'
		,[ExecString] = 'ETL_KPISECONDARYSNAPSHOT_FULLREBUILDDAILY'
		,[IsTestOnly] = 0
		,[IsAdminOnly] = 1
		,[IsAllowedInReadOnly] = 1
		,[RunOnReportLoadIfOutOfDate] = 0

  END
END;
GO
PRINT N'Refreshing [dbo].[View_ItemPosting_InventSum_nonAX]'
GO
EXEC sp_refreshview N'[dbo].[View_ItemPosting_InventSum_nonAX]'
GO
PRINT N'Refreshing [dbo].[View_DE_Equipments]'
GO
EXEC sp_refreshview N'[dbo].[View_DE_Equipments]'
GO
PRINT N'Altering [dbo].[SP_ProjSetup_WebbarSync_Etl_kpiSnapshot]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_WebbarSync_Etl_kpiSnapshot] @ProjectId INT, @UserID INT = 0, @SyncJobName VARCHAR(25) = 'Etl_KpiSnapshot_IncrementalDaily'
, @DebugMode INT = 0, @StartDate DATE = NULL, @EndDAte DATE = NULL
, @GetLiveDataOnly INT = 0  --this returns only the kpi dataset, not the second attributes dataset. can be called into sql funcitons by calling the proc into a temptable.
, @ObfuscateData INT = 1
, @ShiftToProject3 INT = 0
,@RunToThisStep int = 99
AS

BEGIN
  SET NOCOUNT ON;
  SET ANSI_WARNINGS OFF;

  /* calls:
  exec [dbo].[SP_ProjSetup_WebbarSync_Etl_kpiSnapshot] @ProjectId = 399, @SyncJobName  = 'Etl_KpiSnapshot_IncrementalDaily'        ,@StartDate  = '2021-12-01', @EndDAte = '2021-12-01'
  
  
  
  
  
  changelog:
  2022-02-09 ts create
  2022-02-18 ts ... remove the commma
  2022-02-22 ts ... attributes one needs different date field
  2022-02-24 ts ... add EtlDateTime field so we know when data has been chunked into the other end
                ... attribute returns "date" when it should return "inputdate"
  2022-05-23 ts ... add these to the call: declare @ObfuscateData int = 1
                  declare @ShiftToProject3 int = 1 
   2022-05-24 ts ... fix the subtotalid (too big)
   2022-06-07 ts ... explicitly reference the v4 of att and pds views (so as to manage the pybar transition) can shift back to PDS proper once all syn's are onto that one.
   2022-06-15 ts ... bring the new CutNumberId param
                  ... join on atributeid instaed
                  .. obfuscate if I want to
   2022-07-11 ts ... add CalStart and CalEndtimes: ALTER TABLE dbo.tbl_STO_ReportingSnapshot_KpiStats_All ADD CalStartTime datetime, CalEndTime datetime
    2022-08-01 ts ... add debugging
                  ... Made UniqieDataSEtId very big in the creation of #Combined. so it can get updated effectivly below
                  ... add PitId
    2022-10-12 ts ... add ignore warnings
    2022-10-21 ts ... fix metricSubtotalId being null
                    ... put this up top to ease trouble shooting
                    ... clean up temp tables at the top too
                    ... added NULL as an option to MetricSubtotal fake valueup top. so didn't get cant insert NULL into temp table erorr.
                    ... added crf? to missing ELSE on th ecrf backfill clause unlikely to be real world problem?>

  */

  /***********************
  notes: need to bring teh v4 pds view and v4 attr view for this.
                          the premise of this is that the mapping is more transparent and this whole thing is optimised for date filter (not all time) expected use of this would be for 1-2 days at a time. though likely 1mth could be done "live" once optimsed.
  todo: shift teh attributes pickup to dwh Attr Syn? (it is currently fixed to the v3 view.
  
  **************************/


  /***
  speed test results:
  pickup teh data:
  RestoreForTest CA repo test 2022-02-03. Stats only:                                                      31 days MCR, = 22289 rows 60 secs, 1day MCR = 1092 2 secs
                                                                                                                                      Stats and attributes :     31 days MCR, = 22289 rows + 7500 rosws of attributes  2.5mins, 1day MCR = 1092 2 secs
  
  ****/

  /*testing:
  --drop table  tbl_STO_ReportingSnapshot_KpiStats_All
  --drop table tbl_STO_ReportingSnapshot_AttributesTable_All
  select * from   tbl_STO_ReportingSnapshot_KpiStats_All
  select * from  tbl_STO_ReportingSnapshot_AttributesTable_All
  */

SET @ObfuscateData  = CASE WHEN datediff(day,'2022-06-28',getdate()) < 1  THEN  1 ELSE @ObfuscateData end
 SET @ShiftToProject3  = CASE WHEN  datediff(day,'2022-06-28',getdate()) < 1 THEN  1 ELSE @ShiftToProject3 end


  SET @StartDate = ISNULL(@startdate, @enddate)
  SET @EndDAte = ISNULL(@EndDate, @StartDate)
  --declare @ProjectId int = 399

  --todo, use IFs around @SyncJobName to decide how to set these flags:
  --declare @ObfuscateData int = 1
  --declare @ShiftToProject3 int = 1 



  IF OBJECT_ID('tempdb..#Stats') IS NOT NULL   drop TABLE #Stats;
  
  IF OBJECT_ID('tempdb..#attr') IS NOT NULL   drop TABLE #attr;
  
  IF OBJECT_ID('tempdb..#combined') IS NOT NULL   drop TABLE #combined;
  
  IF OBJECT_ID('tempdb..#attrPivoted') IS NOT NULL   drop TABLE #attrPivoted;
  
  IF OBJECT_ID('tempdb..#ForInsert') IS NOT NULL   drop TABLE #ForInsert;


 -- DECLARE @RunToThisStep INT = 7
  DECLARE @SelectIntoLocalTable INT = 0 -- for creating the dest tbale structures

  /****************************************
  pick up teh data
  *****************************************/
  SELECT
    [Date] = CONVERT(DATE, a.Date)
   ,a.Shift
   ,a.BudgetCodeID
   ,a.LocationID
   ,a.DestinationId  --bringing destinationId into the final result, could CASE it into LocationId for certain situations (like backfill)
   ,a.ProcessID
   ,a.ProjectID
   ,a.StatisticID
   ,a.ReasonID
   ,MaterialID = a.MaterialID
   ,MaterialSysId = a.[MaterialSysID]
   ,Material = m.MaterialDescOp
   ,a.EquipmentID  /*= CASE WHEN ProcessId IN (4) THEN a.RelatedEquipmentID  --for dev charging link it back to the jumbo, not the charge unit. nah can't do this, it messes up the equipment stats (eg equpiment downtime) do it further upstream in reporting
                                                                                                ELSE  a.EquipmentID  END*/
   ,a.OperatorID

   ,Metric_SubtotalId =case when a.statisticid = 7 then null --we are updaint hti field belwo. make it allowed to have NULLS wen the temp table is created.
                          else  '_2345_' end  --this is only VARCHAR(6) on the dest table!  also need to allow it to be the correct size when temp table is created

   ,[Value] --= CASE WHEN a.StatisticID = 155 AND MetricValue >= 91 THEN 0.5 ELSE 0 END
    -- ,[a].[RevisedValue]
   ,MetricValue = [Value]
   ,ActualValue = IIF([a].[BudgetCodeID] = 1, [Value], 0)
   ,TargetValue = IIF([a].[BudgetCodeID] <> 1, [Value], 0)
   ,eq.EquipTypeId
   ,RelatedEquipTypeId = eqr.EquiptypeId
   ,a.CrewId
   ,[cr].[CrewCode]
   ,DataSource = 'pds'
   ,ConsumableProjId --= NULL
   ,[a].[ConsumableID]
   ,LocationCode = l.LocationCode
   ,ls.SourceMasterID
   ,DestinationCode = d.LocationCode
    --  , a.[DestinationID]
   ,dest.DestMasterID
   ,a.ActivityID
   ,ConsumableDescShort = ''--a.ConsumableDescShort
   ,m.MaterialDescOp
   ,eq.EquipmentCode
   ,re.EquipTypeCode
   ,a.DetailID
   ,RelatedEquipmentID
   ,RelatedEquipID = eqr.EquipmentCode
   ,p.ProjectMask--= LEFT (tvProjMask.ProjectMask,6)
   ,s.StatisticCode
   ,ReasonDescription = ISNULL(NULLIF(arl.ReasonAlias, ''), r.ReasonDescription)
   ,em.EmployeeName
   ,Units = u.UnitsCode
   ,TStamp
   ,[Site] = o.OperationCode
   ,ActivityDesc = aa.ActivityComments + ' - ' + aa.ActivityDescription
   ,ProcessDesc = pp.ProcessDescription
   ,a.OperationID
   ,a.DataStoreID
   ,s.StatisticTypeID
   ,LocnSourceCode = l.SourceCode
   ,DestDestCode = dest.DestDescription
   ,BudgetCode
   ,a.Sequence
   ,ConsumableDesc = [cp].[ConsumableDescShort]
    --  ,DestinationCode = d.LocationCode
   ,BogFrom = bogf.BogFromDesc
   ,BogTo = bogt.BogToDesc
   ,[BogFromId] = IIF([a].[ProcessID] = 6, [a].[LoadedFrom], 0)
   ,[BogToId] = [a].[LoadedTo]
   ,LoadedAtCode = lla.locationCode
   ,LoadedAtId = [a].[LoadedFrom]
   ,Level = L.LocLevel
   ,WorkArea = pit.PitCode
   ,LocnMasterSourceCode = sysls.SourceDesc
    --,MasterSourceDesc = sysls.SourceDesc
   ,InputTimeStamp = a.TStamp
    --join back to ips for these ones
    --todo: bring some more fields through pds:
   ,TaskComments = [GenComments]
   ,a.InputComment
   ,a.SupervisorComments
   ,a.InputPhoto
   ,a.RevisedValue
   ,a.[StartTime]
   ,a.[EndTime]
   ,[OriginalValue] = IIF([a].[StatisticID] = 7, [a].[OrigValue], NULL)   --this for stat7 ebcuase non-time tasks get massaged time (to 0) add other thinkgs that might bet massaged here as necessary. or even join to recon log to see original logged on (at th eperil of slow quere!)
   ,PvtJn_TaskId = a.detailid -- CAST(st.detailid AS nvarchar(50)) -- +'_'+CAST(st.Sequence AS nvarchar)
   ,PvtJn_InputGroupId = a.Sequence
   ,PlodDataId = a.datastoreid
   ,UniqueTaskId = a.DetailID
   ,a.MonthTargetID
   ,[a].[ActivityReasonID] 
   ,a.CutNumberId
   ,CutNumberLabel = vgac.AttributeDescription
   ,l.PitId
   INTO #stats
  FROM dbo.tbl_DWH_ProdDataStorage_v4 AS a WITH (NOLOCK)
  --best not to do this if we can
  --left join [dbo].[tbl_DWH_iPlodStagingTableEdited] as ips with (NOLOCK)
  --ON a.DataStoreID = ips.StagingID
  --AND a.ProjectID = ips.ProjectID
  --and [a].[Date] = [ips].[Date]
  left JOIN dbo.view_GetAttributes_Cached AS vgac
    ON a.cutnumberId = vgac.AttributeID
    AND vgac.AttributeTypeID  = 107
  LEFT JOIN dbo.tbl_SYS_Crew AS cr
    ON a.CrewId = cr.CrewID
  LEFT JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cp
    ON a.ConsumableProjID = cp.ConsumableProjectID
  INNER JOIN dbo.tbl_SYS_Equipment AS eq WITH (NOLOCK)
    ON a.EquipmentID = eq.EquipmentCodeID
  LEFT JOIN [dbo].[tbl_SYS_ActivityReasonLink] AS arl WITH (NOLOCK)
    ON a.[ActivityReasonID] = arl.[ActivityreasonLinkID]
  INNER JOIN dbo.tbl_SYS_ResEquipTypes AS re WITH (NOLOCK)
    ON eq.EquipTypeID = re.EquipTypeID
  LEFT JOIN dbo.tbl_SYS_BogFrom AS bogf
    ON a.LoadedFrom = bogf.BogFromID
      AND a.ProcessID IN (9, 5)
  LEFT JOIN dbo.tbl_SYS_BogTo AS bogt
    ON a.LoadedTo = bogt.BogToID
      AND a.ProcessID IN (9, 5)
  LEFT JOIN dbo.tbl_SYS_Equipment AS eqr WITH (NOLOCK)
    ON a.RelatedEquipmentID = eqr.EquipmentCodeID
  LEFT JOIN dbo.tbl_DBT_Location AS l WITH (NOLOCK)
    ON a.locationid = l.locationID
  LEFT JOIN dbo.tbl_DBT_Pit AS pit
    ON l.PitID = pit.PitID
  LEFT JOIN dbo.tbl_DBT_LocationSources AS ls WITH (NOLOCK)
    ON l.SourceID = ls.SourceID
  LEFT JOIN dbo.tbl_DBT_Location AS lla WITH (NOLOCK)
    ON a.LoadedFrom = lla.locationID --join on loaded At
  LEFT JOIN dbo.tbl_DBT_LocationSources AS las WITH (NOLOCK)
    ON lla.SourceID = las.SourceID
  LEFT JOIN dbo.tbl_DBT_Materials AS m WITH (NOLOCK)
    ON a.MaterialID = m.MaterialOpID
  LEFT JOIN dbo.tbl_DBT_Location AS d WITH (NOLOCK)
    ON a.DestinationID = d.LocationID
  LEFT JOIN dbo.tbl_DBT_LocationDest AS dest WITH (NOLOCK)
    ON d.DestID = dest.DestID
  LEFT JOIN dbo.tbl_SYS_Statistic AS s WITH (NOLOCK)
    ON a.StatisticID = s.StatisticID
  LEFT JOIN dbo.tbl_SYS_Units AS u WITH (NOLOCK)
    ON s.UnitID = u.UnitsID
  --LEFT JOIN  dbo.tbl_SYS_Equipment AS e ON tbl.EquipmentId = e.EquipmentCodeID  
  --LEFT JOIN dbo.tbl_SYS_ResEquipTypes AS re ON e.EquipTypeID = re.EquipTypeID
  --LEFT JOIN dbo.tbl_DBT_Location AS l ON tbl.locationid = l.locationID 
  --LEFT JOIN dbo.tbl_DBT_Location AS d ON tbl.DestinationID = l.LocationID
  INNER JOIN dbo.tbl_DBT_Project AS p WITH (NOLOCK)
    ON a.ProjectID = p.ProjectID
  INNER JOIN dbo.tbl_DBT_Operation AS o WITH (NOLOCK)
    ON p.OperationId = o.OperationID

  INNER JOIN dbo.tbl_DBT_BudgetCode AS bu WITH (NOLOCK)
    ON a.BudgetCodeID = bu.BudgetCodeID
  --INNER JOIN dbo.tbl_SYS_Equipment AS eq ON tbl.EquipmentID = eq.EquipmentCodeId
  INNER JOIN dbo.tbl_SYS_Reason AS r WITH (NOLOCK)
    ON a.ReasonID = r.ReasonID
  INNER JOIN dbo.tbl_SYS_Activity AS aa WITH (NOLOCK)
    ON a.ActivityID = aa.ActivityID

  INNER JOIN dbo.tbl_SYS_Process AS pp WITH (NOLOCK)
    ON pp.ProcessID = a.ProcessID
  LEFT JOIN dbo.tbl_DBT_Employees AS em WITH (NOLOCK)
    ON a.OperatorID = em.EmployeeID
  LEFT JOIN dbo.tbl_SYS_LocationSources AS sysls WITH (NOLOCK)
    ON ls.SourceMasterID = sysls.MasterSourceID
  --LEFT JOIN   dbo.[FN_ProjectMaskMap_New](NULL,NULL) tvProjMask 
  --        ON a.ProjectID = tvProjMask.ProjectID AND a.LocationID = tvProjMask.LocationID


  WHERE a.date BETWEEN @StartDate AND @EndDAte
  AND [a].[ProjectID] = @ProjectId



  --pick up teh attributes. 
  --todo: make this dynamic!!

  /*
  select * from [dbo].[vw_Reporting_KPINew_AllMappedPrimaryKpis_Attributes_MCR] where a_projectid = 399 and date between '2021-06-01' and '2021-07-15'  ts local pea 55secs, 156492 rows
  
                          TS 2020-12-09 ... create. fixed set of attribute fields. 
                                                                                      manipulate StatisticTypeID (=9 for attributes) to push stats into fields.
                                                                                      Attributes are fields obvs.
                                                                                      add fields to teh pivot as needed
                                                                                      best bet will be to dynamic pivot again, maybe in the php and feed through an API to power BI.
                          ts 2021-01-30 ... added timestamp (=inputtimestamp) from teh main kpi select. the attribute one was not right anyway?
                          ts 2021-02-01 ... added projectid for filtering
                          ts 2021-02-24 ... add commments
                          ts 2021-06-09 ... shifted teh join to ips back up to main view
                          ts 2021-06-17 ... added PlodDAtaId (= stagingid)
                          ts 2021-06-22 ... create from view KPINew_AllMappedPrimaryKpis_WithAttributes, customise field set to suit MCR
                          ts 2021-06-23 ... add RelatedEquipId
                          ts 2021-06-24 ... add start and end times
                          ts 2021-06-25 ... add revised value.
                          ts 2021-06-28 ... pull attrypedesc from attributes view
                          ts 2021-07-14 ... create new version in two parts. join in Power BI
                          CA 2021-12-23 ... Added Gold actual and forcast for grams and ounces (they are stat-trubites)
                          ts 
  
  */

  --the attributes: fixed pivot for now.add or subtract fields as necessary. put the dynamic pivot back into teh web and service an api for suckinginto reporting.

  SELECT --join fields
    --PvtJn_TaskID = a.detailid  --integer.
    ProjectId = a_ProjectId
   ,PvtJn_TaskId = [DetailID]
   ,PvtJn_InputGroupId = [PvtSeqJoin]
    -- ,a.detailid
    -- ,PvtSeqJoin
    --,PvtJn_OperatorDateShift =NULL -- CAST(OperatorId AS varchar) + '_'+CAST(date AS varchar)+'_'+Shift

    --the field with teh dynamic field names:
   ,Pvt_FieldNames = a.a_AttrTypeDesc
    --the field with the values to be pivoted. no need to aggregate, I am already aggregating here (can do a count or whatever I want)
   ,a.AttributeValue
   ,AttributeId
   ,AttributeTypeID
   ,[InputDate] = CONVERT(DATE, a.[InputDate]) INTO #attr
  FROM
  --dbo.tbl_DWH_ProdDataStorage AS pds
  --INNER JOIN  
  --select top 1 * FROM 
  dbo.tbl_DWH_Attributes_v4 AS a WITH (NOLOCK)  --v3 has only attributes.
  --ON a.DetailID = pds.DetailID
  --and pds.[Sequence] = a.[Sequence] don't do seuqnce on the join! because stat7 is only on sequence 0
  --INNER JOIN dbo.tbl_SYS_AttributeType AS at  WITH (NOLOCK)
  --        ON a.AttributeTypeID = at.AttTypeID

  WHERE --pds.ProjectID = @ProjectID 
  a_ProjectId = @ProjectId
  AND [a].[InputDate] BETWEEN @StartDate AND @EndDAte
  --AND pds.Date BETWEEN @Date AND @Date2
  --AND pds.BudgetCodeID =1
  --AND pds.StatisticID = 7

  --pivot some Attributes for joining, Or inserting to the main table? (add to this if need be)

  SELECT
    ProjectId
   ,PvtJn_TaskId --= [DetailID]
   ,PvtJn_InputGroupId --= PvtSeqJoin
   ,InputDate
   ,AttTypeId_48 = [48]
   ,AttTypeId_289 = [289] INTO #attrPivoted
  FROM (SELECT --join fields
      --PvtJn_TaskID = a.detailid  --integer.
      ProjectId
     ,PvtJn_TaskId
     ,PvtJn_InputGroupId
      --,PvtJn_OperatorDateShift =NULL -- CAST(OperatorId AS varchar) + '_'+CAST(date AS varchar)+'_'+Shift

      --the field with teh dynamic field names:
     ,Pvt_AttrTypeIds = [a].[AttributeTypeID]
      --the field with the values to be pivoted. no need to aggregate, I am already aggregating here (can do a count or whatever I want)
     ,Pvt_Value = MAX(a.[AttributeID])
     ,a.InputDate
    FROM [#attr] AS a
    WHERE [a].[AttributeTypeID] IN (48, 289)  --these are for Prod Drill mapping. add others as necessary
    GROUP BY PvtJn_TaskId
            ,PvtJn_InputGroupId
            ,a.InputDate
            ,a.[AttributeTypeID]
            ,[a].[ProjectId]) AS a
  PIVOT
  (
  MAX(Pvt_Value)
  FOR Pvt_AttrTypeIds IN ([48]
  , [289]
  )
  ) AS pvt




  IF @debugmode = 1
  BEGIN
    SELECT
      'Stats'
     ,*
    FROM [#stats]
        SELECT distinct
      'Stats_MetricSubtotal'
     ,Metric_SubtotalId
    FROM [#stats]
    SELECT
      'Attributes'
     ,*
    FROM [#Attr]
    SELECT
      '#attrPivoted'
     ,*
    FROM #attrPivoted
    SELECT
      'Attributes'
     ,*
    FROM [#Attr]
  --where pvt_taskid = 1078847

  /*select 'dupes in attr', * from (select     ProjectId 
                                                                                                     ,detailid
                                                                                                     ,PvtSeqJoin
                                                                                                              ,Pvt_FieldNames 
                                                                                                   ,AttributeValue
                                                                                                     , AttributeId
                                                                                                              , RowNum = ROW_NUMBER() OVER (PARTITION BY PvtSeqJoin,detailid,projectid, AttributeTypeID ORDER BY PvtSeqJoin,detailid,projectid, AttributeTypeID )
                                                                                                  from #attr) as b
                                                                                                  where [b].[RowNum] > 1
  */
  END


IF @DebugMode = 1 BEGIN

SELECT '#attr JustBuilt',* FROM #attr AS a

end



  /****************************************
  join to attributes, just enough to get some attrs reqruied for the mapping:
  *****************************************/
  --todo: make this dynamic too!
  IF @RunToThisStep >= 2
  BEGIN
    --SELECT * FROM [#stats]

    SELECT
      UniqueDataSetId = '003_12341231243_00_000_01_03_tbc_1234JustInCase'  --need to make it big enogh tht it doesn't get truncated below.
     ,a.*
     ,LoadedTruckCount =
      CASE
        WHEN a.[ProcessID] = 6 AND
          ISNULL(a.revisedValue, '') <> '' THEN 1
        ELSE NULL
      END  -- IIF ([st].[ProcessID]=6,convert(int,left(st.revisedValue,1)),null)
     ,DumpedTruckCount = IIF(a.[ProcessID] = 6, a.[ActualValue], NULL)
     ,LoadedTimestamp = IIF(a.[ProcessID] = 6, SUBSTRING(a.revisedValue, 12, LEN(a.revisedValue)), NULL)
     ,DumpedTimeStamp = IIF(a.[ProcessID] = 6, a.InputTimeStamp, NULL)

      --need some attribute values for mapping
     ,AttrTypeId_48 = COALESCE(b.AttTypeId_48, bb.AttTypeId_48)
     ,AttrTypeId_289 = COALESCE(b.AttTypeId_289, bb.AttTypeId_289)

      --, ActivityReasonId = 0 --tbc, need to haul through the below views.


     ,WorkType = 'Mining'  --tbc, need to haul through the below views.


    INTO #Combined
    FROM #Stats AS a

    LEFT JOIN --(SELECT
    -- *
    --FROM s
    [#attrPivoted] AS b
      --WHERE PvtJn_InputGroupId >= 0) AS b
      ON a.PvtJn_TaskId = b.PvtJn_TaskId
        AND a.PvtJn_InputGroupId = b.PvtJn_InputGroupId
        --date is filterd out on initial select. and a.Date = b.inputDate
        AND a.ProjectID = b.ProjectId
        AND b.PvtJn_InputGroupId >= 0-- OR b.PvtJn_InputGroupId = -1)  -- -1 indicates this attribute input is not inside the group

    LEFT JOIN --(SELECT
    -- *
    --FROM 
    [#attrPivoted] AS bb
      ON bb.PvtJn_InputGroupId < 0
        --and a.Date = bb.inputDate
        AND a.ProjectID = bb.ProjectId
        AND a.PvtJn_TaskId = bb.PvtJn_TaskId

  --and (a.PvtJn_InputGroupId = b.PvtJn_InputGroupId)-- OR b.PvtJn_InputGroupId = -1)  -- -1 indicates this attribute input is not inside the group




  END

  IF @DebugMode = 1
  BEGIN
    SELECT
      '[#Combined]'
     ,*
    FROM [#Combined]
  END
  /****************************************
  do some obfuscation
  *****************************************/
  IF @RunToThisStep >= 3
    AND @ObfuscateData = 1
  BEGIN

    UPDATE [#Combined]
    SET LocationCode = LocnSourceCode + '_' + CAST(LocationId AS VARCHAR(25))
       ,EquipmentCode = EquipTypeCode + '_' + CAST(EquipmentId AS VARCHAR(25))
       ,EmployeeName = 'Employee #' + CAST(OperatorId AS VARCHAR(25)) --be nice to  bring Position up here and go "Jumbo Operator # 1"
       ,[Site] = IIF(@ShiftToProject3 = 1, 'TEST', [Site])
       ,[ProjectID] = IIF(@ShiftToProject3 = 1, 3, [ProjectId])




  END


  /****************************************
  do teh KPI mapping
  *****************************************/
  IF @RunToThisStep >= 4
  BEGIN
                                                --CREATE VIEW [dbo].[View_KPINew_Stat18_Tonnes_v3]
                                            
                                                /*
                                                select * from  [dbo].[View_KPINew_Stat18_Tonnes] where projectid = 259 and budgetcodeid = 1   10secs 16976
                                                select * from  [dbo].[View_KPINew_Stat18_Tonnes] where projectid = 259 and budgetcodeid = 1 and metricid = 6  --1 sec 7345rows
                                                select * from  [dbo].[View_ProddataStorage_DailySummary] where projectid = 259 and budgetcodeid = 1 and metricsort = 6  --13 secs 1084 rows
                                                2020-07-20 ts ... create from the all encompassing KPI function becuase it is too slow
                                                                                                ... everything from PDS. soon enough this will be a view anyway.  leave the function calling out of ips for now ... can shift it back to this view ultimately?
                                                2020-07-28 ts ... whack in the new handling for splitting Ore Tonnes
                                                2020-07-29 ts ... addedhandling for the target backfill task 329
                                                2020-7-30 ts ... added nolock to all, ditch the ProjMaskMap ... to save query time. it is added in ProdDataDailySummary view anyway
                                                2020-08-24 ts ... add datastoreid
                                                2020-08-26 ts ... sinulls on teh las for ore tonnes
                                                2020-08-28 ts ... shift bogging out to stope bogging (primary) 
                                                2020-09-14 ts ... bring StatisticTypeID, LocnSourceCode = l.LocationCode, DestDestCode = '', BudgetCode, Sequence, ConsumableDesc='', DestinationCode='', BogFrom='', BogTo='', LoadedAtCode='' , Level=l.LocLevel, WorkArea = pit.PitCode  and drop the filter for only mapped ones
                                                2020-11-26 ts ... add loc level and work area
                                                2020-12-01 ts ... add Material  ; 2021-01-15 ts ... add timestamp    
                                                2021-04-06 ts ... target for ore tonnes to ROM
                                                                                                ... handle null destination as ROM (so that targets flow into this mapping too)
                                                                                                ... add comment on why targets don't show (location for Ore tonnes target needs to have either prod or dev source code)
                                                2021-04-13 ts ... add tonnes mapping for shotcrete hydraulic fill.
                                                2021-09-08 CA ... Changed LocnSourceCode = l.SourceCode from l.LocationCode. Also changed the changelog text for 2020-09-14. Added MasterSourceDesc
                                                2021-12-13 CA ... BogFrom and BogTo changed from being blank
                                                2021-11-25 ... join in arl for reason alias                     <<add change log>>
                                                
                                                if adding to the statisic filters on teh WHERE, need to remove out of this:
                                                View_KPINew_StatV_UnmappedStats
                                                */
                                            
                                            
              UPDATE [#Combined]
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --trucking tonnes:
                                                  --ore tonnes
                                                  WHEN StatisticID = 18 AND
                                                    ReasonID = 172 AND
                                                    MaterialSysId = 11 THEN    --put isnulls on the destmaster for targets, however we may have to put in new Reason for trucking to rom if they need separate target
                                                    CASE
                                                      WHEN SourceMasterID = 2 AND
                                                        ISNULL(DestMasterID, 4) /*2021-04-06 handle null as ROM, they are Targets anyway*/ = 4 AND
                                                        ISNULL(SourceMasterID, 0) <> 10 THEN '006_01' --dev (to rom). not rehandled
                                                      WHEN SourceMasterID = 1 AND
                                                        ISNULL(DestMasterID, 4) /*handle null as ROM, they are Targets anyway*/ = 4 AND
                                                        ISNULL(SourceMasterID, 0) <> 10 THEN '006_02' --stope (to rom)
                                                      WHEN SourceMasterID = 2 AND
                                                        ISNULL(DestMasterID, 4) /*handle null as ROM, they are Targets anyway*/ <> 4 AND
                                                        ISNULL(SourceMasterID, 0) <> 10 THEN '006_03'  --dev (not to rom)
                                                      WHEN SourceMasterID = 1 AND
                                                        ISNULL(DestMasterID, 4) /*handle null as ROM, they are Targets anyway*/ <> 4 AND
                                                        ISNULL(SourceMasterID, 0) <> 10 THEN '006_04'  --stope (not to rom)
                                                      WHEN /*ls.SourceMasterID = 1 AND*/ ISNULL(DestMasterID, 4) /*handle null as ROM, they are Targets anyway*/ = 4 AND
                                                        ISNULL(SourceMasterID, 0) = 10 THEN '006_05' --rehandle (to rom)
                                                      WHEN /*ls.SourceMasterID = 2 AND*/ ISNULL(DestMasterID, 4) /*handle null as ROM, they are Targets anyway*/ <> 4 AND
                                                        ISNULL(SourceMasterID, 0) = 10 THEN '006_06'  --rehandle (not to rom)
                                            
                                                      --note, when target location.SourceCode is neither Prod or Dev, the targets will fall into 006_00. a fix for this would be to simply make sure the default Location for ore tonnes have Dev or Prod. 
                                                      --another fix might be to map teh 006_00 in KPI project table
                                                      ELSE '006_00'  --catch all, based on ... a.StatisticID = 18 AND a.ReasonID = 172 AND m.MaterialSysId = 11
                                                    END
                                                  --resample one
                                                  WHEN StatisticID = 18 AND
                                                    ReasonID = 172 AND
                                                    MaterialSysId = 13 THEN  --resample tonnes
                                                    --CASE WHEN ls.SourceMasterID = 2 THEN '039_01' --dev
                                                    --          WHEN ls.SourceMasterID = 1 THEN '039_02' --stope
                                                    --          ELSE '039_00'
                                                    '039_00'
                                                  --END
                                            
                                                  --Waste Tonnes hauled (not backfilled)                                                             --NOTE: this original KPI will map tonnes to backfill into this KPI!   [dbo].[View_KPI_12_WasteTonne] . ..ts 2020-02-11
                                                  --update 2020-02-20 ... backfill tonnes needs to be mapped independently to waste tonnes. bu
                                            
                                                  WHEN (StatisticID = 18) AND
                                                    (ReasonID = 172) AND
                                                    (MaterialSysId = 12) AND
                                                    NOT (ISNULL(DestMasterID, 0) = 1 AND
                                                    ProcessId = 6)  --added to avoid mapping backfill into here. same filter as for KPI set 019_..
                                                    AND NOT ReasonID = 329  -- don't get the backfill targets either
                                                  THEN '012_00'
                                                  WHEN (StatisticID = 18) AND
                                                    (ReasonID = 172) AND
                                                    (MaterialSysId = 12) AND
                                                    (ISNULL(DestMasterID, '') = 1 OR
                                                    reasonid = 329)  --backfill target goes in here because we don't handle destination on targets
                                                    AND ProcessId = 6  --this bit is waste tonnes trucked as well as backfilled
                                                  THEN '019_02'  --map this to Metric 12 as well. (the join to SYS_KPI_DEfins should duplicate the lines)
                                            
                                            
                                                  --backfill, waste
                                                  WHEN (StatisticID = 18) AND
                                                    (MaterialSysId = 12) --THEN 
                                                    --CASE WHEN  (a.LoadedTo = 3) OR (a.ReasonID = 329) THEN '019_01' --bogged to stope (or target)
                                                    --mapped up with waste tonnes hauled. no specifica target for trucking waste tonnes? WHEN  ((dest.DestMasterID = 1) AND ProcessId = 6) /*OR (a.ReasonID = 329)*/ THEN  '019_02' --trucked to stope (NOT target, will need to bring new target reason maybe. also this has ramafications with the dual mapping of waste tonnes (will likely duplicate the target?)
                                                    --remapped like this because it was removing the waste bogging trans from mapping donwn below 2020-05-14
                                                    AND ((ISNULL([BogToId], 0) = 3) OR
                                                    (ReasonID = 329)) THEN '019_01' --bogged to stope (or target)
                                                  --END    
                                                  --backfill, CRF
                                                  WHEN (StatisticID = 18) AND
                                                    (MaterialSysId = 23) THEN CASE
                                                                              WHEN (ISNULL([BogToId], 0) = 3) OR
                                                                                (ReasonID = 329) THEN '029_01' --bogged to stope (or target)
                                                                              WHEN ((ISNULL(DestMasterID, 0) = 1) AND
                                                                                ProcessId = 6) OR
                                                                                (ReasonID = 329) THEN '029_02' --trucked to stope (or target) this target will already be mapped into 029_01 ... ?
                                                                                else 'crf?'  --so there is no null and so we can find mapping issues.
                                                                            END
                                                                    
                                                  --stope bogging
                                                  WHEN StatisticID = 18 AND
                                                    ProcessID = 5 AND
                                                    ISNULL([BogFromId], 0) = 4 THEN '049_' + CAST(ISNULL([BogFromId], '') AS VARCHAR) + CAST(ISNULL([BogToId], '') AS VARCHAR)  --build the subtotal part dynamically
                                            
                                                  --Other bogging
                                                  WHEN StatisticID = 16 AND
                                                    ProcessID = 5 AND
                                                    ISNULL([BogFromId], 0) <> 4 THEN '034_' + CAST(ISNULL([BogFromId], '') AS VARCHAR) + CAST(ISNULL([BogToId], '') AS VARCHAR)  --build the subtotal part dynamically
                                            
                                            
                                                  --hydraulic fill in tonnes
                                                  WHEN StatisticID = 18 AND
                                                    ReasonID = 1731 THEN '051_02'
                                                  --other bogging, no backfill, dynamically set.
                                                  /*                      kill this for now, it likely will slow shit up. don't think that it is being used anymore anyway (was for THA stope bogging data into their daily spreadsheet)
                                                                          WHEN a.StatisticID = 18 AND a.ProcessID = 5 AND ISNULL(a.LoadedTo,0) NOT IN (0,3,5) AND ISNULL(a.loadedFrom,0) not in (0,4) THEN 
                                                                                                                          '034_' +CAST (ISNULL(a.LoadedFrom,'') AS varchar)+CAST (ISNULL(a.LoadedTo,'') AS varchar)  --build the subtotal part dynamically
                                                  */
                                            
                                            
                                                  ELSE Metric_SubtotalId
                                                END
            WHERE StatisticID IN (18)
                                            

                                                --tkms: (and # of trucks)
            UPDATE [#Combined]
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                            
                                                  --Trucking
                                                  WHEN Statisticid = 37 THEN '005_00'  --TKMs
                                            
                                                  WHEN Statisticid = 17 THEN '052_00'  -- # of Trucks
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                            
             WHERE StatisticID IN (17, 37)
                                            
                                            
                                            
                                            
                                            
                                            
                                                /*
                                                
                                                SELECT * FROM  [dbo].[View_KPINew_Stat6_Drillm]
                                                2020-07-30 ts ... only get equiptype=PD into metric=3.  need to be careful unwinding this ... there appears to be some historical data with UJ drilling into Process=7 (eg service holes, probe holes)
                                                2020-07-30 ts ... make new metric for Operator Error Redrill
                                                                                                ... new line for misc drilling
                                                2020-7-30 ts ... added nolock to all, ditch the ProjMaskMap ... to save query time. it is added in ProdDataDailySummary view anyway
                                                                                                ... remove teh equiptpeId filter for normal prod drilling .... if you drill with a cabolter it should still count!
                                                2020-08-03 ts ... added  cleanouts. not currenly coded as actual drilling, but put in here anyway
                                                                                                ... allow the stat
                                                2020-08-25 ts ... add datastoreid 
                                                2020-08-26 ts ... change jumbo drillm
                                                2020-09-14 ts ... bring StatisticTypeID, LocnSourceCode = l.SourceCode, DestDestCode = '', BudgetCode, Sequence, ConsumableDesc='', DestinationCode='', BogFrom='', BogTo='', LoadedAtCode='' , Level=l.LocLevel, WorkArea = pit.PitCode , MasterSourceDesc = sysls.SourceDesc and drop the filter for only mapped ones
                                                2020-11-04 ts ... swtihc some pd drillign onto new Metric_Subtotals
                                                                                    ... ditch the "operator error" redrill mapping and instead map all redrills to that subtotal id
                                                2020-11-05 ts ... remove teh equiptype=113 filter on all actual drilling (bound by reason, left it there for Misc drilling see notes from 2020-07-30. PEA was using cable bolter to do production drilling
                                                
                                                */
                                            
                                            
                                            
              UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --Production drilling , non-sludge.  if we need to allow other EquipTypes in here, need to be careful looking at historical ... there may be some accidental UJ doing service holes on ProcessID=7
                                                  WHEN a.Statisticid = 6 AND
                                                    a.ReasonID <> 260 THEN --no redrilling due to operator error, no sludge drilling
                                                    CASE
                                                      WHEN a.ProcessID = 7 /*AND eq.EquipTypeID = 113 2020-07-30*/ /*is auto:*/ AND CAST(ISNULL([AttrTypeId_289], '') AS VARCHAR(25)) <> '1663' AND
                                                        a.ReasonId IN (270, 161, 296, 287, 283, 256) --+ slashing. up and down + collaring. pilot and ream (in case we get ITH back)
                                                        AND /*Any redrill reason:*/ CAST(ISNULL([AttrTypeId_48], '') AS VARCHAR(25)) NOT IN (147, 154, 155, 167) THEN '003_01'  --normal drilling, not auto and not misc
                                            
                                                      WHEN a.ProcessID = 7 AND
                                                        a.EquipTypeID = 113  /*is auto:*/ AND CAST(ISNULL([AttrTypeId_289], '') AS VARCHAR(25)) <> '1663' AND
                                                        a.ReasonId NOT IN (270, 161, 296, 287, 283, 256) --eg probe or service hole
                                                        AND /*Operator Error redrill reason (ignored)*/ CAST(ISNULL([AttrTypeId_48], '') AS VARCHAR(25)) <> 'xx' THEN '050_01'  -- misc drilling, not auto and not operator error redrill  2020-11-04 new KPIid also don't worry about redrills on this misc shit
                                            
                                            
                                                      WHEN a.ProcessID = 7 /*AND eq.EquipTypeID = 113 2020-11-05*/ AND /*is auto:*/ CAST(ISNULL([AttrTypeId_289], '') AS VARCHAR(25)) = '1663' AND /*any redrill reason:*/
                                                        CAST(ISNULL([AttrTypeId_48], '') AS VARCHAR(25)) NOT IN (147, 154, 155, 167) THEN '003_02'                     --unmanned auto drilling
                                                      WHEN a.ProcessID = 7 /*AND eq.EquipTypeID = 113 2020-11-05*/ --AND /*is auto:*/CAST(ISNULL(aut.AttributeID,'') AS varchar(25)) <> 1663 
                                                        AND /*any redrill redrill reason:*/ CAST(ISNULL([AttrTypeId_48], '') AS VARCHAR(25)) IN (147, 154, 155, 167) THEN '003_03'                        --any redrilling.    operator error redrill.
                                            
                                            
                                                      WHEN a.ProcessID = 10 AND
                                                        a.EquiptypeId = 113 THEN '002_01'  --doesnt matter which rig drills cables
                                                      WHEN a.ProcessID = 10 AND
                                                        a.EquiptypeId = 126 THEN '002_02'  --I believe that the old KPI mapping had re-drill mapped separately ... is this even legit?! there are two reasons for cable drilling ... is something we could map again like that as requested. see [View_KPI_17_CaboltReDrill]
                                            
                                                      WHEN a.ProcessID = 10 AND
                                                        a.EquiptypeId = 91 THEN '002_03'
                                                      WHEN a.ProcessID = 10 AND
                                                        a.EquiptypeId NOT IN (113, 126, 91) THEN '002_00'
                                                      WHEN a.ProcessID = 1 THEN '045_01' --dev drilling 2020-08-26
                                                      WHEN a.ProcessID = 3 THEN '045_02' --GS Drilling  
                                            
                                                      WHEN a.ProcessId = 19 THEN '013_00'  --diamond drilling
                                                      ELSE Metric_SubtotalId
                                                    END
                                                  --sludge drilling
                                                  WHEN a.Statisticid = 6 AND
                                                    CAST(ISNULL([AttrTypeId_48], '') AS VARCHAR(25)) <> '167' AND
                                                    a.ReasonID = 260 THEN CASE
                                                      WHEN a.EquiptypeId = 113 THEN '027_01'  --PD
                                                      WHEN a.EquiptypeId = 126 THEN '027_02'  --UJ
                                                      WHEN a.EquiptypeId = 91 THEN '027_03'  --CB
                                                      ELSE '027_00'
                                                    END
                                                  WHEN a.StatisticID = 165 THEN '048_01'   --cleanout metres
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                            
                                            
                                                FROM [#Combined] AS a
                                            
           WHERE StatisticID IN (6, 165)
                                                AND ProcessId <> 17 --raisebore
                                            
                                            
                                            
                                            
                                            
                                            
                                                --create    View [dbo].[View_KPINew_Stat7_TimeUsage_v3]
            UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --Equipment Downtime and other time mapping
                                                  /*********
                                                  be careful mapping this, it will only take the first map. need to exclude reason or whatever so that we get an explicit, clean map here. (to put it onto more than one KPI, map twice in the sys_kpi defin tabl
                                                  *********/
                                                  WHEN a.StatisticID = 7 AND
                                                    a.ActivityID IN (4, 5, 6) AND
                                                    a.ReasonID <> 239 --removed Type, this will pull through to PDS automatically when this is a view)AND Type LIKE 'Mining%' --only get hours on Mining type. maint type has duplicates because of multiple fitters working on single machine.
                                                  THEN '008_00'
                                                  WHEN a.StatisticID = 7 AND
                                                    a.ReasonID = 239 --AND Type LIKE 'Mining%'
                                                  THEN '037_00'  --Daily Services  these will be reproted twice in unfiltered select on this function!! *mapped twice in te KPIdef'ns table
                                                  WHEN a.StatisticID = 7 AND
                                                    a.ActivityID = 1 --AND Type LIKE 'Mining%'
                                                  THEN '036_00'  --PRDT Hrs
                                                  WHEN a.StatisticID = 7 AND
                                                    a.ActivityID IN (2, 3) --AND Type LIKE 'Mining%'
                                                  THEN '043_00'  --PRDT Hrs
                                            
                                            
                                            
                                                  ELSE Metric_SubtotalId
                                            
                                                END
                                            
                                            
                                            
                                                FROM [#Combined] AS a
                                            
           WHERE a.StatisticID = 7
                                            
                                            
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_CablesNotDrill_v3]
            UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --Cables (not drilling)
                                                  WHEN a.StatisticID = 35 THEN '009_00'  --INSTALL add some sub total splits for manual vs cabolter?
                                                  WHEN a.StatisticID = 46 THEN '010_00'  --TEnsion 
                                            
                                            
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                            
                                            
                                                FROM [#Combined] AS a
                                            
            WHERE a.StatisticID IN (35, 46)
                                            
                                                --create    View [dbo].[View_KPINew_StatV_Consumables_v3]
              UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --GSBoltsInstalled (except the ones below) REMOVE FROM THIS LIST if adding to special consumable KPI mapping
                                                  WHEN (a.ConsumableID <> 87) AND
                                                    (MonthTargetID <> 56) AND
                                                    (a.StatisticID = 10)  --only bolts on this one.
                                                  THEN '032_00' --all consumables
                                            
                                                  --special consumables
                                                  WHEN (a.StatisticID = 10) AND
                                                    (a.ConsumableID = 87 OR
                                                    MonthTargetID = 56) THEN '032_01' --2.4 resins
                                            
                                                  WHEN a.StatisticID = 11 THEN '024_00' --mesh #
                                            
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                                FROM [#Combined] AS a
                                            
              WHERE ISNULL(a.ConsumableProjID, 0) <> 0
                                            
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_DevAdvance_v3]
                                            
                                                /*
                                                2020-12-16 ts ... add drag cut to "stripping"
                                                                                                ... add teh exclusion of drag cut
                                                2021-09-08 CA ... Changed LocnSourceCode = l.SourceCode from l.LocationCode. Also changed the changelog text for 2020-09-14. Added MasterSourceDesc
                                                
                                                
                                                */
                                            
                                            
            UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  WHEN a.Statisticid = 13 THEN CASE
                                                      WHEN a.ProcessID = 4 AND
                                                        a.ReasonID = 248 THEN '001_01'  --face charging
                                                      WHEN a.ProcessID = 4 AND
                                                        a.ReasonID IN (301, 164) THEN '001_02'  --  stripping + drag cut.
                                                      WHEN a.ProcessID = 3 THEN '001_03'  --rehab
                                                      WHEN NOT (a.ProcessID IN (3, 4) AND
                                                        a.ReasonID IN (248, 164, 301)) THEN '001_00' --other? not sure what it would be
                                                      ELSE Metric_SubtotalId
                                                    END
                                                  --stripping vol
                                                  WHEN a.Statisticid = 49 THEN '023_00'
                                            
                                                  --rehab linear adv
                                                  WHEN (a.StatisticID = 105) AND
                                                    (a.ReasonID = 166) THEN '035_00'
                                                  ELSE Metric_SubtotalId
                                                END
                                                FROM [#Combined] AS a
                                            
             WHERE a.StatisticID IN (13, 49, 105)
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_MostRecentEntry_v3]
               UPDATE [#Combined]
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                            
                                                  WHEN a.StatisticID = 164 THEN '047_01'          --Open Void to Fill                                                                    
                                                  WHEN a.StatisticID = 163 THEN '047_02'          --Broken Ore Stocks    
                                                  WHEN a.StatisticID = 162 THEN '047_03'          --Drilled Ore Stocks      
                                                  WHEN a.StatisticID = 161 THEN '047_04'          --Developed Ore Stocks           
                                                  ELSE Metric_SubtotalId
                                                END
                                                FROM [#Combined] AS a
              WHERE a.StatisticID IN (164,
              163,
              162,
              161)
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_PerfectDay_v3]
               UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --perfect day yes or no. can't do easily here?!
                                                  --WHEN a.StatisticID = 155 AND MetricValue >= 91
                                                  --                        THEN '038_00' 
                                                  WHEN a.StatisticID = 155 -- AND Value >= 91
                                                  THEN '040_00' -- perfect day shift score
                                                  --'038_00' -- pefect day count
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                            
                                            
                                            
                                                FROM [#Combined] AS a
                                            
                 WHERE a.StatisticID = 155 --ISNULL(a.ConsumableProjID,0) <>0
                                            
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_Raisebore_v3]
                 UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --shotcrete dumping (shaftlining)
                                                  WHEN a.StatisticID = 150 -- AND Value >= 91
                                                  THEN '042_00'
                                                  WHEN a.Reasonid = 316 AND
                                                    a.StatisticID = 6 THEN '022_00'
                                                  WHEN a.Reasonid = 247 AND
                                                    a.StatisticID = 6 THEN '021_00'
                                                  WHEN a.Reasonid = 177 AND
                                                    a.StatisticID = 6 THEN '020_00' -- END AS Metric, 
                                                  -- CASE WHEN a.Reasonid = 316 THEN 22 WHEN a.Reasonid = 247 THEN 21 WHEN a.Reasonid = 177 THEN 20 ELSE NULL
                                            
                                            
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                                FROM [#Combined] AS a
                WHERE a.StatisticID IN (6, 150)
                AND a.ProcessID = 17
                                            
                                            
                                            
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_ShotCrete_v3]
                  UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                                  --Shotcrete
                                                  WHEN a.Statisticid = 27 THEN '004_00'  --m3 sprayed
                                                  WHEN a.Statisticid = 50 THEN '030_00' --m2 sprayed
                                                  WHEN a.Statisticid = 78 AND
                                                    a.ReasonID <> 1731 THEN '026_00'         --m3 transported
                                                  WHEN a.Statisticid = 78 AND
                                                    a.ReasonID = 1731 THEN '051_01'           --m3 hydraulic fill
                                                  ELSE Metric_SubtotalId
                                                END
                                                FROM [#Combined] AS a
                 WHERE a.StatisticID IN (27, 50, 78)
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                                --create    View [dbo].[View_KPINew_StatV_StopingActivities_v3]
                   UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                            
                                                  --Stoping activities
                                                  WHEN a.StatisticID = 26 AND
                                                    a.ProcessID = 8 THEN '011_00'   --tonnes fired                                                               
                                                  ELSE Metric_SubtotalId
                                            
                                                END
                                            
                                                FROM [#Combined] AS a
                                            
                 WHERE a.StatisticID IN (26)
                                            
                                            
                                            
                                            
                                            
                                            
                                                --create view [dbo].[View_KPINew_StatV_UnmappedStats_v3]
                 UPDATE a
                                                SET Metric_SubtotalId = --combo of metricId and SubtotalId
                                                CASE
                                            
                                                  --Stoping activities
                                                  WHEN a.StatisticID = 26 AND
                                                    a.ProcessID = 8 THEN '011_00'    --tonnes fired                                                               
                                                  --backfill, waste
                                                  WHEN (a.StatisticID = 16) AND
                                                    (MaterialSysID = 12) --THEN 
                                                    --CASE WHEN  (a.LoadedTo = 3) OR (a.ReasonID = 329) THEN '019_01' --bogged to stope (or target)
                                                    --mapped up with waste tonnes hauled. no specifica target for trucking waste tonnes? WHEN  ((dest.DestMasterID = 1) AND ProcessId = 6) /*OR (a.ReasonID = 329)*/ THEN  '019_02' --trucked to stope (NOT target, will need to bring new target reason maybe. also this has ramafications with the dual mapping of waste tonnes (will likely duplicate the target?)
                                                    --remapped like this because it was removing the waste bogging trans from mapping donwn below 2020-05-14
                                                    AND ((ISNULL(a.BogToId, 0) = 3) OR
                                                    (a.ReasonID = 329)) THEN '019_01' --bogged to stope (or target)
                                                  --END    
                                                  --backfill, CRF
                                                  WHEN (a.StatisticID = 16) AND
                                                    (MaterialSysId = 23) THEN CASE
                                                      WHEN (ISNULL(a.BogToId, 0) = 3) OR
                                                        (a.ReasonID = 329) THEN '029_01' --bogged to stope (or target)
                                                      WHEN ((ISNULL(DestMasterID, 0) = 1) AND
                                                        a.ProcessId = 6) OR
                                                        (a.ReasonID = 329) THEN '029_02' --trucked to stope (or target) this target will already be mapped into 029_01 ... ?
                                                      ELSE 'xx'
                                                    END
                                            
                                                  --stope bogging
                                                  WHEN a.StatisticID = 16 AND
                                                    a.ProcessID = 5 AND
                                                    ISNULL(a.BogFromId, 0) = 4 THEN '049_' + CAST(ISNULL(a.BogFromId, '') AS VARCHAR) + CAST(ISNULL(a.BogToId, '') AS VARCHAR)  --build the subtotal part dynamically
                                            
                                                  --Other bogging
                                                  WHEN a.StatisticID = 16 AND
                                                    a.ProcessID = 5 AND
                                                    ISNULL(a.BogFromId, 0) <> 4 THEN '034_' + CAST(ISNULL(a.BogFromId, '') AS VARCHAR) + CAST(ISNULL(a.BogToId, '') AS VARCHAR)  --build the subtotal part dynamically
                                            
                                                  ELSE Metric_SubtotalId
                                                END
                                            
                                            
                                                FROM [#Combined] AS a
                    WHERE a.StatisticID NOT IN (26, 27, 50, 78, 164,
                    163,
                    162,
                    161,
                    155,
                    13, 49, 105,
                    35, 46
                    , 6, 165
                    , 18, 37, 17
                    , 7
                    , 150)
                    AND ISNULL(a.ConsumableProjID, 0) = 0



  END  --end kpi mapping



  /****************************************
  Join to Kpi mapping table
  *****************************************/
  IF @RunToThisStep >= 5
  BEGIN
    --todo: join to dbt kpis table to get revised descriptions?
    SELECT
      [a].[UniqueDataSetId]
     ,[a].[Date]
     ,[a].[Shift]
     ,[a].[ProjectID]
     ,[a].Site
     ,[a].[ActivityDesc]
     ,[a].[ActualValue]
     ,[a].BogFrom
     ,[a].BogTo
     ,[a].BudgetCode
     ,[a].ConsumableDesc
     ,[a].[ConsumableDescShort]
     ,[a].CrewCode
     ,[a].DestDestCode
     ,[a].DestinationCode
     ,[a].[DumpedTimeStamp]
     ,[a].[DumpedTruckCount]
     ,[a].EmployeeName
     ,[a].[EndTime]
     ,[a].EquipmentCode
     ,[a].EquipTypeCode
     ,[a].[InputComment]
     ,[a].[InputPhoto]
     ,[a].[InputTimeStamp]
     ,[a].Level
     ,[a].LoadedAtCode
     ,[a].[LoadedTimestamp]
     ,[a].[LoadedTruckCount]
     ,[a].LocationCode
     ,[a].LocnMasterSourceCode
     ,[a].LocnSourceCode
     ,[a].Material
     ,[a].MaterialDescOp
     ,
      --[a].[MetricCode],
      --[a].[MetricDesc],
      [a].[MetricValue]
     ,[a].[OriginalValue]
     ,[a].ProcessDesc
     ,[a].ProjectMask
     ,[a].[ReasonDescription]
     ,[a].[RevisedValue]
     ,[a].[StartTime]
     ,[a].[StatisticCode]
     ,
      --[a].[MetricSubtotalCode], 
      [a].[SupervisorComments]
     ,[a].[TargetValue]
     ,[a].[TaskComments]
     ,[a].Units
     ,[a].[Value]
     ,[a].WorkArea
     ,

      /*ID fields:*/
      [a].[ActivityID]
     ,[a].[ActivityReasonID]
     ,[a].[AttrTypeId_289]
     ,[a].[AttrTypeId_48]
     ,[a].[BogFromId]
     ,[a].[BogToId]
     ,[a].[BudgetCodeID]
     ,[a].[ConsumableID]
     ,[a].[ConsumableProjID]
     ,[a].[CrewID]
     ,[a].[DataStoreID]
     ,[a].[DestinationID]
     ,[a].DestMasterID
     ,[a].[DetailID]
     ,[a].[EquipmentID]
     ,[a].EquipTypeId
     ,[a].[LoadedAtId]
     ,[a].[LocationID]
     ,[a].[MaterialID]
     ,[a].[MaterialSysId]
     ,[a].[Metric_SubtotalId]
     ,
      --[a].[MetricId],
      [a].[MonthTargetID]
     ,[a].[OperationID]
     ,[a].[OperatorID]
     ,[a].[PlodDataId]
     ,[a].[ProcessID]
     ,[a].[PvtJn_InputGroupId]
     ,[a].[PvtJn_TaskId]
     ,[a].[ReasonID]
     ,[a].RelatedEquipID
     ,[a].[RelatedEquipmentID]
     ,[a].RelatedEquipTypeId
     ,[a].[Sequence]
     ,[a].SourceMasterID
     ,[a].[StatisticID]
     ,[a].[StatisticTypeID]
     ,
      --[a].[SubtotalId],
      [a].[UniqueTaskId]
     ,[a].[WorkType]
     ,MetricCode = kpi.[KPICode]
     ,MetricDesc = [kpi].[KPIDescription]
     ,MetricId = [kpi].[KPIId]
     ,kpi.SubtotalId
     ,MetricSubtotalCode = kpi.[SubtotalDesc] 
      ,a.CutNumberId
      ,a.CutNumberLabel
      ,a.PitId
     INTO #ForInsert
    FROM [#Combined] AS a
    LEFT JOIN [dbo].[tbl_SYS_KPI_Definitions] AS kpi WITH (NOLOCK)
      ON a.Metric_SubtotalId = kpi.Metric_SubtotalId  --inner join. we have an Active>0 below anyway!
        AND kpi.Active > 0



  END
  /**********************************
  Do some final massaging of data:
  **********************************/
IF @DebugMode = 1 BEGIN

SELECT '[#ForInsert]B4FinalMassage',
ProjectID_ForId=CAST(a.ProjectID AS NVARCHAR(25)) + '_' 
,PLODDataId_ForId =CAST(a.PLODDataId AS NVARCHAR(25)) + '_' 
,Metric_SubtotalId_ForId= ISNULL(a.Metric_SubtotalId, 'xx_xxx') + '_' 
,MetricId_ForId= ISNULL(CAST(a.MetricId AS NVARCHAR(25)), 'xx_xxx') + '_' 
, SubtotalId_ForId = ISNULL(CAST(a.SubtotalId AS NVARCHAR(25)), 'xx_xxx')
,* FROM [#ForInsert] AS a

SELECT '#attr B4FinalMassage',* FROM #attr AS a

end

if @RunToThisStep >=6
begin
  UPDATE a
  SET LocationCode =
      CASE
        WHEN [MetricId] IN (18, 19, 29) THEN DestinationCode
        ELSE LocationCode
      END  --if backfilling, then populate locaiton with destination
     ,LocationId =
      CASE
        WHEN [MetricId] IN (18, 19, 29) THEN a.destinationId
        ELSE a.LocationId
      END --if backfilling, then populate locaiton with destination

     ,MetricValue = [Value]
     ,ActualValue =
      CASE
        WHEN a.BudgetCodeID = 1 THEN [Value]
        ELSE 0
      END
     ,TargetValue =
      CASE
        WHEN a.budgetCodeId <> 1 THEN [Value]
        ELSE 0
      END
     ,UniqueDataSetId = CAST(a.ProjectID AS NVARCHAR(25)) + '_' + CAST(a.PLODDataId AS NVARCHAR(25)) + '_' + ISNULL(a.Metric_SubtotalId, 'xx_xxx')
      + '_' + ISNULL(CAST(a.MetricId AS NVARCHAR(25)), 'xx_xxx') + '_' + ISNULL(CAST(a.SubtotalId AS NVARCHAR(25)), 'xx_xxx')  --add MetricId, becuase might map same Metric_SubtotalId twice
  FROM [#ForInsert] AS a
  WHERE 1 = 1
end

  IF @DebugMode = 1
  BEGIN
    SELECT
      '[#ForInsert]'
     ,*
    FROM [#ForInsert]
  END

  --now return the datasets:
  /***************
  if changing the column set here, need to modify the destination table (and funcitons) too.
  some functions call this proc to get live data.
  *****************/
  IF @GetLiveDataOnly = 1 and @RunToThisStep > = 7
  BEGIN
    --todo: cleanup this, from the top though!
    SELECT
      *
    FROM [#ForInsert]

  END

IF @DebugMode = 1 BEGIN

SELECT '[#ForInsert]_B4FinalSelects',* FROM [#ForInsert] AS a
SELECT '#attr_B4FinalSelects',* FROM #attr AS a

end


  IF @GetLiveDataOnly = 0
    AND @SelectIntoLocalTable = 0 and @RunToThisStep>=8
  BEGIN
    SELECT
      'EtlDetails'
    SELECT
      SourceTableName = 'KpiSnapshot'  --refers to the table datset delievered below
     ,'DestinationTableName' = 'tbl_STO_ReportingSnapshot_KpiStats_All'
     ,ModeForInsert = 'DeleteAndInsert'  --or 'UpdateOrInsert'
     ,FilterForDelete = 'WHERE ProjectID = ' + CAST(IIF(@ShiftToProject3 = 1, 3, @ProjectId) AS VARCHAR(25))
      + '  AND Date BETWEEN  ' + CHAR(39) + FORMAT(@StartDate, 'yyyy-MM-dd') + CHAR(39) + ' AND ' + CHAR(39) + FORMAT(@EndDAte, 'yyyy-MM-dd') + CHAR(39)
     ,IdentityFieldName = NULL --only used for  'UpdateOrInsert'
    UNION ALL --allows for pulling bulk tables out, eg all DBT tables
    SELECT
      SourceTableName = 'AttrSnapshot'
     ,'DestinationTableName' = 'tbl_STO_ReportingSnapshot_AttributesTable_All'
     ,ModeForInsert = 'DeleteAndInsert'  --or 'UpdateOrInsert'
     ,FilterForDelete = 'WHERE ProjectID = ' + CAST(IIF(@ShiftToProject3 = 1, 3, @ProjectId) AS VARCHAR(25))
      + '  AND InputDate BETWEEN  ' + CHAR(39) + FORMAT(@StartDate, 'yyyy-MM-dd') + CHAR(39) + ' AND ' + CHAR(39) + FORMAT(@EndDAte, 'yyyy-MM-dd') + CHAR(39)
     ,IdentityFieldName = NULL --only used for  'UpdateOrInsert'



    SELECT
      'TableDataSets'

    SELECT
      SourceTableName = 'KpiSnapshot'
    SELECT
      [a].[UniqueDataSetId]
     ,[a].[Date]
     ,[a].[Shift]
     ,[a].[ProjectID]
     ,[a].Site
     ,[a].[ActivityDesc]
     ,[a].[ActualValue]
     ,[a].BogFrom
     ,[a].BogTo
     ,[a].BudgetCode
     ,[a].ConsumableDesc
     ,[a].[ConsumableDescShort]
     ,[a].CrewCode
     ,[a].DestDestCode
     ,[a].DestinationCode
     ,[a].[DumpedTimeStamp]
     ,[a].[DumpedTruckCount]
     ,[a].EmployeeName
     ,[a].[EndTime]
     ,[a].EquipmentCode
     ,[a].EquipTypeCode
     ,[a].[InputComment]
     ,[a].[InputPhoto]
     ,[a].[InputTimeStamp]
     ,[a].Level
     ,[a].LoadedAtCode
     ,[a].[LoadedTimestamp]
     ,[a].[LoadedTruckCount]
     ,[a].LocationCode
     ,[a].LocnMasterSourceCode
     ,[a].LocnSourceCode
     ,[a].Material
     ,[a].MaterialDescOp
     ,[a].[MetricCode]
     ,[a].[MetricDesc]
     ,[a].[MetricValue]
     ,[a].[OriginalValue]
     ,[a].ProcessDesc
     ,[a].ProjectMask
     ,[a].[ReasonDescription]
     ,[a].[RevisedValue]
     ,[a].[StartTime]
     ,[a].[StatisticCode]
     ,[a].[MetricSubtotalCode]
     ,[a].[SupervisorComments]
     ,[a].[TargetValue]
     ,[a].[TaskComments]
     ,[a].Units
     ,[a].[Value]
     ,[a].WorkArea
     ,

      /*ID fields:*/
      [a].[ActivityID]
     ,[a].[ActivityReasonID]
     ,[a].[AttrTypeId_289]
     ,[a].[AttrTypeId_48]
     ,[a].[BogFromId]
     ,[a].[BogToId]
     ,[a].[BudgetCodeID]
     ,[a].[ConsumableID]
     ,[a].[ConsumableProjID]
     ,[a].[CrewID]
     ,[a].[DataStoreID]
     ,[a].[DestinationID]
     ,[a].DestMasterID
     ,[a].[DetailID]
     ,[a].[EquipmentID]
     ,[a].EquipTypeId
     ,[a].[LoadedAtId]
     ,[a].[LocationID]
     ,[a].[MaterialID]
     ,[a].[MaterialSysId]
     ,[a].[Metric_SubtotalId]
     ,[a].[MetricId]
     ,[a].[MonthTargetID]
     ,[a].[OperationID]
     ,[a].[OperatorID]
     ,[a].[PlodDataId]
     ,[a].[ProcessID]
     ,[a].[PvtJn_InputGroupId]
     ,[a].[PvtJn_TaskId]
     ,[a].[ReasonID]
     ,[a].RelatedEquipID
     ,[a].[RelatedEquipmentID]
     ,[a].RelatedEquipTypeId
     ,[a].[Sequence]
     ,[a].SourceMasterID
     ,[a].[StatisticID]
     ,[a].[StatisticTypeID]
     ,[a].[SubtotalId]
     ,[a].[UniqueTaskId]
     ,[a].[WorkType]
     ,EtlDateTime = GETDATE()
        ,a.CutNumberId
        ,CutNumberLabel
        ,CalStartTime = st.VAlue
        ,CalEndTime = en.Value
        ,a.PitId
    --into #createtableFromThis
    FROM [#ForInsert] AS a
    outer APPLY dbo.tvf_ConvertToCalDateTime(a.date,a.starttime,a.shift) AS st  --presumably no overhead in doing it here? migth be slower if the #toinsert is a big beast?
       outer APPLY dbo.tvf_ConvertToCalDateTime(a.date,a.endtime,a.shift) AS en

    SELECT
      SourceTableName = 'AttrSnapshot'

    SELECT
      UniqueAttrId = CAST(a.ProjectID AS NVARCHAR(25)) + '_' + CAST(a.[PvtJn_TaskId] AS NVARCHAR(25)) + '_' + ISNULL(CAST(a.[PvtJn_InputGroupId] AS NVARCHAR(25)), 'XX')
     ,[ProjectId]
     ,PvtJn_TaskId
     ,PvtJn_InputGroupId
     ,[Pvt_FieldNames]
     ,[AttributeValue]
     ,[AttributeID]
     ,[AttributeTypeID]
     ,[InputDate]
     ,EtlDateTime = GETDATE()
    -- into #createAttrTableFromThis
    FROM [#attr] AS a

  END

  --now cleanup temporary datasets:





  -- other notes:
  /*
  call the job "PushDataJobs"
  it will throw new line into rabbit queue table for each table.
  could use php to pick up the job, restful API to receive the data and queu. then rabbit could kick the php on the otherside.
  should sniff the dest table fields and insert with the ones comign (unless they don't match, then fail the job)
  
  don't do the last 24 being live thing. just keep it a bit simpler and pull everything through the view and snapshot
  
  make simpler version of the current MCR reporting combined view, select fields out of below new view WHERE Projectid = 399
  
  need these:
  CREATE SYNONYM [dbo].[syn_STO_ReportingSnapshot_KpiStats_All] FOR manage_reporting.dbo.[tbl_STO_ReportingSnapshot_KpiStats_All]
  CREATE SYNONYM [dbo].[syn_STO_ReportingSnapshot_AttributesTable_All] FOR  manage_reporting.dbo.[tbl_STO_ReportingSnapshot_AttributesTable_All]
  
  
  */
  IF @SelectIntoLocalTable = 1
  BEGIN
    SELECT
      ID = IDENTITY(INT, 1, 1)
     ,t.* INTO dbo.tbl_STO_ReportingSnapshot_AttributesTable_All
    FROM [#attr] t

    SELECT
      ID = IDENTITY(INT, 1, 1)
     ,t.* INTO dbo.tbl_STO_ReportingSnapshot_KpiStats_All
    FROM [#ForInsert] t


  --end
  END

  --cleanup:
  
  IF OBJECT_ID('tempdb..#Stats') IS NOT NULL   drop TABLE #Stats;
  
  IF OBJECT_ID('tempdb..#attr') IS NOT NULL   drop TABLE #attr;
  
  IF OBJECT_ID('tempdb..#combined') IS NOT NULL   drop TABLE #combined;
  
  IF OBJECT_ID('tempdb..#combined2') IS NOT NULL   drop TABLE #combined2;
  
  IF OBJECT_ID('tempdb..#attrPivoted') IS NOT NULL   drop TABLE #attrPivoted;
  
  IF OBJECT_ID('tempdb..#ForInsert') IS NOT NULL   drop TABLE #ForInsert;

 /* DROP TABLE #Stats
  DROP TABLE #attr
  DROP TABLE #combined
  DROP TABLE #attrPivoted
  DROP TABLE #ForInsert
*/

END
GO
PRINT N'Refreshing [dbo].[View_ProjSetup_LocationIplodParams]'
GO
EXEC sp_refreshview N'[dbo].[View_ProjSetup_LocationIplodParams]'
GO
PRINT N'Refreshing [dbo].[view_udf_GetTaskDetails_ForIplod_CACHED]'
GO
EXEC sp_refreshview N'[dbo].[view_udf_GetTaskDetails_ForIplod_CACHED]'
GO
PRINT N'Altering [dbo].[SP_Utility_UploadsForSimbio]'
GO
ALTER PROCEDURE [dbo].[SP_Utility_UploadsForSimbio]

@InsertType NVARCHAR(50), --Location or Employees or Equipment

@ProjectId int = 0,


@locationCode NVARCHAR(50) = NULL, -- This is the iPLOD name (slang name)
@LocationDesc NVARCHAR(50) = NULL, -- This is the official name, deswick name, etc.
@SourceCode NVARCHAR(50) = NULL, --This must be a list matching from dbt_LocSources for 377
@DestCode NVARCHAR(50) = NULL, --This must be a list matching from dbt_LocDest for 377
@BogTruckSource NVARCHAR(5) = NULL, --BogTruck source tick (original source of dirt)
@DestTruck NVARCHAR(5) = NULL, -- Truck dest tick

@LocationLevel NVARCHAR(50) = NULL, --Varchar desc. Can be left empty.
@Profile NVARCHAR(50) = NULL,
@Pit NVARCHAR(50) = NULL, -- varchar desc, can be empty
@Stope NVARCHAR(50) = NULL,  -- Production tick
@Development NVARCHAR(50) = null, -- dev tick
@Backfill NVARCHAR(50) = NULL,  -- backfill tick
@LoadingBay NVARCHAR(50) = NULL, -- LoadedAt tick
@BoggedFrom  NVARCHAR(50) = NULL, -- bogged from tick
@BoggedTo  NVARCHAR(50) = NULL, -- bogged to tick
@LocationActive NVARCHAR(50) = '1',   -- IF we don't get a value, assume its active. 


--Employees
@FirstNames NVARCHAR(50) = NULL,
@LastName NVARCHAR(50) = NULL,
@EmployeeID INT = 0,
@MinepointCode VARCHAR(10) = NULL,
@Crew NVARCHAR(5) = NULL,
@Position NVARCHAR(50) = NULL, -- Not hooked in yet
@Supervisor VARCHAR(5) = NULL,
@Fitter VARCHAR(5) = NULL,

--Equipment
@EquipmentCode NVARCHAR(10) = NULL,
@EquipmentDescription NVARCHAR(50) = NULL,
@EquipTypeCode NVARCHAR(10) = NULL,
@FillFactor DECIMAL(5,2) = 0,

-- Users
@UserGroup VARCHAR(50) = NULL,
@SimplePassword INT = 0,  -- Simple Password (1) will just be lastname + 3 chars. Otherwise Lastname, or projectName, or FirstName + 3 chars

-- Materials
@SYSMATERIALDesc varchar(50) = NULL, 
@MaterialDescOp varchar(250) = null,
@EffectiveDensity dec(5,2) = 0.0 



/*
From Question Insert SP
    @QuestionText nvarchar(max)
,@PositionsToInform nvarchar(50)
,@ForwardTrigger nvarchar(50)
,@IntolerableValue nvarchar(35)
,@NotificationText nvarchar(500)
,@AnswerType nvarchar(MAX)
,@Category nvarchar(50)
,@Active int
,@QHelpText nvarchar(MAX)

,@ActivityReasonId int = 0
,@TypeCsv nvarchar(50) = ''   --mining,maint,stores,shiftboss  (or mix and match)
,@InputType varchar(15) = 'Question'
,@CompulsoryTrap int = 1
*/


AS
BEGIN

    /* 
	Change Log: 
	2020-09-16 CA Create
	2020-09-17 CA Set MinepointCode to 101
				  Locations insert set all BogTruckSource to LocnTruck as well
	2020-09-28 CA Add Equipment as well
				 Added commented out ID fields as well for locals
	2020-11-20 CA Added Profile Insert.
	2020-11-27 CA Added Pit
	2021-04-29 CA fixed outstanding issues for use for MCR
	2021-05-12 CA Added user insert
  2022-10-01 CA Updated pit instert 
                Added Materials Insert
                Clean EMployee name data 
  2022-10-18 CA Locations add more fields

	Things to fix:
 From Sally's Location Upload
			Done - Profile was blank (maybe add a config for grab profile)
			Done - Will need changing when v3 uses ticks - Development tick was blank, same with production tick (maybe add more configs for ticks)
			Done - Source code jammed in development, but the project did not have development
			Done - Need to add position from sys_empclass
			Done - Need to add MinepointCode when it is not 101

paste this into excel template: (row 8)
="exec [dbo].[SP_Utility_UploadQuestionsDataForServiceSheets]    @QuestionText='"&SUBSTITUTE(B8,CHAR(39),CHAR(39)&CHAR(39))&"' , @PositionsToInform='"&C8&"' ,@ForwardTrigger='"&D8&"'  ,@IntolerableValue='"&F8&"' ,@NotificationText='"&G8&"'  ,@AnswerType='"&H8&"' ,@Category='"&I8&"' ,@Active='"&J8&"' ,@QHelpText='"&SUBSTITUTE(SUBSTITUTE(K8,CHAR(39),CHAR(39)&CHAR(39)),CHAR(10)," CHAR(10) ")&"' ,@ProjectId="&$O$2&" ,@ActivityReasonId="&$O$3&",@TypeCsv='"&$O$1&"',@InputType='"&A8&"',@CompulsoryTrap="&L8
here is a template of sorts:
S:\COR\D00020_BSY\-03 Web-BAR\_iPLOD\_Fitters\TEMPLATE FOR UPLOADING SERVICE SHEETS.xsls
--PRINT   'Inserted to tbl_SYS_questions: '+ @QuestionText 


	*/
   -- IF (@DebugMode = 0)
  --  BEGIN

  DECLARE @OperationID int = (SELECT OperationId FROM dbo.tbl_DBT_Project WHERE ProjectID = @ProjectId);
  DECLARE @SiteCode VARCHAR(3) = (SELECT TOP 1 ProjectCode FROM dbo.tbl_DBT_Project WHERE ProjectID = @ProjectId)


IF @InsertType = 'Location'
	BEGIN 
		PRINT '---****---'
		PRINT 'Begin Location Insert'

    -- Fill the other out if only one is filled in
   -- set @locationCode = case when @locationCode is null THEN @LocationDesc END
   -- set @LocationDesc = case when @LocationDesc is null then @locationcode END 

    -- for dev tick logic
    declare @StopeOriginally nvarchar(50) = @Stope

		SET @DestTruck = CASE WHEN @DestTruck in ('Yes','1','True') THEN '1' ELSE '0' END 
	  SET @Stope = CASE WHEN @Stope in ('Yes','1','True') THEN '1' ELSE '0' END
    SET @Backfill = CASE WHEN @Backfill in ('Yes','1','True') THEN '1' ELSE '0' END
    SET @LoadingBay = CASE WHEN @LoadingBay in ('Yes','1','True') THEN '1' ELSE '0' END
    SET @LocationActive = CASE WHEN @LocationActive in ('Yes','1','True') THEN '1' ELSE '0' END
    Set @DestTruck = CASE WHEN @DestTruck in ('Yes','1','True') THEN '1' ELSE '0' END 

     -- dev tick based off stope tick because we dont have a column for it on the front end. 
    set @Development = CASE WHEN @Development is NULL AND @Stope  in ('Yes','1','True') THEN 0 
                       when @Development is NULL AND @StopeOriginally NOT in ('Yes','1','True') 
                            AND @StopeOriginally is not null THEN 1
                       when @development is not NULL then @development
                        ELSE '0' END

      -- ORignal source of dirt tick
    	SET @BogTruckSource = CASE WHEN @BogTruckSource in ('Yes','1','True') THEN '1' 
                               WHEN @BogTruckSource is NULL AND 
                               (@Development = '1' or @Stope = '1') then 1
                                ELSE '0' END 



		--- If there is a Level, insert it and get the ID
			IF @LocationLevel IS NOT NULL AND @LocationLevel <> '' AND @LocationLevel <> '0'
				BEGIN 

				IF (SELECT TOP 1 LevelID 
										FROM dbo.tbl_DBT_LocationLevels 
												WHERE @ProjectId = ProjectID AND LevelDescription = @LocationLevel) IS NULL 


					BEGIN 

					--This Variable, and the levelID insert is only needed on locals that dont increment key fields
					-- DECLARE @NextLeveId int = (select max(levelId) + 1 from dbo.tbl_DBT_LocationLevels)


					INSERT INTO dbo.tbl_DBT_LocationLevels
						(
						-- LevelID,
						LevelDescription,
						OperationID,
						ProjectID,
						RL,
						LongDescription
					)
					VALUES
					(  
						--@NextLeveId,
						@LocationLevel,  -- LevelDescription - nvarchar(100)
						@OperationID,    -- OperationID - int
						@ProjectId,    -- ProjectID - int
						NULL, -- RL - decimal(18, 1)
						''    -- LongDescription - varchar(150)
						)

					PRINT 'Inserted new row into LocationLevels ' + @LocationLevel

					END 
				ELSE PRINT 'Level Already Exists. No need to Insert'


					END 

		-- Put this outside the IF, because if it does not fire it won't have a value and fail on the insert. Wrapped with isnull for this.
			DECLARE @LevelID INT = ISNULL((SELECT TOP 1 LevelID 
										FROM dbo.tbl_DBT_LocationLevels 
												WHERE @ProjectId = ProjectID AND LevelDescription = @LocationLevel),0)

--------- Profile Insert

--- If there is a Level, insert it and get the ID
			IF @Profile IS NOT NULL AND @Profile <> '' AND @Profile <> '0'
				BEGIN 

				IF (SELECT TOP 1 ProfileID 
										FROM dbo.tbl_DBT_LocationProfiles
												WHERE @ProjectId = ProjectID AND Profile = @Profile) IS NULL 


					BEGIN 

					--This Variable, and the levelID insert is only needed on locals that dont increment key fields
					-- DECLARE @NextLeveId int = (select max(levelId) + 1 from dbo.tbl_DBT_LocationLevels)


					INSERT INTO dbo.tbl_DBT_LocationProfiles
					(
					    OperationID,
					    ProjectID,
					    Profile,
					    DriveType,
					    Width,
					    Height,
					    HolesPerCut,
					    NominalCutLength,
					    OreTonnesPerM,
					    WasteTonnesPerM,
					    ProfileArea,
					    Comments,
					    DefaultGSS_ID,
					    ModifiedOn
					)
					VALUES
					(   @OperationID,        -- OperationID - int
					    @ProjectId,        -- ProjectID - int
					    @Profile,      -- Profile - nvarchar(100)
					    @Profile,      -- DriveType - nvarchar(100)
					    1,     -- Width - decimal(18, 1)
					    1,     -- Height - decimal(18, 1)
					    1,     -- HolesPerCut - decimal(18, 0)
					    1,     -- NominalCutLength - decimal(18, 1)
					    1,     -- OreTonnesPerM - decimal(18, 0)
					    1,     -- WasteTonnesPerM - decimal(18, 0)
					    1,     -- ProfileArea - decimal(18, 1)
					    'Inserted from Simbio upload Script',       -- Comments - text
					    0,        -- DefaultGSS_ID - int
					    GETDATE() -- ModifiedOn - datetime
					    )

					PRINT 'Inserted new row into LocationProfiles ' + @Profile

					END 
				ELSE PRINT 'Profile Already Exists. No need to Insert'


					END 

		-- Put this outside the IF, because if it does not fire it won't have a value and fail on the insert. Wrapped with isnull for this.
			DECLARE @ProfileID INT = ISNULL((SELECT TOP 1 ProfileID 
										FROM dbo.tbl_DBT_LocationProfiles 
												WHERE @ProjectId = ProjectID AND Profile = @Profile),0)

		-- The system doesn't like profileID of 0 insterted. Instead make a placeholder profile
			IF @ProfileID = 0
				BEGIN 

				--Check if the N/A profile exists already
				SET @ProfileID = ISNULL((SELECT TOP 1 ProfileID 
									FROM dbo.tbl_DBT_LocationProfiles 
										WHERE @ProjectId = ProjectID AND Profile = 'N/A'),0)

				END 

		-- If the N/A Profile exists, it would be set on @ProfileID. If not, we need to insert it
			IF @ProfileID = 0 
				BEGIN 

				DECLARE @NAProfileID TABLE (ID INT)

				INSERT INTO dbo.tbl_DBT_LocationProfiles
				(
				    OperationID,
				    ProjectID,
				    Profile,
				    DriveType,
				    Width,
				    Height,
				    HolesPerCut,
				    NominalCutLength,
				    OreTonnesPerM,
				    WasteTonnesPerM,
				    ProfileArea,
				    Comments,
				    DefaultGSS_ID,
				    ModifiedOn
				)
				OUTPUT Inserted.ProfileID
					INTO @NAProfileID
				VALUES
					(   @OperationID,        -- OperationID - int
					    @ProjectId,        -- ProjectID - int
					    'N/A',      -- Profile - nvarchar(100)
					    'N/A',      -- DriveType - nvarchar(100)
					    1,     -- Width - decimal(18, 1)
					    1,     -- Height - decimal(18, 1)
					    1,     -- HolesPerCut - decimal(18, 0)
					    1,     -- NominalCutLength - decimal(18, 1)
					    1,     -- OreTonnesPerM - decimal(18, 0)
					    1,     -- WasteTonnesPerM - decimal(18, 0)
					    1,     -- ProfileArea - decimal(18, 1)
					    'Inserted from Simbio upload Script as a placeholder',       -- Comments - text
					    0,        -- DefaultGSS_ID - int
					    GETDATE() -- ModifiedOn - datetime
					    )

					DECLARE @NAProfileIDINT INT = (SELECT TOP 1 ID FROM @NAProfileID)
					PRINT 'Inserted new row for N/A default into LocationProfiles with ID: ' + CAST(@NAProfileIDINT AS varchar) 

					SET @ProfileID = ISNULL((SELECT TOP 1 ProfileID 
									FROM dbo.tbl_DBT_LocationProfiles 
										WHERE @ProjectId = ProjectID AND Profile = 'N/A'),0)

				END 




-- Work out if we are using pits for some locations. If so, we will need a dummy pit for everything else. For iplod neatness 
-- This is a few nested IFs. IF there is no pit on the location, check if this project is using pit on other locations (first if)
-- If that they are using pit on other locations, we will need an 'Other Area' Pit assigned to this location. 
-- So check if 'Other Area' Pit already exists (second IF)
-- If it does not exist, insert 'Other Area' PitID
-- If it does exists, just SET @Pit = 'Other Area' so it gets dealt with later on with the correct ID. 


/***
Check if this insert is not using a pit
***/
    If (@Pit is NULL OR @Pit = '' OR @Pit = '0')
      begin 
 /***
Check if pit is used on the project at all 
***/     
      IF 
            (SELECT TOP 1 PitID from tbl_DBT_Location
                where projectid = @projectid and active = 1 
                and PitID is not NULL
               order by pitid DESC 
                )  > 0 
           BEGIN 

                       		IF (SELECT TOP 1 PitID 
            										FROM dbo.tbl_DBT_Pit 
            												WHERE @ProjectId = ProjectID AND PitDescription = 'Other Area') IS NULL 


            					BEGIN 

            					--This Variable, and the levelID insert is only needed on locals that dont increment key fields
            					-- DECLARE @NextLeveId int = (select max(levelId) + 1 from dbo.tbl_DBT_LocationLevels)


              					INSERT INTO dbo.tbl_DBT_Pit
              					(

              					    PitCode,
              					    PitDescription,
              					    Comments,
              					    Active,
              					    ProjectID,
              					    OperationID
              					)
              					VALUES
              					(  
              					    '0',   -- PitCode - varchar(50) -- This is normally P00123 code, dont need for simbio?
              					    'Other Area',   -- PitDescription - varchar(200)
              					    'Inserted by Simbio script on ' + CAST(GETDATE() AS VARCHAR(20)),   -- Comments - varchar(250)
              					    1, -- Active - bit
              					    @ProjectId,    -- ProjectID - int
              					    @OperationID     -- OperationID - int
              					    )

              					PRINT 'Inserted new row into Pit ' + 'Other Area'

              					END 
              				ELSE PRINT 'Other Area Pit Already Exists. No need to Insert. Setting @Pit = Other Area'

                      SET @Pit = 'Other Area'

            					END 

            ELSE PRINT 'Pit is not used on the project. No need for Other Area'

 /***
End Check if pit is used on the project at all 
***/  
            END 
      ELSE PRINT 'Pit not empty. No need to do the Other Area pit process'
/***
End Check if this insert is not using a pit
***/






--- If there is a Pit, insert it and get the ID
			IF @Pit IS NOT NULL AND @Pit <> '' AND @Pit <> '0'
				BEGIN 

				IF (SELECT TOP 1 PitID 
										FROM dbo.tbl_DBT_Pit 
												WHERE @ProjectId = ProjectID AND PitDescription = @Pit) IS NULL 


					BEGIN 

					--This Variable, and the levelID insert is only needed on locals that dont increment key fields
					-- DECLARE @NextLeveId int = (select max(levelId) + 1 from dbo.tbl_DBT_LocationLevels)


					INSERT INTO dbo.tbl_DBT_Pit
					(

					    PitCode,
					    PitDescription,
					    Comments,
					    Active,
					    ProjectID,
					    OperationID
					)
					VALUES
					(  
					    '0',   -- PitCode - varchar(50) -- This is normally P00123 code, dont need for simbio?
					    @Pit,   -- PitDescription - varchar(200)
					    'Inserted by Simbio script on ' + CAST(GETDATE() AS VARCHAR(20)),   -- Comments - varchar(250)
					    1, -- Active - bit
					    @ProjectId,    -- ProjectID - int
					    @OperationID     -- OperationID - int
					    )

					PRINT 'Inserted new row into Pit ' + @Pit

					END 
				ELSE PRINT 'Pit Already Exists. No need to Insert'


					END 

		-- Put this outside the IF, because if it does not fire it won't have a value and fail on the insert. Wrapped with isnull for this.
			DECLARE @PitID INT = ISNULL((SELECT TOP 1 PitID 
										FROM dbo.tbl_DBT_Pit
												WHERE @ProjectId = ProjectID AND PitDescription = @Pit),0)


--------



			DECLARE @SourceID INT = ISNULL((SELECT TOP 1 SourceID FROM dbo.tbl_DBT_LocationSources 
										WHERE ProjectID = @ProjectId AND OperationID = @OperationID AND SourceDescription = @SourceCode),0)

			-- If SourceID is 0 it means that the source does not exist in dbt_LocationSources for that project
			IF @SourceID = 0 
				BEGIN 

				-- Find out MasterID from another example
				DECLARE @SourceMasterID INT = ISNULL((SELECT TOP 1 SourceMasterID FROM dbo.tbl_DBT_LocationSources 
													WHERE SourceDescription = @SourceCode),0)

				-- Insert for new project
				INSERT INTO dbo.tbl_DBT_LocationSources
				(
				    SourceMasterID,
				    SourceDescription,
				    OperationID,
				    ProjectID,
				    BogFrom,
				    TruckFrom,
				    Active
				)
				VALUES
				(   @SourceMasterID,   -- SourceMasterID - int
				    @SourceCode, -- SourceDescription - nvarchar(100)
				    @OperationID,   -- OperationID - int
				    @ProjectId,   -- ProjectID - int
				    0,   -- BogFrom - int
				    0,   -- TruckFrom - int
				    1    -- Active - int
				    )

				-- Grab the new correct sourceID
				SET @SourceID = ISNULL((SELECT TOP 1 SourceID FROM dbo.tbl_DBT_LocationSources 
										WHERE ProjectID = @ProjectId AND OperationID = @OperationID AND SourceDescription = @SourceCode),0)



				END 



			DECLARE @DestID INT = (SELECT TOP 1 DestID FROM dbo.tbl_DBT_LocationDest 
										WHERE ProjectID = @ProjectId AND OperationID = @OperationID AND @DestCode = DestDescription)

			PRINT 'Fetched IDs for stuff (none should be null): LevelID - ' + CAST(@LevelID AS NVARCHAR(50)) + ' SourceID - ' + CAST(@SourceID  AS NVARCHAR(50)) 
																			+ 'DestID - ' + CAST(@DestID  AS NVARCHAR(50))

		INSERT INTO dbo.tbl_DBT_Location
		(
		    LocationCode,
		    LocationDescription,
		    Active,
		    OperationID,
		    ProjectID,
		    WorkAreaID,
		    PitID,
		    StripID,
		    BlockID,
		    SeamID,
		    RelLevID,
		    RampID,
		    BlastID,
		    LocationTypeID,
		    MaterialID,
		    StockpileID,
		    Development,
		    Production,
		    Cabolting,
		    LocnTruck,
		    BoggedFrom,
		    DestTruck,
		    DestBog,
		    ServiceCrew,
		    ProfileName,
		    AdditionalDist,
		    LocLevel,
		    SourceCode,
		    DestCode,
		    ContractID,
		    ContractDesc,
		    ProfileID,
		    SourceID,
		    LevelID,
		    DestID,
		    RaiseBore,
		    DiamondDrill,
		    DefaultAttributeID_1,
		    DefaultAttributeID_2,
		    DefaultAttributeID_3,
		    ModifiedOn,
		    BogTruckSource,
		    BackfillTo,
		    EscapeWay,
		    RefugeChamber,
		    ModifiedBy,
		    Surface,
		    Stockpile
		)
		VALUES
		(   @LocationCode,       -- LocationCode - nvarchar(50)
		    @LocationDesc,       -- LocationDescription - nvarchar(50)
		    cast(@LocationActive as int),      -- Active - bit
		    @OperationID,         -- OperationID - int
		    @ProjectId,         -- ProjectID - int
		    0,         -- WorkAreaID - int
		    @PitID,         -- PitID - int
		    0,         -- StripID - int
		    0,         -- BlockID - int
		    0,         -- SeamID - int
		    0,         -- RelLevID - int
		    0,         -- RampID - int
		    0,         -- BlastID - int
		    0,         -- LocationTypeID - int
		    0,         -- MaterialID - int
		    0,         -- StockpileID - int
		    cast(@development as int),         -- Development - int
		    cast(@Stope as int),         -- Production - int
		    1,         -- Cabolting - int
		    cast(@LoadingBay as int),         -- LocnTruck - int
		    cast(@BoggedFrom as int),         -- BoggedFrom - int
		    CAST(@DestTruck AS INT),         -- DestTruck - int
		    0,         -- DestBog - int
		    1,         -- ServiceCrew - int
		    '',        -- ProfileName - varchar(100)
		    0,         -- AdditionalDist - int
		    @LocationLevel,        -- LocLevel - varchar(50)
		    @SourceCode,        -- SourceCode - varchar(50)
		    @DestCode,        -- DestCode - varchar(50)
		    0,         -- ContractID - int
		    '',        -- ContractDesc - varchar(250)
		    @ProfileID,         -- ProfileID - int
		    @SourceID,         -- SourceID - int
		    @LevelID,         -- LevelID - int
		    @DestID,         -- DestID - int
		    0,         -- RaiseBore - int
		    0,         -- DiamondDrill - int
		    '',        -- DefaultAttributeID_1 - varchar(50)
		    '',        -- DefaultAttributeID_2 - varchar(50)
		    '',        -- DefaultAttributeID_3 - varchar(50)
		    GETDATE(), -- ModifiedOn - datetime
		    CAST(@BogTruckSource AS INT),         -- BogTruckSource - int
		    cast(@Backfill as int),         -- BackfillTo - int
		    0,         -- EscapeWay - int
		    0,         -- RefugeChamber - int
		    -1,         -- ModifiedBy - int
		    0,         -- Surface - int
		    0           -- Stockpile - int
		    )


			PRINT 'Inserted into dbt_Locations: ' + 'LocDesc - ' + @LocationDesc +'ProjID - ' + CAST(@ProjectId  AS NVARCHAR(50)) +'OpID - ' + CAST(@OperationID  AS NVARCHAR(50)) +'DestTruck - ' + CAST(@DestTruck  AS NVARCHAR(50))
							+'LocLevel - ' + CAST(@LocationLevel  AS NVARCHAR(50)) +'SourceCode - ' + CAST(@SourceCode  AS NVARCHAR(50)) +'DestCode - ' + CAST(@DestCode  AS NVARCHAR(50)) +'SourceID (should not be 0) - ' + CAST(@SourceID  AS NVARCHAR(50)) +'LevelID - ' + CAST(@LevelID AS NVARCHAR(50))	 
							+'DestID - ' + CAST(@DestID AS NVARCHAR(50)) +'BogTruckSource - ' + CAST(@BogTruckSource AS NVARCHAR(50))
							+ 'ProfileID - ' + CAST(@ProfileID AS NVARCHAR(10)) + ' PitID - ' + CAST(@PitID AS NVARCHAR(10))
			PRINT 'End Location Insert'
			PRINT '---****----'
	END 

ELSE IF @InsertType = 'Employees'
	BEGIN 

		PRINT '---***---'

		IF @Crew IS NOT NULL AND @Crew <> '0'
			BEGIN 
				DECLARE @CrewID INT = (SELECT TOP 1 CrewID FROM dbo.tbl_SYS_Crew WHERE CrewCode = @Crew)
			PRINT 'CrewID is ' + CAST(@CrewID AS VARCHAR(5))
			END 

		-- If data somehow got through with a zero or '0', make it null instead, from spreadsheet.
	    SET @FirstNames = CASE WHEN (@FirstNames = '0') THEN NULL ELSE @FirstNames END 
		SET @LastName = CASE WHEN (@LastName = '0') THEN NULL ELSE @LastName END 
		SET @CrewID = CASE WHEN (@CrewID = 0) THEN NULL ELSE @CrewID END
		SET @Supervisor = CASE WHEN (@Supervisor = '0') THEN NULL ELSE @Supervisor END
		SET @Fitter = CASE WHEN (@Fitter = '0') THEN NULL ELSE @Fitter END


   --Clean the name data from allcaps. 
    set @FirstNames = Left(UPPER(@FirstNames),1) + right(LOWER(@FirstNames),len(@FirstNames)-1)
    SET @LastName = Left(UPPER(@LastName),1) + right(LOWER(@LastName),len(@LastName)-1)
    DECLARE @EmployeeName varchar(250) = Left(UPPER(@FirstNames),1) + right(LOWER(@FirstNames),len(@FirstNames)-1) + ' ' 
                                           + Left(UPPER(@LastName),1) + right(LOWER(@LastName),len(@LastName)-1)



		DECLARE @SupervisorInt INT = CASE WHEN @Supervisor = 'Yes' THEN 1 ELSE 0 END

		DECLARE @FitterInt INT = CASE WHEN @Fitter = 'Yes' THEN 1 ELSE 0 END

		DECLARE @positionID INT = 0 

		SET @MinepointCode = CASE WHEN @MinepointCode IS NULL or @MinepointCode = '0' OR @MinepointCode = '' THEN '101' ELSE @MinepointCode END

		IF @Position IS NOT NULL OR @Position <> ''
			BEGIN

			SET @PositionID = (ISNULL((SELECT TOP 1 EmpClassID FROM dbo.tbl_SYS_EmpClass 
								WHERE @Position = EmpClassDescription),0) ) 

				-- If position is blank, check for fitter
				IF @FitterInt = 1 
					BEGIN
                    SET @PositionID = 202  -- This is what iPLOD v3 uses for fitters
					END 


			END 


		--This Variable, and the EmployeeID insert is only needed on locals that dont increment key fields
		-- Declare @NextEmployeeID int = (Select max(employeeid) + 1 from dbo.tbl_DBT_Employees)

		INSERT INTO dbo.tbl_DBT_Employees
		(	-- Employeeid,
		    EmployeeName,
		    FirstNames,
		    LastName,
		    PayrollSiteCode,
		    PositionID,
		    Position,
		    CrewCode,
		    Status,
		    Stage,
		    OperationID,
		    ProjectID,
		    ShiftCode,
		    DevDrilling,
		    BoggingTasks,
		    ProdDrilling,
		    Charging,
		    ServiceCrew,
		    Trucking,
		    Supervisor,
		    Fitter,
		    Cabolting,
		    Shotcrete,
		    DiamondDrill,
		    Raisebore,
		    FUse,
		    MinePointID,
		    MinePointCode,
		    Comments,
		    ImportProtect,
		    HideFromCheck,
		    ApprovedPointOfHire,
		    TravelMethod,
		    ModifiedOn,
		    SisterOpID_a,
		    SisterOpID_b,
		    iPlodMessage,
		    iPlodSettingsJson,
		    StartDate,
		    EndDate,
		    Company,
		    EmployeeType,
		    INXGuid,
		    EditedBy,
		    DefaultWorkHrs,
		    Tour,
		    EmailPersonal,
		    PhonePersonal,
		    NOK_Name,
		    NOK_Phone
		)
		VALUES
		( -- @NextEmployeeID,
		   @EmployeeName,       -- EmployeeName - nvarchar(50)
		   @FirstNames,        -- FirstNames - varchar(100)
		    @LastName,        -- LastName - varchar(50)
		    NULL,       -- PayrollSiteCode - nvarchar(50)
		    @PositionID,         -- PositionID - int
		    @Position,       -- Position - nvarchar(50)
		    @CrewID,         -- CrewCode - int
		    1,      -- Status - bit
		    1,         -- Stage - int
		    @OperationID,         -- OperationID - int
		    @ProjectId,         -- ProjectID - int
		    NULL,        -- ShiftCode - varchar(50)
		    0,         -- DevDrilling - int
		    0,         -- BoggingTasks - int
		    0,         -- ProdDrilling - int
		    0,         -- Charging - int
		    0,         -- ServiceCrew - int
		    0,         -- Trucking - int
		    @SupervisorInt,         -- Supervisor - int
		    @FitterInt,         -- Fitter - int
		    0,         -- Cabolting - int
		    0,         -- Shotcrete - int
		    0,         -- DiamondDrill - int
		    0,         -- Raisebore - int
		    0,         -- FUse - int
		    0,         -- MinePointID - int
		    @MinepointCode,        -- MinePointCode - varchar(250)
		    'Inserted from Simbio Upload Script',       -- Comments - nvarchar(1000)
		    1,         -- ImportProtect - int
		    0,         -- HideFromCheck - int
		    NULL,        -- ApprovedPointOfHire - varchar(35)
		    NULL,        -- TravelMethod - varchar(35)
		    GETDATE(), -- ModifiedOn - datetime
		    @OperationID,         -- SisterOpID_a - int
		    0,         -- SisterOpID_b - int
		    NULL,       -- iPlodMessage - nvarchar(max)
		    NULL,       -- iPlodSettingsJson - nvarchar(max)
		    GETDATE(), -- StartDate - date
		    GETDATE(), -- EndDate - date
		    NULL,        -- Company - varchar(50)
		    NULL,        -- EmployeeType - varchar(50)
		    NULL,        -- INXGuid - varchar(50)
		    -1,         -- EditedBy - int
		    NULL,      -- DefaultWorkHrs - decimal(5, 2)
		    NULL,        -- Tour - varchar(20)
		    NULL,        -- EmailPersonal - varchar(50)
		    NULL,        -- PhonePersonal - varchar(20)
		    NULL,        -- NOK_Name - varchar(50)
		    NULL         -- NOK_Phone - varchar(20)
		    )


			PRINT 'Inserted in Employees: ' + 'FirstName - ' + @FirstNames + ' LastName - ' + @LastName 
				+ ' EmpID (Not Hooked in or inserted!!!) - ' + CAST(@EmployeeID AS VARCHAR(5)) + ' Crew - ' + @Crew+ ' Position (Not Hooked in or Inserted!!!) - ' + @Position
				+ ' SuperVisor - ' +CAST(@SupervisorInt AS VARCHAR(5)) + ' Fitter - ' + CAST(@Fitterint AS VARCHAR(5))
				+ ' PositionID - ' + CAST(@positionID AS VARCHAR) + ' Position - ' + @Position
			PRINT '----***----'




	END 
ELSE IF @InsertType = 'Equipment'
	BEGIN 
		PRINT '---***---'

	--	@EquipmentCode NVARCHAR(10) = NULL,
	--	@EquipTypeCode NVARCHAR(10) = NULL,
		--@FillFactor DECIMAL(5,2) = NULL
		--SELECT * FROM dbo.tbl_SYS_Equipment
		--SELECT * FROM dbo.tbl_SYS_ResEquipTypes

		DECLARE @EquipTypeID INT = (SELECT TOP 1 EquipTypeID FROM dbo.tbl_SYS_ResEquipTypes
										WHERE EquipTypeCode = @EquipTypeCode
												AND active = 1)
		DECLARE @EquipTypeDesc VARCHAR(50) = (SELECT TOP 1 EquipTypeDescription FROM dbo.tbl_SYS_ResEquipTypes
										WHERE EquipTypeCode = @EquipTypeCode
												AND active = 1)
		--Not used for anything in app, just to meet foriegn key constraints
		DECLARE @EquipClassHeirID INT = (SELECT TOP 1 EquipClassHeirID FROM dbo.tbl_SYS_EquipClassHierachy)

		--SYS Equip ID that gets inserted
		DECLARE @InsertedID TABLE (ID INT)

		--If it is a loader or truck or IT with no fill factor, use a placeholder one. Possibly needed for Iplod
		SET @FillFactor = CASE WHEN @EquipTypeID IN (57,107,127) AND (@FillFactor IS NULL OR @FillFactor = 0) 
								THEN 5
									ELSE @FillFactor 
							END 

			--declare @NextSysEquipID int = (select max(equipmentcodeId) +1 from dbo.tbl_SYS_Equipment)

		INSERT INTO dbo.tbl_SYS_Equipment
		(--	EquipmentCodeID,
		    EquipmentCode,
		    EquipmentDescription,
		    EquipmentComments,
		    Active,
		    EquipCodeMask,
		    RelEquipFlag,
		    EquipTypeID,
		    EquipClassHeirID,
		    DisplayOrder,
		    DefaultActivityID,
		    DefaultReasonID,
		    SiteCode,
		    DummyEquipment,
		    MinePointID,
		    MinePointCode,
		    Comments,
		    Stage,
		    ModifiedOn
		)
		OUTPUT inserted.EquipmentCodeID
			INTO @InsertedID
		VALUES
		(   --@NextSysEquipID,
			@EquipmentCode,      -- EquipmentCode - nvarchar(255)
		    @EquipmentDescription,      -- EquipmentDescription - nvarchar(255)
		    @EquipTypeCode + ' for projID ' + CAST(@ProjectId AS VARCHAR(6)),      -- EquipmentComments - nvarchar(255)
		    1,     -- Active - bit
		    'Digital Terrain',      -- EquipCodeMask - nvarchar(255)
		    0,     -- RelEquipFlag - bit
		    @EquipTypeID,        -- EquipTypeID - int
		    @EquipClassHeirID,        -- EquipClassHeirID - int
		    N'9999',      -- DisplayOrder - nvarchar(4)
		    1,        -- DefaultActivityID - int
		    NULL,        -- DefaultReasonID - int
		    @SiteCode,      -- SiteCode - nvarchar(50)
		    0,     -- DummyEquipment - bit
		    0,        -- MinePointID - int
		    NULL,       -- MinePointCode - varchar(250)
		    'Auto Inserted from Simbo script on ' + CAST(GETDATE() AS VARCHAR(20)),       -- Comments - text
		    1,        -- Stage - int
		    GETDATE() -- ModifiedOn - datetime
		    )

			--Grab the freshly inserted sys_equip ID for equipProjLink
			DECLARE @SysEquipID INT= (SELECT TOP 1 ID FROM @InsertedID)

			--(SELECT TOP 1 EquipmentCodeID FROM dbo.tbl_SYS_Equipment
			--WHERE SiteCode = @SiteCode 
			--		AND EquipmentCode = @EquipmentCode 
			--		AND EquipTypeID = @EquipTypeID 
			--		AND Active = 1)

			--declare @NextEquipProjID int = (select max(EquipProjectLinkId) + 1 from dbo.tbl_SYS_EquipProjectLink)

			INSERT INTO dbo.tbl_SYS_EquipProjectLink
			(--	equipProjectLinkID,
			    EquipmentID,
			    ProjectID,
			    OperationID,
			    EffectiveDate,
			    Comments,
			    Active,
			    DevDrilling,
			    DevGroundSupport,
			    ChargeUp,
			    BoggingTasks,
			    Trucking,
			    ProdDrilling,
			    ServiceCrew,
			    Cabolting,
			    Shotcrete,
			    TimeUsage,
			    DiamondDrill,
			    Raisebore,
			    FUse,
			    PayloadOre,
			    PayloadWaste,
			    Tare,
			    LoadFactor,
			    EngineHoursOld,
			    EngineHoursNew,
			    EngineHoursDate,
			    Perc1Old,
			    Perc1New,
			    Perc1Date,
			    Perc2Old,
			    Perc2New,
			    Perc2Date,
			    Powerpak1Old,
			    Powerpak1New,
			    Powerpak1Date,
			    Powerpak2Old,
			    Powerpak2New,
			    Powerpak2Date,
			    CompressorOld,
			    CompressorNew,
			    CompressorDate,
			    StartDate,
			    EndDate,
			    ModifiedOn,
			    BktsPerTrkAdjustmentFactor
			)
			VALUES
			(  -- @NextEquipProjID,
				@SysEquipID,         -- EquipmentID - int
			    @ProjectId,         -- ProjectID - int
			    @OperationID,         -- OperationID - int
			    GETDATE(), -- EffectiveDate - datetime
			    N'Auto inserted from Simbio upload on ' + CAST(GETDATE() AS VARCHAR(20)),       -- Comments - nvarchar(255)
			    1,      -- Active - bit
			    0,         -- DevDrilling - int
			    0,         -- DevGroundSupport - int
			    0,         -- ChargeUp - int
			    0,         -- BoggingTasks - int
			    0,         -- Trucking - int
			    0,         -- ProdDrilling - int
			    0,         -- ServiceCrew - int
			    0,         -- Cabolting - int
			    0,         -- Shotcrete - int
			    1,         -- TimeUsage - int
			    0,         -- DiamondDrill - int
			    0,         -- Raisebore - int
			    0,         -- FUse - int
			    NULL,      -- PayloadOre - decimal(18, 0)
			    NULL,      -- PayloadWaste - decimal(18, 0)
			    NULL,      -- Tare - decimal(18, 0)
			    @FillFactor,      -- LoadFactor - decimal(18, 2)
			    NULL,      -- EngineHoursOld - decimal(18, 2)
			    NULL,      -- EngineHoursNew - decimal(18, 2)
			    GETDATE(), -- EngineHoursDate - date
			    NULL,      -- Perc1Old - decimal(18, 2)
			    NULL,      -- Perc1New - decimal(18, 2)
			    GETDATE(), -- Perc1Date - date
			    NULL,      -- Perc2Old - decimal(18, 2)
			    NULL,      -- Perc2New - decimal(18, 2)
			    GETDATE(), -- Perc2Date - date
			    NULL,      -- Powerpak1Old - decimal(18, 2)
			    NULL,      -- Powerpak1New - decimal(18, 2)
			    GETDATE(), -- Powerpak1Date - date
			    NULL,      -- Powerpak2Old - decimal(18, 2)
			    NULL,      -- Powerpak2New - decimal(18, 2)
			    GETDATE(), -- Powerpak2Date - date
			    NULL,      -- CompressorOld - decimal(18, 2)
			    NULL,      -- CompressorNew - decimal(18, 2)
			    GETDATE(), -- CompressorDate - date
			    GETDATE(), -- StartDate - date
			    GETDATE(), -- EndDate - date
			    GETDATE(), -- ModifiedOn - datetime
			    NULL       -- BktsPerTrkAdjustmentFactor - decimal(18, 2)
			    )



		PRINT 'Inserted in sys equip ' + @EquipmentCode + ' with sysID ' + CAST(@SysEquipID AS VARCHAR(10))
				+ '. Inserted into EquipProjLink as well with fill factor ' + CAST(@FillFactor AS VARCHAR(10))

---***---
-- Also need to insert Stats and No Equip if it does not exist already
-- Stats is 78, 1238
-- No Equip is 129, 2490
---***---

		--1 if exists in SYS
		DECLARE @StatsExists INT = CASE WHEN (SELECT TOP 1 EquipmentCodeID FROM dbo.tbl_SYS_Equipment
									WHERE EquipmentCodeID = 1238) IS NOT NULL THEN 1 ELSE 0 END 

		DECLARE @NoEquipExists INT = CASE WHEN (SELECT TOP 1 EquipmentCodeID FROM dbo.tbl_SYS_Equipment
									WHERE EquipmentCodeID = 2490) IS NOT NULL THEN 1 ELSE 0 END 

		--1 if exists in EquipProjLink for @ProjectID
		DECLARE @StatsExistsProj INT = CASE WHEN (SELECT TOP 1 EquipmentID FROM dbo.tbl_SYS_EquipProjectLink
									WHERE EquipmentID = 1238 AND ProjectID = @ProjectId) IS NOT NULL 
									THEN 1 ELSE 0 END 

		DECLARE @NoEquipExistsProj INT = CASE WHEN (SELECT TOP 1 EquipmentID FROM dbo.tbl_SYS_EquipProjectLink
									WHERE EquipmentID = 2490 AND ProjectID = @ProjectId) IS NOT NULL 
									THEN 1 ELSE 0 END 

	IF @StatsExists = 0
		BEGIN 
		-- We rely on this ID for other stuff, so keep it the same
		SET IDENTITY_INSERT dbo.tbl_SYS_Equipment ON 

			INSERT INTO dbo.tbl_SYS_Equipment
			(	EquipmentCodeID,EquipmentCode,EquipmentDescription,EquipmentComments,Active,EquipCodeMask,
				RelEquipFlag,EquipTypeID,EquipClassHeirID,DisplayOrder,DefaultActivityID,DefaultReasonID,SiteCode,
				DummyEquipment,MinePointID,MinePointCode,Comments,Stage,ModifiedOn
			)
			VALUES( 1238, N'STATS', NULL, N'ID is important', 0, N'STATS', 0, 78, NULL, N'9999', 1, @SiteCode,
					NULL, 0, NULL, 'Auto inserted from Simbio Script because it did not exist', NULL, 1, GETDATE() )

		SET IDENTITY_INSERT dbo.tbl_SYS_Equipment OFF

		PRINT 'Inserted Stats into SYS_Equip with identity insert on, and identity 1238'
		END 

	IF @NoEquipExists = 0
		BEGIN 
		-- We rely on this ID for other stuff, so keep it the same
		SET IDENTITY_INSERT dbo.tbl_SYS_Equipment ON 

			INSERT INTO dbo.tbl_SYS_Equipment
			(	EquipmentCodeID,EquipmentCode,EquipmentDescription,EquipmentComments,Active,EquipCodeMask,
				RelEquipFlag,EquipTypeID,EquipClassHeirID,DisplayOrder,DefaultActivityID,DefaultReasonID,SiteCode,
				DummyEquipment,MinePointID,MinePointCode,Comments,Stage,ModifiedOn
			)
			VALUES( 2490, N'NO_EQUIP', N'Nipper/No Vehicle', N'ID is important', 1, N'Misc', 0, 129, NULL, N'9999', 1, 
					NULL, N'SYD', 0, NULL, NULL, 'Auto inserted from Simbio Script because it did not exist', 1, GETDATE() )


		SET IDENTITY_INSERT dbo.tbl_SYS_Equipment OFF

		PRINT 'Inserted No Equip into SYS_Equip with identity insert on, and identity 1238'
		END 

	IF @StatsExistsProj = 0
		BEGIN 

		--Set @NextEquipProjID = (select max(EquipProjectLinkId) + 1 from dbo.tbl_SYS_EquipProjectLink)

		INSERT INTO dbo.tbl_SYS_EquipProjectLink
			(	-- EquipProjectLinkID,
			    EquipmentID,
			    ProjectID,
			    OperationID,
			    EffectiveDate,
			    Comments,
			    Active,
			    DevDrilling,
			    DevGroundSupport,
			    ChargeUp,
			    BoggingTasks,
			    Trucking,
			    ProdDrilling,
			    ServiceCrew,
			    Cabolting,
			    Shotcrete,
			    TimeUsage,
			    DiamondDrill,
			    Raisebore,
			    FUse,
			    PayloadOre,
			    PayloadWaste,
			    Tare,
			    LoadFactor,
			    EngineHoursOld,
			    EngineHoursNew,
			    EngineHoursDate,
			    Perc1Old,
			    Perc1New,
			    Perc1Date,
			    Perc2Old,
			    Perc2New,
			    Perc2Date,
			    Powerpak1Old,
			    Powerpak1New,
			    Powerpak1Date,
			    Powerpak2Old,
			    Powerpak2New,
			    Powerpak2Date,
			    CompressorOld,
			    CompressorNew,
			    CompressorDate,
			    StartDate,
			    EndDate,
			    ModifiedOn,
			    BktsPerTrkAdjustmentFactor
			)
			VALUES
			(  -- @NextEquipProjID,
				1238,         -- EquipmentID - int
			    @ProjectId,         -- ProjectID - int
			    @OperationID,         -- OperationID - int
			    GETDATE(), -- EffectiveDate - datetime
			    N'Auto inserted from Simbio upload on ' + CAST(GETDATE() AS VARCHAR(20)),       -- Comments - nvarchar(255)
			    1,      -- Active - bit
			    0,         -- DevDrilling - int
			    0,         -- DevGroundSupport - int
			    0,         -- ChargeUp - int
			    0,         -- BoggingTasks - int
			    0,         -- Trucking - int
			    0,         -- ProdDrilling - int
			    0,         -- ServiceCrew - int
			    0,         -- Cabolting - int
			    0,         -- Shotcrete - int
			    1,         -- TimeUsage - int
			    0,         -- DiamondDrill - int
			    0,         -- Raisebore - int
			    0,         -- FUse - int
			    NULL,      -- PayloadOre - decimal(18, 0)
			    NULL,      -- PayloadWaste - decimal(18, 0)
			    NULL,      -- Tare - decimal(18, 0)
			    0,      -- LoadFactor - decimal(18, 2)
			    NULL,      -- EngineHoursOld - decimal(18, 2)
			    NULL,      -- EngineHoursNew - decimal(18, 2)
			    GETDATE(), -- EngineHoursDate - date
			    NULL,      -- Perc1Old - decimal(18, 2)
			    NULL,      -- Perc1New - decimal(18, 2)
			    GETDATE(), -- Perc1Date - date
			    NULL,      -- Perc2Old - decimal(18, 2)
			    NULL,      -- Perc2New - decimal(18, 2)
			    GETDATE(), -- Perc2Date - date
			    NULL,      -- Powerpak1Old - decimal(18, 2)
			    NULL,      -- Powerpak1New - decimal(18, 2)
			    GETDATE(), -- Powerpak1Date - date
			    NULL,      -- Powerpak2Old - decimal(18, 2)
			    NULL,      -- Powerpak2New - decimal(18, 2)
			    GETDATE(), -- Powerpak2Date - date
			    NULL,      -- CompressorOld - decimal(18, 2)
			    NULL,      -- CompressorNew - decimal(18, 2)
			    GETDATE(), -- CompressorDate - date
			    GETDATE(), -- StartDate - date
			    GETDATE(), -- EndDate - date
			    GETDATE(), -- ModifiedOn - datetime
			    NULL       -- BktsPerTrkAdjustmentFactor - decimal(18, 2)
			    )
		PRINT 'Inserted Stats into EquipProjLink'

		END 

	IF @NoEquipExistsProj = 0
		BEGIN 

		--Set @NextEquipProjID = (select max(EquipProjectLinkId) + 1 from dbo.tbl_SYS_EquipProjectLink)

		INSERT INTO dbo.tbl_SYS_EquipProjectLink
			(	--EquipProjectLinkId,
			    EquipmentID,
			    ProjectID,
			    OperationID,
			    EffectiveDate,
			    Comments,
			    Active,
			    DevDrilling,
			    DevGroundSupport,
			    ChargeUp,
			    BoggingTasks,
			    Trucking,
			    ProdDrilling,
			    ServiceCrew,
			    Cabolting,
			    Shotcrete,
			    TimeUsage,
			    DiamondDrill,
			    Raisebore,
			    FUse,
			    PayloadOre,
			    PayloadWaste,
			    Tare,
			    LoadFactor,
			    EngineHoursOld,
			    EngineHoursNew,
			    EngineHoursDate,
			    Perc1Old,
			    Perc1New,
			    Perc1Date,
			    Perc2Old,
			    Perc2New,
			    Perc2Date,
			    Powerpak1Old,
			    Powerpak1New,
			    Powerpak1Date,
			    Powerpak2Old,
			    Powerpak2New,
			    Powerpak2Date,
			    CompressorOld,
			    CompressorNew,
			    CompressorDate,
			    StartDate,
			    EndDate,
			    ModifiedOn,
			    BktsPerTrkAdjustmentFactor
			)
			VALUES
			(   --@NextEquipProjID,
				2490,         -- EquipmentID - int
			    @ProjectId,         -- ProjectID - int
			    @OperationID,         -- OperationID - int
			    GETDATE(), -- EffectiveDate - datetime
			    N'Auto inserted from Simbio upload on ' + CAST(GETDATE() AS VARCHAR(20)),       -- Comments - nvarchar(255)
			    1,      -- Active - bit
			    0,         -- DevDrilling - int
			    0,         -- DevGroundSupport - int
			    0,         -- ChargeUp - int
			    0,         -- BoggingTasks - int
			    0,         -- Trucking - int
			    0,         -- ProdDrilling - int
			    0,         -- ServiceCrew - int
			    0,         -- Cabolting - int
			    0,         -- Shotcrete - int
			    1,         -- TimeUsage - int
			    0,         -- DiamondDrill - int
			    0,         -- Raisebore - int
			    0,         -- FUse - int
			    NULL,      -- PayloadOre - decimal(18, 0)
			    NULL,      -- PayloadWaste - decimal(18, 0)
			    NULL,      -- Tare - decimal(18, 0)
			    0,      -- LoadFactor - decimal(18, 2)
			    NULL,      -- EngineHoursOld - decimal(18, 2)
			    NULL,      -- EngineHoursNew - decimal(18, 2)
			    GETDATE(), -- EngineHoursDate - date
			    NULL,      -- Perc1Old - decimal(18, 2)
			    NULL,      -- Perc1New - decimal(18, 2)
			    GETDATE(), -- Perc1Date - date
			    NULL,      -- Perc2Old - decimal(18, 2)
			    NULL,      -- Perc2New - decimal(18, 2)
			    GETDATE(), -- Perc2Date - date
			    NULL,      -- Powerpak1Old - decimal(18, 2)
			    NULL,      -- Powerpak1New - decimal(18, 2)
			    GETDATE(), -- Powerpak1Date - date
			    NULL,      -- Powerpak2Old - decimal(18, 2)
			    NULL,      -- Powerpak2New - decimal(18, 2)
			    GETDATE(), -- Powerpak2Date - date
			    NULL,      -- CompressorOld - decimal(18, 2)
			    NULL,      -- CompressorNew - decimal(18, 2)
			    GETDATE(), -- CompressorDate - date
			    GETDATE(), -- StartDate - date
			    GETDATE(), -- EndDate - date
			    GETDATE(), -- ModifiedOn - datetime
			    NULL       -- BktsPerTrkAdjustmentFactor - decimal(18, 2)
			    )
			PRINT 'Inserted No Equip into EquipProjLink'

		END 

		PRINT '---***---'

	END

ELSE IF @InsertType = 'Users'
	BEGIN 
		PRINT '---***---'
		PRINT 'Begin User Insert'

	DECLARE @UserGroupID INT = (SELECT TOP 1 UserGroupID FROM [dbo].[FN_GetWebbarUserGroups] (1) -- This is executed with @UserID which actually does nothing
									WHERE UserGroupDesc = @UserGroup)

	DECLARE @ProjectName VARCHAR(47) = (SELECT TOP 1 ProjectName FROM dbo.tbl_DBT_Project
											WHERE ProjectID = @ProjectId)

	DECLARE @RandomString VARCHAR(30) = CAST(LEFT(NEWID(),3) AS VARCHAR(3)) -- Generates random 3 digit string

	DECLARE @Password VARCHAR(50)

	IF @SimplePassword = 1
	BEGIN 

		SET @Password  = @LastName + @RandomString

	END 

	ELSE IF @SimplePassword = 0
		BEGIN 

		DECLARE @RandPasswordInt INT = (SELECT FLOOR(RAND()*(3-1+1))+1) -- This generates a random int between 1 and 3. Formula is SELECT FLOOR(RAND()*(b-a+1))+a;

		SET @Password = CASE WHEN @RandPasswordInt = 1 THEN @FirstNames
								WHEN @RandPasswordInt = 2 THEN @LastName
								WHEN @RandPasswordInt = 3 THEN @ProjectName
								ELSE @ProjectName
							END 
						+ @RandomString

	END 

	DECLARE @UserName VARCHAR(50)= LEFT(@FirstNames,1) + @LastName


	--UserID that is inserted
		DECLARE @UserInsertedID TABLE (ID INT)


	INSERT INTO dbo.tbl_SYS_User
	(
	    Username,
	    Password,
	    FirstName,
	    LastName,
	    Comments,
	    Active,
	    IsAdmin,
	    UserGroup,
	    DateAdded,
	    OperationID,
	    ProjectID,
	    BookmarkCode,
	    MinepointCode
	)
	OUTPUT inserted.UserID
			INTO @UserInsertedID
	VALUES
	(   @UserName,        -- Username - varchar(30)
	    @Password,       -- Password - nvarchar(50)
	    @FirstNames,       -- FirstName - nvarchar(50)
	    @LastName,       -- LastName - nvarchar(50)
	     'Inseted from Simbio Upload',       -- Comments - nvarchar(50)
	    1,      -- Active - bit
	    0,      -- IsAdmin - bit
	    @UserGroupID,         -- UserGroup - int
	    GETDATE(), -- DateAdded - datetime
	    @OperationID,         -- OperationID - int
	    @ProjectId,         -- ProjectID - int
	    NULL,        -- BookmarkCode - varchar(50)
	    '00000'         -- MinepointCode - varchar(25)
	    )

	DECLARE @UserID INT = (SELECT TOP 1 ID FROM @UserInsertedID)

	INSERT INTO dbo.tbl_SYS_UserProjectLink
	(
	    UserID,
	    ProjectID,
	    OperationID
	)
	VALUES
	(   @UserID, -- UserID - int
	    @ProjectId, -- ProjectID - int
	    @OperationID  -- OperationID - int
	    )


	PRINT 'Inserted User ' + @UserName + ' with password ' + @Password + ' with UserGroupID ' + CAST(@UserGroupID AS VARCHAR) + '. Also inserted in UserProjectLink'
	PRINT '---End User Insert---'


	END 


ELSE IF @InsertType = 'Materials'
	BEGIN 

		PRINT '---***---'
    PRINT 'Begin Materials Insert'

  declare @SysMaterialID INT = (select top 1 MaterialID from tbl_SYS_Material
                                WHERE MaterialDescription = @SYSMATERIALDesc)

    PRINT 'SysMaterialID is ' + cast(@SysMaterialID as varchar(20))

-- Just check material does not already exist
   Declare @DBtMaterialExists varchar(50) = (select top 1 MaterialDescOp FROM tbl_DBT_Materials
                                    where projectid = @projectid AND MaterialDescOp = @MaterialDescOp)
    PRINT 'Check if DBT Material Already exists returns (should be null or blank after this): ' + @DBtMaterialExists

-- Setup configs for ticks
    Declare @OreWaste INT = case WHEN @SysMaterialID in (11,12,13) then 1 else 0 END  
    Declare @Roadbase INT = case WHEN @SysMaterialID in (18) then 1 else 0 END
    DECLARE @ShotcreteEtc INT =  case WHEN @SysMaterialID in (21,22,25) then 1 else 0 END
    Declare @Fill INT = case WHEN @SysMaterialID in (23,26) then 1 else 0 END

-- Double check SG
    set @EffectiveDensity = case when @EffectiveDensity = 0 then 1 else @EffectiveDensity END 

-- cancel the process if it didnt get a sys ID or if Material already exists
  if @SysMaterialID >0 AND @DBtMaterialExists is NULL 
    BEGIN 

      insert INTO tbl_DBT_Materials (OperationID, ProjectID, MaterialID, MaterialDesc, SG, MaterialDescOp, 
      DevDrilling, DevGroundSupport, ChargeUp, BoggingTasks, Trucking, ProdDrilling, ServiceCrew, 
      Cabolting, Shotcrete, TimeUsage, AGI, DiamondDrill, Raisebore, FUse, 
      Active, ModifiedOn, TextColour)
      VALUES (@OperationID, @ProjectId, @SysMaterialID, @SYSMATERIALDesc, @EffectiveDensity, @MaterialDescOp, 
      @OreWaste, 
      @OreWaste, 
      @OreWaste, 
      IIF(@OreWaste = 1 or @Roadbase = 1 or @Fill = 1,1,0), 
      IIF(@OreWaste = 1 or @Roadbase = 1 or @Fill = 1,1,0), 
      @OreWaste, 
      @OreWaste, 
      @OreWaste, 
      @ShotcreteEtc, 
      1, 
      @ShotcreteEtc, 
      @OreWaste, 
      @OreWaste, 
      0, 
      1, 
      getdate(), 
      Null);

    PRINT 'Inserted New DBT_Material'

    END 
    ELSE PRINT 'Did not insert new Material'


  PRINT 'End Material Insert'
  PRINT '---***---'


  END 

END;
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_QTypePageSelections]'
GO
ALTER PROCEDURE [dbo].[SP_ShiftSummary_QTypePageSelections] @UserID int, @ProjectID int
AS
BEGIN
--exec [dbo].[SP_ShiftSummary_QTypePageSelections] @UserID =0, @ProjectID =53
/*
	2018-12-10 TS ... prestart added equip filter to the 28day history + fault and hazard management
	2018-12-14 (CA) ... Added Cabolt Tension QA form for VIV
	2019-04-15 (TS) ... operator filter on prestart history
	2019-04-15 (TS) ... added full detial 14 day history for prestarts
	2021-03-16 (ts) ... feedback availabe on proj3
	2021-04-09 (CA) ... Added is Local check and set for feedback and serv sheet feedback
	CA 2021-04-12 ... Rename Messaging to feedback	
	ts 2021-06-11 ... restrict for MCR hackery, put to config
	ts 2021-06-16 ... varrious messing aroudn to suit MCR. put this into config!!
  rf 2022-06-07 ... added 24Hr_SafetySummary_All_last_3_Days at type
  rf 2022-09-12 ... added 24Hr_SafetySummary_All_One_month as type
*/
	SET NOCOUNT ON;

	DECLARE @isLOCAL INT  
SET @isLOCAL = (SELECT  dbo.FN_IsLocal(@ProjectID))

	SELECT 'Prestart' AS 'Type'
		,'Fault_Management' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'

	UNION ALL

	SELECT 'Prestart' AS 'Type'
		,'24Hr_Summary' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'

	UNION ALL

	SELECT 'Prestart' AS 'Type'
		,'24Hr_Detail' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'

	UNION ALL

	SELECT 'Prestart' AS 'Type'
		,'28DayHistory-ChooseEquip' AS 'Display'
		,'Yes' AS 'EquipFilter'
		,'Yes' AS 'OperatorFilter'

	UNION ALL
	SELECT 'Prestart' AS 'Type'
		,'14DayHistory-Detail' AS 'Display'
		,'Yes' AS 'EquipFilter'
		,'Yes' AS 'OperatorFilter'

	UNION ALL



	SELECT 'Safety' AS 'Type'
		,'Hazard_Management' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
			--where @ProjectID<>399
	--UNION ALL



	--SELECT 'Safety' AS 'Type'
	--	,'Hazard_Management_MCR' AS 'Display'
	--	,NULL AS 'EquipFilter'
	--	,NULL AS 'OperatorFilter'
	--		where @ProjectID=399
	UNION ALL

	SELECT 'Safety' AS 'Type'
		,'24Hr_SafetySummary' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
		where @ProjectID<>399
	UNION ALL

	SELECT 'Safety' AS 'Type'
		,'24Hr_SafetySummary_All_last_3_Days' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
		where @ProjectID IN ('399','3')
	UNION ALL

	SELECT 'Safety' AS 'Type'
		,'24Hr_SafetySummary_All_31_Days' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
		where @ProjectID IN ('399','3')
	UNION ALL

	SELECT 'Safety' AS 'Type'
		,'24Hr_SafetySummary_All' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
		where @ProjectID=399
union ALL


	SELECT 'Safety' AS 'Type'
		,'TWIDetail' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
		where @ProjectID<>399
	UNION ALL

	SELECT 'Safety' AS 'Type'
		,'IndividualOperator' AS 'Display'
		,NULL AS 'EquipFilter'
		,'Yes' AS 'OperatorFilter'
		where @ProjectID<>399
/*UNION ALL
SELECT 'Safety' AS 'Type'
	,'Individual_28Day_Summary' AS 'Display'
	,NULL AS 'EquipFilter'
	,'Yes' AS 'OperatorFilter'
	--needed at VIV, decided to put it in excel dump instead
	*/
UNION ALL
SELECT 'Client Forms' AS 'Type'
	,'Glencore_OGCAS' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'
	WHERE @ProjectID IN (133,291)
UNION ALL

SELECT 'Client Forms' AS 'Type'
	,'Glencore_OSAAS' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'
	WHERE @ProjectID IN (133,291)
UNION ALL

	SELECT 'Inventory' AS 'Type'
		,'PartsOnHand' AS 'Display'
		,NULL AS 'EquipFilter'
		,NULL AS 'OperatorFilter'
			where @ProjectID<>399
	UNION ALL

SELECT 'Photos' AS 'Type'
	,'Photos' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'

	UNION ALL

SELECT 'Feedback' AS 'Type'
	,'PLOD Feedback' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'
	WHERE @ISlocal = 0

	UNION ALL

SELECT 'Service Sheet' AS 'Type'
	,'Service Sheet Feedback' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'
	WHERE @IsLocal = 0
		and @ProjectID<>399

	UNION ALL

SELECT 'Inventory' AS 'Type'
	,'Batching' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'
		where @ProjectID<>399

UNION ALL

SELECT 'QA Forms' AS 'Type'
	,'Cabolt Install' AS 'Display'
	,NULL AS 'EquipFilter'
	,NULL AS 'OperatorFilter'
	WHERE @ProjectID = 131


	/* 
	--add another selection allocation here ...                         
	UNION ALL
	SELECT 'Type' as 'Type'
		,'Detail' as 'Display'
	*/







END
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_ShiftComments]'
GO
ALTER PROCEDURE [dbo].[SP_ShiftSummary_ShiftComments] @ProjectID int, @Type varchar(25) = 'Mining'  --shoudl be typealias from page url variable
, @Data varchar(10) = 'Data', @Date date = NULL, @Shift varchar(2) = NULL, @SupervisorID int = 0
, @Mode NVARCHAR(35) = '', @CrewId INT= 0, @UserId INT= 0
AS

/*
USE CASES: 
EXEC [dbo].[SP_ShiftSummary_ShiftComments] @ProjectID = 203, @Type = 'Mining', @Data = 'Header', @Date = '2019-02-06', @Shift = 'DS', @SupervisorID = 1303
EXEC [dbo].[SP_ShiftSummary_ShiftComments] @ProjectID = 259, @Type = 'Mining1', @Data = 'Header', @Date = '2019-02-06', @Shift = 'DS', @SupervisorID = 1303
       Change Log:
       20180808 (AD) fix extra comments line on shift summary page, ... add AND sc.DataDateID = 4 on where clause
	   20190131 (AD) add handler for new Type (mining1 / mining2 etc)
	   20190204 (TS) add stuff for 24hr
	   2019-02-06 TS ... added type split on pit id
	   2019-02-12 TS ... remove all comments for 24hs summary (need to hide the comments section entirely on config)
	   2019-04-15 FM ... #202 move copy comments from php into SP
	   2019-09-24 IP ... change STRING_AGG into xml for compatibility with webbar local db
	   2019-11-18 CA... Added Elec as an OR statement on RPTcomemnt stuff
	   2019-11-22 CA...Added @TypeAliasMethodMaint call
	   2020-02-03 CA...Added Raisebore
	   2020-02-27 FM ... added @Mode, @CrewId, @UserId params no changes on query (1568)
	   2020-04-17 ts ... update the typealias function 
	   2020-09-20 ts ... fix copy from iplod config, was returning > 1 record
*/



BEGIN
SET NOCOUNT ON;

DECLARE @TypeAliasMethod int
SET @TypeAliasMethod = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@type,1,'TypeAliasMethod','DataV'));
--PRINT @TypeAliasMethod

DECLARE @TypeAliasMethodMaint int
SET @TypeAliasMethodMaint = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@type,3,'TypeAliasMethod','DataV'));
--PRINT @TypeAliasMethodMaint

DECLARE @Is24HrSummary INT
SET @Is24HrSummary = CASE WHEN @Type like '%24' THEN 1 ELSE 0 END
DECLARE @CopyFromIplod INT;
SET @CopyFromIplod =  isnull((SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@type,1,'ShiftComments_CopyFromIplod',@Mode)),0);
								/* (SELECT ISNULL(cfg.ConfigValue,0) FROM [tbl_SYS_TypeConfigs] AS cfg JOIN dbo.tbl_SYS_Type AS t  ON t.TypeID = cfg.TypeID 
										WHERE cfg.UseCase='Shiftsummary' AND cfg.TypeAlias=@Type AND cfg.ConfigName='ShiftComments_CopyFromIplod');*/
DECLARE @OperationID INT;
SET @OperationID = (SELECT OperationID FROM dbo.tbl_DBT_Project WHERE ProjectID=@ProjectID);


       ---------------------------------- MINING ----------------------------------
       IF (@Type LIKE 'Mining%')
       BEGIN
              IF (@Data = 'Header')
              BEGIN
                     SELECT a.RptGroupID
                           ,b.rptGroup AS 'GroupingHeader'
                           ,RptDetailID
                           ,RptDetail
                ,'' AS 'NumberofEmptyRows'  --this was a feature to allow many comments for one Detail. however it is hard coded here to be only 1 line per box (BECAUSE OF NEW METHOD FOR SAVING COMMENTS).  works fine as you can press enter to new line within each box.
                     FROM dbo.tbl_DBT_ProjTopics AS a
                     INNER JOIN dbo.tbl_SYS_RptGroup AS b
                           ON a.rptGroupID = b.RptGroupID
                     WHERE ReportType = 4
                           AND RptGroupCode LIKE 'SHIFT%'
                           AND ProjectID = @ProjectID
 				AND (@TypeAliasMethod = 0   --no type alias used
					--OR @Is24HrSummary =1 --get all data for 24hr 
					OR [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) = a.PitID)  --or filter based on Pitid                          
                   AND @Is24HrSummary =0 --no comments shown if 24hr summary
				     GROUP BY a.RptGroupID
                           ,ProjTopicID
                           ,ProjectID
                           ,OperationID
                           ,RptDetailID
                           ,RptDetail
                           ,rptGroup
                     ORDER BY GroupingHeader
                           ,RptDetailID
              END
              ELSE IF (@Data = 'Data')
              BEGIN
					IF (@CopyFromIplod = 1) -- check the config if its allowed to copy from iplod
					BEGIN
						-- start process get comments from iplod
						DECLARE @RptGroupID INT,
								@RptDetailID INT,
								@PrevShiftCommentsText VARCHAR(MAX),
								@IplodComments VARCHAR(MAX),
								@ShiftCommentID INT = NULL;

						DECLARE ShiftComments_Cursor CURSOR FOR
						-- get iplod comments using FN_Iplod_GetShiftComments
						SELECT iplod.RptDetailID,
							   -- STRING_AGG(ISNULL(iplod.InputValue, ' '), CHAR(13)) AS Comments
							   STUFF((SELECT CHAR(13) + CAST(iplod2.InputValue AS VARCHAR(MAX)) FROM FN_Iplod_GetShiftComments (@ProjectID, @Date, @Shift) iplod2 WHERE iplod.RptDetailID = iplod2.RptDetailID FOR XML PATH (''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 1, '') AS Comments
						FROM FN_Iplod_GetShiftComments(@ProjectID, @Date, @Shift) iplod
						GROUP BY iplod.RptDetailID
						ORDER BY iplod.RptDetailID DESC;

						OPEN ShiftComments_Cursor;
						FETCH NEXT FROM ShiftComments_Cursor
						INTO @RptDetailID,
							 @IplodComments;

						WHILE @@FETCH_STATUS = 0
						BEGIN

							-- get existing shift comment data
							SELECT @ShiftCommentID = sc.ShiftCommentID,
									@PrevShiftCommentsText = sc.ShiftCommentsText,
									@RptGroupID = sc.RptGroupID
							FROM dbo.tbl_STO_ShiftComments AS sc
								LEFT JOIN dbo.tbl_DBT_ProjTopics AS pt
									ON sc.RptDetailID = pt.RptDetailID
										AND pt.ProjectID = @ProjectID
								INNER JOIN dbo.tbl_SYS_RptGroup AS rg
									ON sc.RptGroupID = rg.RptGroupID
							WHERE pt.ReportType = 4
									AND sc.DataDateID = 4
									AND
									(
										ISNULL(sc.Type, 'xx') = @Type
										OR
										(
											@Type = 'mining24'
											AND sc.Type LIKE 'mining%'
										)
									)
									AND sc.ProjectID = @ProjectID
									AND sc.ShiftCommentDate = @Date
									AND (sc.Shift = @Shift) -- OR @Is24HrSummary = 1)
									AND sc.SupervisorID = @SupervisorID
									AND rg.RptGroupCode LIKE 'SHIFT%'
									AND @Is24HrSummary = 0 --don't show comments here for 24hr summary
									AND sc.RptDetailID = @RptDetailID

							IF (@ShiftCommentID > 0) -- if previous comment is exist
							BEGIN
								IF (LEN(@PrevShiftCommentsText) = 0) -- if prev comment is empty
								BEGIN
									-- update blank comment with existing comment from iplod
									UPDATE dbo.tbl_STO_ShiftComments
									SET ShiftCommentsText = @IplodComments
									WHERE ShiftCommentID = @ShiftCommentID					  
								END;
							END;
							ELSE -- if comment not exist
							BEGIN
								-- insert new comments into table
								INSERT INTO dbo.tbl_STO_ShiftComments
								(
									EnteredBy,
									EnteredOn,
									ShiftCommentDate,
									Shift,
									EquipmentID,
									CrewID,
									OperationID,
									ProjectID,
									ProjTopicID,
									RptGroupID,
									RptDetailID,
									ShiftCommentsText,
									ShiftCommentsText2,
									Comments,
									Locked,
									DataDateID,
									SupervisorID,
									IsComplete,
									Type
								)
								SELECT EnteredBy = @UserID,
									   EnteredOn = GETDATE(),
									   ShiftCommentDate = @Date,
									   Shift = @Shift,
									   EquipmentID = 0,
									   CrewID = @CrewID,
									   OperationID = @OperationID,
									   ProjectID = @ProjectID,
									   ProjTopicID = 0,
									   RptGroupID = ISNULL(@RptGroupID, (SELECT RptGroupID FROM dbo.tbl_SYS_RptDetail WHERE RptDetailID = @RptDetailID AND RptGroupCode LIKE 'SHIFT%')),
									   RptDetailID = @RptDetailID,
									   ShiftCommentsText = @IplodComments, -- set comment from iplod
									   ShiftCommentsText2 = NULL,
									   Comments = NULL,
									   Locked = 0,
									   DataDateID = 4, -- for Shift Summary, DataStoreID is 4
									   SupervisorID = @SupervisorID,
									   IsComplete = 0,
									   Type = @Type;
							END;
							FETCH NEXT FROM ShiftComments_Cursor
							INTO @RptDetailID,
								 @IplodComments;					

						END;
						CLOSE ShiftComments_Cursor;
						DEALLOCATE ShiftComments_Cursor;

					-- end process get comments from iplod
					END








                     SELECT sc.ShiftCommentID
                           ,sc.EquipmentID AS 'EquipmentID'
                           ,sc.RptGroupID
                           ,'' AS 'GroupingHeader'
                           ,sc.RptDetailID
                           ,pt.RptDetail
                           ,sc.ShiftCommentsText
                           ,'' AS 'NumberofEmptyRows'
                           ,ROW_NUMBER() OVER (PARTITION BY sc.RptGroupID, sc.RptDetailID ORDER BY sc.ShiftCommentID, sc.RptGroupID, sc.RptDetailID) AS 'RowNum'
                     FROM dbo.tbl_STO_ShiftComments AS sc
                     LEFT JOIN dbo.tbl_DBT_ProjTopics AS pt
                           ON sc.RptDetailID = pt.RptDetailID
                                  AND pt.ProjectID = @ProjectID
                     INNER JOIN dbo.tbl_SYS_RptGroup AS rg
                           ON sc.RptGroupID = rg.RptGroupID
                     WHERE pt.ReportType = 4 
                           AND sc.DataDateID = 4
                           AND (ISNULL(sc.Type, 'xx') = @Type OR (@Type = 'mining24' AND sc.Type like 'mining%'))
                           AND sc.ProjectID = @ProjectID
                           AND ShiftCommentDate = @Date
                           AND (Shift = @Shift) -- OR @Is24HrSummary = 1)
                           AND SupervisorID = @SupervisorID
                           AND RptGroupCode LIKE 'SHIFT%'
						   AND @Is24HrSummary =0 --don't show comments here for 24hr summary
                     GROUP BY sc.EquipmentID
                           ,sc.RptGroupID
                           ,sc.RptDetailID
                           ,pt.RptDetail
                           ,sc.ShiftCommentsText
                           ,ShiftCommentID
                     ORDER BY GroupingHeader
                           ,ShiftCommentID
              END
       END
       -------------------------------- MAINTENANCE --------------------------------
       ELSE IF (@Type in ('Maint','Elec'))
       BEGIN
              IF (@Data = 'Header')
              BEGIN
                     SELECT a.RptGroupID
                           ,b.rptGroup AS 'GroupingHeader'
                           ,RptDetailID
                           ,RptDetail
                           ,'' AS 'NumberofEmptyRows'
                     FROM dbo.tbl_DBT_ProjTopics AS a
                     INNER JOIN dbo.tbl_SYS_RptGroup AS b
                           ON a.rptGroupID = b.RptGroupID
                     WHERE ReportType = 4
                           AND (RptGroupCode LIKE 'maint%' OR RptGroupCode LIKE 'Elec%')
                           AND ProjectID = @ProjectID
						   AND (@TypeAliasMethodMaint = 0   --no type alias used 
					OR [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethodMaint,@type) = a.PitID)  --or filter based on Pitid     
                     GROUP BY a.RptGroupID
                           ,ProjTopicID
                           ,ProjectID
                           ,OperationID
                           ,RptDetailID
                           ,RptDetail
                           ,rptGroup
                     ORDER BY GroupingHeader
                           ,RptDetailID
              END
              ELSE IF (@Data = 'Data')
              BEGIN
                     SELECT sc.ShiftCommentID
                           ,sc.EquipmentID AS 'EquipmentID'
                           ,sc.RptGroupID
                           ,'' AS 'GroupingHeader'
                           ,sc.RptDetailID
                           ,pt.RptDetail
                           ,sc.ShiftCommentsText
                           ,'' AS 'NumberofEmptyRows'
                           ,ROW_NUMBER() OVER (PARTITION BY sc.RptGroupID, sc.RptDetailID ORDER BY sc.ShiftCommentID, sc.RptGroupID, sc.RptDetailID) AS 'RowNum'
                     FROM dbo.tbl_STO_ShiftComments AS sc
                     LEFT JOIN dbo.tbl_DBT_ProjTopics AS pt
                           ON sc.RptDetailID = pt.RptDetailID
                     INNER JOIN dbo.tbl_SYS_RptGroup AS rg
                           ON sc.RptGroupID = rg.RptGroupID
                     WHERE pt.ReportType = 4
                           AND sc.DataDateID = 4
                           AND ISNULL(sc.Type, '') = @Type  --will need to change the page url (and type alias) to be maint instead of maintenance for this one
                           AND sc.ProjectID = @ProjectID
                           AND ShiftCommentDate = @Date
                           AND Shift = @Shift
                           AND SupervisorID = @SupervisorID
                           AND (RptGroupCode LIKE 'maint%' OR RptGroupCode LIKE 'Elec%')
                     GROUP BY sc.EquipmentID
                           ,sc.RptGroupID
                           ,sc.RptDetailID
                           ,pt.RptDetail
                           ,sc.ShiftCommentsText
                           ,ShiftCommentID
                     ORDER BY GroupingHeader
                           ,ShiftCommentID
              END
       END
---------------RAISEBORE------------------
ELSE IF (@Type LIKE '%Raisebore%')
       BEGIN
              IF (@Data = 'Header')
              BEGIN
                     SELECT a.RptGroupID
                           ,b.rptGroup AS 'GroupingHeader'
                           ,RptDetailID
                           ,RptDetail
                ,'' AS 'NumberofEmptyRows'  --this was a feature to allow many comments for one Detail. however it is hard coded here to be only 1 line per box (BECAUSE OF NEW METHOD FOR SAVING COMMENTS).  works fine as you can press enter to new line within each box.
                     FROM dbo.tbl_DBT_ProjTopics AS a
                     INNER JOIN dbo.tbl_SYS_RptGroup AS b
                           ON a.rptGroupID = b.RptGroupID
                     WHERE ReportType = 4
                           AND RptGroupCode LIKE 'SHIFT%'
                           AND ProjectID = @ProjectID
 				AND (@TypeAliasMethod = 0   --no type alias used
					--OR @Is24HrSummary =1 --get all data for 24hr 
					OR [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) = a.PitID)  --or filter based on Pitid                          
                   AND @Is24HrSummary =0 --no comments shown if 24hr summary
				     GROUP BY a.RptGroupID
                           ,ProjTopicID
                           ,ProjectID
                           ,OperationID
                           ,RptDetailID
                           ,RptDetail
                           ,rptGroup
                     ORDER BY GroupingHeader
                           ,RptDetailID
              END
              ELSE IF (@Data = 'Data')
              BEGIN


                     SELECT sc.ShiftCommentID
                           ,sc.EquipmentID AS 'EquipmentID'
                           ,sc.RptGroupID
                           ,'' AS 'GroupingHeader'
                           ,sc.RptDetailID
                           ,pt.RptDetail
                           ,sc.ShiftCommentsText
                           ,'' AS 'NumberofEmptyRows'
                           ,ROW_NUMBER() OVER (PARTITION BY sc.RptGroupID, sc.RptDetailID ORDER BY sc.ShiftCommentID, sc.RptGroupID, sc.RptDetailID) AS 'RowNum'
                     FROM dbo.tbl_STO_ShiftComments AS sc
                     LEFT JOIN dbo.tbl_DBT_ProjTopics AS pt
                           ON sc.RptDetailID = pt.RptDetailID
                                  AND pt.ProjectID = @ProjectID
                     INNER JOIN dbo.tbl_SYS_RptGroup AS rg
                           ON sc.RptGroupID = rg.RptGroupID
                     WHERE pt.ReportType = 4 
                           AND sc.DataDateID = 4
                           AND (ISNULL(sc.Type, 'xx') = @Type)
                           AND sc.ProjectID = @ProjectID
                           AND ShiftCommentDate = @Date
                           AND (Shift = @Shift) -- OR @Is24HrSummary = 1)
                           AND SupervisorID = @SupervisorID
                           AND RptGroupCode LIKE 'SHIFT%'
						   AND @Is24HrSummary =0 --don't show comments here for 24hr summary
                     GROUP BY sc.EquipmentID
                           ,sc.RptGroupID
                           ,sc.RptDetailID
                           ,pt.RptDetail
                           ,sc.ShiftCommentsText
                           ,ShiftCommentID
                     ORDER BY GroupingHeader
                           ,ShiftCommentID
              END
       END


END
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_EquipmentList]'
GO
ALTER PROCEDURE [dbo].[SP_ShiftSummary_EquipmentList] @ProjectID INT, @Type VARCHAR(10) = 'Mining', @ActReasonID INT = null, @Mode VARCHAR(64) = '', @UserId INT = ''
AS
BEGIN
    /* 
        20181214 AD create SP
        20181214 AD add active to retrun only active equipments
        2019-02-15 TS ... added like ont eh type for type alias
        2019-07-29 AD ... included NO_EQUIP for maint, no matter what ActReasonID is
		2019-11-18 CA ... Added Elec IN to maint
		2021-002-12 CA ...Added True Type call for RB
		2021-04-08  ts ... add no equipment >> can't do this! because they may choose a task that has link to actreason.  fix for this is to allocated NO_EQUIP to the relevant tasks properly
		2022-03-02 ts ... if we call with no @actReasonid, then just return equipment
		2022-03-02 ian ... added @Mode and @UserId params


    */

        /* 
        DECLARE @ProjectID INT = 194
        DECLARE @ActReasonID INT
        */

		SET @ActReasonID =  nullif(@ActReasonID ,0)

		DECLARE @TrueType VARCHAR(20) = (SELECT TOP 1 tt.TypeCode FROM dbo.tbl_SYS_TypeConfigs AS t LEFT OUTER JOIN
											dbo.tbl_SYS_Type AS tt ON t.TypeId = tt.TypeID
											WHERE t.TypeAlias = @Type)


    ------------------------------------------------------------------------------------------------------------------------------------
    -- Mining
    ------------------------------------------------------------------------------------------------------------------------------------
    IF (@Type like 'Mining%' OR @TrueType LIKE 'Mining%' )
    BEGIN
       SELECT tbl.EquipmentID
            , tbl.EquipmentCode
            , tbl.ActivityReasonLinkID
            , tbl.Active 
	   
	   from (
	   select 
            ve.EquipmentID
            ,ve.EquipmentCode
            ,act.ActivityReasonLinkID
            ,ve.Active
        FROM View_webbarAPI_EquipmentDetails AS ve 
            LEFT JOIN tbl_SYS_EquipTypeActivityLink AS act 
                ON ve.EquipTypeID = act.ResEquipTypeID
				AND (@ActReasonID IS NOT NULL)
        WHERE ve.ProjectID = @ProjectID 
                AND ve.Active = 1
                AND (
                        (@ActReasonID IS NOT NULL AND act.ActivityReasonLinkID = @ActReasonID)
                    OR
                        (@ActReasonID IS NULL AND 1 = 1)
                )
		--can't do this! 
		--union all 
		--select top 1
  --          EquipmentID
  --          ,EquipmentCode
  --          ,ActivityReasonLinkID=@ActReasonID
  --          ,Active=1
  --      from View_webbarAPI_EquipmentDetails AS ve 
  --          join tbl_SYS_EquipTypeActivityLink AS act 
  --              ON ve.EquipTypeID = act.ResEquipTypeID
		--	where EquipmentID = 2490
				) as tbl
        ORDER BY tbl.ActivityReasonLinkID, tbl.EquipmentCode ASC
    END
    ------------------------------------------------------------------------------------------------------------------------------------
    -- Maintenance
    ------------------------------------------------------------------------------------------------------------------------------------
    ELSE IF @Type in ('Maint','Elec')
    BEGIN
        SELECT 
            ve.EquipmentID
            ,ve.EquipmentCode
            ,act.ActivityReasonLinkID
            ,ve.Active
        FROM View_webbarAPI_EquipmentDetails_Maint AS ve 
          left  JOIN tbl_SYS_EquipTypeActivityLink AS act 
                ON ve.EquipTypeID = act.ResEquipTypeID
                   AND  (@ActReasonID IS NOT NULL )
        WHERE ve.ProjectID = @ProjectID 
                AND ve.Active = 1
                AND (
                        (@ActReasonID IS NOT NULL AND act.ActivityReasonLinkID = @ActReasonID)
                    OR
                        (@ActReasonID IS NULL AND 1 = 1)
                )
        UNION ALL  
        -- only allowed for maint, mining will cause issues where stats might get buried in the data rather than being deleted. 
        -- the best fix for this will be Delete and UnDelete functions that are queued to be developed in the shift summary interface
        SELECT 
            2490 as EquipmentID
            ,'NO_EQUIP' as EquipmentCode
            ,@ActReasonID as ActivityReasonLinkID
            ,1 as Active
        ORDER BY act.ActivityReasonLinkID, ve.EquipmentCode ASC
    END
END
GO
PRINT N'Refreshing [dbo].[vw_Integration_AMT_WorkOrdersForPLOD_Parts]'
GO
EXEC sp_refreshview N'[dbo].[vw_Integration_AMT_WorkOrdersForPLOD_Parts]'
GO
PRINT N'Refreshing [dbo].[View_WebbarAPI_Information]'
GO
EXEC sp_refreshview N'[dbo].[View_WebbarAPI_Information]'
GO
PRINT N'Creating [dbo].[SP_ShiftSummary_QTypeInputs_v2]'
GO
CREATE PROCEDURE [dbo].[SP_ShiftSummary_QTypeInputs_v2] @ProjectID INT, @Date NVARCHAR(10), @Type NVARCHAR(25), @Display NVARCHAR(100), @OperatorID VARCHAR(250) = NULL, @EquipmentID VARCHAR(250) = NULL, @debugmode INT = 0, @UserID INT = 0 -- ,@Shift nvarchar(2)
AS
BEGIN
  SET NOCOUNT ON;
  SET ARITHABORT ON
  /* exec [dbo].[SP_ShiftSummary_QTypeInputs_v2] @ProjectID =219, @Date= '2019-02-18', @Type ='prestart' , @Display = 'Fault_Management'
   exec [dbo].[SP_ShiftSummary_QTypeInputs_v2] @ProjectID =219, @Date= '2018-02-18', @Type ='Safety' , @Display = '24Hr_TWISummary'
   exec [dbo].[SP_ShiftSummary_QTypeInputs_v2] @ProjectID =291, @Date= '2020-09-15', @Type ='Prestart' , @Display = '24Hr_Summary' 
    exec [dbo].[SP_ShiftSummary_QTypeInputs_v2] @ProjectID =291, @Date= '2020-09-15', @Type ='prestart' , @Display = 'Fault_Management'
    EXEC [dbo].[SP_ShiftSummary_QTypeInputs_v2] @projectID = 259, @Date = '2019-04-15', @Type = 'Prestart', @Display = '14DayHistory-Detail', @OperatorID = 11076, @EquipmentID = ''

  EXEC [dbo].[SP_ShiftSummary_QTypeInputs_v2] @projectID = '387', @Date = '2020-12-05', @Type = 'Safety', @Display = '24Hr_TWISummary', @OperatorID = '', @EquipmentID = ''

  */

  /*Change log
  TS 20180710 add feedbackadvice and StagingId to the prestart datasets
  CA 20180818 add Iplod Feedback Type. Has to be done through Proj 53. 
  CA 20180822 add Photos to prestart and TWI summarys
  TS 2018-11-22 ... renamed Incorrect Answers to "Flagged Items"
  TS 2018-12-10 ... improvements for maintenance prestart history ... 
  TS 2018-12-13 ... added local stagingID to the 24hr TWI summary (for taking to INX) + add feedback advice and staging ID
  	2018-12-14 (CA) ... Added Cabolt Tension QA form for VIV
  TS 2019-01-09 ... added projectid to the join in camera data set
  TS 2019-02-20 ... added some things to merge with live
  CA 2019-02-25 ... Fixed photo join to s.OrigStaginId instead of StagingID
  TS 2019-03-01 ... added type to the TWI 24hr summary
  TS 2019-04-15 ... added Operator Filter to PRestart history
  TS 2019-04-15 ... add the group by 
  TS 2019-04-15 ... added detial prestart history set
  CA 2019-05-06 ... Added Inputtimestamp for Shiftboss TWI check time. 
  CA 2019-05-08 ... Order Fault Management and Hazard Management Correctly. Required Group1 DESC
  CA 2019-06-14 ... Changed all LocationDescriptions to LocationCodes
  TS 2019-07-02 ... various mods to fault management one
  TS 2019-08-15 ... hard coded exclusion on manbasket. also fixed the hazard management to match the prestart fualt management.
  CA 2020-01-28 ... Add Shiftboss TWI review setup
  CA 2020-02-04 ... Fixed Shiftboss TWI with isnull wrap
  IP 2020-05-15 ... change attachment table to use LocalStagingID instead of StagingID and use View_DE_iPlodPhotos
  CA 2020-08-20 ... Removed fuel level from the new hazards. Search for date to find line
  ts 2020-08-26 ... remove the empty feedback ones
  CA 2020-09-09 ... Swapped otehr info to metric for outstanding hazards
  CA 2020-09-24 ... Added the plural s to the end of outstanding hazard to fix inx field 
  CA 2020-10-10 ... Added Stat Equip to 24hr_Detail prestart section
  TS 2020-11-02 ... ditch @PrestartARIDs, replace with HasFaults through special handling
  CA 2020-12-06 ... Added striphtml on each question
  CA 2020-12-17 ... Added proj 3 to feedback
  CA 2021-02-02 ... Added Location to Hazard Management
  CA 2021-02-15 ... Added Location to hazard management 2 
  CA 2021-03-10 ... Added Feedback handling for Service Sheets
  ts 2021-03-12 ... feedback is not necessarily attrinput
  ts 2021-03-16 ... get reason alias if empty instead of null
  ts 2021-04-07 ... add position
  CA 2021-04-09 ... Added dedicated service sheet feedback
  CA 2021-04-12 ... Rename Messaging to feedback
  ts 2021-04-15 ... fixed join to special handling for IsServiceSheets
  				... brought photos in for 24hr faults view
  ts 2021-06-07 ... @mostRecentMeterReadings
  				... added Other INFO to fault_management. 
  ts 2021-06-08 ... HV and LV badge on the faults.
  					... add prstTaskAlias
  ts 2021-06-09 ... put shift into the comments / hour meeters
  ts 2021-06-11 ... stuff for MCR hazards. 
  CA 2021-06-13 ... Renamed new faults to New faults HVs
  ts 2021-06-16 ... overhaul of MCR hazard and safety
  ts 2021-07-07 ... general comments allowed to fault management
  ts 2021-07-14 ... remove type filter on prestarts stuff
  CA 2021-11-24 ... Updated adhoc hazard config.
  			  ... Added vw instead of function for taskgroupings
  ts 2022-03-16 ... fix the 24h safety reporting slowness
                ... refactored this: [View_DE_iPlodPhotos] to dtich the inline funciton
                ... swapped to static attributes instead of live ones
  ts 2022-03-31 ... add '24Hr_SafetySummary' to allow for new qtype lists proc
                 ... put meter readings down the bottom
  rf 2022-06-07 ... added '24Hr_SafetySummary_All_last_3_Days' for MCR
  CA 2022-06-20 ... Added Filter for only ad hoc hazard for Hazard summary.
  CA 2022-08-08 ... Added Sign Register stuff for MCR in saftey summary all
  RF 2022-09-12 ... Added '24Hr_SafetySummary_All_31_Days' for MCR


  */


  DECLARE @PrestartARIDs AS VARCHAR(1000)
  SET @PrestartARIDs = (SELECT
      ConfigValue
    FROM tbl_SYS_WebbarConfigs
    WHERE ConfigName = 'AR_Prestarts'
    AND Active = 1) -- need to add grader to this when I make the reason?

  DECLARE @TWIARIDs AS VARCHAR(1000)
  SET @TWIARIDs = (SELECT
      ConfigValue
    FROM tbl_SYS_WebbarConfigs
    WHERE ConfigName IN ('AR_TWIs', 'AR_AdHocHazard')
    AND Active = 1)

  DECLARE @OGCAS AS VARCHAR(1000)  --could expand this out to make generic "safety type forms" dump ...?
  SET @OGCAS = '410'

  DECLARE @OSAAS AS VARCHAR(1000)  --could expand this out to make generic "safety type forms" dump ...?
  SET @OSAAS = '414'

  DECLARE @SpecialMCRHazard INT = (SELECT
      IIF(@ProjectID = 399, 1, 0))

  DECLARE @HazardAttrTypes AS VARCHAR(100)
  SET @HazardAttrTypes = (SELECT
      ConfigValue
    FROM tbl_SYS_WebbarConfigs
    WHERE ConfigName = 'iplodAttrTypes_Hazard'
    AND Active = 1)

  DECLARE @LocnAttrTypes AS VARCHAR(100)
  SET @LocnAttrTypes = (SELECT
      ConfigValue
    FROM tbl_SYS_WebbarConfigs
    WHERE ConfigName = 'iplodAttrTypes_Locns'
    AND Active = 1)

  DECLARE @LevelAttrTypes AS VARCHAR(100)
  SET @LevelAttrTypes = (SELECT
      ConfigValue
    FROM tbl_SYS_WebbarConfigs
    WHERE ConfigName = 'iplodAttrTypes_Level'
    AND Active = 1)

  DECLARE @OpID AS INT
  SET @OpID = (SELECT
      OperationID
    FROM tbl_DBT_Project
    WHERE ProjectID = @ProjectID)

  DECLARE @TWIALIAS AS VARCHAR(15)
  SET @TWIALIAS = (SELECT
      [dbo].[FN_TWIAlias](@ProjectID));

  DECLARE @TWIALIASed AS INT
  SET @TWIALIASed =
  CASE
    WHEN @TWIALIAS = 'TWI' THEN 0
    ELSE 1
  END;

  DECLARE @PrestartHazardMgmtGoLiveDate DATE
  SET @PrestartHazardMgmtGoLiveDate = (SELECT
      CONVERT(DATE, dbo.FN_GetConfigValue(@ProjectID, 'PrestartHazardMgmtGoLiveDate')));   --manipulate this to go live ... past this date all prestart faults and hazards need to be dealt with in this page.  ideally would setup some flavours of archive.  or maybe this date can just go into webbar configs?

  DECLARE @OnlyRecordAHazard int = isnull(dbo.FN_GetConfigValue(@projectid,'OnlyRecordAHazard'),0)

  DECLARE @ShiftbossTWIReview INT
  SET @ShiftbossTWIReview = ISNULL((SELECT

      ConfigValue
    FROM dbo.tbl_DBT_webbarConfigs
    WHERE ConfigName = 'ShiftbossTWIReview'
    AND ProjectID = @ProjectID
    AND Active = 1)
  , 0) -- need to get the right dbt call for this from another sp

  DECLARE @mostRecentMeterReadings INT = (SELECT
      IIF(@ProjectID = 399, 0, 1))
  DECLARE @FaultMgmtShowOtherThings INT = (SELECT
      IIF(@ProjectID = 399, 0, 1))

 declare @3DaysAgo DATE = dateadd(day,-2,@Date)
 declare @31DaysAgo DATE = dateadd(day,-30,@Date)


IF @Debugmode = 1
begin
SELECT '@3DaysAgo'= @3DaysAgo, '@date' = @Date
end


  -- (SELECT OperationCode FROM tbl_DBT_Operation as o INNER JOIN  tbl_DBT_Project as p on p.OperationID = o.OperationID WHERE p.ProjectID = @ProjectID  ) 
  -------------------------------------------------------------------------------------------------------------
  IF (@Type = 'Prestart'
    AND @Display = '24Hr_Summary')
  BEGIN
    --header of page
    SELECT
      ProjectName + ' Prestart Summary for ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    -- data to be displayed on page
    SELECT
      'Group1' = IIF(NotificationText LIKE 'comments / hour%', s.NotificationText + ' - ' + Shift, s.NotificationText)
     ,2 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,NotificationText = NotificationText + IIF(prstTaskAlias IS NOT NULL, ' - ' + prstTaskAlias, '')
     ,Shift
     ,Operator
     ,TIME
     ,EquipID
      -- ,DisplayOrder
     ,[Prestart Question] = dbo.FN_StripHTML([Prestart Question])
     ,UPPER(Answer) AS 'Answer'
     ,UPPER(Comments) AS 'Comments'
     ,s.StagingID
     ,FeedbackAdvice
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,[Prestart Question] /* + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') */ AS 'PhotoLabel'
    FROM dbo.[View_ShiftSummary_PrestartHistory] s
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a  --2021-04-15
      ON --not cosher to use StagingId, but don't ahve local stagingid availablein prestarthistory view a.LocalStagingID = s.LocalStagingID
        a.StagingID = s.StagingID --this isn't perfect, but should be ok now we are on v3?
        AND a.ProjectID = s.ProjectID
    WHERE (Include = 1) --no point in this, INclude=1 is hard coded inside the view! 
    --OR a.LocalStagingID IS NOT NULL) --get ones that have photos even if they answered in the affirmative.
    AND DATE = @Date
    AND s.ProjectID = @ProjectID
    ORDER BY GroupOrder
    , Group1

    , notificationtext

    , Shift
    , EquipID
    , s.Time
    , Operator

    , DisplayOrder


    --these photos are showing so we pick up photos that are agaisnt non-intolerable questsion
    SELECT DISTINCT
      'Prestart Photos' AS 'Group1'  -- Select photos taken 
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,Eq.EquipmentCode AS 'Equipment'

     ,EmployeeName AS 'Operator'
      --,ISNULL(e.employeename, 'Admin') as 'Operator'
     ,Question = IIF(s.InputType LIKE 'Q%', q.QuestionText, i.ForeLabel)
     ,CASE
        WHEN s.inputid = 102 AND
          s.inputtype = 'attrinput' THEN ':'
        ELSE s.InputValue
      END AS 'Answer'
     ,s.CommentsCheck + '  -  ' + ISNULL(s.InputComment, '') AS 'Operator Comments'
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,IIF(s.InputType LIKE 'Q%', q.QuestionText, i.ForeLabel) + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
    FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
    LEFT JOIN dbo.tbl_DBT_Employees AS e

      ON s.OperatorID = e.EmployeeID
    LEFT JOIN dbo.tbl_SYS_Equipment AS eq
      ON s.EquipmentID = eq.EquipmentCodeID
    LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
      ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND s.InputType = i.InputType
    LEFT JOIN dbo.tbl_SYS_Questions AS q
      ON s.InputType LIKE 'Q%'
        AND s.InputID = q.QuestionID
    LEFT JOIN dbo.tbl_DBT_Location AS lp
      ON s.Location = lp.LocationID
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
      ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
    LEFT JOIN [dbo].[tbl_sys_activityreasonlink] AS ar
      ON ar.activityreasonlinkid = s.ActivityReasonID
    LEFT JOIN [dbo].[tbl_sys_reason] AS r
      ON r.reasonid = ar.ReasonID
    INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits', '') AS tg
      ON s.ActivityReasonID = tg.ActivityReasonId
        AND tg.HasFaults = 1
    WHERE s.ProjectID = @ProjectID
    AND s.DATE = @Date
    --and s.inputtype = 'Camera'
    AND a.LocalStagingID IS NOT NULL
  --and s.ActivityReasonID IN (
  --	SELECT ID
  --	FROM [dbo].[FN_SplitString](@PrestartARIDs)
  --	) 

  END
  -------------------------------------------------------------------------------------------------------------

  ELSE
  IF (@Type = 'Prestart'
    AND @Display = 'Last_Readings_In_Minepoint')
  BEGIN

    --header of page
    SELECT
      ProjectName + ' Last Meter Readings from Minepoint as at: ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    -- data to be displayed on page
    SELECT
      Group1 = 'Last Meter Readings Registered In Minepoint'
     ,NULL AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
      --,DisplayOrder = EquipmentCode
     ,EquipID = EquipmentCode

      -- ,[StatID]

     ,UOM = [StatDesc]
     ,MeterValue = CAST(LowerValue AS FLOAT)
      --  ,[LastModifiedOn]
     ,[LastReadingDate]
    FROM [dbo].[view_WebbarAPI_CurrentMeterReadings]
    WHERE ProjectID = @ProjectID
    ORDER BY EquipmentCode, StatDesc




  END



  ELSE
  IF (@Type = 'Prestart'
    AND @Display IN ('IndividualMachine', '24Hr_Detail', '14DayHistory-Detail'))
  BEGIN
    --header of page
    SELECT
      ProjectName + ' Prestarts ' +
      CASE
        WHEN @Display = '14DayHistory-Detail' THEN ' as at '
        ELSE ' for '
      END + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    --data to be displayed on page    
    SELECT --CASE WHEN @Display = 'Detail' THEN eq.EquipmentCode + ' - '+ CAST(s.Date AS varchar) ELSE e.EmployeeName + ' - '+ CAST(s.Date AS varchar) END AS 'Group1'
      eq.EquipmentCode + ' - ' + e.EmployeeName + ' - ' + CAST(s.Date AS VARCHAR) AS 'Group1'
      --,s.EquipmentID 
     ,s.Date AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,Shift
     ,eq.EquipmentCode AS 'EquipID'
     ,e.EmployeeName AS 'Operator'
     ,dbo.FN_StripHTML(ISNULL(q.QuestionText, i.ForeLabel)) AS 'Prestart Question'
     ,UPPER(s.InputValue) AS 'Answer'
     ,ISNULL(UPPER(s.InputComment), '') + '  ' + ISNULL(UPPER(s.CommentsCheck), '') AS 'Comments'
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
      -- ,s.StagingID
     ,s.StagingID
     ,FeedbackAdvice
    FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
    LEFT JOIN dbo.[tbl_SYS_Questions] AS q
      ON s.inputID = q.QuestionID
        AND s.InputType LIKE 'q%'
    LEFT JOIN dbo.tbl_DBT_Employees AS e
      ON s.OperatorID = e.EmployeeID
    LEFT JOIN dbo.tbl_SYS_Equipment AS eq
      ON s.EquipmentID = eq.EquipmentCodeID
    LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
      ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND i.ProjectID = 1
        AND s.InputType = i.InputType
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
      ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectId = s.ProjectID
    INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits', '') AS tg
      ON s.ActivityReasonID = tg.ActivityReasonId
        AND tg.HasFaults = 1
    WHERE (s.InputType LIKE 'Q%'
    OR (s.InputType LIKE 'stat%'
    AND s.InputID NOT IN (7, 80)))
    AND (s.DATE = @Date
    OR (s.Date BETWEEN DATEADD(DAY, -14, @Date) AND @Date
    AND @Display = '14DayHistory-Detail')) -- 2019-04-15

    AND s.ProjectID = @ProjectID
    --AND s.ActivityReasonID IN (
    --	SELECT ID
    --	FROM [dbo].[FN_SplitString](@PrestartARIDs)
    --	)
    AND (
    s.EquipmentID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@EquipmentID))
    OR @EquipmentID IS NULL
    )
    AND (
    OperatorID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@OperatorID))
    OR @OperatorID IS NULL
    )
    ORDER BY GroupOrder
    , Group1
    , shift
    , e.EmployeeName
    , s.stagingid
  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Prestart'
    AND @Display = '28DayHistory-ChooseEquip')
  BEGIN
    --header of page
    SELECT
      ProjectName + ' Prestart 28 Day History (prior to: ' + @Date + ')' AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    -- data to be displayed on page
    SELECT
      NotificationText + ' - ' + EquipID AS Group1
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
      --,NotificationText
     ,DATE
     ,Shift
     ,Operator
     ,TIME
     ,EquipID
      -- DisplayOrder,
     ,[Prestart Question] = dbo.FN_StripHTML([Prestart Question])
     ,UPPER(Answer) AS 'Answer'
     ,UPPER(Comments) AS 'Comments'
     ,StagingID
     ,FeedbackAdvice
    FROM dbo.[View_ShiftSummary_PrestartHistory]
    WHERE Include = 1 --AND Date = @Date 
    AND DATE >= DATEADD(DAY, -28, @Date)
    AND ProjectID = @ProjectID
    AND InputType NOT LIKE 'Stat%' --exclude hour meter readings from this view
    AND (
    EquipmentID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@EquipmentID))
    OR @EquipmentID IS NULL
    )
    AND (
    OperatorID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@OperatorID))
    OR @OperatorID IS NULL
    )
    ORDER BY GroupOrder
    , Group1
    , EquipID
    , notificationtext
    , DATE
    , Shift
    , Operator
    , DisplayOrder
  END


  /*

   exec [dbo].[SP_ShiftSummary_QTypeInputs_v2] @ProjectID =259, @Date= '2019-02-18', @Type ='prestart' , @Display = 'Fault_Management'

  */

  ELSE
  IF (@Type = 'Prestart'
    AND @Display = 'Fault_Management')
  BEGIN
    IF @debugmode = 1
    BEGIN
      SELECT
        '@FaultMgmtShowOtherThings' = @FaultMgmtShowOtherThings
      SELECT
        '@Date' = @Date
      SELECT
        '@PrestartHazardMgmtGoLiveDate' = @PrestartHazardMgmtGoLiveDate
    END
    --header of page
    SELECT
      ProjectName + ' Fault Feedback Summary ' AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    -- data to be displayed on page
    /*SELECT Group1 = 'NEW FAULTS' -- CASE WHEN InputType NOT LIKE 'Stat%' THEN 'NEW FAULTS' ELSE '' END
    			,'GroupOrder' = 0 --CASE WHEN FeedbackAdvice= '1' THEN 0 ELSE 1 END
    			,NULL AS 'GroupColour'
    			,NULL AS 'ColourCode'
    			,NotificationText
    			,DATE
    			,Shift
    			,Operator
    			,TIME
    			,EquipID
    			-- DisplayOrder,
    			,[Prestart Question]
    			,UPPER(Answer) AS 'Answer'
    			,UPPER(Comments) AS 'Comments'
    			,StagingID
    			,FeedbackAdvice --go to 24hr summary to see all faults, or export out or look at in iplod. = CASE WHEN FeedbackAdvice= '1' THEN '' ELSE FeedbackAdvice END
    FROM
    		(
    		*/ SELECT
      Group1 =
      CASE
        WHEN IsTrueFault = 1 AND
          eq.EquipTypeID = 110 THEN 'NEW FAULTS - LVs'
        WHEN IsTrueFault = 1 AND
          eq.EquipTypeID <> 110 THEN 'NEW FAULTS - HVs'
        ELSE 'OTHER INFO'
      END --AS Group1
     ,'GroupOrder' = IIF(IsTrueFault = 1, 1, 2)
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,NotificationText
     ,DATE
     ,Shift
     ,Operator
     ,TIME
     ,EquipID
      -- DisplayOrder,
     ,[Prestart Question] = dbo.FN_StripHTML([Prestart Question])
     ,UPPER(Answer) AS 'Answer'
     ,UPPER(s.Comments) AS 'Comments'
     ,s.StagingID
     ,FeedbackAdvice --= dbo.FN_IsNullorEmpty(FeedbackAdvice,'1')
      --,RowNum = ROW_NUMBER() OVER ( ORDER BY EquipID,Date DESC )
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,[Prestart Question] /* + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') */ AS 'PhotoLabel'
    --,inputtype
    FROM dbo.[View_ShiftSummary_PrestartHistory] AS s
    LEFT JOIN dbo.tbl_SYS_Equipment AS eq
      ON s.EquipmentID = eq.EquipmentCodeID
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a  --2021-04-15
      ON --not cosher to use StagingId, but don't ahve local stagingid availablein prestarthistory view a.LocalStagingID = s.LocalStagingID
        --2021-06-07 a.StagingID = s.StagingID --this isn't perfect, but should be ok now we are on v3?
        a.LocalStagingID = s.prstLocalStagingId
        AND a.ProjectID = s.ProjectID
    WHERE Include = 1 --AND Date = @Date 
    AND DATE >= @PrestartHazardMgmtGoLiveDate
    AND Date >= DATEADD(DAY, -60, @Date)  --also only get last 60 days at any one time (to reduce load time)
    AND s.ProjectID = @ProjectID
    AND ISNULL(FeedbackAdvice, '') = ''
    --AND InputType <> 'Stat' --exclude hour meter readings from this view
    /*			AND (
						EquipmentID IN (
							SELECT ID
							FROM [dbo].[FN_SplitString](@EquipmentID)
							)
						OR @EquipmentID IS NULL
						) */
    AND NOT (InputType LIKE 'Stat%'
    AND IsGeneralComment = 0) --still want to get the general comments trhough here --no meter readings on this display, only faults and comments
    AND NOT (InputType = 'attrlist'
    AND prstinputid = 182)  --no basket numbers
    AND NOT (InputType = 'attrlist'
    AND prstinputid = 288)  -- 2020-08-20 Removed Fuel Level in here
    AND (IsTrueFault = 1
    OR @FaultMgmtShowOtherThings = 1)
    --) AS tbl
    ORDER BY GroupOrder
    , Group1 DESC
    , EquipID
    , notificationtext
    , DATE DESC
    , Shift
    , Operator
    --,DisplayOrder
    , StagingID



    --try again....
    DECLARE @FirstDate DATE = DATEADD(DAY, -31, @Date);

    --history of activity on a machine
    SELECT
      EquipmentID
     ,PRDTHrs
     ,EmployeeName
     ,MinePointCode
     ,EquipId
     ,Date INTO #WorkHistory
    FROM [dbo].[FN_Prestarts_ActiveEquipment](@ProjectID, @FirstDate, @Date, '') AS ips
    WHERE ISNULL(PRDTHrs, 0) + ISNULL(OtherHrs, 0) > 0 --only get operators who have logged some time against this machine (had an instance of operator logging task by mistake)


    --last readings from AX
    SELECT
      ax.EquipmentID
     ,StatID
     ,LowerValue
     ,LastReadingDate
     ,WorkedSinceLastReading = SUM(ISNULL(wh.PRDTHrs, 0)) INTO #lastaxreading
    FROM [View_WebbarAPI_CurrentMeterReadings] AS ax
    LEFT JOIN #WorkHistory AS wh
      ON ax.EquipmentID = wh.EquipmentID
        AND wh.DAte > ax.LastReadingDate
    WHERE ProjectID = @ProjectID
    GROUP BY ax.EquipmentID
            ,StatID
            ,LowerValue
            ,LastReadingDate




    SELECT
      Group1
     ,GroupOrder = 100 --2022-03-31
     ,NULL AS GroupColour
     ,NULL AS ColourCode
     ,ColourCode =
      CASE
        WHEN UomCode LIKE '%Eng%' AND
          tbl1.IsCloseToService = 1 THEN 'red'
        ELSE 'black'
      END
     ,[Site]
     ,AssetID


      --	,OccurrenceTime this is set to 6 or 1800 anyway
      --hard-coded to 6am and 6pm for now to avoid breaking old reports.
     ,EmployeeID
      --,FormNumber
      -- derived on the fly, is in the format DetailID + MinepointID + # of days from 1/1/17 to today

      --,pr.EquipmentID
      --use this one to join back to list of equipment on the page.
      --array of meter readings to be sent to API
     ,Prestartdate
     ,[Shift]
     ,UomCode
     ,MeterReading
     ,Notes = Notes +
      CASE
        WHEN UomCode LIKE '%Eng%' AND
          tbl1.IsCloseToService = 1 THEN +' - ' + '(shows red if within 24 hrs of nearest 250hr, service may already be done though)'
        ELSE ''
      END

     ,LastReadingInMinepoint
     ,LastReadingInMinepoint_Date
    FROM (	--prestart data table (prestarts from iplod)
      SELECT
        'Most Recent Meter Readings from ' + dbo.FN_NameOfApp(@projectid, 1) AS Group1  --2022-03-31

       ,GroupOrder = 1
       ,NULL AS GroupColour
       ,NULL AS ColourCode
        --,ColourCode 
       ,[Site]
       ,[Shift]
       ,Prestartdate = OccurrenceDate
        --	,OccurrenceTime this is set to 6 or 1800 anyway
        --hard-coded to 6am and 6pm for now to avoid breaking old reports.
       ,EmployeeID
        --,FormNumber
        -- derived on the fly, is in the format DetailID + MinepointID + # of days from 1/1/17 to today
       ,AssetID = RTRIM(EquipID)
        --,pr.EquipmentID
        --use this one to join back to list of equipment on the page.
        --array of meter readings to be sent to API
       ,UomCode = PrestartQuestion
       ,MeterReading = MeterValue
       ,Notes = ISNULL(pr.Comments, '')

       ,LastReadingInMinepoint = ISNULL(CAST(CONVERT(FLOAT, cm.LowerValue) AS VARCHAR), '--')
       ,LastReadingInMinepoint_Date = 'on ' + ISNULL(CAST([LastReadingDate] AS VARCHAR), '--')
        --,RefLineID = ROW_NUMBER() OVER (PARTITION BY pr.EquipmentID ORDER BY pr.EquipmentID, PrestartQuestion)
       ,RowNum = ROW_NUMBER() OVER (PARTITION BY EquipID, PrestartQuestion ORDER BY EquipId, PrestartQuestion, OccurrenceDate DESC, [Shift] DESC)
       ,IsCloseToService = dbo.FN_IsCloseToService(24, 24, MeterValue, 250)
      --INTO #PrestartAuto
      FROM [dbo].[FN_Prestarts_iPlodPrestarts](@ProjectID, @FirstDate, @Date, '') AS pr
      INNER --should be ok, Shelley has put outer join on the function for installed meters + meter readings
      JOIN #lastaxreading AS cm
        ON pr.EquipmentID = cm.EquipmentID
        AND pr.StatID = cm.StatID) AS tbl1
    WHERE rownum = 1
    AND @mostRecentMeterReadings = 1
    ORDER BY AssetID, UomCode

  END





  -------------------------------------------------------------------------------------------------------------
  /*
  This is Hazards that appear on the shift summary for the shiftboss to edit and close out himself. 
  Had to change the way this page loaded to load based on the attribute 'Outstanding Hazard' instead of just feedback advice'
  */
  ELSE
  IF (@Type = 'Safety'
    AND @Display = 'Hazard_Management'
    AND @ShiftbossTWIReview = 1
    AND @SpecialMCRHazard = 0)
  BEGIN
    --header of page
    SELECT
      ProjectName + ' Hazard Summary ' AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    -- data to be displayed on page
    SELECT
      Group1 = /*CASE WHEN FeedbackAdvice= '1' AND Metric = '_Outstanding Hazards' 
							THEN */ 'NEW OUTSTANDING HAZARDS' -- ELSE CONVERT(varchar,date) END
     ,'GroupOrder' = 0 --CASE WHEN FeedbackAdvice= '1' THEN 0 ELSE 1 END
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'

     ,DATE
     ,Shift
     ,Operator
     ,Location
     ,TIME
     ,EquipID
      -- DisplayOrder,
     ,[TWI Question] = dbo.FN_StripHTML([TWI Question])
     ,UPPER(Answer) AS 'Answer'
     ,UPPER(Comments) AS 'Comments'
     ,StagingID
     ,FeedbackAdvice --= CASE WHEN FeedbackAdvice= '1' THEN '' ELSE FeedbackAdvice END
    FROM (SELECT
        '' AS Group1
       ,1 AS 'GroupOrder'
       ,NULL AS 'GroupColour'
       ,NULL AS 'ColourCode'
        --,NotificationText
       ,Metric
       ,DATE
       ,Shift
       ,Operator
       ,Location
       ,TIME
       ,EquipID
        -- DisplayOrder,
       ,[TWI Question]
       ,UPPER(Answer) AS 'Answer'
       ,UPPER(Comments) AS 'Comments'
       ,StagingID
       ,FeedbackAdvice --= dbo.FN_IsNullorEmpty(FeedbackAdvice,'1')
       ,RowNum = ROW_NUMBER() OVER (ORDER BY EquipID, Date DESC)
      FROM dbo.[View_ShiftSummary_TWIHazards]
      WHERE DATE >= @PrestartHazardMgmtGoLiveDate
      AND Date >= DATEADD(DAY, -60, @Date)
      AND ProjectID = @ProjectID
      AND ISNULL(FeedbackAdvice, '') = ''
      AND [Metric] LIKE '%Outstanding Hazard%') AS tbl

    ORDER BY GroupOrder
    , Group1 DESC
    , MEtric

    , DATE DESC
    , Shift
    , Operator
    --,DisplayOrder
    , StagingID
  END


  ---------------------------------------------------------
  ELSE
  IF (@Type = 'Safety'
    AND @Display = 'Hazard_Management'
    AND @ShiftbossTWIReview <> 1
    AND @SpecialMCRHazard = 0)
  BEGIN
    --header of page
    SELECT
      ProjectName + ' Hazard Summary ' AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    -- data to be displayed on page
    SELECT
      Group1 = /*CASE WHEN FeedbackAdvice= '1' AND Metric = '_Outstanding Hazards' 
							THEN */ 'NEW OUTSTANDING HAZARDS' -- ELSE CONVERT(varchar,date) END
     ,'GroupOrder' = 0 --CASE WHEN FeedbackAdvice= '1' THEN 0 ELSE 1 END
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'

     ,DATE
     ,Shift
     ,Operator
     ,Location
     ,TIME
     ,EquipID
      -- DisplayOrder,
     ,[TWI Question] = dbo.FN_StripHTML([TWI Question])
     ,UPPER(Answer) AS 'Answer'
     ,UPPER(Comments) AS 'Comments'
     ,StagingID
     ,FeedbackAdvice --= CASE WHEN FeedbackAdvice= '1' THEN '' ELSE FeedbackAdvice END
    FROM (SELECT
        '' AS Group1
       ,1 AS 'GroupOrder'
       ,NULL AS 'GroupColour'
       ,NULL AS 'ColourCode'
        --,NotificationText
       ,Metric
       ,a.DATE
       ,a.Shift
       ,a.Operator
       ,a.Location
       ,a.TIME
       ,a.EquipID
        -- DisplayOrder,
       ,[TWI Question]
       ,UPPER(Answer) AS 'Answer'
       ,UPPER(a.Comments) AS 'Comments'
       ,a.StagingID
       ,a.FeedbackAdvice --= dbo.FN_IsNullorEmpty(FeedbackAdvice,'1')
       ,RowNum = ROW_NUMBER() OVER (ORDER BY a.EquipID, a.Date DESC)
      FROM dbo.[View_ShiftSummary_TWIHazards] as a 
        left outer JOIN tbl_DWH_iPlodStagingTableEdited as ips 
          on a.StagingID = ips.StagingID
          and a.projectid = ips.projectid
      WHERE --Include = 1 --AND Date = @Date 
      a.DATE >= @PrestartHazardMgmtGoLiveDate
      AND a.Date >= DATEADD(DAY, -60, @Date)  --also only get last 60 days at any one time (to reduce load time)
      AND a.ProjectID = @ProjectID
      AND ISNULL(a.FeedbackAdvice, '') = ''
      And (
            (@OnlyRecordAHazard = 1 AND ips.ActivityReasonID = 379)
            OR 
            (@OnlyRecordAHazard = 0)
          )

    --AND InputType <> 'Stat' --exclude hour meter readings from this view
    /*			AND (
						EquipmentID IN (
							SELECT ID
							FROM [dbo].[FN_SplitString](@EquipmentID)
							)
						OR @EquipmentID IS NULL
						) */

    ) AS tbl
    ORDER BY GroupOrder
    , Group1 DESC
    , MEtric

    , DATE DESC
    , Shift
    , Operator
    --,DisplayOrder
    , StagingID
  END


  ELSE
  IF (@Type = 'Safety'
    AND @Display = 'Hazard_Management'
    AND @SpecialMCRHazard = 1)
  BEGIN
    --EXEC [dbo].[SP_ShiftSummary_QTypeInputs_v2] @projectID = '399', @Date = '2021-06-14', @Type = 'Safety', @Display = 'Hazard_Management', @OperatorID = '', @EquipmentID = ''
    --header of page
    SELECT
      ProjectName + ' Hazard Summary ' AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    SELECT
      Group1 = h.HazardStatus + ' - ' + h.WrkType
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,h.[HAZARD LEVEL]
     ,h.Metric
     ,h.Date
     ,h.Shift

      --, h.HazardStatus
      --, h.HazardStatusInt
     ,h.Time
      --, h.ReviewedBy
     ,h.Operator
      -- , h.CompKey
     ,h.EquipID
     ,h.Location
     ,h.GenComments

      -- , h.WrkType
      -- , h.HazOperatorID

     ,h.DESCRIPTION
     ,h.[IMMEDIATE ACTION TAKEN:]
     ,h.[RECOMMENDATION:]
     ,h.[SAFETY IDEA]
     ,h.[CORRECTIVE ACTIONS]

     ,h.HasPhoto
     ,h.PhotoLabel
      --, h.ProjectID
     ,h.FeedbackAdvice
     ,h.StagingID
    -- , h.TaskName
    FROM [dbo].[View_ShiftSummary_TWIHazards_MCR] AS h
    WHERE --date = @Date
    @ProjectID = projectid
    AND h.HazardStatusInt <= 1  --1 is shiftboss has reviewd. will be bigger than this if safety has writtin feedback advice into it
    AND h.Date >= @PrestartHazardMgmtGoLiveDate
    --and shift = @shift

    ORDER BY OrderBy, h.HazardStatusInt
  END


--------------------------------------------------------
-- MCR safety forms. as a starting point
	ELSE IF (@Type = 'Safety' AND @Display IN ('24Hr_SafetySummary_All', '24Hr_SafetySummary_All_last_3_Days', '24Hr_SafetySummary_All_31_Days')) --cant chage this until we pass in @ProjectID into teh view for Q Review Selections
	begin
    --EXEC [dbo].[SP_ShiftSummary_QTypeInputs_v2] @projectID = '399', @Date = '2021-06-14', @Type = 'Safety', @Display = '24Hr_SafetySummary_All', @OperatorID = '', @EquipmentID = ''
		--header of page


		SELECT ProjectName + ' - '+@TWIALIAS+ ' Summary Report for ' + @Date AS 'PageTitle'
		FROM dbo.tbl_DBT_Project
		WHERE ProjectID = @ProjectID
IF OBJECT_ID(N'tempdb..#AllSafetyData') IS NOT NULL
BEGIN
DROP TABLE #AllSafetyData
END

/*************
Added Sign Registyer Stuff for MCR
**************/

--stope signs
SELECT 
      Group1 = 'Signs - Stope'
			,'GroupOrder' = 1
			,'lightblue' AS 'GroupColour'
			, NULL AS 'ColourCode'
      ,[Location] = l.LocationCode
      ,date
      ,shift
       ,[Task] = r.ReasonDescription
      ,[Sign] = sign.SignLabel
      ,[Reason] = a.Reason
      ,[Authorised by]
      ,[Installed by] = emp.EmployeeName
   
   FROM View_ShiftSummary_SignRegister_UniqueLocns_StopeSigns as a 
   left OUTER JOIN tbl_DBT_Location as l
    on a.LocationID = l.LocationID
   left outer join tbl_SYS_ActivityReasonLink AS ar
    ON a.Task = ar.ActivityreasonLinkID
   left outer join tbl_SYS_Reason as r 
    ON ar.ReasonID = r.ReasonID
   
   left outer JOIN 
   	(SELECT  [SignID] = AttributeID, [SignLabel] = AttributeDescription 
				FROM  dbo.tbl_DBT_AttributeProjectLink
					WHERE AttributeTypeID = 503
		) AS sign
  on a.[Sign Number] = sign.SignID

    left outer join
    (SELECT  [EmployeeID] = EmployeeID, [EmployeeName] = EmployeeName 
				FROM dbo.tbl_DBT_Employees
        ) AS emp
  ON a.[Installed by] = emp.EmployeeID

  where a.SignChangeIncrement = 1
    AND a.projectid = @projectid
    	AND 
        ((@Display = '24Hr_SafetySummary_All' AND a.DATE = @Date)
        OR
        (@Display = '24Hr_SafetySummary_All_last_3_Days' and a.Date between @3DaysAgo and @date)
         OR
        (@Display = '24Hr_SafetySummary_All_31_Days' and a.Date between @31DaysAgo and @date))



--no entry/normal signs
SELECT 
      Group1 = 'Signs - No Entry'
			,'GroupOrder' = 1
			,'lightblue' AS 'GroupColour'
			, NULL AS 'ColourCode'
      ,[Location] = l.LocationCode
      ,date
      ,shift
       ,[Task] = r.ReasonDescription
      ,[Sign] = sign.SignLabel
      ,[Reason] = a.Reason
      ,[Authorised by]
      ,[Installed by] = emp.EmployeeName
   
   FROM View_ShiftSummary_SignRegister as a 
   left OUTER JOIN tbl_DBT_Location as l
    on a.LocationID = l.LocationID
   left outer join tbl_SYS_ActivityReasonLink AS ar
    ON a.Task = ar.ActivityreasonLinkID
   left outer join tbl_SYS_Reason as r 
    ON ar.ReasonID = r.ReasonID
   
   left outer JOIN 
   	(SELECT  [SignID] = AttributeID, [SignLabel] = AttributeDescription 
				FROM  dbo.tbl_DBT_AttributeProjectLink
					WHERE AttributeTypeID = 503
		) AS sign
  on a.[Sign Number] = sign.SignID

    left outer join
    (SELECT  [EmployeeID] = EmployeeID, [EmployeeName] = EmployeeName 
				FROM dbo.tbl_DBT_Employees
        ) AS emp
  ON a.[Installed by] = emp.EmployeeID

  where a.SignChangeIncrement = 1
    AND a.projectid = @projectid
    	AND 
        ((@Display = '24Hr_SafetySummary_All' AND a.DATE = @Date)
        OR
        (@Display = '24Hr_SafetySummary_All_last_3_Days' and a.Date between @3DaysAgo and @date)
        OR
        (@Display = '24Hr_SafetySummary_All_31_Days' and a.Date between @31DaysAgo and @date))


/**********
Normal hazard stuff
**********/

SELECT DISTINCT 'Operator' AS 'GroupingField'
				-- this is not displayed, tells you which field to group by on the page
				,s.ProjectID
				,[Shift]
				,[Date] 
				,s.DataStoreID
				,s.DetailID
				,s.Sequence

				,ar.TaskName --+ ' - Flagged Items' AS 'Metric'
				-- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
				,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
				,e.EmployeeName AS 'Operator'
				,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
				,eq.EquipmentCode AS EquipID
				,lp.LocationCode AS [Location]
				,i.DisplayOrder
				,CASE 
					WHEN s.InputType LIKE 'Q%'
						THEN q.QuestionText
					ELSE i.ForeLabel
					END AS 'TWI Question'
					,s.InputType
					,i.ForeLabel
					,q.QuestionText
					,s.InputID
				,s.InputValue --AS 'Answer'
				,s.InputValue AS 'Answer'
				,q.intolerablevalue
				--,'Include'= case --over-ride
				--				WHEN s.InputValue = q.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/
				--					THEN 1
				--				ELSE 0
				--				END  --removed this was bringing in other stuff
				,InputComment=isnull(s.InputComment, '') 
				,CommentsCheck=isnull(s.CommentsCheck, '') 
				,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
				,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
				,'' AS 'Other Info'
				,s.LocalStagingID
				,s.StagingID
				,s.FeedbackAdvice
				,s.Type
				--,ar.TaskName
				,at.AttributeDescription
				,at.AttTypeDesc

	into #AllSafetyData
			FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
			LEFT JOIN dbo.[tbl_SYS_Questions] AS q
				ON s.inputID = q.QuestionID
					AND s.InputType LIKE 'Q%'
			LEFT JOIN dbo.tbl_DBT_Employees AS e
				ON s.OperatorID = e.EmployeeID
			left join --dbo.view_GetAttributes as at
                dbo.VIEW_GETATTRIBUTES_CACHED as at  --2022-03-16 these are getting rebuilt as part of the geology grade mappig so shoudl be up to date.
				on s.InputType like '%attr%'
				and s.InputID =at.AttributeTypeID
				and at.ProjectID in (@ProjectID,0)
				and (cast(at.AttributeID as varchar) = s.InputValue or s.InputType <> 'AttrList')
			LEFT JOIN dbo.tbl_SYS_Equipment AS eq
				ON s.EquipmentID = eq.EquipmentCodeID
			LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
				ON i.ActReasonLinkID = s.ActivityReasonID
					AND s.InputID = i.InputID
					AND ((@TWIALIASed = 1  AND  i.ProjectID = @projectID ))-- OR (@TWIALIASed = 0 AND  i.ProjectID = 1 ))  --added TS 20180702 because of aliased TWis coming from @Project
					AND s.InputType = i.InputType
			LEFT JOIN dbo.tbl_DBT_Location AS lp
				ON s.Location = lp.LocationID
			LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
				ON a.LocalStagingID = s.LocalStagingID
					AND a.ProjectID = s.ProjectID

			INNER JOIN vw_Iplod_GetAR_TaskGroupingsAll--'ReportingSplits','')--,'AR_TWIs')
								as ar
				ON s.ActivityReasonID = ar.activityreasonid
				and ar.HasHazards=1
				AND s.ProjectID = ar.projectID
			WHERE --s.InputType like 'Q%' AND
				NOT (s.InputType = 'Stat' AND s.InputID = 7)
				--AND s.InputType <> 'AttrList'
			--	AND NOT (s.InputType = 'AttrInput' AND s.InputID = 84)

				AND 
        ((@Display = '24Hr_SafetySummary_All' AND s.DATE = @Date)
        OR
        (@Display = '24Hr_SafetySummary_All_last_3_Days' and s.Date between @3DaysAgo and @date)
        OR
        (@Display = '24Hr_SafetySummary_All_31_Days' and s.Date between @31DaysAgo and @date))


				AND s.ProjectID = @ProjectID
			--	AND s.ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@TWIARIDs))


/*********
flagged items
**********/
		SELECT Metric + ' - ' + ISNULL(Type,'Mining') AS Group1
			, 'GroupOrder' = dense_rank() OVER ( ORDER BY metric )
			,NULL AS 'GroupColour'
			,NULL AS 'ColourCode'
			--,CodeForINX = CASE WHEN metric = '_Outstanding Hazards' THEN LocalStagingID ELSE '-' END
			,Shift
			--  ,ISNULL(Operator, 'No Operator Match') as Operator
			--,Metric
			,Time
      ,Date 
			,Operator + ' - ' + ISNULL(ReasonDescription, 'No Task Selected') + ' (' + EquipID + ')' AS 'Task Description'
			,[Location]
			-- ,DisplayOrder
			,Question = dbo.FN_StripHTML([TWI Question])  --removed the TWI alias 
			,Answer = CASE WHEN Answer = 'False' THEN 'No' WHEN Answer = 'True' THEN 'Yes' ELSE Answer END  --added to standardise for Glencore (probably a good idea anyway though)			
			--,Answer
			,UPPER(Comments) AS 'Comments'
			,[HasPhoto]
			,[PhotoLabel]
			,[Other Info]
			,StagingID
			,FeedbackAdvice
		--	,tbl.TaskName

		FROM (
			--Flagged Items  
			SELECT DISTINCT 'Operator' AS 'GroupingField'
				-- this is not displayed, tells you which field to group by on the page
				,[Shift]
				,s.TaskName + ' - Flagged Items' AS 'Metric'
				-- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
				,[Time]
        ,Date
				,Operator
				, CompKey
				, EquipID
				, [Location]
				,DisplayOrder
				,[TWI Question]
				,[Answer]
				,s.intolerablevalue
				,'Include'= case --over-ride
								WHEN s.InputValue = s.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/
									THEN 1
								ELSE 0
								END  --removed this was bringing in other stuff
				,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
				,[HasPhoto]
				,s.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
				,'' AS 'Other Info'
				,s.LocalStagingID
				,s.StagingID
				,s.FeedbackAdvice
				,s.Type
				,s.TaskName
			from #AllSafetyData as s

			WHERE --s.InputType like 'Q%' AND
				NOT (s.InputType = 'Stat' AND s.InputID = 7)
				AND s.InputType <> 'AttrList'
			--	AND NOT (s.InputType = 'AttrInput' AND s.InputID = 84)
				--AND s.DATE = @Date
        AND 
        ((@Display = '24Hr_SafetySummary_All' AND s.DATE = @Date)
        OR
        (@Display = '24Hr_SafetySummary_All_last_3_Days' and s.Date between @3DaysAgo and @date)
        OR
        (@Display = '24Hr_SafetySummary_All_31_Days' and s.Date between @31DaysAgo and @date))

				AND s.ProjectID = @ProjectID
			--	AND s.ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@TWIARIDs))




			) AS tbl
		LEFT JOIN (
			SELECT s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
				,ReasonDescription
			FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
			INNER JOIN dbo.tbl_SYS_Reason AS r
				ON s.InputValue = r.ReasonID
							INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','')--,'AR_TWIs')
								as ar
				ON s.ActivityReasonID = ar.activityreasonid
				and ar.HasHazards=1
			WHERE s.InputType = 'AttrList'
				AND s.InputID = 97
				--AND s.DATE = @Date
        AND 
        ((@Display = '24Hr_SafetySummary_All' AND s.DATE = @Date)
        OR
        (@Display = '24Hr_SafetySummary_All_last_3_Days' and s.Date between @3DaysAgo and @date)
        OR
        (@Display = '24Hr_SafetySummary_All_31_Days' and s.Date between @31DaysAgo and @date))

				AND s.ProjectID = @ProjectID
				--AND s.ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@TWIARIDs))
			) AS reas
			ON tbl.CompKey = reas.CompKey
		WHERE Include = 1
		ORDER BY 
						GroupOrder
			,Group1
			,Metric
			,Shift
			,[Task Description]
			,Location
			,TIME
			,DisplayOrder


/*********
Hazards. Shift this to a view, say: ALTER VIEW [dbo].[View_ShiftSummary_AllSafetyHazards] or even special for MCR?
**********/
--Detail ID: 21DataStoreID : 399_202106141900NS_12882_1 DebugDisplay : ARId=1779, 399_202106141900NS_12882_1, 21
--select * FROM #AllSafetyData 
--where DataStoreID = '399_202106141900NS_12882_1'
--and DetailID=21
--EXEC [dbo].[SP_ShiftSummary_QTypeInputs_v2] @projectID = '399', @Date = '2021-06-14', @Type = 'Safety', @Display = '24Hr_SafetySummary_All', @OperatorID = '', @EquipmentID = ''


		select Group1 = h.HazardStatus + ' - ' +h.WrkType
			--h.PvtJn_TaskGroupId
			 , h.[HAZARD LEVEL]
			, h.Metric
             , h.Date
             , h.Shift

             --, h.HazardStatus
             --, h.HazardStatusInt
             , h.Time
             --, h.ReviewedBy
             , h.Operator
            -- , h.CompKey
             , h.EquipID
             , h.Location
             , h.GenComments

            -- , h.WrkType
            -- , h.HazOperatorID

             , h.DESCRIPTION
             , h.[IMMEDIATE ACTION TAKEN:]
             , h.[RECOMMENDATION:]
             , h.[SAFETY IDEA]
             , h.[CORRECTIVE ACTIONS]

                , h.HasPhoto
             , h.PhotoLabel
             --, h.ProjectID
             , h.FeedbackAdvice
             , h.StagingID         
            -- , h.TaskName
			 from 
		[dbo].[View_ShiftSummary_TWIHazards_MCR] as h
		where 
    --date = @Date

        ((@Display = '24Hr_SafetySummary_All' AND h.DATE = @Date)
        OR
        (@Display = '24Hr_SafetySummary_All_last_3_Days' and h.Date between @3DaysAgo and @date)
        OR
        (@Display = '24Hr_SafetySummary_All_31_Days' and h.Date between @31DaysAgo and @date))

		and @ProjectID= projectid
		--and shift = @shift
		order by OrderBy, h.HazardStatusInt


--			SELECT 'Safety Photos' AS 'Group1'  -- Select photos taken 
--			,1 AS 'GroupOrder'
--			,NULL AS 'GroupColour'
--			,NULL AS 'ColourCode'
--			,Eq.EquipmentCode as 'Equipment'
--			,case when i.inputgroup is not null then ar.tg_ReasonAlias + ' - ' + i.InputGroup 
--			--when s.ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](ISNULL((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_TWIs'),''))) 
--			--then ar.tg_ReasonAlias 
--			else ar.tg_ReasonAlias end as 'Task'
--			,lp.LocationCode as 'Location'
--			,EmployeeName as 'Operator'
--			--,ISNULL(e.employeename, 'Admin') as 'Operator'
--		--	,i.forelabel
--			,s.CommentsCheck /* + '  -  ' + s.InputComment */ as 'Operator Comments'
--			,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
--			,i.ForeLabel /* + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') */ AS 'PhotoLabel'



--		FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
--		LEFT JOIN

--			dbo.tbl_DBT_Employees AS e
--			ON s.OperatorID = e.EmployeeID
--		LEFT JOIN dbo.tbl_SYS_Equipment AS eq
--			ON s.EquipmentID = eq.EquipmentCodeID
--		LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
--			ON i.ActReasonLinkID = s.ActivityReasonID
--				AND s.InputID = i.InputID
--				AND s.InputType = i.InputType
--		LEFT JOIN dbo.tbl_DBT_Location AS lp
--			ON s.Location = lp.LocationID
--		LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
--			ON a.LocalStagingID = s.LocalStagingID
--				AND a.ProjectID = s.ProjectID
--		--LEFT JOIN [dbo].[tbl_sys_activityreasonlink] as ar 
--		--	ON ar.activityreasonlinkid = s.ActivityReasonID
--		--LEFT JOIN [dbo].[tbl_sys_reason] as r
--		--	ON r.reasonid = ar.ReasonID
--					INNER JOIN dbo.FN_Iplod_GetAR_TaskGroupings('ReportingSplits','')--,'AR_TWIs')
--								as ar
--				ON s.ActivityReasonID = ar.activityreasonid
--				and ar.HasHazards=1
--		where s.ProjectID = @ProjectID
--			AND s.DATE = @Date
--			and s.inputtype = 'Camera'
--			AND a.LocalStagingID IS NOT NULL
--			--and s.ActivityReasonID IN (
--			--	SELECT ID
--			--	FROM [dbo].[FN_SplitString](@TWIARIDs)
--			--	) 

--IF OBJECT_ID(N'tempdb..#AllSafetyData') IS NOT NULL
BEGIN
DROP TABLE #AllSafetyData
END

	END


------------------------------------------------------


  ELSE
  IF (@Type = 'Safety'
    AND @Display IN ('24Hr_SafetySummary', '24Hr_TWISummary')) --2022-03-31--cant chage this until we pass in @ProjectID into teh view for Q Review Selections
  BEGIN
    --header of page
    SELECT
      ProjectName + ' - ' + @TWIALIAS + ' Summary Report for ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    --data to be displayed on page    
    SELECT
      Metric + ' - ' + ISNULL(Type, 'Mining') AS Group1
     ,2 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,CodeForINX =
      CASE
        WHEN metric = '_Outstanding Hazards' THEN LocalStagingID
        ELSE '-'
      END
     ,Shift
      --  ,ISNULL(Operator, 'No Operator Match') as Operator
      --,Metric
     ,TIME
     ,Operator + ' - ' + ISNULL(ReasonDescription, 'No Task Selected') + ' (' + EquipID + ')' AS 'Task Description'
     ,[Location]
      -- ,DisplayOrder
     ,Question = dbo.FN_StripHTML([TWI Question])  --removed the TWI alias 
     ,Answer =
      CASE
        WHEN Answer = 'False' THEN 'No'
        WHEN Answer = 'True' THEN 'Yes'
        ELSE Answer
      END  --added to standardise for Glencore (probably a good idea anyway though)			
      --,Answer
     ,UPPER(Comments) AS 'Comments'
     ,[HasPhoto]
     ,[PhotoLabel]
     ,[Other Info]
     ,StagingID
     ,FeedbackAdvice

    FROM (
      --Flagged Items  
      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,Shift
       ,'Flagged Items' AS 'Metric'
        -- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,CASE
          WHEN s.InputType LIKE 'Q%' THEN q.QuestionText
          ELSE i.ForeLabel
        END AS 'TWI Question'
       ,s.InputValue AS 'Answer'
       ,q.intolerablevalue
       ,CASE
          WHEN s.InputValue = q.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/
          THEN 1
          ELSE 0
        END AS 'Include' --removed this was bringing in other stuff
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.LocalStagingID
       ,s.StagingID
       ,s.FeedbackAdvice
       ,s.Type
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN dbo.[tbl_SYS_Questions] AS q
        ON s.inputID = q.QuestionID
        AND s.InputType LIKE 'Q%'
      LEFT JOIN dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      NOT (s.InputType = 'Stat'
      AND s.InputID = 7)
      AND s.InputType <> 'AttrList'
      AND NOT (s.InputType = 'AttrInput'
      AND s.InputID = 84)
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL --Locations

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,Shift
       ,'Locations Selected' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,l.LocationCode AS 'Answer'
       ,'' AS intolerablevalue
       ,0 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.LocalStagingID
       ,s.StagingID
       ,s.FeedbackAdvice
       ,s.Type
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      INNER JOIN dbo.tbl_DBT_Location AS l
        ON s.InputValue = l.LocationID
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrList'
      AND s.InputID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@LocnAttrTypes))
      AND --hook this into configs table instead
      s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL --Levels

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,Shift
       ,'Levels Selected' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,l.LocLevel AS 'Answer'
       ,'' AS intolerablevalue
       ,0 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.LocalStagingID
       ,s.StagingID
       ,s.FeedbackAdvice
       ,s.Type
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      INNER JOIN dbo.tbl_DBT_Location AS l
        ON s.InputValue = l.LevelID
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrList'
      AND s.InputID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@LevelAttrTypes))
      AND --hook this into configs table instead
      s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL --shiftboss name

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,Shift
       ,'Shiftboss Checks' AS 'Metric'
       ,SUBSTRING(CAST(s.InputTimestamp AS VARCHAR(20)), 12, 8) AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,s.inputvalue AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
       ,ISNULL(em.EmployeeName, 'No Match on Shiftboss Emp Number') + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.LocalStagingID
       ,s.StagingID
       ,s.FeedbackAdvice
       ,s.Type
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN dbo.tbl_DBT_Employees AS em
        ON dbo.FN_StringPad(s.inputvalue, 5, '0') = em.MinePointCode
        AND em.ProjectID = @ProjectID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrInput'
      AND s.InputID = 84
      AND s.inputvalue <> ''  --2019-02-20
      AND --hook this into configs table instead
      s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL -- Hazards

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,s.Shift
       ,CASE
          WHEN haz.InputValue IN ('238', '1637') THEN 'Resolved Hazards'
          WHEN haz.InputValue IN ('1638', '237') THEN '_Outstanding Hazards'
          ELSE 'Resolved Hazards' --set missing to = "Resolved" for BRK SLAMS
        END
        --ie further action <> no ... allows for addition of different allocations for yes (eg urgent, not urgent etc)
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,ISNULL(i.ForeLabel, 'Hazard') + ' #' + CAST(s.Sequence + 1 AS VARCHAR) AS 'TWI Question'
       ,ISNULL(h.HazardDescription, 'Hazard Type Not Recorded') AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') + '  ' + ISNULL(com.InputValue, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'Action Taken: ' + ISNULL(act.InputValue, ';') + '; Further Action Req: ' + ISNULL(futh.AttributeDescription, ';') AS 'Other Info'
       ,s.LocalStagingID
       ,s.StagingID
       ,s.FeedbackAdvice
       ,s.Type
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_SYS_Hazards AS h
        ON s.InputValue = h.HazardID
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      INNER JOIN [dbo].[syn_DWH_iPlodStagingTable] AS haz
        ON s.DetailID = haz.DetailID
        AND s.DataStoreID = haz.DataStoreID
        AND s.Sequence = haz.Sequence
        AND haz.InputType = 'AttrList'
        AND haz.InputID = 93
        AND haz.InputValue <> 248
      LEFT JOIN [dbo].[syn_DWH_iPlodStagingTable] AS com
        ON s.DetailID = com.DetailID
        AND s.DataStoreID = com.DataStoreID
        AND s.Sequence = com.Sequence
        AND com.InputType = 'AttrInput'
        AND com.InputID = 85
      LEFT JOIN [dbo].[syn_DWH_iPlodStagingTable] AS act
        ON s.DetailID = act.DetailID
        AND s.DataStoreID = act.DataStoreID
        AND s.Sequence = act.Sequence
        AND act.InputType = 'AttrInput'
        AND act.InputID = 86
      LEFT JOIN (SELECT
          DetailID
         ,DatastoreID
         ,Sequence
         ,AttributeDescription
        FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
        INNER JOIN dbo.tbl_DBT_AttributeProjectLink AS ap
          ON s.InputType = 'AttrList'
          AND s.InputID = 93
          AND s.InputValue = ap.AttributeID) AS futh
        ON s.DetailID = futh.DetailID
        AND s.DataStoreID = futh.DataStoreID
        AND s.Sequence = futh.Sequence
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrList'
      AND s.InputID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@HazardAttrTypes))
      AND ISNULL(s.InputValue, '') <> ''
      AND s.inputValue <> 26 --26 is a value called No Hazard
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))) AS tbl
    LEFT JOIN (SELECT
        s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,ReasonDescription
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      INNER JOIN dbo.tbl_SYS_Reason AS r
        ON s.InputValue = r.ReasonID
      WHERE s.InputType = 'AttrList'
      AND s.InputID = 97
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))) AS reas
      ON tbl.CompKey = reas.CompKey
    WHERE Include = 1
    ORDER BY GroupOrder
    , Group1
    , Metric
    , Shift
    , [Task Description]
    , Location
    , TIME
    , DisplayOrder

    SELECT
      'TWI Photos' AS 'Group1'  -- Select photos taken 
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,Eq.EquipmentCode AS 'Equipment'
     ,CASE
        WHEN i.inputgroup IS NOT NULL THEN r.ReasonDescription + ' - ' + i.InputGroup
        WHEN s.ActivityReasonID IN (SELECT
              ID
            FROM [dbo].[FN_SplitString](ISNULL((SELECT
                ConfigValue
              FROM tbl_SYS_WebbarConfigs
              WHERE ConfigName = 'AR_TWIs')
            , ''))) THEN r.ReasonDescription
        ELSE r.ReasonDescription
      END AS 'Task'
     ,lp.LocationCode AS 'Location'
     ,EmployeeName AS 'Operator'
      --,ISNULL(e.employeename, 'Admin') as 'Operator'
      --	,i.forelabel
     ,s.CommentsCheck /* + '  -  ' + s.InputComment */ AS 'Operator Comments'
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,i.ForeLabel /* + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') */ AS 'PhotoLabel'



    FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
    LEFT JOIN dbo.tbl_DBT_Employees AS e

      ON s.OperatorID = e.EmployeeID
    LEFT JOIN dbo.tbl_SYS_Equipment AS eq
      ON s.EquipmentID = eq.EquipmentCodeID
    LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
      ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND s.InputType = i.InputType
    LEFT JOIN dbo.tbl_DBT_Location AS lp
      ON s.Location = lp.LocationID
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
      ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
    LEFT JOIN [dbo].[tbl_sys_activityreasonlink] AS ar
      ON ar.activityreasonlinkid = s.ActivityReasonID
    LEFT JOIN [dbo].[tbl_sys_reason] AS r
      ON r.reasonid = ar.ReasonID
    WHERE s.ProjectID = @ProjectID
    AND s.DATE = @Date
    AND s.inputtype = 'Camera'
    AND a.LocalStagingID IS NOT NULL
    AND s.ActivityReasonID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@TWIARIDs))


  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Safety'
    AND @Display IN ('TWIDetail', 'IndividualOperator'))
  -- this has started as just a copy of the above, except include everything
  BEGIN
    --header of page
    SELECT
      ProjectName + ' - ' + @TWIALIAS + ' Detail Report for ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    --data to be displayed on page    
    SELECT
      CASE
        WHEN @Display = 'TWIDetail' THEN Operator
        ELSE ISNULL(ReasonDescription, 'No Task Selected')
      END AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,Shift
      -- ,ISNULL(Operator, 'No Operator Match') as Operator
      -- ,Metric
      --,Operator
     ,TIME
     ,ISNULL(Operator, 'No Match On Operator') + ' - ' + ISNULL(ReasonDescription, 'No Task Selected') + ' (' + EquipID + ')' AS 'Task Description'
     ,[Location]
      -- ,DisplayOrder
     ,Question = dbo.FN_StripHTML([TWI Question])
     ,Answer =
      CASE
        WHEN Answer = 'False' THEN 'No'
        WHEN Answer = 'True' THEN 'Yes'
        ELSE Answer
      END  --added to standardise for Glencore (probably a good idea anyway though)
      --,Answer
     ,UPPER(Comments) AS 'Comments'
     ,[HasPhoto]
     ,PhotoLabel
     ,[Other Info]
    --,tbl.CompKey   --added for troubleshooting 
    --,tbl.InputType_ID  --added for troubleshooting 
    --,operatorID 
    FROM (
      --Flagged Items  
      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Red'
       ,Shift
       ,'Flagged Items' AS 'Metric'
        -- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,CASE
          WHEN s.InputType LIKE 'Q%' THEN q.QuestionText
          ELSE i.ForeLabel
        END AS 'TWI Question'
       ,s.InputValue AS 'Answer'
       ,q.intolerablevalue
        --,s.Sequence        
        -- ,CASE WHEN s.InputValue = q.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/ THEN 1 ELSE 0 END AS 'Include'  --removed this was bringing in other stuff
       ,1 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
       ,InputType_ID = s.INputType + '_' + CAST(s.InputID AS VARCHAR)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN dbo.[tbl_SYS_Questions] AS q
        ON s.inputID = q.QuestionID
        AND s.InputType LIKE 'Q%'
      LEFT JOIN dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      NOT (s.InputType = 'Stat'
      AND s.InputID = 7)
      AND s.InputType <> 'AttrList'
      AND NOT (s.InputType = 'AttrInput'
      AND s.InputID = 84)
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL --Locations

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Black'
       ,Shift
       ,'Locations Selected' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,l.LocationCode AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
        --,s.Sequence 
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
       ,InputType_ID = s.INputType + '_' + CAST(s.InputID AS VARCHAR)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      INNER JOIN dbo.tbl_DBT_Location AS l
        ON s.InputValue = l.LocationID
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrList'
      AND s.InputID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@LocnAttrTypes))
      AND --hook this into configs table instead
      s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL --Levels

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Black'
       ,Shift
       ,'Levels Selected' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,l.LocLevel AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
        --,s.Sequence 
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
       ,InputType_ID = s.INputType + '_' + CAST(s.InputID AS VARCHAR)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      INNER JOIN dbo.tbl_DBT_Location AS l
        ON s.InputValue = l.LevelID
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrList'
      AND s.InputID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@LevelAttrTypes))
      AND --hook this into configs table instead
      s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))

      UNION ALL --shiftboss name

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Black'
       ,Shift
       ,'Shiftboss Checks' AS 'Metric'
       ,SUBSTRING(CAST(s.InputTimestamp AS VARCHAR(20)), 12, 8) AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,s.inputvalue AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
        --,s.Sequence 
       ,ISNULL(em.EmployeeName, 'No Match on Shiftboss Emp Number') + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
       ,InputType_ID = s.INputType + '_' + CAST(s.InputID AS VARCHAR)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN dbo.tbl_DBT_Employees AS em
        ON dbo.FN_StringPad(s.inputvalue, 5, '0') = em.MinePointCode
        AND em.ProjectID = @ProjectID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrInput'
      AND s.InputID = 84
      AND --hook this into configs table instead
      s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))



      UNION ALL --page breaks

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Blue'
       ,Shift
       ,'Page Breaks' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,'TWI Question' = i.ForeLabel
       ,'' AS 'Answer'
       ,'' AS intolerablevalue
       ,'Include' = @TWIALIASed    -- only include the page breaks fro the Glencore SLAM (our TWIs have fairly Banal headings)
        --,s.Sequence 
       ,Comments = '' --ISNULL(em.EmployeeName, 'No Match on Shiftboss Emp Number') + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') 
       ,'' AS 'HasPhoto'
       ,'' AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
       ,InputType_ID = s.INputType + '_' + CAST(s.InputID AS VARCHAR)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        --AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND i.InputType LIKE '%Break'
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN dbo.tbl_DBT_Employees AS em
        ON dbo.FN_StringPad(s.inputvalue, 5, '0') = em.MinePointCode
        AND em.ProjectID = @ProjectID

      WHERE --s.InputType like 'Q%' AND
      s.InputType LIKE '%Stat'
      AND s.InputID = 7
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))




      UNION ALL -- Hazards

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Black'
       ,s.Shift
       ,CASE
          WHEN haz.InputValue IN ('238', '1637') THEN 'Resolved Hazards'
          WHEN haz.InputValue IN ('1638', '237') THEN '_Outstanding Hazards'
          ELSE 'Resolved Hazards' --set missing to = "Resolved" for BRK SLAMS
        END
        --ie further action <> no ... allows for addition of different allocations for yes (eg urgent, not urgent etc)
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,e.EmployeeName AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,ISNULL(i.ForeLabel, 'Hazard') + ' #' + CAST(s.Sequence + 1 AS VARCHAR) AS 'TWI Question'
       ,h.HazardDescription AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
        --,s.Sequence 
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') + '  ' + ISNULL(com.InputValue, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'Action Taken: ' + ISNULL(act.InputValue, '---;') + '; Further Action Req: ' + ISNULL(futh.AttributeDescription, '---;') AS 'Other Info'
       ,s.OperatorID
       ,InputType_ID = s.INputType + '_' + CAST(s.InputID AS VARCHAR)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      -- dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_SYS_Hazards AS h
        ON s.InputValue = h.HazardID
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      INNER JOIN [dbo].[syn_DWH_iPlodStagingTable] AS haz
        ON s.DetailID = haz.DetailID
        AND s.DataStoreID = haz.DataStoreID
        AND s.Sequence = haz.Sequence
        AND haz.InputType = 'AttrList'
        AND haz.InputID = 93
        AND haz.InputValue <> 248
      LEFT JOIN [dbo].[syn_DWH_iPlodStagingTable] AS com
        ON s.DetailID = com.DetailID
        AND s.DataStoreID = com.DataStoreID
        AND s.Sequence = com.Sequence
        AND com.InputType = 'AttrInput'
        AND com.InputID = 85
      LEFT JOIN [dbo].[syn_DWH_iPlodStagingTable] AS act
        ON s.DetailID = act.DetailID
        AND s.DataStoreID = act.DataStoreID
        AND s.Sequence = act.Sequence
        AND act.InputType = 'AttrInput'
        AND act.InputID = 86
      LEFT JOIN (SELECT
          DetailID
         ,DatastoreID
         ,Sequence
         ,AttributeDescription
        FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
        INNER JOIN dbo.tbl_DBT_AttributeProjectLink AS ap
          ON s.InputType = 'AttrList'
          AND s.InputID = 93
          AND s.InputValue = ap.AttributeID) AS futh
        ON s.DetailID = futh.DetailID
        AND s.DataStoreID = futh.DataStoreID
        AND s.Sequence = futh.Sequence


      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      s.InputType = 'AttrList'
      AND s.InputID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@HazardAttrTypes))
      AND ISNULL(s.InputValue, '') <> ''
      AND s.inputValue <> 26 --26 is a value called No Hazard
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))) AS tbl
    LEFT JOIN (SELECT
        s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,ReasonDescription
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      INNER JOIN dbo.tbl_SYS_Reason AS r
        ON s.InputValue = r.ReasonID
      WHERE s.InputType = 'AttrList'
      AND s.InputID = 97
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@TWIARIDs))) AS reas
      ON tbl.CompKey = reas.CompKey
    WHERE Include = 1
    AND (OperatorID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@OperatorID))
    OR @OperatorID IS NULL)
    ORDER BY GroupOrder
    , Group1
    , Operator
    , Location
    , TIME
    , DisplayOrder
  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Client Forms'
    AND @Display IN ('Glencore_OGCAS'))
  -- this has started as just a copy of the above, except include everything
  BEGIN
    --header of page
    SELECT
      ProjectName + ' - ' + @TWIALIAS + ' OGCAS Detail Report for ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    --data to be displayed on page    
    SELECT
      Operator AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,ColourCode
     ,Shift
      -- ,ISNULL(Operator, 'No Operator Match') as Operator
      -- ,Metric
      --,Operator
     ,TIME
      --	,Operator + ' - ' + ISNULL(ReasonDescription, 'No Task Selected') + ' (' + EquipID + ')' AS 'Task Description'
     ,Operator + ' - ' + EquipID
     ,[Location]
      -- ,DisplayOrder
     ,Question = [TWI Question]
     ,Answer =
      CASE
        WHEN Answer = 'False' THEN 'No'
        WHEN Answer = 'True' THEN 'Yes'
        ELSE Answer
      END
     ,UPPER(Comments) AS 'Comments'
     ,[HasPhoto]
     ,PhotoLabel
     ,[Other Info]
    FROM (
      --Flagged Items  
      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode =
        CASE
          WHEN s.InputValue = q.intolerablevalue THEN 'Red'
          ELSE 'Black'
        END
       ,Shift
       ,'All Form Questions' AS 'Metric'
        -- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,ISNULL(e.EmployeeName, 'No Match on Operator') AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,CASE
          WHEN s.InputType LIKE 'Q%' THEN q.QuestionText
          ELSE i.ForeLabel
        END AS 'TWI Question'
       ,s.InputValue AS 'Answer'
       ,q.intolerablevalue
        --,s.Sequence        
        -- ,CASE WHEN s.InputValue = q.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/ THEN 1 ELSE 0 END AS 'Include'  --removed this was bringing in other stuff
       ,1 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID

      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN dbo.[tbl_SYS_Questions] AS q
        ON s.inputID = q.QuestionID
        AND s.InputType LIKE 'Q%'
      LEFT JOIN dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType

      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      NOT (s.InputType = 'Stat'
      AND s.InputID = 7)
      --AND s.InputType <> 'AttrList'
      --AND NOT (s.InputType = 'AttrInput' AND s.InputID = 84)
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@OGCAS))

      UNION ALL --page breaks

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Blue'
       ,Shift
       ,'Page Breaks' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,ISNULL(e.EmployeeName, 'No Match on Operator') AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,'' AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
        --,s.Sequence 
       ,Comments = '' --ISNULL(em.EmployeeName, 'No Match on Shiftboss Emp Number') + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') 
       ,'' AS 'HasPhoto'
       ,'' AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
      --,InputType_ID = s.INputType+'_'+CAST(s.InputID as varchar)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        --AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND i.InputType LIKE '%Break'
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN dbo.tbl_DBT_Employees AS em
        ON dbo.FN_StringPad(s.inputvalue, 5, '0') = em.MinePointCode
        AND em.ProjectID = @ProjectID

      WHERE --s.InputType like 'Q%' AND
      s.InputType LIKE '%Stat'
      AND s.InputID = 7
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT


          ID
        FROM [dbo].[FN_SplitString](@OGCAS))) AS tbl
    LEFT JOIN (SELECT
        s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,ReasonDescription
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      INNER JOIN dbo.tbl_SYS_Reason AS r
        ON s.InputValue = r.ReasonID
      WHERE s.InputType = 'AttrList'
      AND s.InputID = 97
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@OGCAS))) AS reas
      ON tbl.CompKey = reas.CompKey
    WHERE Include = 1
    AND (OperatorID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@OperatorID))
    OR @OperatorID IS NULL)
    ORDER BY GroupOrder
    , Group1
    --,Operator
    , Location
    , TIME
  --,DisplayOrder
  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Client Forms'
    AND @Display IN ('Glencore_OSAAS'))
  -- this has started as just a copy of the above, except include everything
  BEGIN
    --header of page
    SELECT
      ProjectName + ' - ' + @TWIALIAS + ' OSAAS Detail Report for ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    --data to be displayed on page    
    SELECT
      Operator AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,ColourCode
     ,Shift
      -- ,ISNULL(Operator, 'No Operator Match') as Operator
      -- ,Metric
      --,Operator
     ,TIME
      --	,Operator + ' - ' + ISNULL(ReasonDescription, 'No Task Selected') + ' (' + EquipID + ')' AS 'Task Description'
     ,Operator + ' - ' + EquipID
     ,[Location]
      -- ,DisplayOrder
     ,Question = [TWI Question]
     ,Answer =
      CASE
        WHEN Answer = 'False' THEN 'No'
        WHEN Answer = 'True' THEN 'Yes'
        ELSE Answer
      END
     ,UPPER(Comments) AS 'Comments'
     ,[HasPhoto]
     ,PhotoLabel
     ,[Other Info]
    FROM (
      --Flagged Items  
      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode =
        CASE
          WHEN s.InputValue = q.intolerablevalue THEN 'Red'
          ELSE 'Black'
        END
       ,Shift
       ,'All Form Questions' AS 'Metric'
        -- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,ISNULL(e.EmployeeName, 'No Match on Operator') AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,CASE
          WHEN s.InputType LIKE 'Q%' THEN q.QuestionText
          ELSE i.ForeLabel
        END AS 'TWI Question'
       ,s.InputValue AS 'Answer'
       ,q.intolerablevalue
        --,s.Sequence        
        -- ,CASE WHEN s.InputValue = q.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/ THEN 1 ELSE 0 END AS 'Include'  --removed this was bringing in other stuff
       ,1 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID

      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN dbo.[tbl_SYS_Questions] AS q
        ON s.inputID = q.QuestionID
        AND s.InputType LIKE 'Q%'
      LEFT JOIN dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND s.InputType = i.InputType
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      WHERE --s.InputType like 'Q%' AND
      NOT (s.InputType = 'Stat'
      AND s.InputID = 7)
      --AND s.InputType <> 'AttrList'
      --AND NOT (s.InputType = 'AttrInput' AND s.InputID = 84)
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@OSAAS))

      UNION ALL --page breaks

      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode = 'Blue'
       ,Shift
       ,'Page Breaks' AS 'Metric'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,ISNULL(e.EmployeeName, 'No Match on Operator') AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,i.ForeLabel AS 'TWI Question'
       ,'' AS 'Answer'
       ,'' AS intolerablevalue
       ,1 AS 'Include'
        --,s.Sequence 
       ,Comments = '' --ISNULL(em.EmployeeName, 'No Match on Shiftboss Emp Number') + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') 
       ,'' AS 'HasPhoto'
       ,'' AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID
      --,InputType_ID = s.INputType+'_'+CAST(s.InputID as varchar)
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN
      --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
      dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        --AND s.InputID = i.InputID
        AND ((@TWIALIASed = 1
        AND i.ProjectID = @projectID)
        OR (@TWIALIASed = 0
        AND i.ProjectID = 1))  --added TS 20180702 because of aliased TWis coming from @Project
        AND i.InputType LIKE '%Break'
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN dbo.tbl_DBT_Employees AS em
        ON dbo.FN_StringPad(s.inputvalue, 5, '0') = em.MinePointCode
        AND em.ProjectID = @ProjectID

      WHERE --s.InputType like 'Q%' AND
      s.InputType LIKE '%Stat'
      AND s.InputID = 7
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT


          ID
        FROM [dbo].[FN_SplitString](@OSAAS))) AS tbl
    LEFT JOIN (SELECT
        s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,ReasonDescription
      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      INNER JOIN dbo.tbl_SYS_Reason AS r
        ON s.InputValue = r.ReasonID
      WHERE s.InputType = 'AttrList'
      AND s.InputID = 97
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID IN (SELECT
          ID
        FROM [dbo].[FN_SplitString](@OSAAS))) AS reas
      ON tbl.CompKey = reas.CompKey
    WHERE Include = 1
    AND (OperatorID IN (SELECT
        ID
      FROM [dbo].[FN_SplitString](@OperatorID))
    OR @OperatorID IS NULL)
    ORDER BY GroupOrder
    , Group1
    --,Operator
    , Location
    , TIME
    , DisplayOrder
  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Photos'
    AND @Display = 'Photos')
  BEGIN
    --header of page
    SELECT
      ProjectName + ' All uploaded Photos ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    SELECT
      EmployeeName AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,Eq.EquipmentCode AS 'Equipment'
     ,CASE
        WHEN i.inputgroup IS NOT NULL THEN r.ReasonDescription + ' - ' + i.InputGroup
        WHEN s.ActivityReasonID IN (SELECT
              ID
            FROM [dbo].[FN_SplitString](ISNULL((SELECT
                ConfigValue
              FROM tbl_SYS_WebbarConfigs
              WHERE ConfigName = 'AR_TWIs')
            , ''))) THEN r.ReasonDescription
        ELSE r.ReasonDescription
      END AS 'Task'
     ,lp.LocationCode AS 'Location'
      --,ISNULL(e.employeename, 'Admin') as 'Operator'
      --	,i.forelabel
     ,s.CommentsCheck /* + '  -  ' + s.InputComment */ AS 'Operator Comments'
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,i.ForeLabel /* + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') */ AS 'PhotoLabel'
    FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
    LEFT JOIN dbo.tbl_DBT_Employees AS e

      ON s.OperatorID = e.EmployeeID
    LEFT JOIN dbo.tbl_SYS_Equipment AS eq
      ON s.EquipmentID = eq.EquipmentCodeID
    LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
      ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND s.InputType = i.InputType
        AND s.ProjectID = i.ProjectID
    LEFT JOIN dbo.tbl_DBT_Location AS lp
      ON s.Location = lp.LocationID
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
      ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
    LEFT JOIN [dbo].[tbl_sys_activityreasonlink] AS ar
      ON ar.activityreasonlinkid = s.ActivityReasonID
    LEFT JOIN [dbo].[tbl_sys_reason] AS r
      ON r.reasonid = ar.ReasonID

    WHERE s.ProjectID = @ProjectID
    AND s.DATE = @Date
    AND s.inputtype = 'Camera'
    AND a.LocalStagingID IS NOT NULL  -- CA added so we dont pull all lines that COULD have a photo (ie non-compulsory camera inputs on TWI)

  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Test'
    AND @Display = 'TEST')
  BEGIN
    --header of page
    SELECT
      ProjectName + ' TEST dynamic selects ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    SELECT
      EmployeeName AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,Eq.EquipmentCode
     ,s.InputType
     ,s.InputID
     ,i.ForeLabel
     ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
     ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
     ,s.FeedbackAdvice
     ,s.StagingID
    FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
    LEFT JOIN
    --dbo.[tbl_SYS_Questions] as q on s.inputID = q.QuestionID and s.InputType Like 'Q%' LEFT OUTER JOIN
    dbo.tbl_DBT_Employees AS e
      ON s.OperatorID = e.EmployeeID
    LEFT JOIN dbo.tbl_SYS_Equipment AS eq
      ON s.EquipmentID = eq.EquipmentCodeID
    LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
      ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND i.ProjectID = 1
        AND s.InputType = i.InputType
    LEFT JOIN dbo.tbl_DBT_Location AS lp
      ON s.Location = lp.LocationID
    LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
      ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
    WHERE s.ProjectID = @ProjectID
    AND s.DATE = @Date
  /*
          SELECT 'Operators who worked today' AS 'Group1'
                 -- name of group header
                 ,'Blue' AS GroupColour
                 -- colour of group header
                 ,1 AS GroupOrder --display order of the groups
                 -- could put this in as future mods?
                 -- ,'No Operators worked today' as NullMessage,  --message to display under the group if the SELECT for this Group returns no values
                 -- ,'Yes' as DisplayNull                                      --whether to dispaly the NullMessage or not  (some
                 -- SELECT 
                 ,'Blue' AS ColourCode
                 ,Shift
                 ,e.EmployeeName AS 'Operator'
                 ,COUNT(InputValue) AS 'Number inputs recorded'
                 ,eq.EquipmentCode AS 'EquipID'
                 ,lp.LocationCode AS [Location]
                 ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
          FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
          LEFT JOIN dbo.[tbl_SYS_Questions] AS q
                 ON s.inputID = q.QuestionID
                       AND s.InputType LIKE 'Q%'
          LEFT JOIN dbo.tbl_DBT_Employees AS e
                 ON s.OperatorID = e.EmployeeID
          LEFT JOIN dbo.tbl_SYS_Equipment AS eq
                 ON s.EquipmentID = eq.EquipmentCodeID
          LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
                 ON i.ActReasonLinkID = s.ActivityReasonID
                       AND s.InputID = i.InputID
                       AND i.ProjectID = 1
                       AND s.InputType = i.InputType
          LEFT JOIN dbo.tbl_DBT_Location AS lp
                 ON s.Location = lp.LocationID
          LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
                 ON a.LocalStagingID = s.LocalStagingID
			AND a.ProjectID = s.ProjectID
          WHERE -- s.InputType like 'Q%' AND
                 -- NOT(s.InputType = 'Stat' and s.InputID = 7)
                 -- AND
                 s.DATE = @Date
                 AND s.ProjectID = @ProjectID
          GROUP BY EmployeeName
                 ,EquipmentCode
                 ,LocationCode
                 ,Shift
                 ,a.StagingID
          ORDER BY LocationCode
                 ,EquipmentCode
*/
  /*            SELECT 'Locations that have tonnes recorded in them' AS 'Group1'
                 -- name of group header
                 ,'Red' AS GroupColour
                 -- colour of group header
                 ,2 AS GroupOrder --display order of the groups
                 -- SELECT 
                 ,CASE 
                       WHEN SUM(s.InputID) > 50
                              THEN 'Green'
                       ELSE 'Black'
                       END AS ColourCode
                 -- this is for colouring the text of the rows of data (default to black)
                 ,lp.LocationCode AS [Location]
                 ,e.EmployeeName AS 'Operator'
                 ,SUM(s.InputID) AS 'Total Tonnes'
                 ,eq.EquipmentCode AS 'EquipID'
                 ,'is this appropriate?' AS 'Comments'
          FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
          LEFT JOIN dbo.tbl_DBT_Employees AS e
                 ON s.OperatorID = e.EmployeeID
          LEFT JOIN dbo.tbl_SYS_Equipment AS eq
                 ON s.EquipmentID = eq.EquipmentCodeID
          LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
                 ON i.ActReasonLinkID = s.ActivityReasonID
                       AND s.InputID = i.InputID
                       AND i.ProjectID = 1
                       AND s.InputType = i.InputType
          LEFT JOIN dbo.tbl_DBT_Location AS lp
                 ON s.Location = lp.LocationID
          WHERE --s.InputType like 'Q%' AND
                 (
                       s.InputType LIKE 'Stat%'
                       AND s.InputID = 18
                       )
                 AND s.DATE = @Date
                 AND s.ProjectID = @ProjectID
          GROUP BY EmployeeName
                 ,EquipmentCode
                 ,LocationCode
          ORDER BY LocationCode
                 ,EquipmentCode
                 */
  END
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Feedback'
    AND @Display IN ('PLOD Feedback')) --and @ProjectID in (53,3)) 
  -- CA 20180817
  BEGIN
    --header of page
    SELECT
      ' Operator Feedback ' AS 'PageTitle'

    --data to be displayed on page    
    SELECT
      Group1 =
      CASE
        WHEN asp.IsServiceSheet = 1 -- = 'AR_ServiceSheets' -- If it is a service sheet give it seperate headers. 
        THEN CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN 'Service Sheet Feedback'
            ELSE 'Service Sheet Done'
          END
        ELSE CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN 'Needs Feedback'
            ELSE 'Done'
          END
      END


     ,Date AS 'Date'
     ,GroupOrder =
      CASE
        WHEN asp.IsServiceSheet = 1-- = 'AR_ServiceSheets' -- If it is a service sheet give it seperate headers. 
        THEN CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN '2'
            ELSE '4'
          END
        ELSE CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN '1'
            ELSE '3'
          END
      END

     ,[Employee] = ISNULL(b.EmployeeName, 'no name match') + ' (' + ISNULL(b.Position, '') + ')'
     ,[Task] = ta.TaskName /*CASE WHEN reas.ReasonDescription LIKE '%zz%' OR reas.ReasonDescription LIKE '%nameofapp%' 
							THEN 'Feedback' 
						WHEN isnull(act.ReasonAlias,'' ) <> ''--AND asp.AR_GroupingType = 'AR_ServiceSheets'
							THEN act.ReasonAlias
							ELSE reas.ReasonDescription 
						END */
     ,'#' + CONVERT(VARCHAR(MAX), CRYPT_GEN_RANDOM(3), 2) AS 'GroupColour'  -- Random colours because why not.
     ,ProjectName AS 'Project'
     ,EmployeeName AS 'Operator'
     ,InputValue AS 'Operator Feedback'
      --	,@UserID
     ,a.StagingID  -- StagingID is hardcoded not to be dispalyed. Need it for FeedbackAdvice to write to IPSEdited
     ,FeedbackAdvice
    --	,SupervisorComments as 'FeedbackAdvice'

    FROM [dbo].[tbl_DWH_iPlodStagingTableEdited] AS a
    LEFT OUTER JOIN [dbo].[tbl_DBT_Employees] AS b
      ON a.OperatorID = b.EmployeeID
    LEFT OUTER JOIN [dbo].[tbl_DBT_Project] AS c
      ON a.ProjectID = c.ProjectID
    LEFT JOIN dbo.FN_Iplod_GetAR_TaskGroupingsAll(1, 0) AS asp
      ON a.ActivityReasonID = asp.ActivityReasonId
    --LEFT OUTER JOIN dbo.tbl_DBT_ActReasonSpecialHandlingLink AS asp 
    --	ON a.ActivityReasonID = asp.ActReasonID  -- This join could cause duplicates if there are multiple ARID's in spechandling
    -- AND asp.AR_GroupingName = 'AR_ServiceSheets'
    OUTER APPLY dbo.FN_Iplod_GetAR_TaskAlias_v2(a.ProjectID, a.ActivityReasonID) AS ta
    --LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS act
    --	ON a.ActivityReasonID = act.ActivityreasonLinkID
    --LEFT OUTER JOIN dbo.tbl_SYS_Reason AS reas
    --	ON act.ReasonID = reas.ReasonID


    WHERE InputType LIKE '%attr%'
    AND inputid = 95
    AND a.InputValue <> ''
    --and asp.AR_GroupingName <> 'AR_ServiceSheets'  -- This is to split feedback and service sheet feedback

    ORDER BY date DESC


  END
  -------------------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Service Sheet'
    AND @Display IN ('Service Sheet Feedback'))-- and @ProjectID in (53,3)) 
  -- CA 20180817
  BEGIN
    --header of page
    SELECT
      ' Operator Feedback ' AS 'PageTitle'

    --data to be displayed on page    
    SELECT
      Group1 =
      CASE
        WHEN asp.AR_GroupingName = 'AR_ServiceSheets' -- If it is a service sheet give it seperate headers. 
        THEN CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN 'Service Sheet Feedback'
            ELSE 'Service Sheet Done'
          END
        ELSE CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN 'Needs Feedback'
            ELSE 'Done'
          END
      END


     ,Date AS 'Date'
     ,GroupOrder =
      CASE
        WHEN asp.AR_GroupingName = 'AR_ServiceSheets' -- If it is a service sheet give it seperate headers. 
        THEN CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN '1'
            ELSE '3'
          END
        ELSE CASE
            WHEN FeedbackAdvice = '' OR
              FeedbackAdvice IS NULL THEN '2'
            ELSE '4'
          END
      END

     ,[Employee] = ISNULL(b.EmployeeName, 'no name match') + ' (' + ISNULL(b.Position, '') + ')'
     ,[Task] =
      CASE
        WHEN reas.ReasonDescription LIKE '%zz%' OR
          reas.ReasonDescription LIKE '%nameofapp%' THEN 'Feedback'
        WHEN ISNULL(act.ReasonAlias, '') <> ''--AND asp.AR_GroupingType = 'AR_ServiceSheets'
        THEN act.ReasonAlias
        ELSE reas.ReasonDescription
      END
     ,'#' + CONVERT(VARCHAR(MAX), CRYPT_GEN_RANDOM(3), 2) AS 'GroupColour'  -- Random colours because why not.
     ,ProjectName AS 'Project'
     ,EmployeeName AS 'Operator'
     ,InputValue AS 'Operator Feedback'
      --	,@UserID
     ,a.StagingID  -- StagingID is hardcoded not to be dispalyed. Need it for FeedbackAdvice to write to IPSEdited
     ,FeedbackAdvice
    --	,SupervisorComments as 'FeedbackAdvice'

    FROM [dbo].[tbl_DWH_iPlodStagingTableEdited] AS a
    LEFT OUTER JOIN [dbo].[tbl_DBT_Employees] AS b
      ON a.OperatorID = b.EmployeeID
    LEFT OUTER JOIN [dbo].[tbl_DBT_Project] AS c
      ON a.ProjectID = c.ProjectID
    LEFT OUTER JOIN dbo.tbl_DBT_ActReasonSpecialHandlingLink AS asp
      ON a.ActivityReasonID = asp.ActReasonID  -- This join could cause duplicates if there are multiple ARID's in spechandling
    -- AND asp.AR_GroupingName = 'AR_ServiceSheets'
    LEFT OUTER JOIN dbo.tbl_SYS_ActivityReasonLink AS act
      ON a.ActivityReasonID = act.ActivityreasonLinkID
    LEFT OUTER JOIN dbo.tbl_SYS_Reason AS reas
      ON act.ReasonID = reas.ReasonID


    WHERE InputType LIKE '%attr%'
    AND inputid = 95
    AND a.InputValue <> ''
    AND asp.AR_GroupingName = 'AR_ServiceSheets'  -- This is to split feedback and service sheet feedback
    ORDER BY date DESC


  END
  -------------------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Inventory'
    AND @Display = 'PartsOnHand')
  BEGIN
    --header of page
    SELECT
      ProjectName + ' Parts on hand ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    SELECT
      [ItemGroup] AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'
     ,[ItemGroup]
     ,[ITEMID]
     ,[Desc]
     ,[Locn]
     ,[On_Hand_Qty]
     ,[Label]
    -- ,[OperationID]
    FROM [dbo].[View_WebbarAPI_InventoryOnHand]
    WHERE OperationID = @OpID
  END

  -------------------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'Inventory'
    AND @Display = 'Batching')
  BEGIN

    SELECT
      ProjectName + ' Batching/Spraying ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID


    SELECT
      a.[Date] AS Group1
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,NULL AS 'ColourCode'

     ,a.[Shift] AS 'Shift'
     ,a.[TaskDescription] AS 'Task'
     ,a.[OperatorName] AS 'Operator'


     ,a.StartTime
     ,a.EndTime
     ,CASE
        WHEN inputtype LIKE 'Cons%' THEN cp.ConsumableDescShort
        ELSE a.[ForeLabel]
      END AS 'Input'
      --	  ,cp.ConsumableDescShort 									
     ,CASE
        WHEN a.InputType = 'AttrList' THEN (SELECT TOP 1
              apl.AttributeDescription
            FROM [dbo].[tbl_DBT_AttributeProjectLink] AS apl
            WHERE apl.AttributeID = a.InputValue
            AND apl.ProjectID = @ProjectID)

        ELSE a.InputValue

      END AS 'Quantity'
    -- , inputid    




    FROM [dbo].[View_ShiftSummary_ProdnData] AS a
    LEFT OUTER JOIN
    -- dbo.tbl_dbt_location as b on a.location = b.locationcode left outer join  --don't join on code ... can be accidental duplicates!

    dbo.tbl_DBT_Location AS d
      ON a.Destination = d.LocationID
    LEFT OUTER JOIN dbo.tbl_DBT_Location AS e
      ON a.loadedfrom = e.LocationID
    LEFT OUTER JOIN dbo.tbl_sys_bogfrom AS f
      ON a.bogfrom = f.bogfromid
    LEFT OUTER JOIN dbo.tbl_sys_bogto AS g
      ON a.loadedto = g.bogtoid
    LEFT OUTER JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cp
      ON a.ConsumableProjectID = cp.consumableProjectID


    --left outer join 
    -- dbo.tbl_dwh_iplodstagingtable as b on a.detailid = b.detailid




    WHERE a.ProjectID = @ProjectID
    AND NOT (a.inputid IN (7, 37, 36, 18)
    AND a.INputType LIKE 'Stat%')
    AND a.ActivityReasonLinkID IN (280, 1422, 138)
    --  and a.date = @date
    --  AND Date >= DATEADD(day, - 28, '2018-01-09')
    AND a.Date >= DATEADD(DAY, -30, @Date)
    AND InputType <> 'Camera'

    ORDER BY date DESC, shift, starttime, a.TaskDescription, InputValue, equipid DESC

  END
  /*ELSE 
  BEGIN
  		SELECT ' Error ' + @Date AS 'PageTitle'
  SELECT Group1 = 'Error'
  ,GroupOrder = 1
  ,Msg  =  'bad request please contact Admin Webbar <Admin.Webbar@pybar.com.au>'
  END*/
  -------------------------------------------------------------------------------------------------------------
  ELSE
  IF (@Type = 'QA Forms'
    AND @Display IN ('Cabolt Install'))

  BEGIN
    --header of page
    SELECT
      ProjectName + ' - Cabolt Install Report for ' + @Date AS 'PageTitle'
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID

    --data to be displayed on page    
    SELECT
      Operator AS 'Group1'
     ,1 AS 'GroupOrder'
     ,NULL AS 'GroupColour'
     ,ColourCode
     ,Shift
      -- ,ISNULL(Operator, 'No Operator Match') as Operator
      -- ,Metric
      --,Operator
     ,TIME
      --	,Operator + ' - ' + ISNULL(ReasonDescription, 'No Task Selected') + ' (' + EquipID + ')' AS 'Task Description'
     ,Operator + ' - ' + EquipID
     ,[Location]
      -- ,DisplayOrder
     ,Question = [Question]
     ,Answer =
      CASE
        WHEN Answer = 'False' THEN 'No'
        WHEN Answer = 'True' THEN 'Yes'
        ELSE Answer
      END
     ,UPPER(Comments) AS 'Comments'
     ,[HasPhoto]
     ,PhotoLabel
     ,[Other Info]
    FROM (
      --Flagged Items  
      SELECT DISTINCT
        'Operator' AS 'GroupingField'
        -- this is not displayed, tells you which field to group by on the page
       ,ColourCode =
        CASE
          WHEN s.InputValue = q.intolerablevalue THEN 'Red'
          ELSE 'Black'
        END
       ,Shift
       ,'All Form Questions' AS 'Metric'
        -- ,CAST(CONVERT(FLoat,StartTime) AS VARCHAR) + 'Hrs' as 'Time'
       ,dbo.FN_StringPad(s.StartTime, 4, '0') AS 'Time'
       ,ISNULL(e.EmployeeName, 'No Match on Operator') AS 'Operator'
       ,s.DataStoreID + '_' + CAST(s.DetailID AS VARCHAR) AS CompKey
       ,eq.EquipmentCode AS EquipID
       ,lp.LocationCode AS [Location]
       ,i.DisplayOrder
       ,CASE
          WHEN s.InputType LIKE 'Q%' THEN q.QuestionText
          ELSE i.ForeLabel
        END AS 'Question'
       ,CASE
          WHEN s.inputtype LIKE 'att%' THEN att.AttributeDescription
          ELSE s.InputValue
        END
        AS 'Answer'
       ,q.intolerablevalue
        --,s.Sequence        
        -- ,CASE WHEN s.InputValue = q.intolerablevalue /*OR s.InputType NOT LIKE 'Q%'*/ THEN 1 ELSE 0 END AS 'Include'  --removed this was bringing in other stuff
       ,1 AS 'Include'
       ,ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'Comments'
       ,ISNULL(a.LocalStagingID, 0) AS 'HasPhoto'
       ,i.ForeLabel + ' - ' + ISNULL(s.InputComment, '') + '  ' + ISNULL(s.CommentsCheck, '') AS 'PhotoLabel'
       ,'' AS 'Other Info'
       ,s.OperatorID

      FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
      LEFT JOIN dbo.[tbl_SYS_Questions] AS q
        ON s.inputID = q.QuestionID
        AND s.InputType LIKE 'Q%'
      LEFT JOIN dbo.tbl_DBT_Employees AS e
        ON s.OperatorID = e.EmployeeID
      LEFT JOIN dbo.tbl_SYS_Equipment AS eq
        ON s.EquipmentID = eq.EquipmentCodeID
      LEFT JOIN [dbo].[tbl_DBT_ActReasonInputLink] AS i
        ON i.ActReasonLinkID = s.ActivityReasonID
        AND s.InputID = i.InputID
        AND s.InputType = i.InputType
        AND i.projectid = @projectid
      LEFT JOIN dbo.tbl_DBT_Location AS lp
        ON s.Location = lp.LocationID
      LEFT JOIN [dbo].[View_DE_iPlodPhotos] AS a
        ON a.LocalStagingID = s.LocalStagingID
        AND a.ProjectID = s.ProjectID
      LEFT OUTER JOIN [dbo].[tbl_sys_attribute] AS att
        ON s.inputtype = 'attrlist'
        AND CONVERT(VARCHAR(50), s.InputValue) = CONVERT(VARCHAR(50), att.AttributeID)
        AND s.inputid = att.AttributeTypeID
      WHERE NOT (s.InputType = 'Stat'
      AND s.InputID = 7)
      AND s.inputtype NOT LIKE 'cons%'
      AND s.DATE = @Date
      AND s.ProjectID = @ProjectID
      AND s.ActivityReasonID = 144) AS tbl



  END
-------------------------------------------------------------------------------------------------------------
END
GO
PRINT N'Altering [dbo].[SP_ProjSetup_GenericListEdits_Data]'
GO
ALTER procedure [dbo].[SP_ProjSetup_GenericListEdits_Data] @ListName NVARCHAR(50) = 'LocProfiles', @UserID INT = 0, @ProjectID INT = 0
AS
BEGIN
    SET NOCOUNT ON;
    /*
	EXEC [dbo].[SP_ProjSetup_GenericListEdits_Data] @ProjectID = 194, @UserID = 137, @ListName = 'LocProfiles'
		EXEC [dbo].[SP_ProjSetup_GenericListEdits_Data] @ProjectID = 194, @UserID = 137, @ListName = 'LocLevels'
	EXEC [dbo].[SP_ProjSetup_GenericListEdits_Data] @ProjectID = 194, @UserID = 137, @ListName = 'GSSStandard'
  EXEC [dbo].[SP_ProjSetup_GenericListEdits_Data] @ListName = N'SignRegister', @UserID = 250, @ProjectID = 259


	Change log:
	2021-01-08 (IP) initial commit
	2021-01-15 ts return the list id fields (Id and Lable)
	2021-01-26 ww Add LocLevels
	2021-01-27 ww Fix bug static value for LocLevels (project = 1)
	2021-02-09 ww add for GSS
	2021-02-03 ts ... loclevels not giving any data (need ELSE apparently
	2021-03-24 ts ... add ips table
	2021-03-25 ww ... add attrtypes
	2021-03-26 ts ... add attributes
	2021-03-30 ww ... remove groupName
	2021-04-07 ts ... add groupname for new rows on attributes
	2021-04-08 ts ... pickup attrtype on add new
	2021-05-21 ts ... standardise handling for add new lines
	2021-06-03 ts ... add order by on loclevels
				... added @ProjectId and @OperationID to add new rows
	2021-06-04 ts ... added sys pages
	2021-06-10 ts ... add Sys_PLOD_Devices
					... fix datatype
	2021-06-17 ts ... add fields to devices
	2021-06-28 ts ... add equiplisting
	2021-06-30 ts ... colour codings into equipment
	2021-07-02 ts ... do'nt grpu equipment
	2021-07-14 ian ... added sysqcategories and loadscan
	2021-07-27 ian ... added PlodSessionHistory
	2021-08-20 ts ... added group for the plod session history
	2021-08-23 ts ... add RigName to the tablets for mapping to raisebore rigs
	2021-09-09 ian ... add Docs_SurveyMemos
	2021-09-23 ian ... added shitplan various lists
	2021-09-27 ian ... added SYS_TargetFields
	2021-09-27 ian ... added DBT_TargetFields
  2021-10-21 ts ... survey memos go is as SurveyMemos group
  2021-11-29 ian ... added plodconfigs
  2021-12-10 CA ... Add SIgn Register
  2022-01-14 IP ... add TargetsUpload
  2022-02-09 ts ... bring new fields from the view changes for session histroy.
                ... change the order by on the plod session history (put work type last. date desc first
  2022-02-04 ian ... added PlodSyncHistory
  2022-02-15 ts ... order on the session historuy
  2022-02-21 ts ... group by employeename on session histroy
  2022-03-15 ian ... added new list for sync jobs
  2022-03-17 ian ... changed AllowedTypeIdsCsv value
  2022-03-17 ian ... added locationId for Docs_SurveyMemos
  2022-04-12 ian ... added Dbt_Locations
  2022-05-03 ts ... add proj filter to qr generator 
  2022-05-04 CA ... Added EquipPit filter for sys_EquipList. Filters on UserGroupPitID
  2022-05-25 ts ... don't get all of employees table for session hsitroy!
  2022-06-17 CA ... Comment for Toms QR changes so it isnt overwritten.......
   2022-06-17 CA ... So Equip List tidy ups
   2022-06-30 ian ... added sync task dashboard
  2022-07-05 CA ... Users fixes
  2022-07-19 ian ... added add_updateV2
  2022-08-03 CA ... Added SignRegister locns stuff
  2022-08-04 CA ... Added stope sign register
  2022-09-04 CA ... Added Comments for signs
  2022-09-26 IP ... added ActReasonEdits ListName
  2022-09-26 IP ... added ExcludeFromWeb and App
  2022-10-07 IP ... drop TaskDetailType, TaskDetailTypeId
  2022-10-11 RF ... Added scanDensityFactor to sys_equiplists
  2022-10-12 IP ... add join to [vw_Iplod_GetAR_TaskGroupingsAll] for ask Group name on ActReasonEdits
   2022-10-15 ts ... or proj 1 for Sync task dashboard
	*/

	DECLARE @IsDBAdmin INT = dbo.FN_IsWebbarFullAdmin(@UserID)
  DECLARE @OperationID INT = (SELECT
      OperationID
    FROM dbo.tbl_DBT_Project
    WHERE ProjectID = @ProjectID)
	declare @ShadeForAddNewLine nvarchar(25) = '#ffb84d'
	DECLARE @IsLocal int = dbo.FN_IsLocal(@ProjectID)
	DECLARE @IsTestDb int = IIF(dbo.FN_IsLiveDB(@ProjectID)=1,0,1)
	DECLARE @UploadPath VARCHAR(128) = [dbo].[udf_FilePath](@ProjectID, 'Document_Location',@IsLocal,@IsTestDb)
  DECLARE @Cmd nvarchar(150) = ''
  
 -- Use this to show passwords only of lower usergroups
  declare @UserGroupLevel INT = (SELECT UserGroup FROM tbl_SYS_User where UserID = @UserID)


DECLARE @SignRegisterSrc varchar(50) = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ViewSrc'), 'UniqueSigns' ) AS varchar(50) )


    IF @ListName = 'LocProfiles'
    BEGIN
        SELECT 
			--hard coded fields:
            ListName = 'LocProfiles'
            --,ListValueId = ProfileID   -- eg ProfileId
            --,ListValueLabel = 'Profile'  -- eg Profile
            ,LineShadeColour = 'white' -- used to grey out inactive lines. (http://www.colors.commutercreative.com/grid/)

			         --List IdentityFields
                     ,ProfileID  --ListValueId
                     , Profile   --ListValueLabel

            --dynamic fields:
            ,OperationID
            ,ProjectID
            -- ,Profile
            ,DriveType
            ,Width
            ,Height
            ,HolesPerCut
            ,NominalCutLength
            ,OreTonnesPerM
            ,WasteTonnesPerM
            ,ProfileArea
            ,Comments
            ,DefaultGSS_ID
            ,ModifiedOn
        FROM dbo.tbl_DBT_LocationProfiles
        WHERE ProjectID = @ProjectID

        UNION ALL

		-- for add new line
        SELECT 
			--hard coded fields:
            ListName = 'LocProfiles'
            --,ListValueId = -1                   -- eg ProfileId
            --,ListValueLabel = 'Add New Profile' -- eg Profile
            ,LineShadeColour = @ShadeForAddNewLine--'orange'         -- used to grey out inactive lines. (http://www.colors.commutercreative.com/grid/)

			,ProfileID = -1  --ListValueId
            , Profile  =  '<< Add New Profile >>'  --ListValueLabel

            --dynamic fields:
            ,OperationID = @OperationID
            ,ProjectID = @ProjectID
            -- ,Profile
            ,DriveType = NULL
            ,Width = NULL
            ,Height = NULL
            ,HolesPerCut = NULL
            ,NominalCutLength = NULL
            ,OreTonnesPerM = NULL
            ,WasteTonnesPerM = NULL
            ,ProfileArea = NULL
            ,Comments = NULL
            ,DefaultGSS_ID = NULL
            ,ModifiedOn = GETDATE()

	order by Profile

    END;
  ELSE
  IF @ListName = 'LocLevels'
    BEGIN
        SELECT 
			--hard coded fields:
            ListName = 'LocLevels'
            ,LineShadeColour = 'white' 
			,LevelID  --ListValueId
            ,LevelDescription--ListValueLabel
            ,OperationID
			--dynamic fields:
            ,ProjectID
			,RL
			,LongDescription

        FROM dbo.tbl_DBT_LocationLevels
        WHERE ProjectID = @ProjectID

        UNION ALL

		-- for add new line
        SELECT 
			--hard coded fields:
            ListName = 'LocLevels'
            ,LineShadeColour =@ShadeForAddNewLine-- 'orange' 
			,LevelID = -1 --ListValueId
            ,LevelDescription = '<< Add new Level >>' --ListValueLabel
            --dynamic fields:
			            ,OperationID = @OperationID
            ,ProjectID = @ProjectID
            --,OperationID = NULL
            --,ProjectID = NULL
     ,RL = NULL
     ,LongDescription = NULL
            order by LevelDescription
    END;
	IF @ListName = 'GSSStandard'
    BEGIN
        SELECT 
			--hard coded fields:
            ListName = 'GSSStandard'
            ,LineShadeColour = 'white' 
			,GSS_ID  --ListValueId
			,GS_StandardCode--ListValueLabel
            ,OperationID
			--dynamic fields:
			,ProjectID
			,GS_Description
			,Rate
			,ShotcreteMatID
			,ShotcreteThickness
			,ShotcreteRate

        FROM dbo.tbl_DBT_GSSStandards
        WHERE ProjectID = @ProjectID

        UNION ALL

		-- for add new line
        SELECT 
			--hard coded fields:
            ListName = 'GSSStandard'
            ,LineShadeColour = @ShadeForAddNewLine--'white' 
			,GSS_ID = -1 --ListValueId
            ,GS_StandardCode = '<< Add new GSS Standard >>' --ListValueLabel
			,OperationID = @OperationID
            --dynamic fields:
            ,ProjectID = @ProjectID
			,GS_Description = NULL
			,Rate = NULL
			,ShotcreteMatID = NULL
			,ShotcreteThickness = NULL
			,ShotcreteRate = NULL
    END;

	--add new lists below here
	IF @ListName = 'AttrTypes'
	BEGIN
	  SELECT 
			--hard coded fields:
            ListName = 'AttrTypes'
            ,LineShadeColour = 'white' 
			,AttTypeID  --ListValueId
			,AttTypeDesc--ListValueLabel
			--dynamic fields:
			,Active
			,Comments
        FROM dbo.tbl_SYS_AttributeType
	 UNION ALL
	 SELECT 
			--hard coded fields:
            ListName = 'AttrTypes'
            ,LineShadeColour = @ShadeForAddNewLine--'white' 
			,AttTypeID = -1 --ListValueId
            ,AttTypeDesc = '<< Add new Attribute Type >>' --ListValueLabel
            --dynamic fields:
			,Active = 1
			,Comments = null
         order by AttTypeDesc
	END;

		--add new lists below here
	IF @ListName = 'Attributes'
	BEGIN
	  SELECT 
			--hard coded fields:
            ListName = 'Attributes'
            ,LineShadeColour = 'white' 
			,AttributeID  --ListValueId
			,AttributeDescription--ListValueLabel
			,GroupNameDisplay = cast(a.AttributeTypeID as varchar) + ' (' +at.AttTypeDesc + ')'

				--dynamic fields:
			--,ProcessID
     --, AttributeDescription
     , AttributeTypeID
     , Units
     , a.Active
     , a.Comments
    -- , IsDefault
        FROM dbo.tbl_SYS_Attribute as a
		inner join dbo.tbl_SYS_AttributeType as at
			on a.AttributeTypeID = at.AttTypeID
	 UNION ALL
	 SELECT 
			--hard coded fields:
            ListName = 'Attributes'
            ,LineShadeColour =@ShadeForAddNewLine-- 'white' 
			,AttributeID = -1 --ListValueId
            ,AttributeDescription = '<< Add new List Value for '+a.AttTypeDesc +' >>' --ListValueLabel
			,GroupNameDisplay=cast(a.AttTypeID as varchar) + ' (' +a.AttTypeDesc + ')'
            --dynamic fields:
			--,ProcessID
     --, AttributeDescription
     , AttributeTypeID = a.AttTypeID 
     , Units = null
     , Active = 1
     , Comments= null
	 from dbo.tbl_SYS_AttributeType a
    -- , IsDefault
	order by AttributeDescription

	END;

	IF @ListName = 'SysMenuLinks'
	BEGIN
	--SELECT PageID, PageDescription FROM dbo.tbl_SYS_PagesDataEntry

	  SELECT 
			--hard coded fields:
            ListName = 'SysMenuLinks'
            ,LineShadeColour =ButtonColour -- 'white' 
			,PageID  --ListValueId
			,PageDescription--ListValueLabel
     ,GroupNameDisplay =
      CASE
        WHEN Active = 0 THEN 'Inactive'
        ELSE MenuList
      END

				--dynamic fields:
     ,PageName
     ,Active
     ,MinUserGroup
     ,MenuList
     ,ButtonColour
     ,AllowedOnLocal
     ,PageCode
     ,HeaderMessageHtml
FROM dbo.tbl_SYS_PagesDataEntry
	 UNION ALL
	 SELECT DISTINCT
			--hard coded fields:
            ListName = 'SysMenuLinks'
            ,LineShadeColour =@ShadeForAddNewLine-- 'white' 
			,PageID  =-1
			,PageDescription ='<< Add new Menu Link on ' + MenuList
			,GroupNameDisplay =MenuList

				--dynamic fields:
     ,PageName = NULL
     ,Active = NULL
     ,MinUserGroup = NULL
     ,MenuList = NULL
     ,ButtonColour = NULL
     ,AllowedOnLocal = NULL
     ,PageCode = NULL
     ,HeaderMessageHtml = NULL

	 FROM dbo.tbl_SYS_PagesDataEntry
    -- , IsDefault
	order by PageDescription

	END;

	--Sys_PLOD_Devices
	IF @ListName = 'Sys_PLOD_Devices'
	BEGIN


	  SELECT 
			--hard coded fields:
            ListName = 'Sys_PLOD_Devices'
            ,LineShadeColour =  'white' 
			, TabletId  --ListValueId
			, DeviceAssetNo--ListValueLabel
			--,GroupNameDisplay --= case WHEN Active=0 THEN 'Inactive' ELSE MenuList end

				--dynamic fields:
     ,DeviceSerialNo
     ,RealSerialNo
     ,[RigName]
     ,TabletModel
     ,AppVersion
     ,OSVersion
			,FailedConfigCalls 
			,LongConfigCalls
     ,LastUsedBy
     ,AppDeploymentMode
     ,LastUsedOn = CONVERT(VARCHAR, LastUsedOn, 23)
     ,LastUsedSession

			from dbo.[View_ShiftSummaryInsights_TabletSerialNumbers_ForWeb]
			where OperationId = @OperationID

--	 UNION ALL
--	 SELECT DISTINCT
--			--hard coded fields:
--            ListName = 'Sys_PLOD_Devices'
--            ,LineShadeColour =@ShadeForAddNewLine-- 'white' 
--			,PageID  =-1
--			,PageDescription ='<< Add new Menu Link on ' + MenuList
--			,GroupNameDisplay =MenuList

--				--dynamic fields:
--, PageName=null, Active=null, MinUserGroup=null, MenuList=null, ButtonColour=null, AllowedOnLocal=null, PageCode=null, HeaderMessageHtml=null


	END;

--Sys_EquipList
	IF @ListName = 'Sys_EquipList'
	BEGIN

    SELECT
      [tbl].[ListName]
         , [tbl].[LineShadeColour]  
         , [tbl].[EquipmentID]
         , [tbl].[EquipmentCode]
		-- ,GroupNameDisplay  --2021-07-02
         , [tbl].[EquipmentDescription]
         , [tbl].[EquipSerialNo]
         , [tbl].[EquipTypeID]
         , [tbl].[ProjectID]
         , [tbl].[LoadFactor]
         , [tbl].[ScanDensityFactor] 
         , [LastModifiedOn] = CONVERT(VARCHAR, [LastModifiedOn], 23)  --throws error on front end!
         , [tbl].[Active]
         , [tbl].[TrackTimeUsage]
         , [tbl].[MappingEquipCode]
         , [ShiftPlanColour] ---= [dbo].[FN_MarkupFullHtml_v2] ([tbl].[ShiftPlanColour],1,0,'black',[tbl].[ShiftPlanColour])
	 ,tbl.EquipPitID
     ,[tbl].[ChangeHistory]
    FROM (SELECT
			--hard coded fields:
            ListName = 'Sys_EquipList'
       ,LineShadeColour =
        CASE
          WHEN active = 0 THEN 'lightgrey'
          WHEN [ShiftPlanColour] = 'lime' THEN ''
          ELSE [ShiftPlanColour]
        END--lime is fucking bright. it is "standard" for shift summary (e do'nt distinguish between equipmnet )'white' 
			,[a].[EquipmentID]  --ListValueId
			,[a].[EquipmentCode]--ListValueLabel
			,GroupNameDisplay =  [a].[EquipTypeDescription]

		--dynamic fields:
           , [a].[EquipmentDescription]
           , [a].[EquipSerialNo]
           , [a].[EquipTypeID]
           , [a].[ProjectID]
           , [a].[LoadFactor]
           , [a].[LastModifiedOn]
           , [a].[Active]
           , [a].[TrackTimeUsage]
           , [a].[MappingEquipCode]
           , [a].[ShiftPlanColour]
	   ,a.EquipPitID
           , [a].[ChangeHistory]
		   , [a].[EquipTypeDescription]
       , [a].[ScanDensityFactor]


        FROM dbo.[vw_ProjSetup_EquipmentListing] as a
    inner JOIN 
        (
          SELECT usrgrp.* FROM 
          dbo.FN_GetWebbarUserGroups(@UserID) usrgrp
           INNER join tbl_SYS_User AS usr
            ON usr.UserGroup = usrgrp.UserGroupID
            AND usr.UserID = @UserID) 
         AS usrgrp2

      ON ( usrgrp2.UserGroupPitID LIKE '%' + cast(a.EquipPitID as varchar(10)) + '%'
          OR (usrgrp2.UserGroupPitID is NULL OR usrgrp2.UserGroupPitID = '')) 


		where [a].[ProjectID]= @ProjectID
    


	 UNION ALL
	 SELECT top 1  --2021-07-02
					--hard coded fields:
            ListName = 'Sys_EquipList'

	            ,LineShadeColour =@ShadeForAddNewLine-- 'white' 
			,[EquipmentID] = -1 --ListValueId
            ,[EquipmentCode] = '<< Add new Equipment >>'	
						,GroupNameDisplay = [a].[EquipTypeDescription]
		--dynamic fields:
           , [EquipmentDescription] =''
           , [EquipSerialNo]=null
           , [EquipTypeID]= NULL --[a].[EquipTypeID]  -- Turned off the 
           , [ProjectID]=@ProjectID
           , [LoadFactor]=NULL 
           , [LastModifiedOn]=null
           , [Active]=99
           , [TrackTimeUsage]=null
           , [MappingEquipCode]=null
           , [ShiftPlanColour]=NULL
	         , [EquipPitID] = NULL
           , [ChangeHistory]=NULL
		       , [EquipTypeDescription]  =''
           , [ScanDensityFactor]=NULL
       

		   from [dbo].[tbl_SYS_ResEquipTypes] a
      WHERE active > 0) AS tbl
		order by [Active] desc, [EquipTypeDescription]
	END;






	--this one is a bit different, not working yet:
	IF @ListName ='IplodStagingInsert'
    begin
    --select ''
      /* don't show existing it is huge! 
		SELECT 
			--hard coded fields:
            ListName = 'IplodStagingInsert'
            ,LineShadeColour = 'white' 
			,GSS_ID  --ListValueId
			,GS_StandardCode--ListValueLabel
            ,OperationID
			--dynamic fields:
			,ProjectID
			,GS_Description
			,Rate
			,ShotcreteMatID
			,ShotcreteThickness
			,ShotcreteRate

        FROM dbo.tbl_DWH_iPlodStagingTableEdited
        WHERE ProjectID = @ProjectID

		*/


        --UNION ALL

		-- for add new line
        SELECT 
			--hard coded fields:
            ListName = 'IplodStagingInsert'
            ,LineShadeColour = 'white' 
			,DetailID = -1 --ListValueId
            ,GS_StandardCode = '<< Add new Staging >>' --ListValueLabel
			,OperationID = NULL
            --dynamic fields:
            ,ProjectID = null
			,GS_Description = NULL
			,Rate = NULL
			,ShotcreteMatID = NULL
			,ShotcreteThickness = NULL
			,ShotcreteRate = NULL

    END;

	IF @ListName = 'SysQCategories'
	BEGIN
		SELECT
      ListName = 'SysQCategories'
     ,LineShadeColour = 'white'
     ,QuestionCatID
     ,Category
     ,NotificationText
     ,IntolerableBitWise
     ,IsInputAuthRequired
     ,IsInputPhotoRequired
     ,IsInputCommentRequired
     ,Active
     ,ModifiedOn
     ,ModifiedBy
     ,Comments
     ,IsCompulsory
     ,FinalNotificationText
     ,AdditionalRegex
		FROM dbo.tbl_SYS_QuestionCategories
		UNION ALL
		SELECT
      ListName = 'SysQCategories'
     ,LineShadeColour = 'white'
     ,QuestionCatID = -1
     ,Category = '<< Add New Category >>'
     ,NotificationText = ''
     ,IntolerableBitWise = ''
     ,IsInputAuthRequired = ''
     ,IsInputPhotoRequired = ''
     ,IsInputCommentRequired = ''
     ,Active = 1
     ,ModifiedOn = GETDATE()
     ,ModifiedBy = @UserID
     ,Comments = ''
     ,IsCompulsory = ''
     ,FinalNotificationText = ''
     ,AdditionalRegex = ''
		ORDER BY Category, QuestionCatID DESC
	END

	IF @ListName = 'Sys_LoadScan'
	BEGIN
    SELECT
      ListName = 'Sys_LoadScan'
     ,LineShadeColour = 'white'
     ,ProjectId
     ,TruckId
     ,ID
     ,WeighingDate
     ,WeighingTime
     ,TagNo
     ,Wheel1
     ,Wheel2
     ,Wheel3
     ,Wheel4
     ,Wheel5
     ,Wheel6
     ,Wheel7
     ,Wheel8
     ,Wheel9
     ,Wheel10
     ,TruckTotal
     ,Direction
     ,TareDate
     ,TareTime
     ,TareWeight
     ,NetWeight
     ,ScanComments
     ,ScannerDataDBId
     ,ScannerVolumeRawValue
     ,ScannerDeterminedValid
     ,ScannerDeterminedLoaded
     ,CalculatedVolumeValue
     ,OnboardScale
     ,Unit
     ,Speed
     ,WeighingMode
     ,SiteId
     ,ScaleId
     ,TareGross
     ,Driver
     ,Material
     ,[from]
     ,[to]
     ,Notes
     ,SQLUpdate
		FROM dbo.vw_Integration_External_LoadScan
		UNION ALL
    SELECT
      ListName = 'Sys_LoadScan'
     ,LineShadeColour = 'white'
     ,ProjectId = ''
     ,TruckId = ''
     ,ID = ''
     ,WeighingDate = CONVERT(DATE, GETDATE())
     ,WeighingTime = CONVERT(TIME, GETDATE())
     ,TagNo = ''
     ,Wheel1 = 0.0
     ,Wheel2 = 0.0
     ,Wheel3 = 0.0
     ,Wheel4 = 0.0
     ,Wheel5 = 0.0
     ,Wheel6 = 0.0
     ,Wheel7 = 0.0
     ,Wheel8 = 0.0
     ,Wheel9 = 0.0
     ,Wheel10 = 0.0
     ,TruckTotal = 0.0
     ,Direction = ''
     ,TareDate = ''
     ,TareTime = ''
     ,TareWeight = 0.0
     ,NetWeight = 0.0
     ,ScanComments = ''
     ,ScannerDataDBId = 0.0
     ,ScannerVolumeRawValue = 0.0
     ,ScannerDeterminedValid = 0.0
     ,ScannerDeterminedLoaded = 0.0
     ,CalculatedVolumeValue = 0.0
     ,OnboardScale = ''
     ,Unit = ''
     ,Speed = 0.0
     ,WeighingMode = ''
     ,SiteId = ''
     ,ScaleId = ''
     ,TareGross = ''
     ,Driver = ''
     ,Material = ''
     ,[from] = ''
     ,[to] = ''
     ,Notes = ''
     ,SQLUpdate = 0;
    END;

    IF @ListName = 'Dbt_EmailJobs'
    BEGIN
    SELECT
      ListName = 'Dbt_EmailJobs'
     ,LineShadeColour = 'white'
     ,[EmailJobId]
     ,[EmailJobDesc]
     ,[Comments]
     ,[ProjectId]
     ,[OperationId]
     ,[RecipientEmailCsv]
     ,[CCCsv]
     ,[BCCCsv]
     ,[Subject]
     ,[BodyHtml]
     ,[UrlForAttachment]
     ,[QueryStringForTable]
     ,[EmailJobType]
     ,[MinHour]
     ,[MaxHour]
     ,[FrequencyMins]
     ,[ModifiedOn]
     ,[IsEnabled]
     ,[ChangeHistory]
     ,[HistoryEmailSent]
        FROM [dbo].[vw_ProjSetup_EmailJobs] j
        UNION ALL
    SELECT
      ListName = 'Dbt_EmailJobs'
     ,LineShadeColour = 'white'
     ,[EmailJobId] = -1
     ,[EmailJobDesc] = '<< Add new Email Job >>'
     ,[Comments] = ''
     ,[ProjectId] = ''
     ,[OperationId] = ''
     ,[RecipientEmailCsv] = ''
     ,[CCCsv] = ''
     ,[BCCCsv] = ''
     ,[Subject] = ''
     ,[BodyHtml] = ''
     ,[UrlForAttachment] = ''
     ,[QueryStringForTable] = ''
     ,[EmailJobType] = ''
     ,[MinHour] = ''
     ,[MaxHour] = ''
     ,[FrequencyMins] = ''
     ,[ModifiedOn] = GETDATE()
     ,[IsEnabled] = 1
     ,[ChangeHistory] = ''
     ,[HistoryEmailSent] = ''
        ORDER BY [EmailJobDesc],
                 [EmailJobId] DESC;
    END;

	IF @ListName = 'Sys_Users'
    BEGIN
     SELECT
      ListName = 'Sys_Users'
     ,LineShadeColour = 'white'
     ,UserID
     ,Username
     ,Password
     ,FirstName
     ,LastName
     ,Comments
     ,Active
    -- ,IsAdmin
     ,UserGroup
     ,
      -- CONVERT(DATETIME, DateAdded, 105) AS DateAdded,
      OperationID
     ,ProjectID
     ,BookmarkCode
     ,MinepointCode
     ,UserEmailAddress
     ,ChangeHistory = IIF(ChangeHistory <> '', '...' + RIGHT(ChangeHistory, 250),'')
        FROM [dbo].[vw_ProjSetup_ManageUsers] j
        -- Need a way to hide rows of admin users etc. 
        WHERE j.UserGroup <= @UserGroupLevel
        AND (@UserGroupLevel = 88 OR j.Username not like '%Automate%')
       
        UNION ALL
    SELECT
      ListName = 'Sys_Users'
     ,LineShadeColour = 'white'
     ,UserID = -1
     ,Username = '<< Add new User >>'
     ,Password = '',
      FirstName = ''
     ,LastName = ''
     ,Comments = ''
     ,Active = 1
    -- ,IsAdmin = ''
     ,UserGroup = ''
     ,
      -- DateAdded = GETDATE(),
      OperationID = @OperationID
     ,ProjectID = @ProjectID
     ,BookmarkCode = ''
     ,MinepointCode = ''
     ,UserEmailAddress = ''
     ,ChangeHistory = ''
        ORDER BY Username,
                 [UserId] DESC;
    END;

	IF @ListName = 'PlodSessionHistory'
    begin
   -- EXEC [dbo].[SP_ProjSetup_GenericListEdits_Data] @ListName = N'PlodSessionHistory', @UserID = 137, @ProjectID = 3
    
    SELECT
      ListName = 'PlodSessionHistory'
     ,LineShadeColour = IIF(shift = 'ns', 'lightgrey', 'white')
     ,GroupNameDisplay = WorkType + ' - ' + tde.EmployeeName-- cast(ShiftDate as varchar)  +' - ' +Shift +' - ' + WorkType
          ,a.*  --changed to * so we bring additions to teh fields every time the view changes.
			   /*WorkType,
			   EmployeeId,
				GenericUserRealName,
				AppIsUpToDate,
				ShiftDate,
				Shift,
				CountOfFinalisedTasks,
				CountOfDraftTasks,
				CountOfImportedTasks,
				DeviceAssetNo,
				ProjectId,
				SessionId,
				DeviceTimeVsSrvSeconds,
				DeviceSerialNo,
				ViewPlodLink*/
        FROM [dbo].[View_ShiftSummaryInsights_PlodSessionHistory_ForWeb]  as a
          left JOIN tbl_DBT_Employees tde 
              ON a.EmployeeId = tde.EmployeeID
              AND a.ProjectId = tde.ProjectID
		where a.[ProjectId] = @ProjectID
		--UNION ALL
  --      SELECT ListName = 'PlodSessionHistory',
  --             LineShadeColour = 'white',
		--	   WorkType = '<< Add New >>',
		--		EmployeeId = -1,
		--		GenericUserRealName = '',
		--		AppIsUpToDate = '',
		--		ShiftDate = CAST( GETDATE() AS Date ),
		--		Shift = '',
		--		CountOfFinalisedTasks = 0,
		--		CountOfDraftTasks = 0,
		--		CountOfImportedTasks = 0,
		--		DeviceAssetNo = '',
		--		ProjectId = 0,
		--		SessionId = '',
		--		DeviceTimeVsSrvSeconds = 0,
		--		DeviceSerialNo = ''
        ORDER BY shiftdate desc, WorkType , tde.EmployeeName
        ;
    END;

	IF @ListName = 'ShiftPlanTasks'
	BEGIN
    SELECT
      ListName = 'ShiftPlanTasks'
     ,LineShadeColour = IIF(ISNULL(PlanTaskColour, '') IS NOT NULL, PlanTaskColour, 'white')
     ,ActReasonInputLinkID
     ,Activity
     ,PLODTaskName
     ,ProcessDescription
     ,PlanTaskName
     ,PlanTaskColour
     ,PlanDefaultDuration
     ,PlanDefaultStatValue
     ,OperationID
     ,ProjectID
		FROM [dbo].[vw_ProjSetup_ShiftPlanTasks_Mining]
		WHERE [ProjectID] = @ProjectID
		--UNION ALL
  --      SELECT ListName = 'ShiftPlanTasks',
		--	LineShadeColour = 'white',
		--	ActReasonInputLinkID = -1,
		--	Activity = '<< Add New >>',
		--	PLODTaskName = '',
		--	ProcessDescription = '',
		--	OperationID = '',
		--	ProjectID = '',
		--	ActReasonLinkID = '',
		--	PlanTaskName = '',
		--	PlanTaskColour = '',
		--	PlanDefaultDuration = 0.0,
		--	PlanDefaultStatValue = 0.0,
		--	InputType = '',
		--	InputID = ''
        ORDER BY ActReasonInputLinkID DESC;
	END

	IF @ListName = 'Docs_SurveyMemos'
	BEGIN
    SELECT
      ListName = 'Docs_SurveyMemos'
         , LineShadeColour = 'white'
         , DocumentID
         , DocumentName
         , DocumentGroup
         , UploadPath = @UploadPath
         , DocumentFile
         , IsEnabled
         , LocationId
         , AllowedTypeIdsCsv
         , HelpGuideForTypeIdsCsv
         , ProjectID
         , OperationID
         , CreatedDate
         , CreatedBy
		FROM [dbo].[vw_ProjSetup_Documents_SurveyMemos]
		UNION ALL
    SELECT
      ListName = 'Docs_SurveyMemos'
         , LineShadeColour = 'white'
         , DocumentID = -1
         , DocumentName = '<< Add New >>'
         , DocumentGroup = 'SurveyMemos'
         , [UploadPath] = @UploadPath
         , DocumentFile = ''
         , IsEnabled = 1
         , LocationId = null
         , AllowedTypeIdsCsv = ',1,'
         , HelpGuideForTypeIdsCsv = ''
         , ProjectID = @ProjectID
         , OperationID = @OperationID
         , CreatedDate = getdate()
         , CreatedBy = @UserID
		ORDER BY DocumentID DESC
	END

	IF @ListName = 'ShiftPlanList_Priority'
	BEGIN
    SELECT
      ListName = 'ShiftPlanList_Priority'
     ,LineShadeColour = 'white'
     ,ShiftPlanPriorityID
     ,Priority
     ,TextColour
     ,ProjectID
     ,OperationID
     ,Active
     ,ModifiedOn
		FROM [dbo].[tbl_STO_ShiftPlanList_Priority]
		UNION ALL
    SELECT
      ListName = 'ShiftPlanList_Priority'
     ,LineShadeColour = 'white'
     ,ShiftPlanPriorityID = -1
     ,Priority = -1
     ,TextColour = '<< Add New Shift Plan List Priority >>'
     ,ProjectID = @ProjectID
     ,OperationID = @OperationID
     ,Active = 1
     ,ModifiedOn = GETDATE()
		ORDER BY ShiftPlanPriorityID DESC
	END

	IF @ListName = 'ShiftPlanList_EOSStatus'
	BEGIN
    SELECT
      ListName = 'ShiftPlanList_EOSStatus'
     ,LineShadeColour = 'white'
     ,ShiftPlanEOSStatusID
     ,EOSStatus
     ,TextColour
     ,ProjectID
     ,OperationID
     ,Active
     ,ModifiedOn
		FROM [dbo].[tbl_STO_ShiftPlanList_EOSStatus]
		UNION ALL
    SELECT
      ListName = 'ShiftPlanList_EOSStatus'
     ,LineShadeColour = 'white'
     ,ShiftPlanEOSStatusID = -1
     ,EOSStatus = '<< Add New Shift Plan List EOS Status >>'
     ,TextColour = ''
     ,ProjectID = @ProjectID
     ,OperationID = @OperationID
     ,Active = 1
     ,ModifiedOn = GETDATE()
		ORDER BY ShiftPlanEOSStatusID DESC
	END

	IF @ListName = 'ShiftPlanList_EquipStatus'
	BEGIN
    SELECT
      ListName = 'ShiftPlanList_EquipStatus'
     ,LineShadeColour = 'white'
     ,ShiftPlanEquipStatusID
     ,EOSStatus
     ,TextColour
     ,ProjectID
     ,OperationID
     ,Active
     ,ModifiedOn
		FROM [dbo].[tbl_STO_ShiftPlanList_EquipStatus]
		UNION ALL
    SELECT
      ListName = 'ShiftPlanList_EquipStatus'
     ,LineShadeColour = 'white'
     ,ShiftPlanEquipStatusID = -1
     ,EOSStatus = '<< Add New Shift Plan List Equip Status >>'
     ,TextColour = ''
     ,ProjectID = @ProjectID
     ,OperationID = @OperationID
     ,Active = 1
     ,ModifiedOn = GETDATE()
		ORDER BY ShiftPlanEquipStatusID DESC
	END

	IF @ListName = 'ShiftPlanList_SPileStatus'
	BEGIN
    SELECT
      ListName = 'ShiftPlanList_SPileStatus'
     ,LineShadeColour = 'white'
     ,ShiftPlanSPileStatusID
     ,Label
     ,TextColour
     ,HighlightColour
     ,ProjectID
     ,OperationID
     ,Active
     ,ModifiedOn
		FROM [dbo].[tbl_STO_ShiftPlanList_SPileStatus]
		UNION ALL
    SELECT
      ListName = 'ShiftPlanList_SPileStatus'
     ,LineShadeColour = 'white'
     ,ShiftPlanSPileStatusID = -1
     ,Label = '<< Add New Shift Plan List SPile Status >>'
     ,TextColour = ''
     ,HighlightColour = ''
     ,ProjectID = @ProjectID
     ,OperationID = @OperationID
     ,Active = 1
     ,ModifiedOn = GETDATE()
		ORDER BY ShiftPlanSPileStatusID DESC
	END

	IF @ListName = 'SYS_TargetFields'
	BEGIN
    SELECT
      ListName = 'SYS_TargetFields'
     ,LineShadeColour = 'white'
     ,TargetFieldID
     ,TargetShort
     ,TargetFieldDescription
     ,StatisticCode
     ,ActivityComments
     ,AreaDescription
     ,ReasonDescription
     ,Active
		FROM [dbo].[vw_ProjSetup_TargetsMasterList]
		UNION ALL
    SELECT
      ListName = 'SYS_TargetFields'
     ,LineShadeColour = 'white'
     ,TargetFieldID = -1
     ,TargetShort = '<< Add new target >>'
     ,TargetFieldDescription = ''
     ,StatisticCode = ''
     ,ActivityComments = ''
     ,AreaDescription = ''
     ,ReasonDescription = ''
     ,Active = 1
		ORDER BY TargetFieldID DESC
	END

	IF @ListName = 'DBT_TargetFields'
	BEGIN
    SELECT
      ListName = 'DBT_TargetFields'
     ,LineShadeColour = 'white'
     ,MonthlyFieldID
     ,TargetShort
     ,TargetDescription
     ,Active
     ,Sequence
     ,Frequency
     ,RefDate
     ,LocationID
     ,EquipmentID
     ,TargetDescription
     ,MaterialID
     ,WeeklyPlan
		FROM [dbo].[vw_ProjSetup_TargetsProjectList]
		UNION ALL
    SELECT
      ListName = 'DBT_TargetFields'
     ,LineShadeColour = 'white'
     ,MonthlyFieldID = -1
     ,TargetShort = '<< add new target fields >>'
     ,TargetFieldDescription = ''
     ,Active = 1
     ,Sequence = ''
     ,Frequency = ''
     ,RefDate = ''
     ,LocationID = ''
     ,EquipmentID = ''
     ,TargetDescription = ''
     ,MaterialID = ''
     ,WeeklyPlan = ''
		ORDER BY MonthlyFieldID DESC
	end

  if @ListName = 'GenerateQR'
  begin
    SELECT distinct
      ListName = 'GenerateQR'
      , LineShadeColour = iif(vpsp.Active =0, 'grey' ,'white')
     -- , iplodConfigID
     ,vpsp.Projectid
     ,vpsp.ProjectCode
     ,vpsp.iplodConfigID
      , vpsp.ConfigName
      , vpsp.ConfigValue
      , vpsp.Comments
      , vpsp.ConfigLabel
      , vpsp.Active
      , vpsp.QrGeneratorJson
    from [dbo].vw_ProjSetup_PLODConfigs vpsp
    WHERE vpsp.Projectid= @ProjectID --2022-05-03
    ORDER by active desc,vpsp.ConfigName
--SELECT * FROM dbo.tbl_SYS_iplodConfigs AS tsc


  END
  if @ListName = 'SignRegister'
    BEGIN
      
      SELECT 
            ListName = 'SignRegister'
     ,LineShadeColour =
      CASE
        WHEN s.SignChangeIncrement = 1 THEN 'white'
        ELSE 'lightgrey'
      END
     ,s.LocationID
     ,date = FORMAT(s.date, 'dd-MM-yy')
            ,s.shift
            ,s.projectid
     ,CalStartTime  -- FORMAT(s.CalStartTime, 'dd-MM-yy hh:mm:ss')
     ,CalEndTime  -- FORMAT(s.CalendTime, 'dd-MM-yy hh:mm:ss')
            ,s.Task
            ,s.[Sign Number]
            ,s.[Type of Sign]
            ,s.Reason
            ,s.Comments
            ,s.[Authorised by]
            ,s.[Installed by]
            ,s.DataStoreID
            ,s.DetailID
			,UniqueID
       ,s.SignChangeIncrement
            
         FROM View_ShiftSummary_SignRegister AS s
		 WHERE s.projectid = @ProjectID
     AND ViewSrc = @SignRegisterSrc

    union ALL 
      SELECT 
            ListName = 'SignRegister'
            ,LineShadeColour = 'white'
            ,LocationID = NULL 
     ,date = FORMAT(GETDATE(), 'dd-MM-yy')
            ,shift = NULL 
            ,projectid = @ProjectID 
            ,CalStartTime = getdate() 
            ,CalEndTime = getdate()
            ,Task = NULL 
            ,[Sign Number] = NULL
            ,[Type of Sign] = NULL 
            ,Reason = NULL 
            ,Comments = NULL
            ,[Authorised by] = '<< Add new Sign >>' 
            ,[Installed by] = NULL 
            ,DataStoreID= NULL 
            ,DetailID = NULL 
			,UniqueID = -1
         ,SignChangeIncrement = NULL 


    ORDER BY s.SignChangeIncrement ,[sign number]



    END 

 if @ListName = 'SignRegisterStopes'
    BEGIN
      
      SELECT 
            ListName = 'SignRegisterStopes'
     ,LineShadeColour =
      CASE
        WHEN s.SignChangeIncrement = 1 THEN 'white'
        ELSE 'lightgrey'
      END
     ,s.LocationID
     ,date = FORMAT(s.date, 'dd-MM-yy')
            ,s.shift
            ,s.projectid
     ,CalStartTime  -- FORMAT(s.CalStartTime, 'dd-MM-yy hh:mm:ss')
     ,CalEndTime  -- FORMAT(s.CalendTime, 'dd-MM-yy hh:mm:ss')
            ,s.Task
            ,s.[Sign Number]
            ,s.[Type of Sign]
            ,s.Reason
            ,s.comments
            ,s.[Authorised by]
            ,s.[Installed by]
            ,s.DataStoreID
            ,s.DetailID
			,UniqueID
       ,s.SignChangeIncrement
            
         FROM View_ShiftSummary_SignRegister_UniqueLocns_StopeSigns AS s
		 WHERE s.projectid = @ProjectID
     AND ViewSrc = @SignRegisterSrc

    union ALL 
      SELECT 
            ListName = 'SignRegisterStopes'
            ,LineShadeColour = 'white'
            ,LocationID = NULL 
     ,date = FORMAT(GETDATE(), 'dd-MM-yy')
            ,shift = NULL 
            ,projectid = @ProjectID 
            ,CalStartTime = getdate() 
            ,CalEndTime = getdate()
            ,Task = NULL 
            ,[Sign Number] = NULL
            ,[Type of Sign] = NULL 
            ,Reason = NULL 
            ,Comments = NULL 
            ,[Authorised by] = '<< Add new Sign >>' 
            ,[Installed by] = NULL 
            ,DataStoreID= NULL 
            ,DetailID = NULL 
			,UniqueID = -1
         ,SignChangeIncrement = NULL 


    ORDER BY s.SignChangeIncrement ,[sign number]



    END 

	if @ListName = 'TargetsUpload'
    BEGIN

      SELECT 
            ListName = 'TargetsUpload'
     ,LineShadeColour =
      CASE
        WHEN ROW_NUMBER() OVER (ORDER BY DataStoreID) % 2 = 0 THEN 'white'
        ELSE 'lightgrey'
      END
			,DataStoreID
			,BudgetCodeID
			,MonthTargetID
			,ProcessID
			,ActivityID
			,ReasonID
			,StatisticID
			,EquipmentID
			,MaterialID
			,MaterialSysID
			,LocationID
			,Date
			,Shift
			,Value

         FROM vw_ProjSetup_TargetsDataUpload
		 WHERE ProjectID = @ProjectID

    union ALL 
      SELECT 
            ListName = 'TargetsUpload'
            ,LineShadeColour = 'white'
			,DataStoreID = NULL 
			,BudgetCodeID = NULL 
			,MonthTargetID = NULL 
			,ProcessID = NULL 
			,ActivityID = NULL 
			,ReasonID = NULL 
			,StatisticID = NULL 
			,EquipmentID = NULL 
			,MaterialID = NULL 
			,MaterialSysID = NULL 
			,LocationID = NULL 
			,Date = GETDATE() 
			,Shift = NULL
			,Value = NULL

    ORDER BY [Date]



    end 

if @ListName = 'PlodSyncHistory'
    BEGIN

      SELECT
            ListName = 'PlodSyncHistory'
     ,LineShadeColour =
      CASE
        WHEN ROW_NUMBER() OVER (ORDER BY MessageQueueId) % 2 = 0 THEN 'white'
        ELSE 'lightgrey'
      END
      			,MessageQueueId
      			,DeviceAssetNo
      			,DateCreated
      			,DateCompleted
      			,DataSyncTriggerPoint
      			,JsonPayload
      			,LengthOfPayload
      			,EmployeeId
      			,AppDeploymentMode
      			,SessionId
      			,AppVersion
      			,DeviceSerialNo
      			,DeviceOS
      			,TaskHeaderId
            ,PayloadSessionId
            ,PayloadEmployeeId
            ,PayloadDeviceOS

         FROM View_ShiftSummaryInsights_PlodSyncHistory

    union ALL
      SELECT
            ListName = 'PlodSyncHistory'
            ,LineShadeColour = 'white'
			      ,MessageQueueId = null
      			,DeviceAssetNo = null
      			,DateCreated = getdate()
      			,DateCompleted = null
      			,DataSyncTriggerPoint = null
      			,JsonPayload = null
      			,LengthOfPayload = null
      			,EmployeeId = null
      			,AppDeploymentMode = null
      			,SessionId = null
      			,AppVersion = null
      			,DeviceSerialNo = null
      			,DeviceOS = null
      			,TaskHeaderId = null
            ,PayloadSessionId = null
            ,PayloadEmployeeId = null
            ,PayloadDeviceOS = null

    ORDER BY DateCreated
    end


    if @ListName = 'Sys_AutoSyncTasks'
    BEGIN

      SELECT
            ListName = 'Sys_AutoSyncTasks'
            ,LineShadeColour = 'white'
      			,ID
      			,AutoTaskName
      			,InUse
      			,TaskComments
      			,MinHour
      			,MaxHour
      			,FreqMins
      			,ProjectID
      			,IsCycleThroughProjects
      			,IsTestOnly
      			,IsOnlyForThisUser
      			,OverrideSchedule_RunOnceWithin10MinutesOf
      			,IsAllowedOnLocal
      			,ChangeComments
            ,ExcludeDBNameCsv
            ,ExcludeUserNameCsv
            ,LastRunDateTime

         FROM vw_ProjSetup_Sys_AutoSyncTasks

    union ALL
      SELECT
            ListName = 'Sys_AutoSyncTasks'
            ,LineShadeColour = 'white'
			      ,ID = -1
      			,AutoTaskName = null
      			,InUse = 0
      			,TaskComments = null
      			,MinHour = null
      			,MaxHour = null
      			,FreqMins = null
      			,ProjectID = null
      			,IsCycleThroughProjects = 0
      			,IsTestOnly = 0
      			,IsOnlyForThisUser = null
      			,OverrideSchedule_RunOnceWithin10MinutesOf = null
      			,IsAllowedOnLocal = 0
      			,ChangeComments = null
            ,ExcludeDBNameCsv = null
            ,ExcludeUserNameCsv = null
            ,LastRunDateTime = null

    ORDER BY ID
    end

    if @ListName = 'Dbt_Locations'
    begin
      set @Cmd = N'exec SP_ProjSetup_GenericListEdits_Data_Locations @ProjectID = @ProjectID_Value;'
      EXEC sp_executesql @Cmd, N'@ProjectID_Value INT', @ProjectID;
    end

	if @ListName = 'SyncTasksDashboard'
    begin
		SELECT
            ListName = 'SyncTasksDashboard'
            ,LineShadeColour = 'white'
			,ID
			,AutoTaskName         --visible inline
			,InUse                --visible inline
			,TaskComments         --visible inline
			,MinHour              --visible inline
			,MaxHour              --visible inline
			,FreqMins             --visible inline
			,ProjectID
			,IsCycleThroughProjects
			,IsOnlyForThisUser
			,IsTestOnly
			,OverrideSchedule_RunOnceWithin10MinutesOf
			,IsAllowedOnLocal
			,ModifiedOn
			,ChangeComments
			,ExcludeDBNameCsv
			,ExcludeUserNameCsv
			,FailedCount
			,SuccessCount
			,FailedPercentage      --visible inline
			,[FailedPercentageAsDecimal] = isnull(FailedPercentageAsDecimal, 0)
			,Last3Failed
			,MostRecentFail
			,MostRecentSuccess
			,MostRecentFailRowId
			,MostRecentSuccessRowId
			,MostRecentFailMessage --visible inline
			,thirdlastFailDate
			,thirdlastRowId
		from
			[dbo].[vw_ProjSetup_SyncTasksDashboard]
		WHERE (ProjectID = @ProjectID or ProjectID=1) --2022-10-25
		union all
		SELECT
            ListName = 'SyncTasksDashboard'
            ,LineShadeColour = 'white'
			,ID = -1
			,AutoTaskName = '<< Add new Auto Sync Task >>'
			,InUse = 999999
			,TaskComments = null
            ,MinHour = null
            ,MaxHour = null
			,FreqMins = null
			,ProjectID = null
			,IsCycleThroughProjects = null
			,IsOnlyForThisUser = null
			,IsTestOnly = null
			,OverrideSchedule_RunOnceWithin10MinutesOf = null
			,IsAllowedOnLocal = null
			,ModifiedOn = null
			,ChangeComments = null
			,ExcludeDBNameCsv = null
			,ExcludeUserNameCsv = null
			,FailedCount = null
			,SuccessCount = null
			,FailedPercentage = null      --visible inline
			,FailedPercentageAsDecimal = 0
			,Last3Failed = null
			,MostRecentFail = null
			,MostRecentSuccess = null
			,MostRecentFailRowId = null
			,MostRecentSuccessRowId = null
			,MostRecentFailMessage = null --visible inline
			,thirdlastFailDate = null
			,thirdlastRowId = null
			order by INUse desc , ID
    end

	if @ListName = 'QueueUpdates'
begin
    select ListName = 'QueueUpdates'
          ,LineShadeColour = 'white'
          ,ManageUpdatePackageNumber     --table id, not editable.
          ,InstanceCodeCsv               --this is a list method
          ,Active                        --tickbox
          ,UserId                        --page user
          ,SystemComponentName           --this is a list of options see card
          ,UpdateNotes                   --text field (optional)
          ,SQLScript                     --need to be able to past update scripts into here.
          ,DbToRunSqlOn                  -- list of all databases on current server
          ,DockerCodeTag                 -- text entry optional
          ,PhpGitTag_DefaultContainer    -- text entry optional
          ,PhpGitTag_BackgroundContainer -- text entry optional
          ,PlodSchemaDbVersion           -- text entry optional
          ,ManageSchemaDbVersion         -- text entry optional
          ,UpdateWindowStartdate         --date picker
          ,UpdateWindowEndDate           -- date picker
          ,UpdateWindowMinHr             --integer
          ,UpdateWindowMaxHr             --interger
          ,DateTimeQueued                --auto-date field = time of insert 
          ,UpdateResults                 --read only info delivered to teh page
          ,UpdateChangeLog               --join to generic list logging same like we normally do.
    from [dbo].[vw_ProjSetup_UpdateQueue]
    union all
    select ListName = 'QueueUpdates'
          ,LineShadeColour = 'white'
          ,ManageUpdatePackageNumber = -1
          ,InstanceCodeCsv = null
          ,Active = null
          ,UserId = null
          ,SystemComponentName = null
          ,UpdateNotes = null
          ,SQLScript = null
          ,DbToRunSqlOn = null
          ,DockerCodeTag = null
          ,PhpGitTag_DefaultContainer = null
          ,PhpGitTag_BackgroundContainer = null
          ,PlodSchemaDbVersion = null
          ,ManageSchemaDbVersion = null
          ,UpdateWindowStartdate = null
          ,UpdateWindowEndDate = null
          ,UpdateWindowMinHr = null
          ,UpdateWindowMaxHr = null
          ,DateTimeQueued = getdate()
          ,UpdateResults = null
          ,UpdateChangeLog = null;
end;
  IF @ListName = 'ActReasonEdits'
  BEGIN
    SELECT TOP 100 ListName = 'ActReasonEdits'
          ,LineShadeColour = 'white'
          ,TaskdetailsCacheId
			    ,GroupNameDisplay = tg.TaskName
          ,RowId
          ,t.ProjectID
          ,OperationID
          ,ActReasonID
          ,t.TaskName
          ,EquipTypesAllowed
          ,ACTIVE
          ,InputType
          ,FieldType
          ,InputID
          ,HelpText
          ,DisplayOrder
          ,DisplayTrap
          ,DataTypeDisplayed
          ,DecPlaces
          ,TimeStampThisInput
          ,CalcString
          ,ForeLabel
          ,AftLabel
          ,CompulsoryTrap
          ,DefaultValue
          ,ReviewTrap
          ,IntolerableValues
          ,InitialValidationMsg
          ,FinalValidationMsg
          ,InputListSelectionFilter
          ,Shareable
          ,InputGroup
          ,SummaryGroup
          ,DisplayInputComments
          ,TypeCsvOld
          ,TypeIdsCsv
          ,TrapIntolerableComment
          ,IsInputCommentRequired
          ,IsInputPhotoRequired
          ,IsInputAuthRequired
          ,KeepOnCopy
          -- ,ModifiedOn -- handled on trigger
          ,Param1
          ,Param2
          ,Param3
          ,Param4
          ,WebCalcString
          ,AttrJson
          ,SupportedVersion
          ,AdditionalRegex
          ,td_ReportingBitWise
          ,ToleranceLower
          ,TL_Text
          ,ToleranceUpper
          ,TU_Text
          ,td_ActivityID
          ,td_ReasonID
          ,td_ProcessID         
          ,ExcludeFromApp
          ,ExcludeFromWeb
          ,DateCreated
          -- ,DateUpdated  -- handled on trigger
          ,ChangeHistory = IIF(ChangeHistory <> '', '...' + RIGHT(ChangeHistory, 250),'')
    FROM dbo.vw_Iplod_GetAR_TaskDetailsForEditAndUpload AS t
    LEFT JOIN [dbo].[vw_Iplod_GetAR_TaskGroupingsAll] AS tg
    ON t.ActReasonID = tg.ActivityReasonId
    UNION ALL
      SELECT ListName = 'ActReasonEdits'
          ,LineShadeColour = 'white'
          ,TaskdetailsCacheId = -1
			    ,GroupNameDisplay = 'New'
          ,RowId = NULL
          ,ProjectID = NULL
          ,OperationID = NULL
          ,ActReasonID = NULL
          ,TaskName = NULL
          ,EquipTypesAllowed = NULL
          ,ACTIVE = NULL
          ,InputType = NULL
          ,FieldType = NULL
          ,InputID = NULL
          ,HelpText = NULL
          ,DisplayOrder = NULL
          ,DisplayTrap = NULL
          ,DataTypeDisplayed = NULL
          ,DecPlaces = NULL
          ,TimeStampThisInput = NULL
          ,CalcString = NULL
          ,ForeLabel = NULL
          ,AftLabel = NULL
          ,CompulsoryTrap = NULL
          ,DefaultValue = NULL
          ,ReviewTrap = NULL
          ,IntolerableValues = NULL
          ,InitialValidationMsg = NULL
          ,FinalValidationMsg = NULL
          ,InputListSelectionFilter = NULL
          ,Shareable = NULL
          ,InputGroup = NULL
          ,SummaryGroup = NULL
          ,DisplayInputComments = NULL
          ,TypeCsvOld = NULL
          ,TypeIdsCsv = NULL
          ,TrapIntolerableComment = NULL
          ,IsInputCommentRequired = NULL
          ,IsInputPhotoRequired = NULL
          ,IsInputAuthRequired = NULL
          ,KeepOnCopy = NULL
          -- ,ModifiedOn = GETDATE() -- handled on trigger
          ,Param1 = NULL
          ,Param2 = NULL
          ,Param3 = NULL
          ,Param4 = NULL
          ,WebCalcString = NULL
          ,AttrJson = NULL
          ,SupportedVersion = NULL
          ,AdditionalRegex = NULL
          ,td_ReportingBitWise = NULL
          ,ToleranceLower = NULL
          ,TL_Text = NULL
          ,ToleranceUpper = NULL
          ,TU_Text = NULL
          ,td_ActivityID = NULL
          ,td_ReasonID = NULL
          ,td_ProcessID = NULL          
          ,ExcludeFromApp = NULL       
          ,ExcludeFromWeb = NULL       
          ,DateCreated = GETDATE()
          -- ,DateUpdated = GETDATE() -- handled on trigger
          ,ChangeHistory = NULL
  END
END;

/****** Object:  StoredProcedure [dbo].[SP_ProjSetup_GenericListEdits_FieldSettings]    Script Date: 13/08/2021 07:28:00 ******/
SET ANSI_NULLS ON
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Reporting_DataSummary_24Hr]'
GO
ALTER PROCEDURE [dbo].[SP_ProjSetup_Reporting_DataSummary_24Hr] @ProjectID INT, @Type VARCHAR(25) = 'Mining'  -- =TypeAlias from page URL  ... could be mining1 or mining2 or maintenance
    ,  @DateFrom DATE, @DateTo DATE, @Shift VARCHAR(2) = 'DS', @Mode NVARCHAR(35) = '',@SupervisorID INT = 0, @CrewID INT= 0, @UserID INT= 0
    , @ActivityReasonCsv nvarchar (50) ='',-- @MaterialIDs VARCHAR(50) = '',
      @OperatorIDs VARCHAR(255) = NULL,
  @ActivityIDs VARCHAR(255) = NULL,
  @ProcessIDs VARCHAR(255) = NULL,
  @EquipmentIDs VARCHAR(255) = NULL,
  @TaskIDs VARCHAR(255) = NULL,
--  @Shift VARCHAR(2) = NULL,
  @LocationIDs VARCHAR(255) = NULL,
  @EquipTypeIDs VARCHAR(255) = NULL,
  @ReportTypeID INT = 0,
  @InputType NVARCHAR(25) = 'Stat'  --don't think we are using this for this page?will call from front end with @InputType = 'Attr' and @ReportTypeID = Inputid
  ,
  @MaterialIds VARCHAR(255) = NULL,
  @DestIDs VARCHAR(255) = NULL,
  @BogFromIDs VARCHAR(255) = NULL,
  @BogToIDs VARCHAR(255) = NULL,
  @KPIIDs VARCHAR(255) = NULL,
  @CrewIDs VARCHAR(255) = NULL,
  @WorkAreaIDs VARCHAR(255) = NULL,  --this is pitId!
  @CutNumberIDs VARCHAR(255) = NULL
  ,@debugMode INT = 0
    AS
    BEGIN
        /*

 EXEC [dbo].[SP_ProjSetup_Reporting_DataSummary_24Hr] @ProjectID = '3', @Type = 'Mining', @DateFrom = '2021-12-01', @DateTo = '2021-12-15', @Mode = 'Reporting', @SupervisorID = '137', @UserID = '137'

 EXEC [dbo].[SP_ProjSetup_Reporting_DataSummary_24Hr] @ProjectID = '401', @Type = 'Mining', @DateFrom = '2023-05-23', @DateTo = '2023-05-23', @Mode = 'Reporting', @SupervisorID = '137', @UserID = '137'
,@DEbugmode = 1
     TS 2018-09-18 ... chanbges to maint section
        IP 2018-10-04 add handler to PartsList, the InputType is as it is, not changed to ConsArea
        TS 2018-10-11 ... further changes to maint section ... only showing parts list inputs
        CA 2018-12-20 ... Added Shiftboss Type to mining shift summary for non shiftboss tasks (ProcessID <> 25)
        AD 2019-01-31 ... add handler for @type = mining1 / mining 2 etc
        TS 2019-02-02 ... add pitId to all sets
                            further filtering for types
        TS 2019-02-12 ... removed this for 24hr summary (should take the whole section out on type alias config
                        ... prepared the overtime bit for ActReason = 1489
        IAN 2019-05-16 ... added check 24hr type to the maint
        AD 2019-06-24 ... add case when inputValue = stat calc and has >2 decimal places Round value
             TS 2019-07-11 ... add commenst about delay task duration
                                        ... rounded all statcalcs to 1 decimal. were still getting weird multiple decimals on the summary row on front end for some reason.
             TS 2019-07-14  ... revert the comments about delay task duration ...this isn't a good idea because it will get saved to the data for any line edited. not for lines not edited.
             TS 2019-07-22  ... reduced rounding to zero decimals
             TS 2019-07-23 ... task alias
             CA 2019-07-24 ...Fix VIV bogging special handling
             IP 2019-07-24 ... add dummy ShowButtonDayworks field
             AD 2019-08-18 ... Shift changeLog field to changeLog table
             AD 2019-08-19 ... use the existing table change log, fix duplicate change 
             IP 2019-08-21 ... change changelog query to fix changelog pivot issue
             TS 2019-09-03 ... add RefNo for maint (not editable, they can change it up top in the timeline only)
                                 ... added ItemId on desc parts list
             TS 2019-09-12 ... add config for the post parts, will need to source this out of a view when we get cracking with it. the intent is to use config @PartsUsedEquipTypeIdfilter to turn it on for LV fitter only at PEA.
             CA 2019-09-13 ... Added Config for show dayworks button
             CA 2019-09-24 ... Added exception for record ground noise and record scaling as a new config. 
			 CA 2019-10-01 ...Made AdHoc stocktakes appear on Maint - ARID 1602
			 AD 2019-10-13 ... show Question data on summary
			 CA 2019-10-22 ...Made Special handling for Charge Up Shutdown checks to be red
			 ts reverted ca's addition of type = 'elect'  ... the iplod data wont have this on it anyway

			 TS 2019-11-23 ... only show question inputs for normal shareable controls (in mining set)
							... add act reason multi proect (in mining set)
							...add whole new dataset for Perfect Day
			ts 2019-11-26 ... added the else on perfect day set
			IP 2019-11-04 ... capitalize first letter on YNRadio answer to make it uniform related to front end (#1266) 
			TS 2019-12-17 ... remove Perfect day
							... put scalar pit id check onto inital variable instead of in line of the WHERE
							... put the change log on join dataset down below
			TS 2019-12-18 ... fix the max partition thing for last local stagingid
			IP 2020-01-07 ... fix Changelog not retrieved correctly on ConsArea 
			IP 2020-01-15 ... added SHareable filter to match fields returned with SP_ShiftSummary_DataSummary_ParamsInputsSetups
						  ... added query to get AttrList Value
			CA 2020-01-23 ...Fix for Peak bogging
			IP 2020-02-24 ... change query to use FN_GetAttribute
			CA 2020-02-27 ... Commented out Attr join...it was breaking the TWI hazards. search for date to find

			IAN 2020-02-27 ... Added AllowChangeTask params
				           ... Added fields for Edit/Change task

			FM 2020-02-27 ... added @Mode, @SupervisorId, @CrewId, @UserId params no changes on query (1568)
			IP 2020-03-05 ... change the changelog join
			AD 2020-03-10 ... remove OR i.InputGroup <> '', the handler is on PHP right now
			IP 2020-03-30 ... added query to get AttrList Value
			ts 2020-04-17 ... type alias get from new function
						removed:ts 2020-04-20 TEMPORAY SWITCH ONLY ON CENTRAL< REVERT AFTER FIX PARTS LIST
			ts 2020-04-22 ... added is null handling for maint parts list
			CA 2020-04-30 ...Added @ProjectId to select for shiftsummary sepecific config value. Was bringing TWI's into all projects. Date stamped on the line. 
			CA 2020-05-04 ... Added colour handling for TWIs. 
						  ... Removed excludefromweb! Discussed with TS
						  ... All to get TWIs on shift summary working
			CA 2020-05-05 ...Commented out the Q inputType line. Search for this date to find it.
			CA 2020-06-10 ...Hide No further action required on shift summary
			CA 2020-06-11 ...Fix TWI join
						  ...Set No Count on
			ts 2020-08-27 ... pit fileter should also look at desitaiont pitid! for CRF task that has no location field.
			ts 2020-11-23 ... safeguard the join to attributes INT
			ts 2020-11-25 ... added actreasonCsv call for debugging
			ts 2020-11-30 ... add INputComment 
			ip 2020-12-01 ... add AllowFormEdit flag (#A2332)
			ts 2020-12-17 ... modified the filter to utilise the reproting bitwise flag
							... also permission the Edit Form button
		ts 2020-12-18		.... "fix" TypeID to support pea
							... bogging Process split by processid instead of actreason list
			IP 2021-01-05 ... Added InputPhoto for displaying photos on data summary

			ts 2021-03-01 ... try removing the old complicated filters ... handle everything with reportin bitwise instead mainly to get the ground support form to come back)
			CA 2021-03-05 ... Fixed handling for showing TWIs and Ground noise. Ground noise poorly done, hardcoded. Needs a config or sometihng. Search for 1643. 
			ts 2021-03-10 ... remove dayworks join for speed
			CA 2021-03-24 ... Removed IsNull on reportingbitwise in where and in join. Sargable!
			ts 2021-06-01 ... fix teh OR =camera. not sure who or why. probably is a good idea though as camera input types will just be a hyperlink, no need not to show them
			ts 2021-06-03 ... shutdowns no working ofr mining1
	ts 2021-06-09 .. put taskalias of electronic forms into groupheader so we don't get too many fields
	ip 2021-06-15 ... added ApiButtonsJson for sending AMT API 
			ts 2021-07-26 ... merge to MCR
							.. various optimisations {didn't do anything I don't think}  add s.LoadedFrom>0 (reverted, likely worse becuase these fields not in indexes?
											{likely shaved a second off it}   add proj/date/shift on s in the stat7 EXISTS
											{meh, better a bit}  added [IPSECL_SSDataSummary_ReportingBitWise_v2] for the stat7 join
											{don't think it helped. maybe marginally worse REVERTED}  add projectid to location table and other DBT tables
											{yeah don't think it changes much}   remove s.date/proj/shift from teh stat7 join
											{I think marginally worse, reverted}   add reporting bitwise to teh inputs join WHERE
											{}  just do reportingbiws> 0 on the inputs join
			ts 2021-08-10 ... optimisations
								{not (much) worse} join on explicit fields instead of @variables
								{} change to cached attributes
								{same time, but doesn't parse the whole table.} this inner join was parsing the whole table: MaxLocalStaging try inline
								{}  put this index in (didn't actually change much)idxTMP_ips_DataSummary
								{} shift the bitwise to the join. reverted becuase it did't change much and mucked up the logic
								{} add this on teh bitwise filters 	and stat7.ReportingBitwise >= @ReportingBitwiseValue 
			ts 2021-08-12 ... remove the camer fitler inside the actreason join
							... remove the whole filter actaully, was flicking it back to other ProjectId (taht did have the rpeortin bitwise)
							{fail} join actinput without sub query, but can't put the rownum into the ON clause
							{nah, very bad}  swap actinput table with iplodtaskdtails outer apply.
							{also very bad.}  join instead of apply
							{put the i table up as cte}  ... appears to have halved it (1sec instead of 2) not sure the query plan is any different though.
			ts 2021-08-13 ... join to attributes table should have AttrTypeId too.
							... added  with (nolock) but not on ips due to data integrity.
							... don't get shareable.
							try putting hard coded projectid?
							put it in a # table instead
			ts 2021-02-18 ... don't get attributes from cached table, well syn. can flick the syn over when we have teh cache build schduled properly
			ts 2021-08-24 ... config the create defect
			CA 2021-09-15 ... StatCalc exception for roudning Drillm (stat 2). Changelog previously mentions broken rounding, so quick fix done. 
			CA 2021-10-13 ... Fixed TWI grab
			CA 2022-03-08 ... Added stuff for reporting
      ts 2022-05-17 ... kill hard coded static data 
       ts 2022-05-24 ... add some debugging
       ts 2022-08-16 ... add PitId, locationid etc on the filters

... this is not fully resolved. need to figure out how to sort the TWIs stuff, and whether or not to show a task at all (use ReportingBitWise on Stat7 to turn on a task)





        */

		SET NOCOUNT ON

/*
--fix this for demo:
SET @ProjectID = 259
SET @DateTo = '2021-04-01'
SET @DateFrom = @DateTo  --fix to 1 day. page may pass in two dates.
*/

      -- DELETE THIS. FOR TESTING PURPOSE ONLY
   --   SET @Mode = '';

        DECLARE @TrkGrouping as Varchar (20)
        SET @TrkGrouping = (SELECT isnull(ShiftSummary_TrkGrouping,'Location')  FROM dbo.tbl_DBT_Project WHERE Projectid = @ProjectID);

		DECLARE @IsDbAdmin int = dbo.FN_IsWebbarFullAdmin(@userId)

        DECLARE @InclMiningARIDs as varchar(100)
        SET @InclMiningARIDs = isnull((SELECT ConfigValue FROM tbl_SYS_WebbarConfigs WHERE ConfigName = 'AR_IncludeInShiftSummaryMining' AND Active = 1 ),0)

        DECLARE @TypeAliasMethod int
        SET @TypeAliasMethod = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@Type,1,'TypeAliasMethod','DataV')); --  methods are    0 --> no Type Alias used, just mining and maint

        DECLARE @Is24HrSummary INT
        SET @Is24HrSummary = CASE WHEN @Type like '%24' THEN 1 ELSE 0 END                                                                                                                                                                                                                                          --  1 --> PitId (aka work area)

        DECLARE @MaintOverTimeActive int
        SET @MaintOverTimeActive = dbo.FN_GetConfigValue(@ProjectId,'OverTimeMaint')

             DECLARE @PartsUsedEquipTypeIdfilter nvarchar(50) = ISNULL(dbo.FN_GetConfigValue(@ProjectId,'PostPartsUsedEquipTypeIds'),0);
             DECLARE @IsPartsPostActive int
             SET @IsPartsPostActive = CASE WHEN @PartsUsedEquipTypeIdfilter=0 THEN 0 ELSE 1 END

             DECLARE @Dayworks INT 
             SET @Dayworks = (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias(@ProjectID,@type,1,'Show_DayworksButton'))

			 DECLARE @DayWorksInputsCsv NVARCHAR(500) = dbo.FN_GetConfigValue(@ProjectID, 'DayworksInputCsv'); -- stat 156 = chargeableequiphours

DECLARE @TypeAliasPitId int = [dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type);

DECLARE @ShowTWIHazards INT = CAST(ISNULL(dbo.FN_GetConfigValue(@ProjectID, 'ShiftbossTWIReview'), 0) AS INT)

	DECLARE @AllowChangeTask INT = 1

   DECLARE @TypeId INT =IIF(@type LIKE 'mining',1,0) --not sure on the history of this fukker .. it is killing PEA type aliases. I think it is probably for the iplod type conversion to ids dbo.FN_ConvertType_TypeCode_To_TypeID(@Type);

   DECLARE @ReportingBitwiseValue INT = (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectID,@Type,@TypeId,'DataSummaryReportingBitwiseFlag',@Mode));
   -- DECLARE @ReportingBitwiseValue INT = (SELECT TOP 1 ReportingBitwiseValue FROM [dbo].[tvf_ReportingBitWise](@ProjectID) WHERE ModeCode = @Mode)


	DECLARE @AllowedToEditForms nvarchar(255) = IIF(@IsDbAdmin=1 ,1,ISNULL((select PermissionConfigValue from [dbo].[FN_ProjSetup_UserPermissions](@ProjectID,@userId,'ShiftSummary','_AllMiningTypes','_AllModes','AllowedToEditForms')),0)
														)


        DECLARE @ProcessIDToExcludeCSV VARCHAR(20)
        SET @ProcessIDToExcludeCSV = (SELECT  TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectId,@Type,@TypeId,'ProcessIDToExcludeCSV',@Mode)); --  methods are    0 --> no Type Alias used, just mining and maint


        declare @PutAliasIntoHeaderForElecForms int = 1
		declare @AllowPostDefectsForPrestarts int = 0

IF @debugMode = 1
	BEGIN

		SELECT  'ReportingBitwiseValue'=   @ReportingBitwiseValue  
		--UNION ALL 
		,'TypeID'=  @TypeId 
	--	UNION ALL 
	,'Mode'= @Mode
	--	UNION ALL 
	, 'ProcessIDToExcludeCSV'= @ProcessIDToExcludeCSV
		--UNION ALL 
	,'TypeAliasMethod'=  @TypeAliasMethod  
	--	UNION ALL 
	, 'TypeAliasPitId'= @TypeAliasPitId 
   -- UNION ALL 
    ,  'Is24HrSummary'= @Is24HrSummary
	END 

/*************
Get TWI data that has a 'Further Action Required' not equal to No. 
Then we join this to the main dataset to pull in both 'Further Action Required' and also 'Hazard'
**************/

	SELECT DISTINCT 
				s.DetailID,
				s.DataStoreID,
				s.Sequence 
			INTO #TWIJoin
	FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
		LEFT OUTER JOIN dbo.tbl_DBT_Location AS l 
			ON l.LocationID = s.Location
	INNER join  [dbo].[FN_Iplod_GetAR_TaskGroupings]('reportingsplits','')  AS prs  -- 2020-04-20
					ON s.ActivityReasonID = prs.ActivityReasonID
					AND prs.HasHazards = 1
			AND s.InputID IN (93)
		   AND s.InputValue <> '238' 
		   AND date BETWEEN @DateFrom AND @DateTo
		   AND @Shift = s.Shift 
		   AND @ProjectID = s.ProjectID
			 AND (s.Type = 'mining'
						OR s.Type = 'Shiftboss' OR s.Type = '') -- 2018-12-20

					  AND (@TypeAliasMethod = 0   --no type alias used
						OR --[dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) 
						@TypeAliasPitId= l.PitID) 
		   AND @ShowTWIHazards = 1
		   UNION ALL 
		   SELECT 1,'1',1
		   WHERE @ShowTWIHazards = 0;


--delete if exists, got into a spot of bother at HRA one time where a temp table had not been released.
IF OBJECT_ID(N'tempdb..#inputs') IS NOT NULL
BEGIN
DROP TABLE #inputs
END





        --SELECT @TrkGrouping
        ------------------------------------------------------------------------------------------------------------------------------------
        -- Mining
        ------------------------------------------------------------------------------------------------------------------------------------
        IF @Type LIKE 'Mining%'
            BEGIN
             -- ;with inputs as (
			  select   -- Changed from Inner Join to bring in TWI stuff
								InputType
								,InputID
								,InputGroup
								,DisplayOrder
								,AftLabel
								,ForeLabel
								,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )  --get from @project first, then Proj1
								,ActReasonLinkID
								--,ExcludeFromWeb
								--, Shareable
								,ReportingBitwise
							into #inputs
							from
								[dbo].[tbl_DBT_ActReasonInputLink] as i with (nolock)
								WHERE ProjectID IN(1,2, @ProjectId)
									--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
									--AND Shareable <> ''
									-- AND @ReportingBitwiseValue & ISNULL(ReportingBitwise, 0) = @ReportingBitwiseValue -- Turned off because we changed to left outer and filter in the where.
								--can't put this because it can flick onto the other project:	and ReportingBitwise>= @ReportingBitwiseValue				-- or InputType = 'Camera'  --2021-08-10
									--and ((@ReportingBitwiseValue & ReportingBitwise = @ReportingBitwiseValue) OR InputType = 'Camera' )  --added back in, try to optimise query.
--)
CREATE NONCLUSTERED INDEX #inputsxxx
ON [dbo].#inputs ([InputType],[InputID],[RowNum],[ActReasonLinkID])
INCLUDE ([InputGroup],[DisplayOrder],[AftLabel],[ForeLabel],[ReportingBitwise])






			  select
                     s.ProjectID
                     ,s.Date
                     ,s.Shift
                     ,s.OperatorID AS  'OperatorID'
                     --'ProcessID'
                     ,s.StagingID
                     ,s.DataStoreID
                     ,'Operator' = s.Shift  + ' - ' +e.Firstnames    --for demo--firs e.EmployeeName +  IIF(@IsDbAdmin =1 ,' '+CAST(s.OperatorID AS varchar) ,'' )+ ' (' + eq.EquipmentCode +  IIF(@IsDbAdmin =1 ,' '+CAST(eq.EquipmentCodeID AS varchar) ,'' )+ ')'
                      
                     --'Process'
                     --,CASE WHEN aretc.ProcessID = 13 THEN -13 ELSE aretc.ProcessID END AS ProcessID
                     --s.OperatorID AS 'OperatorID'
                     ,CASE WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'SourceCode' THEN l.SourceID--6
                           WHEN  aretc.ProcessID IN (5,6) AND @TrkGrouping = 'Location' THEN s.Location
							WHEN aretc.ProcessID =5--2020-12-18i.ActReasonLinkID IN (1505,1506,1507,1508) 
											AND @TrkGrouping = 'Process' THEN i.ActReasonLinkID
							 when @PutAliasIntoHeaderForElecForms = 1 and aretc. IsElecForm = 1 then  i.ActReasonLinkID
						   WHEN aretc.ProcessID = 13 THEN -13 ELSE aretc.ProcessID END as ProcessID
                     --,aretc.ProcessDescription AS 'Process'
                     --,'OperatorName' AS 'Process'  -- for swapping to operator view
                     ,CASE WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'SourceCode' THEN l.SourceCode
                           WHEN aretc.ProcessID IN (5,6) AND @TrkGrouping = 'Location' THEN l.LocationCode
						    WHEN aretc.ProcessID =5--2020-12-18i.ActReasonLinkID IN (1505,1506,1507,1508) 
									AND @TrkGrouping = 'Process' THEN aretc.taskname --dbo.FN_IsNullorEmpty(aretc.taskname,aretc.ReasonDescription)
                                       --THEN 'Trucking and Bogging' ELSE aretc.ProcessDescription END as Process  --for swapping to truck and bog view
                            when @PutAliasIntoHeaderForElecForms = 1 and aretc. IsElecForm = 1 then aretc.ProcessDescription + ' - '+aretc.taskname
						   else aretc.ProcessDescription END as Process
                     -- colour source http://www.colors.commutercreative.com/grid/
                     ,CASE
                          WHEN aretc.ProcessID IN (5, 6)
                              THEN 'Tan'
						  WHEN aretc.ActivityID = 2 AND aretc.[ActivityReasonId] = 1603 THEN 'crimson' -- 2019-10-23
						  WHEN aretc.ActivityID = 2 
							AND (aretc.[ActivityReasonId] IN (SELECT ActReasonID FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink WHERE AR_GroupingName = 'AR_TWIs')
										OR aretc.[ActivityReasonId] = 1643
										 or aretc.ProcessID = 16 --saftey stuff
										 ) 
							  THEN 'Coral'
                          ELSE 'SteelBlue'
                                       END AS 'ProcessColour'

                     --,aretc.ActivityDescription as 'Activity'
                     ,'TaskDescription'=CASE
                                       --   WHEN aretc.ProcessID IN (5,6) THEN l.LocationCode
                          WHEN aretc.ActivityID <> 1 THEN ActivityDescription + ' - ' +eq.EquipmentCode+' - ' +ReasonDescription
                          ELSE  aretc.taskname --dbo.FN_IsNullorEmpty(aretc.ReasonAlias,aretc.ReasonDescription)
                                       END 
									   + IIF(@IsDbAdmin =1 ,' '+CAST(aretc.[ActivityReasonId] AS varchar) ,'' )

                     --add equipmentID into this CASE to get equipment into taskdescription in case want to see summary against different equipment
                     ,CommentsCheck = s.CommentsCheck --+ IIF(ISNULL(delayhrs.delayhrs,0)>0,' (incl. ' + CAST(delayhrs.delayhrs AS varchar) +'hrs of delays)','')
                     ,RTRIM(eq.EquipmentCode) AS 'EquipID'
                     ,m.MaterialDescOp AS 'Material'
                     ,l.LocationCode AS 'Location'
                     -- ,CASE WHEN aretc.ProcessID IN (5,6) AND ActivityReasonID = 113 THEN aretc.ReasonDescription
                     -- WHEN aretc.ProcessID IN (5,6) and ActivityReasonID <> 113  THEN 'Load and Haul' ELSE l.LocationCode END AS Location
                     ,s.LocSource
                     ,s.LocDest
                     ,d.LocationCode AS 'Destination'
                     ,s.InputID
                     ,s.InputType

                     --  , case when s.InputType = 'Stat' and s.InputID = 7 then s.inputvalue  else s.InputValue end as 'InputValue'
                     --this is trying to get rid of many decimals on screen for statcalcs (giving conversion error, even though it should only be doing it for stats)... ,InputValue = CASE WHEN s.InputType = 'StatCalc' THEN CAST(s.InputValue  as float) ELSE s.InputValue END--CASE WHEN s.INputType = 'AttrList' THEN isnull(att.AttributeDescription,0) ELSE s.InputValue END AS 'InputValue'

                     -- WHEN Inputvalue has >2 decimal places THEN ROUND
                     ,InputValue = CASE
											
										-- Should have done better than specifically not rounding this calc, but see statcalc comment in changelog about dec places running errant on summary, so did a quick fix here.
										WHEN s.InputType = 'StatCalc' AND s.InputID = 2
										THEN CAST(CAST(s.InputValue AS FLOAT) AS VARCHAR(MAX))
										
										--  WHEN s.INputType like 'Stat%' AND s.INputId = 7 THEN dbo.FN_GetDuration(STartTime, EndTime) - ISNULL(delayhrs.delayhrs,0)
										WHEN s.InputType = 'StatCalc' --AND i.InputID IN (18,37) --AND (((abs(CAST(s.InputValue  as FLOAT))*100) - CONVERT(INT,(abs(CAST(s.InputValue  as FLOAT))*100))) <> 0)
										THEN
											CAST(ROUND (CAST(s.InputValue AS FLOAT), 0) AS VARCHAR(MAX))
										WHEN (s.InputType = 'Q' AND qt.AnswerType = 'YNradio')
										THEN
											UPPER(LEFT(s.InputValue, 1)) + LOWER(SUBSTRING(s.InputValue, 2, LEN(s.InputValue)))
									    WHEN (s.InputType = 'AttrList') --2020-02-27
									    THEN --2020-02-27
											(SELECT TOP 1 AttributeDescription FROM [dbo].[view_GetAttributes]--2021-08-18[dbo].[view_GetAttributes_Cached]--2021-08-10 [dbo].[FN_GetAttributes](@ProjectID, '', '', 0, s.InputID, 0, 'Attr') 
														where CAST(AttributeID AS nvarchar(50)) = CAST(s.InputValue AS nvarchar(50))
														and [AttributeTypeID] = s.[InputID]) --2020-02-27
										ELSE
											s.InputValue
									END

                     --,s.InputValue
                     --,RefNo
                     ,s.ConsumableProjectID
                     ,CASE
                          WHEN ISNULL(s.ConsumableProjectID, 0) <> 0 THEN (SELECT
                                                                               ConsumableID
                                                                           FROM tbl_DBT_ConsumablesProjectLink
                                                                           WHERE ConsumableProjectID = s.ConsumableProjectID)
                          ELSE 0
                                       END AS 'ConsumableID'
                     ,os.EmployeeName AS 'Offsider'
                     ,GroundCond = [GroundCondDesc]
                     ,la.LocationCode AS 'LoadedFrom'
                     ,bf.BogFromDesc AS 'BogFrom'
                     ,bt.BogToDesc AS 'LoadedTo'
                     ,re.EquipmentCode AS 'RelatedEquipment'
                     ,ISNULL(s.ClientDelay, 0) AS 'ClientDelay'
                     --,ISNULL(s.Damage, 0) AS 'DamageCheck'
                     ,s.DetailID
                     --,REPLICATE('0', 4 - LEN(s.StartTime)) + s.StartTime AS 'StartTime'
                     --,REPLICATE('0', 4 - LEN(s.EndTime)) + s.EndTime AS 'EndTime'
                     ,lp.Profile AS 'Profile'
                     ,ISNULL(s.Sequence, 0) AS 'Sequence'
                     ,s.ActivityReasonID AS 'ActivityReasonLinkID'
                     ,ForeLabel=coalesce(i.ForeLabel,[st].[StatisticCode],[qt].[QuestionText],'Take Photo')  --assume the missing one will be take photo because of the join. fix properly if needed.
                     ,cons.ConsumableDescShort
                     ,i.AftLabel
                     -- ,case when i.AftLabel = 'hrs' then ''
                     -- when s.inputtype like 'stat%' and s.inputid = 6 then '1'
                     --  else i.AftLabel end as 'AftLabel'   -- need to add a case when <> stat 7  remove aft label
                     --,ISNULL(i.ReviewTrap, 0) AS 'ReviewTrap'
                     ,st.StatisticTypeID
                     ,s.Reviewed AS 'Reviewed'
                     ,SupervisorComments = s.SupervisorComments
                                 ,LastLocalStagingID =--2021-08-10, try here MaxLocalStaging --MAX(s.LocalStagingID) OVER (PARTITION BY s.DataStoreID, s.DetailID ORDER BY s.DataStoreID, s.DetailID)
														(select MaxLocalStaging from (SELECT MaxLocalStaging= MAX(LocalStagingID), DetailId, DataStoreID  --, [md].[ProjectID], [md].[Shift], [md].[Date]
																					FROM [dbo].[syn_DWH_iPlodStagingTable] as md
																					where md.date BETWEEN @DateFrom AND @DateTo
																					AND md.ProjectID = @ProjectID -- s.[ProjectID]
																					AND md.shift = @shift --s.shift
																					--and md.[DetailID] = s.[DetailID]
																					--and md.[DataStoreID] = s.[DataStoreID]
																					GROUP BY DetailId, DataStoreID --, [md].[ProjectID], [md].[Shift], [md].[Date]

																					) LastStagingId
																				where s.DetailID = LastStagingId.DetailID
																				AND s.DataStoreID = LastStagingId.DataStoreID)

                                 ,s.LocalStagingID
                                 -- ,ChangeLog = chnglg.ChangeLog 
                     ,l.pitid
                     ,Method = CASE
                          WHEN (st.StatisticTypeID = 9 OR s.InputType like 'Attr%' OR s.Inputtype = 'ConsArea' OR s.InputType = 'Q') THEN 'Group' -- exclude attributes from grand total
                          WHEN st.StatisticTypeID = 10 THEN 'SUM'
                          ELSE 'SUM'
                      END
                     ,i.InputGroup
                     ,ShowButtonDayworks = @Dayworks * case when (@DayWorksInputsCsv LIKE '%,' + s.InputType + '_' + CAST(s.InputID AS VARCHAR) + ',%') then 1 else 0 end  --2021-03-10 mayeb this needs to show on all lines for a task, even if only some of them are dayworks lines?!  -- ISNULL(dw.IsDayWorksTask,  0)
                     ,i.DisplayOrder
                     -- ,aretc.ReasonAlias
					 ,l.LocationID
					 ,eq.EquipmentCodeID
					 ,s.StartTime
					 ,s.EndTime
					 ,AllowChangeTask = @AllowChangeTask
					 ,ChangeLog = STUFF(
							(SELECT CASE 
								WHEN ISNULL(l.NewValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								WHEN ISNULL(l.ExistingValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								WHEN ISNULL(l.ExistingValue, '') = '' AND ISNULL(l.NewValue, '') = '' 
								THEN '|' + l.FieldChanged + ' changed by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								ELSE '|' + l.FieldChanged + ' changed from ' + l.ExistingValue + ' to ' + l.NewValue + ' by ' + u.Username + ' on ' + CONVERT(VARCHAR(24), l.UpdateDateTime, 100)
								END
								FROM dbo.[tbl_DWH_iPlodStagingEditedChangeLog] AS l
								LEFT JOIN dbo.tbl_SYS_User AS u
									ON l.UserID = u.UserID
								WHERE l.ProjectID = s.ProjectID
									AND l.UpdateType = 'Edit_DataSummary'
									AND l.DataStoreID = s.DataStoreID
									AND l.DetailIDCsv LIKE '%,' + CAST(s.DetailID AS VARCHAR(5)) + ',%'							
									AND (l.SequenceIDCsv IS NULL OR ( l.SequenceIDCsv IS NOT NULL AND l.SequenceIDCsv LIKE '%,' + CAST(s.Sequence AS VARCHAR(5)) + ',%'))
								ORDER BY l.RowID ASC
							FOR XML PATH (''))
							,1,1,'')
					,s.InputComment
					,s.InputPhoto
					,AllowFormEdit = @AllowedToEditForms
					,ReportingBitwise=i.ReportingBitwise
					,ApiButtonsJson = iif(@AllowPostDefectsForPrestarts=1 , '[
																			{
																				"ButtonLabel":"Create Defect",
																				"ButtonColour":"#000",
																				"ButtonConfirmationText":"Are you sure you want to create Defect?",
																				"ApiTaskName":"Defects",
																				"ApiPayloadString":"EXEC SP_Integration_AMT_EquipDefect @ProjectID = ' + CAST(@ProjectID AS NVARCHAR(25)) + ', @DateFrom = ''' + CAST(s.Date AS NVARCHAR) + ''' , @Shift = ''' + CAST(s.Shift AS NVARCHAR) + ''', @DataStoreID = ''' + CAST(s.DataStoreID AS NVARCHAR) + ''', @DetailID = ''' + CAST(s.DetailID AS NVARCHAR) + ''', @TaskHeaderID = ''' + CAST(s.TaskHeaderId AS NVARCHAR) + '''",
																				"ButtonSuccessText":"Defect has been created.",
																				"ButtonFailText":"Failed creating Defect."
																			}
																			]'
										 ,'')

              --need some more fields for the filter:
              ,EquipmentId = s.EquipmentID
              ,eq.EquipTypeID
              ,MaterialId = s.Material
              , DestId  = l.DestID
              , BogFromID = s.BogFrom
              , BogToID = s.BogTo
                     INTO #FinalDataset
                FROM [dbo].[syn_DWH_iPlodStagingTable] AS s
				--left join --outer apply (no good0
				--	this is no good. maybe we should cache this dataset?
				--[dbo].[udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) as i
				--		on s.[ActivityReasonID] =i.[ActReasonID]
				--		and [i].[InputID] = [s].[InputID]
				--		and [i].[InputType] = [s].[InputType]
                    LEFT OUTER JOIN 
					#inputs as i
					 --(SELECT   -- Changed from Inner Join to bring in TWI stuff
						--		InputType
						--		,InputID
						--		,InputGroup
						--		,DisplayOrder
						--		,AftLabel
						--		,ForeLabel
						--		,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )  --get from @project first, then Proj1
						--		,ActReasonLinkID
						--		,ExcludeFromWeb
						--		, Shareable
						--		,ReportingBitwise
						--		from
						--		[dbo].[tbl_DBT_ActReasonInputLink] as i
						--		WHERE ProjectID IN(1,2, @ProjectID)
						--			--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
						--			--AND Shareable <> ''
						--			-- AND @ReportingBitwiseValue & ISNULL(ReportingBitwise, 0) = @ReportingBitwiseValue -- Turned off because we changed to left outer and filter in the where.

						--		--can't put this because it can flick onto the other project:	and ReportingBitwise>= @ReportingBitwiseValue				-- or InputType = 'Camera'  --2021-08-10
						--			--and ((@ReportingBitwiseValue & ReportingBitwise = @ReportingBitwiseValue) OR InputType = 'Camera' )  --added back in, try to optimise query.

						--		)AS i
                                 --  on i.projectid in  (1,2, s.[ProjectID])
									on	i.ActReasonLinkID = s.ActivityReasonID
                                       AND s.InputID = i.InputID
                                       --AND s.ProjectID = i.ProjectID
                                       AND s.InputType = i.InputType
									  AND i.RowNum =1
									  --can't do this: and ROW_NUMBER() OVER (PARTITION BY i.InputType,i.INputId,ActReasonLinkId ORDER BY i.InputType,i.INputId,ActReasonLinkId,ProjectID DEsc ) =1 --get from @project first, then Proj1=
									   --	AND ((@ReportingBitwiseValue & i.ReportingBitwise = @ReportingBitwiseValue) OR s.InputType = 'Camera' ) --having on here requores inner join --if adding to this, it is replicated on the join to this table too.
	--2021-07-26 join in this instaed to get "IsElectForms"
	inner join dbo.FN_Iplod_GetAR_TaskGroupingsAll(@ProjectID,0) as aretc
                                                                   ON s.ActivityReasonID = aretc.ActivityReasonId
                         --INNER JOIN (SELECT
                         --                     ar.ActivityreasonLinkID
                         --                      ,ar.ProcessID
                         --                      ,p.ProcessDescription
                         --                      ,r.ReasonDescription
                         --                      ,ar.ActivityID
                         --                      ,a.ActivityComments
                         --                      ,a.ActivityDescription
                         --                                                   ,ar.ReasonAlias
                         --                 FROM dbo.tbl_SYS_ActivityReasonLink AS ar
                         --                          INNER JOIN dbo.tbl_SYS_Process AS p
                         --                                     ON ar.ProcessID = p.ProcessID
                         --                          INNER JOIN dbo.tbl_SYS_Reason AS r
                         --                                     ON ar.ReasonID = r.ReasonID
                         --                          INNER JOIN dbo.tbl_SYS_Activity AS a
                         --                                     ON ar.ActivityID = a.ActivityID) AS aretc
                         --                ON s.ActivityReasonID = aretc.ActivityreasonLinkID


						--INNER JOIN  (SELECT MaxLocalStaging= MAX(LocalStagingID), DetailId, DataStoreID, date, shift , Projectid    
						--				FROM [dbo].[syn_DWH_iPlodStagingTable] 
						--				--WHERE date = @DateFrom
						--				--AND ProjectID = @ProjectID
						--				--AND shift = @Shift
						--				GROUP BY DetailId, DataStoreID  , date, shift, Projectid 

						--				) AS LastStagingId
						--			ON s.DetailID = LastStagingId.DetailID
						--			AND s.DataStoreID = LastStagingId.DataStoreID
						--			and [LastStagingId].[Date] = [s].[Date]
						--			and [LastStagingId].[Shift] = [s].[Shift]
						--			and [LastStagingId].[ProjectID] = [s].[ProjectID]




						 LEFT OUTER JOIN dbo.tbl_SYS_Equipment AS eq with (nolock)
                                         ON s.EquipmentID = eq.EquipmentCodeID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS l with (nolock)
                                         ON s.Location = l.LocationID
										-- and  l.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Employees AS e with (nolock)
                                         ON s.OperatorID = e.EmployeeID
										--do'nt do this. people change projects. and  e.[ProjectID] = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_ConsumablesProjectLink AS cons with (nolock)
                                         ON s.ConsumableProjectID = cons.ConsumableProjectID
                                             AND s.InputType IN ('Cons', 'ConsArea')
											 --and   cons.[ProjectID] = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Materials AS m with (nolock)
                                         ON s.Material = m.MaterialOpID
										 --and  m.[ProjectID] = @ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS d with (nolock)
                                         ON s.Destination = d.LocationID
										-- and  s.Destination >0
										-- and  d.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Location AS la with (nolock)
                                         ON s.LoadedFrom = la.LocationID
										-- and s.LoadedFrom > 0
										-- and  la.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_SYS_BogFrom AS bf with (nolock)
                                         ON s.BogFrom = bf.BogFromID
                         LEFT OUTER JOIN dbo.tbl_SYS_BogTo AS bt with (nolock)
                                         ON s.BogTo = bt.BogToID
                         LEFT OUTER JOIN dbo.tbl_SYS_Equipment AS re with (nolock)
                                         ON s.RelatedEquipment = re.EquipmentCodeID
                         LEFT OUTER JOIN dbo.tbl_DBT_LocationProfiles AS lp with (nolock)
                                         ON s.ProfileID = lp.ProfileID
										-- and  lp.[ProjectID] = s.ProjectID
                         LEFT OUTER JOIN dbo.tbl_DBT_Employees AS os with (nolock)
                                         ON s.Offsider = os.EmployeeID
                         LEFT JOIN dbo.tbl_DBT_GroundCond as gc with (nolock)
                                   ON s.GroundCond = gc.GroundCondID
                                       AND gc.ProjectID = s.ProjectID  --need to keep this one?
                         LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st with (nolock)
                                         ON st.StatisticID = s.InputID
                                             AND s.InputType IN ('Stat', 'StatCalc')
						 LEFT JOIN dbo.tbl_SYS_Questions AS qt with (nolock)
										ON s.InputType = 'Q'
											AND qt.QuestionID = s.InputID
											--2021-07-26 overkill. no need to include on the join. likely fuck the query plan? AND qt.QuestionID = i.InputID
                         LEFT JOIN tbl_DBT_Pit AS pit with (nolock)
                                   ON l.PitID = pit.PitID
						INNER JOIN dbo.tbl_SYS_ActivityReasonLink AS  actreas
							ON s.ActivityReasonID = actreas.ActivityreasonLinkID

						--LEFT OUTER JOIN #params AS par 
						--	ON s.ActivityReasonID = par.ActivityReasonID
						--	AND par.RowNum = 1

                WHERE 
				--2020-04-04 Removed the Exclude from web filter for hazards. Discussed with TS and we dont need anymore
				--(ISNULL(i.ExcludeFromWeb, 0) <> 1 )  --removed to assist performance. will have better soln next time need viv type bogging handling--OR s.ActivityReasonID IN (112,297,131,1505,1506,1507,1508))  --bogging tasks for VIV special handling

				 (@ActivityReasonCsv LIKE '%,' + CAST(s.ActivityReasonID  AS varchar) + ',%' OR @ActivityReasonCsv = '')
        --AND not(aretc.IsOffsiderTask = 1) --kill this and just use bitwise?
		--2020-12-17  kill this whole bit, see how it goes!
		--AND ( i.Shareable IS NOT NULL /*OR s.InputType = 'Q'*/ )-- CHRIS 16/9 turned this on and reviewtrapoff. Updateshift inputlink set sharable = long where reviewtrap = 1 and shared is null
  --                AND (i.Shareable <> ''  /*OR s.InputType = 'Q'*/)
                  -- AND i.ReviewTrap = 1  -- changed from shareable to review trap seeing as we are not doing the detail section on shift summary any more
                  -- AND s.InputType NOT LIKE 'Q%'
                  --AND NOT (s.InputType LIKE 'Stat%' AND s.InputID = 7 and processid not in (9,13))  -- excluded duration from this section, can be reviewed better in the timeline and after import

				  --only get tasks that have the tick
	
      		AND  (EXISTS (SELECT inputid FROM [dbo].[tbl_DBT_ActReasonInputLink] AS stat7 with (nolock)
								WHERE stat7.ProjectID = s.[ProjectID]
									--AND Shareable IS NOT NULL -- added this filter because if there are two result with Shareable = 'Short' on PID 1 and NULL on PID 194 (for example), then it should return the one with Shareable IS NOT NULL (to match with SP_ShiftSummary_DataSummary_ParamsInputsSetups)
									--AND Shareable <> ''
									and stat7.ReportingBitwise >= @ReportingBitwiseValue --2021-08-10
								and @ReportingBitwiseValue & stat7.ReportingBitwise = @ReportingBitwiseValue
									AND s.ActivityReasonID = stat7.ActReasonLinkID
									AND stat7.inputtype LIKE 'stat%'
									AND stat7.InputID=7
									--these are already incorporated into the s.WHERE clause I believeand s.[Date] = @DateFrom  --2021-07-26
									--and s.[ProjectID] = @ProjectID
									--and s.[Shift] = @Shift
									)

							OR exists (SELECT * FROM #TWIJoin AS twi
									WHERE s.DataStoreID = twi.DataStoreID 
									AND s.Sequence = twi.Sequence 
									AND s.DetailID = twi.DetailID 
									AND s.InputID IN (78,93)
									and s.[InputType] like '%attr%')  --2021-07-26, added to keep running quickly
						)


				--replace a bunch of the above with this:

						--2021-08-10 put on the join ?	didnt' change much and broke the logic of the TWIs I thikn.
						and ((@ReportingBitwiseValue & i.ReportingBitwise
												= @ReportingBitwiseValue

									) OR s.InputType = 'Camera' )  --if adding to this, it is replicated on the join to this table too.



                  -- the filter
                  AND s.Date BETWEEN @DateFrom AND @DateTo
              --    AND s.Shift = @Shift
                  AND s.ProjectID = @ProjectID
                  AND (s.Type = 'mining'
                    OR s.Type = 'Shiftboss' OR s.Type = '') -- 2018-12-20

                  AND (@TypeAliasMethod = 0   --no type alias used
                    OR --[dbo].[FN_TypeAliasPitId](@ProjectID,@TypeAliasMethod,@type) 
					@TypeAliasPitId= l.PitID
					OR @TypeAliasPitId= d.PitID 
					or l.PitID is null)  --or filter based on Pitid  2019-12-17.  or pit associated to destinationId, for CRF where there is no location parameter field!
						--2021-06-03 or get from both mines if there is no valid location
                 AND @Is24HrSummary = 0 --don't show this section for 24hr summary for now (should put on config instead)

				  AND  @ProcessIDToExcludeCSV NOT LIKE  '%,' + CAST(actreas.ProcessID AS VARCHAR(20)) + ',%' 
				 -- AND actreas.ProcessID NOT IN (13)
				  --and s.DataStoreID = '291_202011300730DS_11499_1'


                ORDER BY ProcessID, s.DetailID, ActivityReasonLinkID, i.InputGroup, Sequence, Method DESC, cons.DisplayOrder, i.ForeLabel;
            END


--do some filtering

SELECT *
 FROM #FinalDataset AS fd
 WHERE (
        NULLIF(@EquipmentIDs, '') IS NULL
        OR (
           NULLIF(@EquipmentIDs, '') IS NOT NULL
           AND @EquipmentIDs LIKE '%,' + CAST(EquipmentID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ActivityIDs, '') IS NULL
        OR (
           NULLIF(@ActivityIDs, '') IS NOT NULL
           AND @ActivityIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@ProcessIDs, '') IS NULL
        OR (
           NULLIF(@ProcessIDs, '') IS NOT NULL
           AND @ProcessIDs LIKE '%,' + CAST(ProcessID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@TaskIDs, '') IS NULL
        OR (
           NULLIF(@TaskIDs, '') IS NOT NULL
           AND @TaskIDs LIKE '%,' + CAST(ActivityreasonLinkID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@LocationIDs, '') IS NULL
        OR (
           NULLIF(@LocationIDs, '') IS NOT NULL
           AND @LocationIDs LIKE '%,' + CAST(LocationID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@EquipTypeIDs, '') IS NULL
        OR (
           NULLIF(@EquipTypeIDs, '') IS NOT NULL
           AND @EquipTypeIDs LIKE '%,' + CAST(EquipTypeID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@MaterialIds, '') IS NULL
        OR (
           NULLIF(@MaterialIds, '') IS NOT NULL
           AND @MaterialIds LIKE '%,' + CAST(MaterialID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@DestIDs, '') IS NULL
        OR (
           NULLIF(@DestIDs, '') IS NOT NULL
           AND @DestIDs LIKE '%,' + CAST(DestID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogFromIDs, '') IS NULL
        OR (
           NULLIF(@BogFromIDs, '') IS NOT NULL
           AND @BogFromIDs LIKE '%,' + CAST(BogFromID AS VARCHAR) + ',%'
        )
     )
     AND (
        NULLIF(@BogToIDs, '') IS NULL
        OR (
           NULLIF(@BogToIDs, '') IS NOT NULL
           AND @BogToIDs LIKE '%,' + CAST(BogToID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@OperatorIDs, '') IS NULL
        OR (
           NULLIF(@OperatorIDs, '') IS NOT NULL
           AND @OperatorIDs LIKE '%,' + CAST(OperatorID AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@WorkAreaIDs, '') IS NULL
        OR (
           NULLIF(@WorkAreaIDs, '') IS NOT NULL
           AND @WorkAreaIDs LIKE '%,' + CAST(@WorkAreaIDs AS VARCHAR) + ',%'
        )
     )
	 AND (
        NULLIF(@CutNumberIDs, '') IS NULL
        OR (
           NULLIF(@CutNumberIDs, '') IS NOT NULL
           AND @CutNumberIDs LIKE '%,' + CAST(@CutNumberIDs AS VARCHAR) + ',%'
        )
     )












            ------------------------------------------------------------------------------------------------------------------------------------
            -- Maintenance. not in this proc anymore
            ------------------------------------------------------------------------------------------------------------------------------------
if @debugMode = 1
begin
SELECT '#TWIJoin', * FROM #TWIJoin
SELECT '#inputs', * FROM #inputs
SELECT '@DateFrom'=@DateFrom,'@DateTo'=@DateTo,'@ProjectID'=@ProjectID
SELECT '#FinalDataset',* FROM #FinalDataset AS fd
end


		DROP TABLE #TWIJoin
		drop table #inputs
drop TABLE #FinalDataset

    END
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Reporting_SaveData_ReportComments]'
GO
ALTER     PROCEDURE [dbo].[SP_ProjSetup_Reporting_SaveData_ReportComments]
    @ProjectID INT
    ,@UserID INT = 0
    ,@DateFrom DATE = ''
    ,@DateTo DATE = ''
    ,@OperatorIDs VARCHAR(255) = NULL
    ,@ActivityIDs VARCHAR(255) = NULL
    ,@ProcessIDs VARCHAR(255) = NULL
    ,@EquipmentIDs VARCHAR(255) = NULL
    ,@TaskIDs VARCHAR(255) = NULL
    ,@Shift VARCHAR(2) = NULL
    ,@LocationIDs VARCHAR(255) = NULL
    ,@EquipTypeIDs VARCHAR(255) = NULL
    ,@ReportTypeID INT = 0
    ,@InputType NVARCHAR(25) = 'Stat' --will call from front end with @InputType = 'Attr' and @ReportTypeID = Inputid
    ,@MaterialIds VARCHAR(255) = NULL
    ,@DestIDs VARCHAR(255) = NULL
    ,@BogFromIDs VARCHAR(255) = NULL
    ,@BogToIDs VARCHAR(255) = NULL
    ,@TypeAlias VARCHAR(50) = ''
    ,@Mode VARCHAR(50) = ''
    ,@NewValue VARCHAR(MAX)
    ,@OldValue VARCHAR(MAX)
    ,@RptGroupId INT = 0
	,@RptDetailCode VARCHAR(100) = ''
    ,@RptDetailId INT
    ,@DataDateId INT
    ,@Date DATE
AS
BEGIN

    SET NOCOUNT ON;
    /*
  
  	EXEC [dbo].[SP_ProjSetup_Reporting_SaveData_ReportComments] @ProjectID = '259', @UserID = 137, @DateFrom = '2019-11-06', @DateTo = '2019-11-06', @OperatorIDs = '', @EquipmentIDs = '', @TaskIDs = '', @Shift = '', @LocationIDs = '', @DestIDs = '', @BogFromIDs = ',2,', @BogToIDs = '', @EquipTypeIDs = '', @ReportTypeID = '18', @MaterialIds = '', @TypeAlias = 'Reporting_Mining', @Mode = 'Reporting', @RptDetailId = 1, @DataDateId = 2, @Date = '2021-10-01'
      
    Changelog:
    2022-01-07 ip ... initial commit
  
  */

	
    IF (@NewValue <> @OldValue)
	BEGIN
		IF EXISTS (SELECT rptCommentID FROM [dbo].[tbl_STO_RptComments] WHERE RptDetailID = @RptDetailId AND DataDateID = @DataDateId AND RptCommentDate = @Date)
		BEGIN
			UPDATE [dbo].[tbl_STO_RptComments] SET RptCommentsText = @NewValue WHERE RptDetailID = @RptDetailId AND DataDateID = @DataDateId AND RptCommentDate = @Date
		END;
		ELSE 
		BEGIN

			-- handler for KPI data comment insert
			IF (@RptDetailId = -1 AND @DataDateId = 1)
			BEGIN
				SET @RptDetailId = (SELECT TOP 1 RptDetailID FROM tbl_SYS_RptDetail WHERE RptDetailCode = @RptDetailCode AND RptGroupID = @RptGroupId)
			END
			
			PRINT @RptDetailId
			INSERT INTO [dbo].[tbl_STO_RptComments]
				([EnteredBy]
				,[EnteredOn]
				,[RptCommentDate]
				,[Shift]
				,[EquipmentID]
				,[CrewID]
				,[OperationID]
				,[ProjectID]
				,[ProjTopicID]
				,[RptGroupID]
				,[RptDetailID]
				,[RptComment]
				,[RptCommentsText]
				,[Comments]
				,[Locked]
				,[DataDateID]
				,[SupervisorID]
				,[IsComplete])
			VALUES
				(@UserID
				,GETDATE()
				,@Date
				,''
				,0
				,0
				,0
				,@ProjectID
				,0
				,@RptGroupId
				,@RptDetailId
				,''
				,@NewValue
				,''
				,0
				,@DataDateId
				,0
				,1)
		END;

		-- change log
		INSERT INTO [dbo].[tbl_DBT_ReportingUpdateLogging]
			([TableName]
			,[FieldName]
			,[OldValue]
			,[NewValue]
			,[ModifiedOn]
			,[ModifiedBy]
			,[ProjectId])
		VALUES
			('tbl_STO_RptComments'
			,'RptComments'
			,@OldValue
			,@NewValue
			,GETDATE()
			,@UserID
			,@ProjectID)
	END


END
GO
PRINT N'Refreshing [dbo].[View_DE_iPlodStagingDetailData]'
GO
EXEC sp_refreshview N'[dbo].[View_DE_iPlodStagingDetailData]'
GO
PRINT N'Altering [dbo].[vw_Reporting_ReportComments]'
GO
ALTER VIEW [dbo].[vw_Reporting_ReportComments]


AS
/*
select * from [dbo].[vw_Reporting_ReportComments] 

		TS 2021-07-16 ... create
						.... added code and desc fro detaila nd group
    CA 2021-12-13 ... Fix ProjTRopic Join
	CA 2022-02-09 ... Added column to typealias to fix join 

TODO:
sort out WorkArea vs WorkArea2 vs WorkArea3.... ? maybe shift this to a function so we can get a bit more funky, call the funciton from this view


*/
SELECT
  [tbl].[CommentId]
 ,[EnteredBy] = [su].[Username]
 ,[p].[ProjectCode]
 ,[tbl].[EnteredOn]
 ,CommentDate = [tbl].[ShiftCommentDate]
 ,CommentShift = [tbl].[Shift]
  --hmmm, [tbl].[EquipmentID]
 ,[cc].[CrewCode]
  --, WorkArea = [pit].[PitCode]
  --, WorkArea2 = [pit2].[PitCode]
 ,WorkArea = COALESCE(NULLIF([pit].[PitCode], ''), 'MCR Mine')
  --,pit2.pitid
  --,pit2 = pit.pitid
  --,pt.projtopicid
 ,tblproj = tbl.ProjTopicID

 ,RptGroupCode = [sr].[RptGroupCode]
 ,RptGroupDesc = [sr].[RptGroup]
 ,RptDetailCode = [srd].[RptDetailCode]
 ,RptDetailDesc = [srd].[RptDetail]-- COALESCE(pt.[RptDetail], [srd].[RptDetail]) --some data not go ProjTopicId?
  --, [tbl].[OperationID]
  --, [tbl].[ProjectID]
  --, [tbl].[ProjTopicID]
  --, [tbl].[RptGroupID]
  --, [tbl].[RptDetailID]
  --, [tbl].[ShiftComment]
 ,CommentText = [tbl].[ShiftCommentsText]
 ,CommentTextClean = [dbo].[FN_StripHTML]([tbl].[ShiftCommentsText])
  --, [tbl].[Comments]
  --, [tbl].[Locked]
 ,ReportingPeriod = [dd].[DataDateCode] -- [tbl].[DataDateID]
 ,Supervisor = [emp].[EmployeeName] -- [tbl].[SupervisorID]
  --, [tbl].[IsComplete]
 ,[tbl].[Type]

 ,[eq].[EquipmentCode]
--, [tbl].[ShiftCommentsText2]

FROM (SELECT
    CommentId = 'ShiftComm' + '_' + CAST([s].[ShiftCommentID] AS VARCHAR)
   ,[s].[EnteredBy]
   ,[s].[EnteredOn]
   ,[s].[ShiftCommentDate]
   ,[s].[Shift]
   ,[s].[EquipmentID]
   ,[s].[CrewID]
   ,[s].[OperationID]
   ,[s].[ProjectID]
   ,[s].[ProjTopicID]
   ,[s].[RptGroupID]
   ,[s].[RptDetailID]
   ,[s].[ShiftComment]
   ,[s].[ShiftCommentsText]
   ,[s].[Comments]
   ,[s].[Locked]
   ,[s].[DataDateID]
   ,[s].[SupervisorID]
   ,[s].[IsComplete]
   ,[s].[Type]
   ,[s].[ShiftCommentsText2]
  FROM [dbo].[tbl_STO_ShiftComments] AS s

  WHERE [s].[ProjectID] = (SELECT TOP 1
      [PrimaryProjectId]
    FROM [dbo].[tvf_ServerDetails](0))

  UNION ALL
  SELECT
    CommentId = 'RptComm' + '_' + CAST([s].[rptCommentID] AS VARCHAR)
   ,[s].[EnteredBy]
   ,[s].[EnteredOn]
   ,[ShiftCommentDate] = [s].[RptCommentDate]
   ,[s].[Shift]
   ,[s].[EquipmentID]
   ,[s].[CrewID]
   ,[s].[OperationID]
   ,[s].[ProjectID]
   ,[s].[ProjTopicID]
   ,[s].[RptGroupID]
   ,[s].[RptDetailID]
   ,[ShiftComment] = [s].[RptComment]
   ,[ShiftCommentsText] = [s].[rptCommentsText]
   ,[s].[Comments]
   ,[s].[Locked]
   ,[s].[DataDateID]
   ,[s].[SupervisorID]
   ,[s].[IsComplete]
   ,[Type] = ''
   ,[ShiftCommentsText2] = NULL
  FROM [dbo].[tbl_STO_RptComments] AS s

  WHERE [s].[ProjectID] = (SELECT TOP 1
      [PrimaryProjectId]
    FROM [dbo].[tvf_ServerDetails](0))) AS tbl

LEFT JOIN [dbo].[tbl_SYS_User] AS su
  ON [tbl].[EnteredBy] = [su].[UserID]
LEFT JOIN [dbo].[tbl_DBT_Project] AS p
  ON [p].[ProjectID] = [tbl].[ProjectID]
LEFT JOIN [dbo].[tbl_SYS_Crew] AS cc
  ON [cc].[CrewID] = [tbl].[CrewID]





LEFT JOIN [dbo].[tbl_DBT_Pit] AS pit
  ON tbl.Type = pit.TypeAlias
    AND [tbl].[ProjectID] = pit.[ProjectID]

---- Changed this from a join on ProjTopicID to rpt stuff. ProjTopicID is 0.
--LEFT JOIN [dbo].[tbl_DBT_ProjTopics] AS pt
--  ON pt.RptDetailID = tbl.RptDetailID
--    AND pt.ProjectID = tbl.ProjectID
--    AND pt.RptGroupID = tbl.RptGroupID
--	AND pit.PitID = pt.PitId

---- Removed because we added TypeAliasColumn to pit
--LEFT JOIN [dbo].[tbl_DBT_Pit] AS pit2
--  ON [pit].[PitID] = [dbo].[FN_TypeAliasPitId](tbl.projectid, 1, [tbl].[Type])
--    AND [tbl].[ProjectID] = pit2.[ProjectID]

LEFT JOIN [dbo].[tbl_SYS_RptDetail] AS srd
  ON [srd].[RptDetailID] = [tbl].[RptDetailID]

LEFT JOIN [dbo].[tbl_SYS_RptGroup] AS sr
  ON tbl.[RptGroupID] = sr.[RptGroupID]



LEFT JOIN [dbo].[tbl_DBT_Employees] AS emp
  ON [tbl].[SupervisorID] = [emp].[EmployeeID]
LEFT JOIN [dbo].[tbl_SYS_DataDate] AS dd
  ON [dd].[DataDateID] = [tbl].[DataDateID]
LEFT JOIN [dbo].[tbl_SYS_Equipment] AS eq
  ON tbl.[EquipmentID] = eq.[EquipmentCodeID]
GO
PRINT N'Altering [dbo].[SP_ProjSetup_Reporting_ParamsInputsSetups_24Hr]'
GO
ALTER   PROCEDURE [dbo].[SP_ProjSetup_Reporting_ParamsInputsSetups_24Hr] @ProjectID INT = 1, @ActReasonIDs VARCHAR(MAX), @Type VARCHAR(25) = 'Mining'
,  @Mode NVARCHAR(35) = '' ,@UserId INT = 0 ,@SupervisorId INT = 0 ,@CrewId INT= 0, @DebugMode int = 0
AS
BEGIN

/*   THIS PROC IS USED TO LAY OUT THE DYNAMIC COLUMNS IN DATA SUMMARY SECTION (THE Pivoted one at least)
		fields and inputs are filtered to only show important things to shiftboss.
		used in conjunction with SP_ShiftSummary_DataSummary and an horrendous pivot method!!

		EXEC [dbo].[SP_ShiftSummary_DataSummary_ParamsInputsSetups] @ProjectID = '242', @UserId = '137', @CrewId = '1', @SupervisorId = '9294', @Mode = 'DataV', @Type = 'Mining', @ActReasonIDs = '6,100,183,186,190,191,82,4,81,13,354,101,108,110,145,115,271,305,124,418,138,226,397,116,112,131,1506'
        EXEC [dbo].[SP_ShiftSummary_DataSummary_ParamsInputsSetups] @ProjectID = '236', @UserId = '137', @CrewId = '1', @SupervisorId = '4705', @Mode = 'DataV', @Type = 'Mining', @ActReasonIDs = '101,122,108,311,292,110,287,390,1569,271,130,305,288,124,113,116,1505'

	CA 2019-07-24 ...Fix VIV bogging special handling
	CA 2019-09-18 ...Added Proj 1 inputs and params for mining.
					 Not in source control
	AD 2019-10-14 ... add handler for Question
	AD 2019-10-16 ... Strip HTML tags for Quetion forelabel
	ts 2019-12-04 .. handling for perfect day
	CA 2019-12-31 ...Changed @ActReasonIDs to varchar(max) from varchar(100). was cutting off some.
	IP 2020-01-06 ... add several fields so this SP can replace hardcoded query on php
	FM 2020-02-27 ... added @Mode, @SupervisorId, @CrewId, @UserId params no changes on query
	CA 2020-05-04 ... Remove Exclude from web filter for Hazards. Discussed with TS. 
	TS 2020-09-11 ... ditch teh shareable filter for maint. and put Proj1 handling
	ts 2020-09-13 ... type needs to be LIKE type for peak
	ts 2020-11-25 ... remove questions from Maint set
				  ... remove questions from the mining set (perfect day has its own proc now)
				  ... added shareable or parts list filtering for the maint set (because it was bringing in other stuff)
				   ... added excludeFromApp for this one (mining). is a shortcut to sorting Shareable flag properly. so only show inputs that have been captured by iplod
				   ... added Compulsory trap too out of desparation.  need to give controls over the dispaly of this to the end users.
	ts 2020-11-30 ... add back bogging. hwere the fuck it went no one knows!
    ts 2020-12-03 ... add rehab
				ts 2020-12-17 ... modified the filter to utilise the reproting bitwise flag
				ts 2020-12-18 ... add ips join to see if it kills query time
				ts 2020-12-18 ... replace wiht teh task details function to pick up proj1 forms cleanly.
				ts 2020-12-18 ... don't show compulsory in this interface just yet (could bring it in if site wanted it
				ts 2020-12-18 ... stat7. TypeId not the correct function
				ts 2021-06-01 ... fix teh bitwise null
				ts 2021-06-01 ... change source of bitwise variable (the other one was slow?!)
				ts 2021-06-09 ... service sheets go into maint
				ts 2021-07-11 ... get sepeical inputs too
										... combine maint into the mining bit at top
				ts 2021-07-15 ... handling for NULL mode
        ts 2021-10-11 ... don't need summary group for maint type.

        ts 2022-02-03 ... tweak the summary group for dispaying subtotals
		CA 2022-03-08 ... Added rpoertingbitWise to PArams
*/

    SET NOCOUNT ON;

      -- DELETE THIS. FOR TESTING PURPOSE ONLY
    --  SET @Mode = '';

--	SET @ProjectID = 259  ---remove
  
  
  
  
  DECLARE @TypeId INT = 1--do better here! this is the wrong function. dbo.FN_ConvertType_TypeCode_To_TypeID(@Type);

	   set @Mode = iif(@mode is null , 'DataV', @mode )


    ---------------------------------------- MINING ---------------------------------------------
    IF @Type LIKE 'mining%' OR @type = 'perfectday' or 1=1 -- ( 'Mining' , 'PerfectDay')
    BEGIN


	--put commas on start and end
SET @ActReasonIDs =  IIF(@ActReasonIDs <> '',','+ @ActReasonIDs +',', '')

		DECLARE @AttrLocn_01_IsAttrInput nvarchar(20) 
		DECLARE @AttrLocn_02_IsAttrInput nvarchar(20) 
		DECLARE @AttrLocn_03_IsAttrInput nvarchar(20) 
		SELECT @AttrLocn_01_IsAttrInput = IIF(manualentry_1 = 1, 'AttrInput','AttrList')
		,@AttrLocn_02_IsAttrInput = IiF(manualentry_2= 1, 'AttrInput','AttrList')
		,@AttrLocn_03_IsAttrInput = IIF(manualentry_3= 1, 'AttrInput','AttrList')
					FROM dbo.tbl_DBT_LocationAttributes WHERE ProjectID=@ProjectID


	  DECLARE @ParentType VARCHAR(50) = '';
    SET @ParentType = (SELECT typecode  from [dbo].[tvf_TrueType] (@ProjectID,@Type));

	declare @secondtype VARCHAR(50) = iif(@ParentType = 'maint','SErviceSheets','')

    DECLARE @ReportingBitwiseValue INT =--- (SELECT TOP 1 ConfigValue FROM dbo.FN_ProjSetup_TypeAlias_V2(@ProjectID,@Type,@TypeId,'DataSummaryReportingBitwiseFlag',@Mode));
										(SELECT TOP 1 ReportingBitwiseValue FROM [dbo].[tvf_ReportingBitWise](@ProjectID) WHERE ModeCode = @Mode and TypeAlias = @ParentType) --2021-05-24


IF @DebugMode = 1
	BEGIN 
		SELECT [Var] = 'ReportingBitwiseValue', @ReportingBitwiseValue
		SELECT [Var] = 'Mode', @Mode
		SELECT [Var] = 'TypeID', @TypeId
		SELECT [Var] = 'Type', @Type

	END 



 -----------------------------------------------------------------------------------------
		DECLARE @inputsData table (RowId int null
		,ProjectID  int null
		,OperationID int null
		,ActReasonID int null
		,TaskDetailType nvarchar(255)
		,TaskDetailTypeId  nvarchar(255)
		,TaskDetailTypeImageFileName nvarchar(255)
		,Active  int null
		,InputType nvarchar(255)
		,FieldType nvarchar(255)
		,InputID int null
		,HelpText nvarchar(max)
		,DisplayOrder int null
		,DisplayTrap int null
		,DataTypeDisplayed  nvarchar(255)
		,DecPlaces int null
		,TimeStampThisInput int null
		,CalcString nvarchar(500)
		,ForeLabel nvarchar(max)
		,AftLabel nvarchar(255)
		,CompulsoryTrap int null
		,DefaultValue nvarchar(255)
		,ReviewTrap int null
		,IntolerableValues nvarchar(500)
		,InitialValidationMsg nvarchar(500)
		,FinalValidationMsg nvarchar(500)
		,InputListSelectionFilter nvarchar(500)
		,Shareable nvarchar(255)
		,InputGroup nvarchar(255)
		,SummaryGroup int null
		,DisplayInputComments int NULL --nvarchar(255)
		,TypeCsvOld nvarchar(500)
		,TypeIdsCsv nvarchar(255)
		,TrapIntolerableComment int null
		,IsInputCommentRequired int null
		,IsInputPhotoRequired int null
		,IsInputAuthRequired int null
		,KeepOnCopy int null
		,ModifiedOn datetime null
		,Param1 nvarchar(255)
		,Param2 nvarchar(255)
		,Param3 nvarchar(255)
		,Param4  nvarchar(255)
		,WebCalcString nvarchar(500)
		,AttrJson nvarchar(500)
		,SupportedVersion nvarchar(255)
		,AdditionalRegex nvarchar(500)
		,td_ReportingBitWise int
  )
  INSERT into @inputsData
  (	RowId
     ,ProjectID
     ,OperationID
     ,ActReasonID
     ,TaskDetailType
     ,TaskDetailTypeId
     ,TaskDetailTypeImageFileName
     ,Active
     ,InputType
     ,FieldType
     ,InputID
     ,HelpText
     ,DisplayOrder
     ,DisplayTrap
     ,DataTypeDisplayed
     ,DecPlaces
     ,TimeStampThisInput
     ,CalcString
     ,ForeLabel
     ,AftLabel
     ,CompulsoryTrap
     ,DefaultValue
     ,ReviewTrap
     ,IntolerableValues
     ,InitialValidationMsg
     ,FinalValidationMsg
     ,InputListSelectionFilter
     ,Shareable
     ,InputGroup
     ,SummaryGroup
     ,DisplayInputComments
     ,TypeCsvOld
     ,TypeIdsCsv
     ,TrapIntolerableComment
     ,IsInputCommentRequired
     ,IsInputPhotoRequired
     ,IsInputAuthRequired
     ,KeepOnCopy
     ,ModifiedOn
     ,Param1
     ,Param2
     ,Param3
     ,Param4
     ,WebCalcString
     ,AttrJson
     ,SupportedVersion
     ,AdditionalRegex
	 ,td_ReportingBitWise)

  SELECT RowId
		,ProjectID
		,OperationID
		,ActReasonID
		,TaskDetailType
		,TaskDetailTypeId
		,TaskDetailTypeImageFileName
		,Active
		,InputType
		,FieldType = CASE WHEN FieldType= 'AttrLocn_1' THEN @AttrLocn_01_IsAttrInput --if editing here, don't need the locaiton default anymore.
									WHEN FieldType= 'AttrLocn_2' THEN @AttrLocn_02_IsAttrInput
									WHEN FieldType= 'AttrLocn_3' THEN @AttrLocn_03_IsAttrInput
									else
									FieldType end
		,InputID
		,HelpText
		,DisplayOrder
		,DisplayTrap
		,DataTypeDisplayed
		,DecPlaces
		,TimeStampThisInput
		,CalcString
		,ForeLabel
		,AftLabel
		,CompulsoryTrap
		,DefaultValue
		,ReviewTrap
		,IntolerableValues
		,InitialValidationMsg
		,FinalValidationMsg
		,InputListSelectionFilter
		,Shareable
		,InputGroup
		,SummaryGroup
		,DisplayInputComments
		,TypeCsvOld
		,TypeIdsCsv
		,TrapIntolerableComment
		,IsInputCommentRequired
		,IsInputPhotoRequired
		,IsInputAuthRequired
		,KeepOnCopy
		,ModifiedOn
		,Param1
		,Param2
		,Param3
		,Param4
		,WebCalcString
		,AttrJson
		,SupportedVersion
		,AdditionalRegex
		,b.td_ReportingBitWise
		FROM [udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) b
  where --EXISTS (SELECT ActREasonID FROM @AR AS a WHERE a.ActREasonID = b.ActReasonID)
		  (TypeCsvOld LIKE '%' + @ParentType + '%'
			or (TypeCsvOld LIKE '%' + @secondtype + '%' and @secondtype <> ''))  --pull service sheets
		  AND  @ActReasonIDs  LIKE '%,'+CAST(ActReasonID AS varchar(25)) +',%' 
		  --AND 
  --DELETE FROM @inputsData WHERE @ActReasonIDs NOT LIKE ',%'+CAST(ActReasonID AS varchar(25)) +',%' 

  --      AND ((ISNULL(ExcludeFromApp, 0) <> 1 AND @OnlyForApp = 1) 
				--		OR (ISNULL(ExcludeFromApp, 0)+ISNULL(ExcludeFromWeb, 0) <> 2 AND @OnlyForApp = 0))  
				--if both ticked, then the input doesn't show anywhere.  but if the input goes to the app, then it needs to be shown in the web now (because no import through to PDS anymore)



--union all try re-insert instead of union
insert into @inputsData
(
    [RowId]
  , [ProjectID]
  , [OperationID]
  , [ActReasonID]
  , [TaskDetailType]
  , [TaskDetailTypeId]
  , [TaskDetailTypeImageFileName]
  , [Active]
  , [InputType]
  , [FieldType]
  , [InputID]
  , [HelpText]
  , [DisplayOrder]
  , [DisplayTrap]
  , [DataTypeDisplayed]
  , [DecPlaces]
  , [TimeStampThisInput]
  , [CalcString]
  , [ForeLabel]
  , [AftLabel]
  , [CompulsoryTrap]
  , [DefaultValue]
  , [ReviewTrap]
  , [IntolerableValues]
  , [InitialValidationMsg]
  , [FinalValidationMsg]
  , [InputListSelectionFilter]
  , [Shareable]
  , [InputGroup]
  , [SummaryGroup]
  , [DisplayInputComments]
  , [TypeCsvOld]
  , [TypeIdsCsv]
  , [TrapIntolerableComment]
  , [IsInputCommentRequired]
  , [IsInputPhotoRequired]
  , [IsInputAuthRequired]
  , [KeepOnCopy]
  , [ModifiedOn]
  , [Param1]
  , [Param2]
  , [Param3]
  , [Param4]
  , [WebCalcString]
  , [AttrJson]
  , [SupportedVersion]
  , [AdditionalRegex]
  , [td_ReportingBitWise]
)
 SELECT RowId
		,ProjectID
		,OperationID
		,ActReasonID
		,TaskDetailType
		,TaskDetailTypeId
		,TaskDetailTypeImageFileName
		,Active
		,InputType
		,FieldType = CASE WHEN FieldType= 'AttrLocn_1' THEN @AttrLocn_01_IsAttrInput --if editing here, don't need the locaiton default anymore.
									WHEN FieldType= 'AttrLocn_2' THEN @AttrLocn_02_IsAttrInput
									WHEN FieldType= 'AttrLocn_3' THEN @AttrLocn_03_IsAttrInput
									else
									FieldType end
		,InputID
		,HelpText
		,DisplayOrder
		,DisplayTrap
		,DataTypeDisplayed
		,DecPlaces
		,TimeStampThisInput
		,CalcString
		,ForeLabel
		,AftLabel
		,CompulsoryTrap
		,DefaultValue
		,ReviewTrap
		,IntolerableValues
		,InitialValidationMsg
		,FinalValidationMsg
		,InputListSelectionFilter
		,Shareable
		,InputGroup
		,SummaryGroup
		,DisplayInputComments
		,TypeCsvOld
		,TypeIdsCsv
		,TrapIntolerableComment
		,IsInputCommentRequired
		,IsInputPhotoRequired
		,IsInputAuthRequired
		,KeepOnCopy
		,ModifiedOn
		,Param1
		,Param2
		,Param3
		,Param4
		,WebCalcString
		,AttrJson
		,SupportedVersion
		,AdditionalRegex
		,b.td_ReportingBitWise
		FROM [udf_GetTaskDetails_ForIplod_specials](@ProjectID,@Type,0) b
  where --EXISTS (SELECT ActREasonID FROM @AR AS a WHERE a.ActREasonID = b.ActReasonID)
		  (TypeCsvOld LIKE '%' + @ParentType + '%'
			or (TypeCsvOld LIKE '%' + @secondtype + '%' and @secondtype <> ''))  --pull service sheets
		  AND  @ActReasonIDs  LIKE '%,'+CAST(ActReasonID AS varchar(25)) +',%' 



	if @DebugMode =1
	begin
	SELECT *,RowNum = ROW_NUMBER() OVER (PARTITION BY aril.FieldType,INputId,aril.ActReasonID ORDER BY aril.FieldType,INputId,aril.ActReasonID,ProjectID DEsc )
			,DisplayOrder
			,CompulsoryTrap= IIF(aril.FieldType LIKE '%camera%' ,0,aril.CompulsoryTrap) --not allowed compulsory photos!
  --   
       FROM    --  [udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) aril --don't think @Type really does much? NB, @Type is switched to @Truetype up the top
        @inputsData aril
		LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
            ON st.StatisticID = aril.InputID
            AND aril.InputType LIKE '%stat%' -- ('Stat', 'StatCalc')
		--  select * from [udf_GetTaskDetails_ForIplod](203,'',0)
			WHERE INputType <>'Parameter'
			--AND EXISTS (SELECT ActREasonID FROM @AR AS a WHERE a.ActREasonID = aril.ActReasonID)
              --AND ActReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
              AND InputType NOT IN ( 'signature')--,'PageBreak')--,'Camera' )
			--   AND TypeCsvOld LIKE '%' + @ParentType + '%'
			AND @ReportingBitwiseValue & aril.td_ReportingBitwise --2021-06-01 ISNULL(aril.td_ReportingBitwise, 0)
								= @ReportingBitwiseValue
	end


  IF @ParentType <> ''
    BEGIN
        SET @Type = @ParentType;
    END;

    ---------------------------------------- MINING ---------------------------------------------
    IF 1=1  -- @ParentType = 'mining' --@Type = 'Mining'
    BEGIN
        -----------------------------------------------------------------------------------------
        SELECT 'Param' AS DATASET

SELECT tbl.FieldName
      ,tbl.DisplayLabel
      ,tbl.ActivityReasonID
	  ,tbl.Param1
	  ,tbl.Param2
	  ,tbl.Param3
	  ,tbl.Param4
      ,tbl.RowNum
	  	  , EmptyCellShade =''--2020-12-18-- IIF(tbl.CompulsoryTrap = 1, 'Orange','')  --shade the missing compulsory ones.
	  , IsCompulsory = 0--2020-12-18--tbl.CompulsoryTrap
	  --,SummaryGrpTest=SummaryGroup
      FROM (
        SELECT FieldName =FieldType
            ,DisplayLabel = ForeLabel
            ,ActivityReasonID =ActReasonID
			,Param1 = ISNULL(NULLIF(Param1, ''), 0)
			,Param2 = ISNULL(NULLIF(Param2, ''), 0)
			,Param3 = ISNULL(NULLIF(Param3, ''), 0)
			,Param4
			,RowNum = ROW_NUMBER() OVER (PARTITION BY FieldType,ActReasonID ORDER BY FieldType,ActReasonID,ProjectID DEsc )
			,SummaryGroup = CASE FieldType WHEN  'Operator'  THEN 2
											WHEN  'Location'  THEN 1
										
											else 0 end
			, a.CompulsoryTrap

			,DodgyOrderBy = CASE FieldType WHEN  'Operator'  THEN 2
											WHEN  'Location'  THEN 1
											WHEN  'Material'  THEN 3
											WHEN  'LoadedFrom'  THEN 4
											WHEN  'Destination'  THEN 5
											WHEN  'RelatedEquipment'  THEN 6
											else 10 end

      --  FROM [dbo].[tbl_DBT_ParameterSetup]
		    --WHERE ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
      --      AND ProjectID IN (@ProjectID, 1,2)
      --     -- AND SummaryGroup > 0
      --      AND FieldName NOT IN ('RefNo')  --leave this in, not used for mining?

		FROM  --[udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) b --don't think @Type really does much?  NB, @Type is switched to @Truetype up the top
			@inputsData a
			WHERE INputType ='Parameter'
			AND a.FieldType <> 'commentscheck'
     -- AND a.FieldType <> 'operator' --ditch operator temporarily to make it 
			--AND ActReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
			--AND EXISTS (SELECT ActREasonID FROM @AR AS a WHERE a.ActREasonID = b.ActReasonID)
			--AND TypeCsvOld LIKE '%' + @ParentType + '%'
			AND @ReportingBitwiseValue & td_ReportingBitwise --2021-06-01 ISNULL(aril.td_ReportingBitwise, 0)
								= @ReportingBitwiseValue
			AND ( ISNULL(a.SummaryGroup,0) >0 or @type  like 'Maint%' ) --20211011
					)
				AS tbl
				WHERE tbl.RowNum = 1
	        ORDER BY 
		--	SummaryGroup,
			DodgyOrderBy --SummaryGroup
			,DisplayLabel

        -----------------------------------------------------------------------------------------
    if @type not like 'Maint%'
	begin
	SELECT 'Input' AS DATASET
SELECT tbl.InputIDType
      ,tbl.ForeLabel
      ,tbl.AftLabel
      ,tbl.DataType
      ,tbl.DecimalPlaces
      ,tbl.InputGroup
	  ,tbl.Method
      ,tbl.ActReasonLinkID
      ,tbl.RowNum
	  , EmptyCellShade = ''--2020-12-18--IIF(tbl.CompulsoryTrap = 1, 'Orange','')  --shade the missing compulsory ones.
	  , IsCompulsory =  0--2020-12-18--tbl.CompulsoryTrap -- no compulos
	  ,tbl.DisplayOrder
FROM (
        SELECT CAST(InputID AS VARCHAR(10)) + '|' + aril.FieldType AS 'InputIDType'
    --        ,CASE 
				--WHEN InputType = 'Q'
				--	THEN dbo.FN_StripHTML(qt.QuestionText)
				--ELSE aril.ForeLabel
				--END AS 
				,ForeLabel	-- (AD) use QuestionText as Forlabel for InputType = Q
            --,CASE 
            --    WHEN InputID = 7 AND (InputType = 'Stat' OR InputType = 'StatCalc')
            --        THEN ''
            --    ELSE AftLabel
            --    END AS 'AftLabel'
				,AftLabel
            ,CASE 
                WHEN InputID = 7 AND (FieldType = 'Stat' OR FieldType = 'StatCalc')
                    THEN 'time'
                WHEN DataTypeDisplayed = 'int' OR DataTypeDisplayed = 'decimal' OR DataTypeDisplayed = 'number'
                    THEN 'numeric'
                ELSE 'text'
                END AS 'DataType'
            ,CASE 
                WHEN DataTypeDisplayed = 'decimal'
                    THEN ISNULL(DecPlaces, 0)
                ELSE 0
                END AS 'DecimalPlaces'
            ,InputGroup
            ,ActReasonLinkID =aril.ActReasonID
			,Method = CASE
                WHEN (st.StatisticTypeID = 9 OR aril.FieldType LIKE 'Attr%' OR aril.FieldType = 'ConsArea' OR aril.FieldType = 'Q') THEN 'Group'
                WHEN st.StatisticTypeID = 10 THEN 'SUM'
                ELSE 'SUM'
            END
			,RowNum = ROW_NUMBER() OVER (PARTITION BY aril.FieldType,INputId,aril.ActReasonID ORDER BY aril.FieldType,INputId,aril.ActReasonID,ProjectID DEsc )
			,DisplayOrder
			,CompulsoryTrap= IIF(aril.FieldType LIKE '%camera%' ,0,aril.CompulsoryTrap) --not allowed compulsory photos!
  --      FROM [dbo].[tbl_DBT_ActReasonInputLink] AS aril
		--LEFT JOIN dbo.tbl_SYS_Questions AS qt
		--	ON aril.InputID = qt.QuestionID
  --      LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
  --          ON st.StatisticID = aril.InputID
  --          AND aril.InputType IN ('Stat', 'StatCalc')
  --      WHERE ActReasonLinkID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
  --         -- AND ( Shareable IS NOT NULL OR InputType = 'Q' ) -- bypass this filter for InputType = Q
  --         -- AND( Shareable <> ''  OR InputType = 'Q') -- bypass this filter for InputType = Q
  --          AND ProjectID IN (@ProjectID, 1,2)
		--	AND (ExcludeFromWeb <>1) --  OR actreasonlinkid IN (112,297,131,1505,1506,1507,1508))--added the bogging tasks as per ShiftSummary_DataSummary ... not sure why ... maybe due to vivien?
       FROM    --  [udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) aril --don't think @Type really does much? NB, @Type is switched to @Truetype up the top
        @inputsData aril
		LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
            ON st.StatisticID = aril.InputID
            AND aril.InputType LIKE '%stat%' -- ('Stat', 'StatCalc')
		--  select * from [udf_GetTaskDetails_ForIplod](203,'',0)
			WHERE INputType <>'Parameter'
			--AND EXISTS (SELECT ActREasonID FROM @AR AS a WHERE a.ActREasonID = aril.ActReasonID)
              --AND ActReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
              AND InputType NOT IN ( 'signature')--,'PageBreak')--,'Camera' )
			--   AND TypeCsvOld LIKE '%' + @ParentType + '%'
			AND @ReportingBitwiseValue & aril.td_ReportingBitwise --2021-06-01 ISNULL(aril.td_ReportingBitwise, 0)
								= @ReportingBitwiseValue
											--don't sniff the data, will be too slow. also will have to remove cache on this proc. AND EXISTS (SELECT DISTINCT aril.InputID FROM dbo.syn_DWH_iPlodStagingTable AS ips
											--		WHERE aril.InputID = ips.InputID
											--			and aril.InputType = ips.InputType
											--			AND aril.ActReasonID = ips.ActivityReasonID
											--			AND ips.Date ='2020-11-30'--@date
											--			AND ips.ProjectID = @ProjectID
											--			AND ips.shift ='ns'-- @Shift
											--			)
		)
				AS tbl
				WHERE tbl.RowNum = 1
	UNION ALL
	--get the duration row (not sent to iplod)
	SELECT InputIDType =CAST(InputID AS VARCHAR(10)) + '|' + tbl.InputType 
      ,ForeLabel ='Time Taken'
      ,AftLabel ='Hrs'
      ,DataType ='time'
      ,DecimalPlaces=tbl.DecPlaces
      ,InputGroup = null
	  ,Method ='SUM'
      ,tbl.ActReasonLinkID
      ,RowNum=1
	  , EmptyCellShade = ''--2020-12-18--IIF(tbl.CompulsoryTrap = 1, 'Orange','')  --shade the missing compulsory ones.
	  , IsCompulsory =  0
	  ,tbl.DisplayOrder
	FROM dbo.tbl_DBT_ActReasonInputLink AS tbl
	where tbl.ProjectID =@ProjectID
	AND (ISNULL(tbl.ExcludeFromApp,0) + ISNULL(tbl.ExcludeFromWeb,0)) <2
	AND tbl.InputType LIKE 'stat%'
	AND tbl.InputID =7
	and tbl.Type like '%'+@ParentType+'%'
	  AND  @ActReasonIDs  LIKE '%,'+CAST(ActReasonLinkID AS varchar(25)) +',%' 
	  	AND (@ReportingBitwiseValue & tbl.ReportingBitwise --2021-06-01 ISNULL(tbl.ReportingBitwise, 0)
							= @ReportingBitwiseValue
							)--or @Type in ('maint','servicesheets'))  --dodgy hackery 2021-07-12

	ORDER BY ActReasonLinkID,DisplayOrder




	end


    END


if @Type like 'maint%'  --do inputs agian here to keep it simpler (no reprtingbitwise for them for now)
begin
        SELECT 'Input' AS DATASET
SELECT tbl.InputIDType
      ,tbl.ForeLabel
      ,tbl.AftLabel
      ,tbl.DataType
      ,tbl.DecimalPlaces
      ,tbl.InputGroup
	  ,tbl.Method
      ,tbl.ActReasonLinkID
      ,tbl.RowNum
	  , EmptyCellShade = ''--2020-12-18--IIF(tbl.CompulsoryTrap = 1, 'Orange','')  --shade the missing compulsory ones.
	  , IsCompulsory =  0--2020-12-18--tbl.CompulsoryTrap -- no compulos
	  ,tbl.DisplayOrder
FROM (
        SELECT CAST(InputID AS VARCHAR(10)) + '|' + aril.FieldType AS 'InputIDType'
    --        ,CASE 
				--WHEN InputType = 'Q'
				--	THEN dbo.FN_StripHTML(qt.QuestionText)
				--ELSE aril.ForeLabel
				--END AS 
				,ForeLabel	-- (AD) use QuestionText as Forlabel for InputType = Q
            --,CASE 
            --    WHEN InputID = 7 AND (InputType = 'Stat' OR InputType = 'StatCalc')
            --        THEN ''
            --    ELSE AftLabel
            --    END AS 'AftLabel'
				,AftLabel
            ,CASE 
                WHEN InputID = 7 AND (FieldType = 'Stat' OR FieldType = 'StatCalc')
                    THEN 'time'
                WHEN DataTypeDisplayed = 'int' OR DataTypeDisplayed = 'decimal' OR DataTypeDisplayed = 'number'
                    THEN 'numeric'
                ELSE 'text'
                END AS 'DataType'
            ,CASE 
                WHEN DataTypeDisplayed = 'decimal'
                    THEN ISNULL(DecPlaces, 0)
                ELSE 0
                END AS 'DecimalPlaces'
            ,InputGroup
            ,ActReasonLinkID =aril.ActReasonID
			,Method = CASE
                WHEN (st.StatisticTypeID = 9 OR aril.FieldType LIKE 'Attr%' OR aril.FieldType = 'ConsArea' OR aril.FieldType = 'Q') THEN 'Group'
                WHEN st.StatisticTypeID = 10 THEN 'SUM'
                ELSE 'SUM'
            END
			,RowNum = ROW_NUMBER() OVER (PARTITION BY aril.FieldType,INputId,aril.ActReasonID ORDER BY aril.FieldType,INputId,aril.ActReasonID,ProjectID DEsc )
			,DisplayOrder
			,CompulsoryTrap= IIF(aril.FieldType LIKE '%camera%' ,0,aril.CompulsoryTrap) --not allowed compulsory photos!
  --      FROM [dbo].[tbl_DBT_ActReasonInputLink] AS aril
		--LEFT JOIN dbo.tbl_SYS_Questions AS qt
		--	ON aril.InputID = qt.QuestionID
  --      LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
  --          ON st.StatisticID = aril.InputID
  --          AND aril.InputType IN ('Stat', 'StatCalc')
  --      WHERE ActReasonLinkID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
  --         -- AND ( Shareable IS NOT NULL OR InputType = 'Q' ) -- bypass this filter for InputType = Q
  --         -- AND( Shareable <> ''  OR InputType = 'Q') -- bypass this filter for InputType = Q
  --          AND ProjectID IN (@ProjectID, 1,2)
		--	AND (ExcludeFromWeb <>1) --  OR actreasonlinkid IN (112,297,131,1505,1506,1507,1508))--added the bogging tasks as per ShiftSummary_DataSummary ... not sure why ... maybe due to vivien?
       FROM    --  [udf_GetTaskDetails_ForIplod](@ProjectID,@Type,0,0) aril --don't think @Type really does much? NB, @Type is switched to @Truetype up the top
        @inputsData aril
		LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
            ON st.StatisticID = aril.InputID
            AND aril.InputType LIKE '%stat%' -- ('Stat', 'StatCalc')
		--  select * from [udf_GetTaskDetails_ForIplod](203,'',0)

WHERE /*this is prettu much teh same logic as in the datasummary proper one */
					  ( aril.[ActReasonID] IN (1699, 1602)--dodgy AR filter here (for backlog request I think). should shift to special handling config if have to add any more. replace below as well
					   OR  aril.InputType = 'Partslist')

					  --( (s.InputType = 'PartsList'), 
					  -- OR s.ActivityReasonID IN (1699, 1602)--dodgy AR filter here (for backlog request I think). should shift to special handling config if have to add any more. replace below as well,
					  -- OR ISNULL(i.Shareable,'') <>'',
					  -- )  
					  -- AND i.Shareable IS NOT NULL
					  --AND i.ReviewTrap = 1  -- temporarily removed, can reinstate if necessary
					  AND aril.InputType NOT LIKE 'Q%'
					  AND InputType NOT IN ( 'signature')
					  and  INputType <>'Parameter'

		)
				AS tbl
				WHERE tbl.RowNum = 1
	UNION ALL
	--get the duration row (not sent to iplod)
	SELECT InputIDType =CAST(InputID AS VARCHAR(10)) + '|' + tbl.InputType 
      ,ForeLabel ='Time Taken'
      ,AftLabel ='Hrs'
      ,DataType ='time'
      ,DecimalPlaces=tbl.DecPlaces
      ,InputGroup = null
	  ,Method ='SUM'
      ,tbl.ActReasonLinkID
      ,RowNum=1
	  , EmptyCellShade = ''--2020-12-18--IIF(tbl.CompulsoryTrap = 1, 'Orange','')  --shade the missing compulsory ones.
	  , IsCompulsory =  0
	  ,tbl.DisplayOrder
	FROM dbo.tbl_DBT_ActReasonInputLink AS tbl
	where tbl.ProjectID =@ProjectID
	AND (ISNULL(tbl.ExcludeFromApp,0) + ISNULL(tbl.ExcludeFromWeb,0)) <2
	AND tbl.InputType LIKE 'stat%'
	AND tbl.InputID =7
	and tbl.Type like '%'+@ParentType+'%'
	  AND  @ActReasonIDs  LIKE '%,'+CAST(ActReasonLinkID AS varchar(25)) +',%' 
	  --	AND (@ReportingBitwiseValue & tbl.ReportingBitwise --2021-06-01 ISNULL(tbl.ReportingBitwise, 0)
			--				= @ReportingBitwiseValue
							--or @Type in ('maint','servicesheets'))  --dodgy hackery 2021-07-12

	ORDER BY ActReasonLinkID,DisplayOrder





end




























	--this is how it was (not hitting the task details function)	to delete


		--SELECT 'Param' AS DATASET;
		--					SELECT tbl.FieldName
		--						  ,tbl.DisplayLabel
		--						  ,tbl.ActivityReasonID
		--						  ,tbl.Param1
		--						  ,tbl.Param2
		--						  ,tbl.Param3
		--						  ,tbl.Param4
		--						  ,tbl.RowNum
		--						  FROM (
		--							SELECT FieldName
		--								,DisplayLabel
		--								,ActivityReasonID
		--								,Param1 = ISNULL(NULLIF(Param1, ''), 0)
		--								,Param2 = ISNULL(NULLIF(Param2, ''), 0)
		--								,Param3 = ISNULL(NULLIF(Param3, ''), 0)
		--								,Param4
		--								,RowNum = ROW_NUMBER() OVER (PARTITION BY FieldName,ActivityReasonID ORDER BY fieldname,ActivityReasonID,ProjectID DEsc )
		--								,SummaryGroup

		--							FROM [dbo].[tbl_DBT_ParameterSetup]
		--							WHERE ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
		--								AND ProjectID IN (@ProjectID, 1,2)
		--								AND SummaryGroup > 0
		--								AND FieldName NOT IN ('RefNo')

		--										)
		--									AS tbl
		--									WHERE tbl.RowNum = 1
		--								ORDER BY SummaryGroup,DisplayLabel;

		--							-----------------------------------------------------------------------------------------
		--							SELECT 'Input' AS DATASET;
		--					SELECT tbl.InputIDType
		--						  ,tbl.ForeLabel
		--						  ,tbl.AftLabel
		--						  ,tbl.DataType
		--						  ,tbl.DecimalPlaces
		--						  ,tbl.InputGroup
		--						  ,tbl.Method
		--						  ,tbl.ActReasonLinkID
		--						  ,tbl.RowNum

		--					FROM (
		--							SELECT CAST(InputID AS VARCHAR(10)) + '|' + InputType AS 'InputIDType'
		--								,CASE 
		--									WHEN InputType = 'Q'
		--										THEN dbo.FN_StripHTML(qt.QuestionText)
		--									ELSE aril.ForeLabel
		--									END AS 'ForeLabel'		-- (AD) use QuestionText as Forlabel for InputType = Q
		--								,CASE 
		--									WHEN InputID = 7 AND (InputType = 'Stat' OR InputType = 'StatCalc')
		--										THEN ''
		--									ELSE AftLabel
		--									END AS 'AftLabel'
		--								,CASE 
		--									WHEN InputID = 7 AND (InputType = 'Stat' OR InputType = 'StatCalc')
		--										THEN 'time'
		--									WHEN DataTypeDisplayed = 'int' OR DataTypeDisplayed = 'decimal' OR DataTypeDisplayed = 'number'
		--										THEN 'numeric'
		--									ELSE 'text'
		--									END AS 'DataType'
		--								,CASE 
		--									WHEN DataTypeDisplayed = 'decimal'
		--										THEN ISNULL(DecPlaces, 0)
		--									ELSE 0
		--									END AS 'DecimalPlaces'
		--								,InputGroup
		--								,Method = CASE
		--									WHEN (st.StatisticTypeID = 9 OR aril.InputType LIKE 'Attr%' OR aril.InputType = 'ConsArea' OR aril.InputType = 'Q') THEN 'Group'
		--									WHEN st.StatisticTypeID = 10 THEN 'SUM'
		--									ELSE 'SUM'
		--								END
		--								,ActReasonLinkID
		--								,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )
		--								,DisplayOrder
		--							FROM [dbo].[tbl_DBT_ActReasonInputLink] AS aril
		--							LEFT JOIN dbo.tbl_SYS_Questions AS qt
		--								ON aril.InputID = qt.QuestionID
		--							LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
		--								ON st.StatisticID = aril.InputID
		--								AND aril.InputType IN ('Stat', 'StatCalc')
		--								LEFT JOIN dbo.tbl_SYS_ActivityReasonLink AS ar
		--									ON aril.ActReasonLinkID = ar.ActivityreasonLinkID
		--							WHERE ActReasonLinkID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
		--								--AND ( Shareable IS NOT NULL OR InputType = 'Q' ) --IF lock this back to shareable again (when we start getting more questions on mining tasks) 
		--																					--then need to add exception for @type = PerfectDay! -- bypass this filter for InputType = Q
		--								--AND( Shareable <> ''  OR InputType = 'Q') -- bypass this filter for InputType = Q
		--								--AND ISNULL(aril.Shareable,'') <> ''  --2020-11-25
		--								AND ProjectID IN (@ProjectID, 1,2)
		--										--OR EXISTS (SELECT ac  FROM dbo.tbl_DBT_ActReasonSpecialHandlingLink
		--										--		WHERE 
		--								--AND (ExcludeFromWeb <>1  OR (actreasonlinkid IN (1601) AND @Type = 'PerfectDay'))--removed these, they were for viveien bogging method. if we bring that back should do it better(112,297,131,1505,1506,1507,1508))--added the bogging tasks as per ShiftSummary_DataSummary ... not sure why ... maybe due to vivien?
		--							--	AND ISNULL(aril.ExcludeFromApp,0) = 0
		--								--AND (aril.CompulsoryTrap = 1 
		--								--			OR 
		--								--			(ar.ProcessID  = 5 AND  NOT (aril.inputtype LIKE '%stat%' AND aril.InputID = 18))
		--								--			OR (aril.InputType LIKE '%stat%' AND aril.InputID IN (4,5)) --holes and reamers
  --        --                                          OR (ar.ProcessId = 9 and InputType <> 'Q')  --service work. no questions though. 
		--								--			OR aril.ActReasonLinkID = 107
  --        --                                          )

		--								--can't go wrong with this? as a proxy for getting the correct data showing for them. badly need ability to edit these controls like this:
		--								--remove the above filter, and just use this:
		--								--AND aril.Shareable like '%,'+@Type+'_'+isnull(@Mode,'DataV')+',%

		--						--2020-12-17 replace the above with reporting bitwise
		--						AND @ReportingBitwiseValue & ISNULL(aril.ReportingBitwise, 0) = @ReportingBitwiseValue
		--						AND EXISTS (SELECT DISTINCT aril.InputID FROM dbo.syn_DWH_iPlodStagingTable AS ips
		--											WHERE aril.InputID = ips.InputID
		--												and aril.InputType = ips.InputType
		--												AND aril.ActReasonLinkID = ips.ActivityReasonID
		--												AND ips.Date ='2020-11-30'--@date
		--												AND ips.ProjectID = @ProjectID
		--												AND ips.shift ='ns'-- @Shift
		--												)

		--						)
		--									AS tbl
		--									WHERE tbl.RowNum = 1
		--								ORDER BY DisplayOrder;




  --  END;

  END;


    ------------------------------------------ MAINTENANCE ---------------------------------------
    ELSE IF @Type like 'maint%' and 2= 1  --kill this out, put it top bit
    BEGIN

        -----------------------------------------------------------------------------------------
							SELECT 'Param' AS DATASET;

							SELECT FieldName
								,DisplayLabel
								,Param1 = ISNULL(NULLIF(Param1, ''), 0)
								,Param2 = ISNULL(NULLIF(Param2, ''), 0)
								,Param3 = ISNULL(NULLIF(Param3, ''), 0)
								,Param4
								,ActivityReasonID
							FROM [dbo].[tbl_DBT_ParameterSetup]
							WHERE ActivityReasonID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
								AND ProjectID = @ProjectID
								AND SummaryGroup > 0
							ORDER BY SummaryGroup
								,DisplayLabel;

							-----------------------------------------------------------------------------------------
							SELECT 'Input' AS DATASET;

							SELECT tbl.InputIDType
								  ,tbl.ForeLabel
								  ,tbl.AftLabel
								  ,tbl.DataType
								  ,tbl.DecimalPlaces
								  ,tbl.Method
								  ,tbl.InputGroup
								  ,tbl.ActReasonLinkID
								  --,tbl.RowNum 
							FROM
							(SELECT CAST(InputID AS VARCHAR(10)) + '|' + /*CASE WHEN InputType = 'PartsList' THEN 'ConsArea' ELSE*/ InputType  AS 'InputIDType'
								,ForeLabel
								,CASE 
									WHEN InputID = 7 AND (InputType = 'Stat' OR InputType = 'StatCalc')
										THEN ''
									ELSE AftLabel
									END AS 'AftLabel'
								,CASE 
									WHEN InputID = 7 AND (InputType = 'Stat' OR InputType = 'StatCalc')
										THEN 'time'
									WHEN DataTypeDisplayed = 'int' OR DataTypeDisplayed = 'decimal' OR DataTypeDisplayed = 'number'
										THEN 'numeric'
									ELSE 'text'
									END AS 'DataType'
								,CASE 
									WHEN DataTypeDisplayed = 'decimal'
										THEN ISNULL(DecPlaces, 0)
									ELSE 0
									END AS 'DecimalPlaces'
								,Method = CASE
									WHEN (st.StatisticTypeID = 9 OR aril.InputType LIKE 'Attr%' OR aril.InputType = 'ConsArea' OR aril.InputType = 'Q') THEN 'Group'
									WHEN st.StatisticTypeID = 10 THEN 'SUM'
									ELSE 'SUM'
								END
								,InputGroup
								,ActReasonLinkID
								,RowNum = ROW_NUMBER() OVER (PARTITION BY InputType,INputId,ActReasonLinkId ORDER BY InputType,INputId,ActReasonLinkId,ProjectID DEsc )
									,aril.DisplayOrder	
							FROM [dbo].[tbl_DBT_ActReasonInputLink] AS aril
							LEFT OUTER JOIN dbo.tbl_SYS_Statistic AS st
								ON st.StatisticID = aril.InputID
								AND aril.InputType IN ('Stat', 'StatCalc')
							WHERE ActReasonLinkID IN (SELECT ID FROM [dbo].[FN_SplitString](@ActReasonIDs))
								--AND Shareable IS NOT NULL
								--AND Shareable <> ''
								AND (ISNULL(aril.Shareable,'') <>'' OR  InputType  = 'PartsList' OR aril.ActReasonLinkID IN (1699, 1602))
								AND ProjectID IN ( @ProjectID,1)
								AND aril.inputtype <> 'q'  --'2020-11-25
							--	AND (ExcludeFromWeb <>1 OR InputType  = 'PartsList') --have added handling to trick them back into consumable lists ... need to make proper handling for this input to allow foreman to edit ..
							) AS tbl
							WHERE tbl.RowNum =1

							ORDER BY DisplayOrder;

    END;
END;
GO
PRINT N'Altering [dbo].[SP_ShiftSummary_KpiSummary]'
GO
ALTER   PROCEDURE [dbo].[SP_ShiftSummary_KpiSummary]
    @ProjectID INT,
    @Type VARCHAR(25) = 'Mining',
    @Date DATE = NULL,
    @Shift VARCHAR(2) = NULL,
    @debugmode INT = 0,
    @Mode NVARCHAR(35) = '',
    @SupervisorId INT = 0,
    @CrewId INT = 0,
    @UserId INT = 0
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.

	-- EXEC [dbo].[SP_ShiftSummary_KpiSummary] @ProjectID = 3

    SET NOCOUNT ON;

    CREATE TABLE #temptable
    (
        [Metric] VARCHAR(MAX),
        [Actual] VARCHAR(20),
        [Target] VARCHAR(20),
        [Variance] VARCHAR(MAX),
        [Comments] VARCHAR(MAX),
        [MTD Actual] VARCHAR(20),
        [MTD Target] VARCHAR(20),
        [MTD Variance] VARCHAR(MAX)
    );

    INSERT INTO #temptable
    (
        [Metric],
        [Actual],
        [Target],
        [Variance],
        [Comments],
        [MTD Actual],
        [MTD Target],
        [MTD Variance]
    )
    VALUES
    ('<span style="font-weight: bold;color: #000000;">CableBolt Install (M)</span>', '30.0', '-', NULL,
     '|||
        {
            "ProcName":"SP_ProjSetup_Reporting_SaveData_ReportComments",
            "AdditionalParams":"@RptDetailId = -1, @DataDateId = 1, @RptGroupID = 8, @RptDetailCode = ''REASVAR'', @Date = ''2022-05-25''"
        }', '132.0', '-', NULL),
    ('<span style="font-weight: bold;color: #000000;">Development (M)</span>', '6.0', '8.1',
     '<span style="font-weight: bold;background-color: #ff8585;color: #000000;">-2.1</span>',
     '|||
        {
            "ProcName":"SP_ProjSetup_Reporting_SaveData_ReportComments",
            "AdditionalParams":"@RptDetailId = -1, @DataDateId = 1, @RptGroupID = 5, @RptDetailCode = ''REASVAR'', @Date = ''2022-05-25''"
        }', '247.0', '201.6', '<span style="font-weight: bold;background-color: #87ff99;color: #000000;">45.4</span>'),
    ('<span style="font-weight: bold;color: #000000;">Ore Tonne (TONNES)</span>', '1250.2', '-', NULL,
     '|||
        {
            "ProcName":"SP_ProjSetup_Reporting_SaveData_ReportComments",
            "AdditionalParams":"@RptDetailId = -1, @DataDateId = 1, @RptGroupID = 10, @RptDetailCode = ''REASVAR'', @Date = ''2022-05-25''"
        }', '28125.6', '-', NULL),
    ('<span style="font-weight: bold;color: #000000;">Trucking (TKM)</span>', '3967.9', '-', NULL,
     '|||
        {
            "ProcName":"SP_ProjSetup_Reporting_SaveData_ReportComments",
            "AdditionalParams":"@RptDetailId = -1, @DataDateId = 1, @RptGroupID = 10, @RptDetailCode = ''REASVAR'', @Date = ''2022-05-25''"
        }', '127307.1', '-', NULL),
    ('<span style="font-weight: bold;color: #000000;">Waste Tonne (TONNES)</span>', '750.0', '-', NULL,
     '|||
        {
            "ProcName":"SP_ProjSetup_Reporting_SaveData_ReportComments",
            "AdditionalParams":"@RptDetailId = -1, @DataDateId = 1, @RptGroupID = 10, @RptDetailCode = ''REASVAR'', @Date = ''2022-05-25''"
        }', '16750.0', '-', NULL);

	-- select 'Table' as ComponentType, 'Straight' as ComponentSubType;

    SELECT *
    FROM #temptable;

    DROP TABLE #temptable;
END;
GO
